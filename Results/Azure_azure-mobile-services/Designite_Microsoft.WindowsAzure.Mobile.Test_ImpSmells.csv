Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithAllSystemPropertiesUsingCustomSystemParameters,The method has 165 lines of code.
Long Method,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithInvalidSystemPropertiesQuerystring,The method has 143 lines of code.
Long Method,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithInvalidSystemParameterQueryString,The method has 140 lines of code.
Long Method,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The method has 126 lines of code.
Long Method,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The method has 163 lines of code.
Complex Method,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithAllSystemPropertiesUsingCustomSystemParameters,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncFilterSelectOrderingOperationsNotImpactedBySystemProperties,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceLocalStoreMock,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\Mocks\MobileServiceLocalStoreMock.cs,ReadAsync,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.WindowsAzure.MobileServices.Test,SerializationTypeUtility,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\SerializationTypeUtility.cs,AreEqual,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.WindowsAzure.MobileServices.Test,MemberInfoKeyTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\MemberInfoKey.Test.cs,CorrectlyMatchesStaticMemberInfos,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,FloatDeserialization,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DoubleDeserialization,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,NullableDeserialization,Cyclomatic complexity of the method is 15
Long Parameter List,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,CreateTestHttpHandler,The method has 6 parameters. Parameters: expectedUri' expectedMethod' responseContent' httpStatusCode' location' expectedRequestContent
Long Parameter List,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,TestCollapseCancel,The method has 5 parameters. Parameters: firstOperationOnItem1' operationOnItem2' secondOperationOnItem1' assertRequest' assertQueue
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,SystemPropertiesTestData,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\TestData\SystemPropertiesTestData.cs,,The length of the parameter ValidSystemPropertyQueryStrings is 31.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,SystemPropertiesTestData,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\TestData\SystemPropertiesTestData.cs,,The length of the parameter InvalidSystemPropertyQueryStrings is 33.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,SystemPropertiesTestData,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\TestData\SystemPropertiesTestData.cs,,The length of the parameter InvalidSystemParameterQueryString is 33.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceCollectionTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Collections\MobileServiceCollection.Test.cs,MobileServiceCollectionLoadMoreItemsAsyncFiresLoadingCompleteEventAfterReadingData,The length of the parameter loadedEventArgsManyItemsLoaded is 30.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,DataContractDerivedDataContractType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\DataContractDerivedDataContractType.cs,,The length of the parameter DerivedPublicFieldNamedDataMember is 33.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,DataContractDerivedDataContractType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\DataContractDerivedDataContractType.cs,,The length of the parameter DerivedInternalFieldNamedDataMember is 35.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,DataContractDerivedDataContractType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\DataContractDerivedDataContractType.cs,,The length of the parameter DerivedPrivateFieldNamedDataMember is 34.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,DataContractDerivedDataContractType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\DataContractDerivedDataContractType.cs,,The length of the parameter DerivedPublicFieldSansAttribute is 31.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,DataContractDerivedDataContractType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\DataContractDerivedDataContractType.cs,,The length of the parameter DerivedInternalFieldSansAttribute is 33.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,DataContractDerivedDataContractType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\DataContractDerivedDataContractType.cs,,The length of the parameter DerivedPrivateFieldSansAttribute is 32.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,DataContractDerivedJsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\DataContractDerivedJsonPropertyType.cs,,The length of the parameter DerivedPublicFieldNamedJsonProperty is 35.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,DataContractDerivedJsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\DataContractDerivedJsonPropertyType.cs,,The length of the parameter DerivedInternalFieldNamedJsonProperty is 37.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,DataContractDerivedJsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\DataContractDerivedJsonPropertyType.cs,,The length of the parameter DerivedPrivateFieldNamedJsonProperty is 36.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,DataContractDerivedJsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\DataContractDerivedJsonPropertyType.cs,,The length of the parameter DerivedPublicFieldSansAttribute is 31.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,DataContractDerivedJsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\DataContractDerivedJsonPropertyType.cs,,The length of the parameter DerivedInternalFieldSansAttribute is 33.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,DataContractDerivedJsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\DataContractDerivedJsonPropertyType.cs,,The length of the parameter DerivedPrivateFieldSansAttribute is 32.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,JsonPropertyDerivedDataContractType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\JsonPropertyDerivedDataContractType.cs,,The length of the parameter DerivedPublicFieldNamedDataMember is 33.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,JsonPropertyDerivedDataContractType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\JsonPropertyDerivedDataContractType.cs,,The length of the parameter DerivedInternalFieldNamedDataMember is 35.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,JsonPropertyDerivedDataContractType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\JsonPropertyDerivedDataContractType.cs,,The length of the parameter DerivedPrivateFieldNamedDataMember is 34.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,JsonPropertyDerivedDataContractType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\JsonPropertyDerivedDataContractType.cs,,The length of the parameter DerivedPublicFieldSansAttribute is 31.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,JsonPropertyDerivedDataContractType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\JsonPropertyDerivedDataContractType.cs,,The length of the parameter DerivedInternalFieldSansAttribute is 33.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,JsonPropertyDerivedDataContractType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\JsonPropertyDerivedDataContractType.cs,,The length of the parameter DerivedPrivateFieldSansAttribute is 32.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,JsonPropertyDerivedJsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\JsonPropertyDerivedJsonPropertyType.cs,,The length of the parameter DerivedPublicFieldNamedJsonProperty is 35.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,JsonPropertyDerivedJsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\JsonPropertyDerivedJsonPropertyType.cs,,The length of the parameter DerivedInternalFieldNamedJsonProperty is 37.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,JsonPropertyDerivedJsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\JsonPropertyDerivedJsonPropertyType.cs,,The length of the parameter DerivedPrivateFieldNamedJsonProperty is 36.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,JsonPropertyDerivedJsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\JsonPropertyDerivedJsonPropertyType.cs,,The length of the parameter DerivedPublicFieldSansAttribute is 31.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,JsonPropertyDerivedJsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\JsonPropertyDerivedJsonPropertyType.cs,,The length of the parameter DerivedInternalFieldSansAttribute is 33.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,JsonPropertyDerivedJsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\JsonPropertyDerivedJsonPropertyType.cs,,The length of the parameter DerivedPrivateFieldSansAttribute is 32.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,JsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\JsonPropertyType.cs,,The length of the parameter InternalFieldNamedJsonProperty is 30.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,PocoDerivedJsonPropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\PocoDerivedJsonPropertyType.cs,,The length of the parameter InternalFieldNamedJsonProperty is 30.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SystemPropertiesPropertySetCorrectly,The length of the parameter integerIdNotsystemPropertyTable is 31.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SystemPropertiesPropertySetCorrectly,The length of the parameter integerIdWithNamedSystemPropertyTable is 37.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SystemPropertiesPropertySetCorrectly,The length of the parameter longIdWithNamedSystemPropertyTable is 34.
Long Identifier,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SystemPropertiesPropertySetCorrectly,The length of the parameter namedDifferentCasingCreatedAtTable is 34.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,LocalStorageManagerTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\LocalStorageMananger.Test.cs,UpdateLocalStorageRegistrationByName_RegistrationNameNull,The length of the statement  "            StoredRegistrationEntry storedRegistrationEntry = localStorageManager.GetRegistration(Registration.NativeRegistrationName); " is 123.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,LocalStorageManagerTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\LocalStorageMananger.Test.cs,UpdateLocalStorageRegistrationById_RegistrationNameNull,The length of the statement  "            StoredRegistrationEntry storedRegistrationEntry = localStorageManager.GetRegistration(Registration.NativeRegistrationName); " is 123.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_InvokesHandler_WhenTableTypeIsTable,The length of the statement  "            await (service.SyncContext as MobileServiceSyncContext).PushAsync(CancellationToken.None' MobileServiceTableKind.Table); " is 120.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,UpdateOperationAsync_UpsertsTheItemInLocalStore_AndDeletesTheError_FromSyncHandler,The length of the statement  "            await (service.SyncContext as MobileServiceSyncContext).PushAsync(CancellationToken.None' MobileServiceTableKind.Table); " is 120.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The length of the statement  "                        Assert.AreEqual(2' op.Item.Value<int>("value")); // We shouldn't see the value == 1' since it should have been collapsed " is 120.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The length of the statement  "            string responseContent = @"{ ""id"": ""abc""' ""value"": ""0""' ""__version"": ""v0"" }"; // Whatever is fine' since we won't use it or look at it " is 146.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The length of the statement  "            // Do this Insert/Push/Update+Update/Push cycle several times fast to try to hit any race conditions that would cause an error " is 126.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The length of the statement  "                string idStr = "id" + id; // Generate a new Id each time in case the mock objects ever care that we insert an item that already exists " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The length of the statement  "                // The Operations and PushAction don't necessarily clone the JObject' so we need a fresh one for each operation or else we'll change " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The length of the statement  "                // the in-memory representation of the JObject stored in all operations' as well as in the "batch" the PushAction owns. This is problematic. " is 140.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The length of the statement  "                // Make sure the PushAction has actually called into our SyncHandler' otherwise the two UpdateOperations could collapse onto it' and " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The length of the statement  "                // Add some more operations while that push is in flight. Since these operations affect the same item in someTable' the operations " is 130.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The length of the statement  "                // Before we let the push finish' let's inject a delay that will cause it to take a long time deleting the operation from the queue. " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The length of the statement  "                // This will give the other operations' if there's an unaddressed race condition' a chance to wreak havoc on the op queue. " is 122.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,CancelAndUpdateItemAsync_UpsertsTheItemInLocalStore_AndDeletesTheOperationAndError,The length of the statement  "            store.TableMap[MobileServiceLocalSystemTables.SyncErrors] = new Dictionary<string' JObject>() { { operationId' new JObject() } }; " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,UpdateOperationAsync_UpsertsTheItemInLocalStore_AndDeletesTheError_AndUpdatesTheOperation,The length of the statement  "            store.TableMap[MobileServiceLocalSystemTables.SyncErrors] = new Dictionary<string' JObject>() { { operationId' new JObject() { { "id"' operationId }' { "version"' 1 } } } }; " is 173.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,UpdateOperationAsync_UpsertsTheItemInLocalStore_AndDeletesTheError_AndUpdatesTheOperation,The length of the statement  "            store.TableMap[MobileServiceLocalSystemTables.OperationQueue].Add(operationId' new JObject() { { "id"' operationId }' { "version"' 1 } }); " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,UpdateOperationAsync_UpsertTheItemInOperation_AndDeletesTheError,The length of the statement  "            store.TableMap[MobileServiceLocalSystemTables.SyncErrors] = new Dictionary<string' JObject>() { { operationId' new JObject() { { "id"' operationId }' { "version"' 1 } } } }; " is 173.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,UpdateOperationAsync_UpsertTheItemInOperation_AndDeletesTheError,The length of the statement  "            store.TableMap[MobileServiceLocalSystemTables.OperationQueue].Add(operationId' new JObject() { { "id"' operationId }' { "version"' 1 }' { "item"' item.ToString() }' { "kind"' (int)MobileServiceTableOperationKind.Delete } }); " is 224.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,UpdateOperationAsync_Throws_IfOperationIsModified,The length of the statement  "            await TestOperationModifiedException(true' (error' context) => context.UpdateOperationAsync(error' new JObject())' errorMessage); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,UpdateOperationAsync_Throws_IfOperationDoesNotExist,The length of the statement  "            await TestOperationModifiedException(false' (error' context) => context.UpdateOperationAsync(error' new JObject())' errorMessage); " is 130.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,CancelAndDiscardItemAsync_DeletesTheItemInLocalStore_AndDeletesTheOperationAndError,The length of the statement  "            store.TableMap[MobileServiceLocalSystemTables.SyncErrors] = new Dictionary<string' JObject>() { { operationId' new JObject() } }; " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,CancelAndUpdateItemAsync_Throws_IfOperationDoesNotExist,The length of the statement  "            await TestOperationModifiedException(false' (error' context) => context.CancelAndUpdateItemAsync(error' new JObject())' errorMessage); " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,CancelAndDiscardItemAsync_Throws_IfOperationDoesNotExist,The length of the statement  "            await TestOperationModifiedException(false' (error' context) => context.CancelAndDiscardItemAsync(error)' errorMessage); " is 120.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,CancelAndUpdateItemAsync_Throws_IfOperationIsModified,The length of the statement  "            await TestOperationModifiedException(true' (error' context) => context.CancelAndUpdateItemAsync(error' new JObject())' errorMessage); " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,InsertAsync_ThrowsConflictException_WhenConflictOccurs_Generic,The length of the statement  "            var expectedException = await ThrowsAsync<MobileServiceConflictException<ToDoWithSystemPropertiesType>>(() => table.InsertAsync(item)); " is 135.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithIntegerAsStringIdAgainstIntIdTable,The length of the statement  "            IMobileServiceTable<ToDoWithStringIdAgainstIntIdTable> stringIdTable = GetClient().GetTable<ToDoWithStringIdAgainstIntIdTable>(); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithStringIdAgainstIntegerIdTable,The length of the statement  "            IMobileServiceTable<ToDoWithStringIdAgainstIntIdTable> stringIdTable = GetClient().GetTable<ToDoWithStringIdAgainstIntIdTable>(); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithStringIdAgainstIntegerIdTable,The length of the statement  "                    IEnumerable<ToDoWithStringIdAgainstIntIdTable> results = await stringIdTable.Where(p => p.Id == testId).ToEnumerableAsync(); " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithStringIdAgainstIntegerIdTable,The length of the statement  "            IMobileServiceTable<ToDoWithStringIdAgainstIntIdTable> stringIdTable = GetClient().GetTable<ToDoWithStringIdAgainstIntIdTable>(); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,FilterReadAsyncWithIntegerAsStringIdAgainstIntegerIdTable,The length of the statement  "            IMobileServiceTable<ToDoWithStringIdAgainstIntIdTable> stringIdTable = GetClient().GetTable<ToDoWithStringIdAgainstIntIdTable>(); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,FilterReadAsyncWithIntegerAsStringIdAgainstIntegerIdTable,The length of the statement  "            IEnumerable<ToDoWithStringIdAgainstIntIdTable> results = await stringIdTable.Where(p => p.Id == integerIdItems[0].Id.ToString()).ToEnumerableAsync(); " is 149.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,FilterReadAsyncWithEmptyStringIdAgainstIntegerIdTable,The length of the statement  "            IMobileServiceTable<ToDoWithStringIdAgainstIntIdTable> stringIdTable = GetClient().GetTable<ToDoWithStringIdAgainstIntIdTable>(); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,FilterReadAsyncWithEmptyStringIdAgainstIntegerIdTable,The length of the statement  "                IEnumerable<ToDoWithStringIdAgainstIntIdTable> results = await stringIdTable.Where(p => p.Id == testId).ToEnumerableAsync(); " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithAllSystemProperties,The length of the statement  "            var projectedResults = await table.Select(i => new { XId = i.Id' XCreatedAt = i.CreatedAt' XUpdatedAt = i.UpdatedAt' XVersion = i.Version }).ToEnumerableAsync(); " is 161.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithSystemPropertiesSetExplicitly,The length of the statement  "            IMobileServiceTable<ToDoWithSystemPropertiesType> allSystemPropertiesTable = GetClient().GetTable<ToDoWithSystemPropertiesType>(); " is 130.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithSystemPropertiesSetExplicitly,The length of the statement  "            allSystemPropertiesTable.SystemProperties = MobileServiceSystemProperties.Version | MobileServiceSystemProperties.CreatedAt; " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithSystemPropertiesSetExplicitly,The length of the statement  "            allSystemPropertiesTable.SystemProperties = MobileServiceSystemProperties.Version | MobileServiceSystemProperties.UpdatedAt; " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithSystemPropertiesSetExplicitly,The length of the statement  "            IEnumerable<ToDoWithSystemPropertiesType> results = await allSystemPropertiesTable.Where(p => p.Id == item2.Id).ToEnumerableAsync(); " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithAllSystemPropertiesUsingCustomSystemParameters,The length of the statement  "                var projectedResults = await table.Select(i => new { XId = i.Id' XCreatedAt = i.CreatedAt' XUpdatedAt = i.UpdatedAt' XVersion = i.Version }) " is 140.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithInvalidSystemPropertiesQuerystring,The length of the statement  "                    IEnumerable<ToDoWithSystemPropertiesType> results = await table.Where(i => i.Version == item.Version).WithParameters(userParameters).ToEnumerableAsync(); " is 153.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithInvalidSystemPropertiesQuerystring,The length of the statement  "                    IEnumerable<ToDoWithSystemPropertiesType> results = await table.Where(i => i.CreatedAt == item.CreatedAt).WithParameters(userParameters).ToEnumerableAsync(); " is 157.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithInvalidSystemPropertiesQuerystring,The length of the statement  "                    IEnumerable<ToDoWithSystemPropertiesType> results = await table.Where(i => i.UpdatedAt == item.UpdatedAt).WithParameters(userParameters).ToEnumerableAsync(); " is 157.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithInvalidSystemPropertiesQuerystring,The length of the statement  "                    var projectedResults = await table.Select(i => new { XId = i.Id' XCreatedAt = i.CreatedAt' XUpdatedAt = i.UpdatedAt' XVersion = i.Version }) " is 140.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithInvalidSystemParameterQueryString,The length of the statement  "                IEnumerable<ToDoWithSystemPropertiesType> results = await table.Where(i => i.Version == item.Version).WithParameters(userParameters).ToEnumerableAsync(); " is 153.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithInvalidSystemParameterQueryString,The length of the statement  "                IEnumerable<ToDoWithSystemPropertiesType> results = await table.Where(i => i.CreatedAt == item.CreatedAt).WithParameters(userParameters).ToEnumerableAsync(); " is 157.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithInvalidSystemParameterQueryString,The length of the statement  "                IEnumerable<ToDoWithSystemPropertiesType> results = await table.Where(i => i.UpdatedAt == item.UpdatedAt).WithParameters(userParameters).ToEnumerableAsync(); " is 157.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithInvalidSystemParameterQueryString,The length of the statement  "                var projectedResults = await table.Select(i => new { XId = i.Id' XCreatedAt = i.CreatedAt' XUpdatedAt = i.UpdatedAt' XVersion = i.Version }) " is 140.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceLocalStoreMock,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\Mocks\MobileServiceLocalStoreMock.cs,ReadAsync,The length of the statement  "            if (query.TableName == MobileServiceLocalSystemTables.OperationQueue || query.TableName == MobileServiceLocalSystemTables.SyncErrors) " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceLocalStoreMock,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\Mocks\MobileServiceLocalStoreMock.cs,ReadAsync,The length of the statement  "                        items = items.Where(o => o.Value<long>("sequence") > (long)((ConstantNode)((BinaryOperatorNode)query.Filter).RightOperand).Value); " is 130.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceLocalStoreMock,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\Mocks\MobileServiceLocalStoreMock.cs,ReadAsync,The length of the statement  "                        string targetTable = ((ConstantNode)((BinaryOperatorNode)((BinaryOperatorNode)query.Filter).LeftOperand).RightOperand).Value.ToString(); " is 136.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceLocalStoreMock,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\Mocks\MobileServiceLocalStoreMock.cs,ReadAsync,The length of the statement  "                        string targetId = ((ConstantNode)((BinaryOperatorNode)((BinaryOperatorNode)query.Filter).RightOperand).RightOperand).Value.ToString(); " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceLocalStoreMock,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\Mocks\MobileServiceLocalStoreMock.cs,ReadAsync,The length of the statement  "                        items = items.Where(o => o.Value<string>("tableName") == ((ConstantNode)((BinaryOperatorNode)query.Filter).RightOperand).Value.ToString()); " is 139.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableQueryMock<T>,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\Mocks\MobileServiceTableQueryMock.cs,ToEnumerableAsync,The length of the statement  "            return Task.Run(() => Task.Delay(500).ContinueWith(t => (IEnumerable<T>)new QueryResultEnumerable<T>(2' null' new T[] { Activator.CreateInstance<T>()' Activator.CreateInstance<T>() }))); " is 186.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceCollectionTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Collections\MobileServiceCollection.Test.cs,MobileServiceCollectionItemsCanBeAddedAndNotifies,The length of the statement  "            List<NotifyCollectionChangedAction> expectedActions = new List<NotifyCollectionChangedAction>() { NotifyCollectionChangedAction.Add }; " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceCollectionTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Collections\MobileServiceCollection.Test.cs,MobileServiceCollectionCanClearAndNotifies,The length of the statement  "            List<NotifyCollectionChangedAction> expectedActions = new List<NotifyCollectionChangedAction>() { NotifyCollectionChangedAction.Reset }; " is 136.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceCollectionTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Collections\MobileServiceCollection.Test.cs,MobileServiceCollectionCanInsertAndNotifies,The length of the statement  "            List<NotifyCollectionChangedAction> expectedActions = new List<NotifyCollectionChangedAction>() { NotifyCollectionChangedAction.Add }; " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceCollectionTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Collections\MobileServiceCollection.Test.cs,MobileServiceCollectionCanRemoveAndNotifies,The length of the statement  "            List<NotifyCollectionChangedAction> expectedActions = new List<NotifyCollectionChangedAction>() { NotifyCollectionChangedAction.Remove }; " is 137.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceCollectionTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Collections\MobileServiceCollection.Test.cs,MobileServiceCollectionCanRemoveAtAndNotifies,The length of the statement  "            List<NotifyCollectionChangedAction> expectedActions = new List<NotifyCollectionChangedAction>() { NotifyCollectionChangedAction.Remove }; " is 137.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceCollectionTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Collections\MobileServiceCollection.Test.cs,MobileServiceCollectionCanReplaceAndNotifies,The length of the statement  "            List<NotifyCollectionChangedAction> expectedActions = new List<NotifyCollectionChangedAction>() { NotifyCollectionChangedAction.Replace }; " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceCollectionTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Collections\MobileServiceCollection.Test.cs,MobileServiceCollectionTotalCountSet,The length of the statement  "            List<string> expectedProperties = new List<string>() { "HasMoreItems"' "Count"' "Item[]"' "Count"' "Item[]"' "TotalCount" }; " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceCollectionTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Collections\MobileServiceCollection.Test.cs,MobileServiceCollectionTotalCountSet,The length of the statement  "            List<NotifyCollectionChangedAction> expectedActions = new List<NotifyCollectionChangedAction>() { NotifyCollectionChangedAction.Add' NotifyCollectionChangedAction.Add }; " is 169.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceCollectionTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Collections\MobileServiceCollection.Test.cs,MobileServiceCollectionHasMoreItemsShouldBeFalseAfterRetrievingDataWhenNoPaging,The length of the statement  "            List<string> expectedProperties = new List<string>() { "HasMoreItems"' "Count"' "Item[]"' "Count"' "Item[]"' "TotalCount" }; " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceCollectionTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Collections\MobileServiceCollection.Test.cs,MobileServiceCollectionHasMoreItemsShouldBeFalseAfterRetrievingDataWhenNoPaging,The length of the statement  "            List<NotifyCollectionChangedAction> expectedActions = new List<NotifyCollectionChangedAction>() { NotifyCollectionChangedAction.Add' NotifyCollectionChangedAction.Add }; " is 169.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The length of the statement  "            Assert.EndsWith(hijack.Request.RequestUri.ToString()' "$filter=(DateExampleDate eq datetime'2009-11-21T14:22:59.860Z')"); " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateOffsetUri,The length of the statement  "            Assert.EndsWith(hijack.Request.RequestUri.ToString()' "$filter=(DateOffsetExampleDate eq datetimeoffset'2009-11-21T06:22:59.8600000-08:00')"); " is 142.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,ErrorMessageConstruction,The length of the statement  "            hijack.Response.Content = new StringContent("{\"error\":\"error message\"'\"other\":\"donkey\"}"' Encoding.UTF8' "application/json"); " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,ErrorMessageConstruction,The length of the statement  "            hijack.Response.Content = new StringContent("{\"error\":\"error message\"'\"other\":\"donkey\"}"' Encoding.UTF8' "application/json"); " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,InvokeCustomAPIResponse,The length of the statement  "            HttpResponseMessage response = await service.InvokeApiAsync("calculator/add?a=1&b=2"' null' HttpMethod.Post' null' null); " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,InvokeCustomAPIResponseWithParamsBodyAndHeader,The length of the statement  "            HttpResponseMessage response = await service.InvokeApiAsync("calculator/add"' content' HttpMethod.Post' myHeaders' myParams); " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,FeatureHeaderValidation_InvokeApi_String_HttpMethod_Dict,The length of the statement  "            return this.ValidateFeaturesHeader("AJ'QS"' c => c.InvokeApiAsync("apiName"' null' HttpMethod.Get' new Dictionary<string' string> { { "a"' "b" } })); " is 149.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,FeatureHeaderValidation_InvokeApi_String_JToken_HttpMethod_Dict,The length of the statement  "            return this.ValidateFeaturesHeader("AJ'QS"' c => c.InvokeApiAsync("apiName"' JObject.Parse("{\"id\":1}")' HttpMethod.Put' new Dictionary<string' string> { { "a"' "b" } })); " is 172.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,FeatureHeaderValidation_InvokeApi_String_HttpContent_WithQueryParams,The length of the statement  "            return this.ValidateFeaturesHeader("AG"' c => c.InvokeApiAsync("apiName"' content' HttpMethod.Post' null' new Dictionary<string' string> { { "a"' "b" } })); " is 156.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,FeatureHeaderValidation_TypedInvokeApi_String_HttpMethod_Dict,The length of the statement  "            return this.ValidateFeaturesHeader("AT'QS"' c => c.InvokeApiAsync<IntType>("apiName"' HttpMethod.Get' new Dictionary<string' string> { { "a"' "b" } })); " is 152.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,FeatureHeaderValidation_TypedInvokeApi_String_T_HttpMethod_Dict,The length of the statement  "            return this.ValidateFeaturesHeader("AT'QS"' c => c.InvokeApiAsync<IntType' IntType>("apiName"' new IntType { Id = 1 }' HttpMethod.Get' new Dictionary<string' string> { { "a"' "b" } })); " is 185.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_Native,The length of the statement  "            // Ensure Uri and method are correct for request and specify body to return for registrations list with only 1 native registration " is 130.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_Native,The length of the statement  "            var hijack = CreateTestHttpHandler(expectedUri' HttpMethod.Get' this.pushTestUtility.GetListNativeRegistrationResponse()); " is 122.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_Native,The length of the statement  "            Assert.AreEqual(nativeReg.GetType()' firstRegistration.GetType()' "The type of the registration returned from ListRegistrationsAsync is not of the correct type."); " is 163.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_Native,The length of the statement  "            Assert.AreEqual(firstRegistration.RegistrationId' DefaultRegistrationId' "The registrationId returned from ListRegistrationsAsync is not correct."); " is 148.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_Template,The length of the statement  "            var hijack = CreateTestHttpHandler(expectedUri' HttpMethod.Get' this.pushTestUtility.GetListTemplateRegistrationResponse()); " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_Template,The length of the statement  "            Assert.AreEqual(templateReg.GetType()' firstRegistration.GetType()' "The type of the registration returned from ListRegistrationsAsync is not of the correct type."); " is 165.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_Template,The length of the statement  "            Assert.AreEqual(firstRegistration.RegistrationId' DefaultRegistrationId' "The registrationId returned from ListRegistrationsAsync is not correct."); " is 148.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,GetExpectedListUri,The length of the statement  "            return string.Format("{0}{1}?deviceId={2}&platform={3}"' DefaultServiceUri' RegistrationsPath' channelUri' Uri.EscapeUriString(this.platform)); " is 143.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_NativeAndTemplate,The length of the statement  "            var hijack = CreateTestHttpHandler(expectedUri' HttpMethod.Get' this.pushTestUtility.GetListMixedRegistrationResponse()); " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_NativeAndTemplate,The length of the statement  "            Assert.AreEqual(nativeReg.GetType()' firstRegistration.GetType()' "The type of the native registration returned from ListRegistrationsAsync is not of the correct type."); " is 170.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_NativeAndTemplate,The length of the statement  "            Assert.AreEqual(firstRegistration.RegistrationId' DefaultRegistrationId' "The native registrationId returned from ListRegistrationsAsync is not correct."); " is 155.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_NativeAndTemplate,The length of the statement  "            Assert.AreEqual(nativeTags[2]' "4de2605e-fd09-4875-a897-c8c4c0a51682"' "nativeTags[2] on the registration is not correct."); " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_NativeAndTemplate,The length of the statement  "            Assert.AreEqual(firstRegistration.PushHandle' DefaultChannelUri' "The DeviceId on the native registration is not correct."); " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_NativeAndTemplate,The length of the statement  "            Assert.AreEqual(templateReg.GetType()' secondRegistration.GetType()' "The type of the template registration returned from ListRegistrationsAsync is not of the correct type."); " is 175.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_NativeAndTemplate,The length of the statement  "            Assert.AreEqual(secondRegistration.RegistrationId' DefaultRegistrationId' "The template registrationId returned from ListRegistrationsAsync is not correct."); " is 158.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_NativeAndTemplate,The length of the statement  "            Assert.AreEqual(templateTags[2]' "4de2605e-fd09-4875-a897-c8c4c0a51682"' "templateTags[2] on the registration is not correct."); " is 128.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_NativeAndTemplate,The length of the statement  "            Assert.AreEqual(secondRegistration.PushHandle' DefaultChannelUri' "The DeviceId on the template registration is not correct."); " is 127.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_Error_WithStringBody,The length of the statement  "            var hijack = CreateTestHttpHandler(expectedUri' HttpMethod.Get' "\"Server threw 500\""' HttpStatusCode.InternalServerError); " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_Error_WithError,The length of the statement  "            var hijack = CreateTestHttpHandler(expectedUri' HttpMethod.Get' "{\"error\":\"Server threw 500\"}"' HttpStatusCode.InternalServerError); " is 136.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,CreateRegistrationId,The length of the statement  "            Assert.AreEqual(registrationId' DefaultRegistrationId' "Expected CreateRegistrationIdAsync to return correct RegistrationId."); " is 127.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,CreateRegistrationId_Error,The length of the statement  "            var hijack = CreateTestHttpHandler(expectedUri' HttpMethod.Post' "\"Server threw 500\""' HttpStatusCode.InternalServerError' LocationUri); " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,CreateRegistrationId_Error,The length of the statement  "            var exception = await AssertEx.Throws<MobileServiceInvalidOperationException>(() => pushHttpClient.CreateRegistrationIdAsync()); " is 128.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,DeleteRegistration_Error,The length of the statement  "            var hijack = CreateTestHttpHandler(expectedUri' HttpMethod.Delete' "\"Server threw 500\""' HttpStatusCode.InternalServerError); " is 127.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,CreateOrUpdateRegistration,The length of the statement  "            var hijack = CreateTestHttpHandler(expectedUri' HttpMethod.Put' null' HttpStatusCode.NoContent' expectedRequestContent: jsonRegistration); " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,CreateOrUpdateRegistration_Error,The length of the statement  "            var hijack = CreateTestHttpHandler(expectedUri' HttpMethod.Put' "\"Server threw 500\""' HttpStatusCode.InternalServerError' expectedRequestContent: jsonRegistration); " is 166.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,CreateOrUpdateRegistration_Error,The length of the statement  "            var exception = await AssertEx.Throws<MobileServiceInvalidOperationException>(() => pushHttpClient.CreateOrUpdateRegistrationAsync(registration)); " is 146.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,CreateTestHttpHandler,The length of the statement  "                    Assert.AreEqual(expectedUri' message.RequestUri.OriginalString' "The Http Uri used to send the request is different than expected."); " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,CreateTestHttpHandler,The length of the statement  "                    Assert.AreEqual(expectedMethod' message.Method' "The Http Method used to send the request is different than expected."); " is 120.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,CreateTestHttpHandler,The length of the statement  "                        Assert.AreEqual(expectedRequestContent' message.Content.ReadAsStringAsync().Result' "The Http request content is different than expected."); " is 140.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,ReadAsyncThrowsWithInvalidUserParameters,The length of the statement  "            var invalidUserDefinedParameters = new Dictionary<string' string>() { { "$this is invalid"' "since it starts with a '$'" } }; " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,LookupAsyncThrowsWithInvalidUserParameters,The length of the statement  "            var invalidUserDefinedParameters = new Dictionary<string' string>() { { "$this is invalid"' "since it starts with a '$'" } }; " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsyncWithStringId_StripsSystemProperties,The length of the statement  "            hijack.SetResponseContent("{\"id\":\"A\"'\"value\":\"new\"' \"__version\":\"XYZ\"'\"__unknown\":12'\"__CREATEDat\":\"12-02-02\"}"); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsyncWithStringId_KeepsSystemProperties,The length of the statement  "            hijack.SetResponseContent("{\"id\":\"A\"'\"value\":\"new\"' \"__version\":\"XYZ\"'\"__unknown\":12'\"__CREATEDat\":\"12-02-02\"}"); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsyncWithStringId_KeepsSystemProperties,The length of the statement  "            hijack.SetResponseContent("{\"id\":\"A\"'\"value\":\"new\"' \"__version\":\"XYZ\"'\"__unknown\":12'\"__CREATEDat\":\"12-02-02\"}"); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsyncWithIntId_DoesNotStripSystemProperties,The length of the statement  "            hijack.SetResponseContent("{\"id\":12'\"value\":\"new\"' \"__version\":\"XYZ\"'\"__unknown\":12'\"__CREATEDat\":\"12-02-02\"}"); " is 128.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,UpdateAsyncWithStringId_StripsSystemProperties,The length of the statement  "            hijack.SetResponseContent("{\"id\":\"A\"'\"value\":\"new\"' \"__version\":\"XYZ\"'\"__unknown\":12'\"__CREATEDat\":\"12-02-02\"}"); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,UpdateAsyncWithStringId_KeepsSystemProperties,The length of the statement  "            hijack.SetResponseContent("{\"id\":\"A\"'\"value\":\"new\"' \"__version\":\"XYZ\"'\"__unknown\":12'\"__CREATEDat\":\"12-02-02\"}"); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,UpdateAsyncWithStringId_KeepsSystemProperties,The length of the statement  "            hijack.SetResponseContent("{\"id\":\"A\"'\"value\":\"new\"' \"__version\":\"XYZ\"'\"__unknown\":12'\"__CREATEDat\":\"12-02-02\"}"); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,UpdateAsyncWithIntId_DoesNotStripSystemProperties,The length of the statement  "            hijack.SetResponseContent("{\"id\":12'\"value\":\"new\"' \"__version\":\"XYZ\"'\"__unknown\":12'\"__CREATEDat\":\"12-02-02\"}"); " is 128.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,DeleteAsyncWithStringId_StripsSystemProperties,The length of the statement  "            hijack.SetResponseContent("{\"id\":\"A\"'\"value\":\"new\"' \"__version\":\"XYZ\"'\"__unknown\":12'\"__CREATEDat\":\"12-02-02\"}"); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,DeleteAsyncWithStringId_KeepsSystemProperties,The length of the statement  "            hijack.SetResponseContent("{\"id\":\"A\"'\"value\":\"new\"' \"__version\":\"XYZ\"'\"__unknown\":12'\"__CREATEDat\":\"12-02-02\"}"); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,DeleteAsyncWithStringId_KeepsSystemProperties,The length of the statement  "            hijack.SetResponseContent("{\"id\":\"A\"'\"value\":\"new\"' \"__version\":\"XYZ\"'\"__unknown\":12'\"__CREATEDat\":\"12-02-02\"}"); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,DeleteAsyncWithIntId_DoesNotStripSystemProperties,The length of the statement  "            hijack.SetResponseContent("{\"id\":12'\"value\":\"new\"' \"__version\":\"XYZ\"'\"__unknown\":12'\"__CREATEDat\":\"12-02-02\"}"); " is 128.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsync_RemovesSystemProperties_WhenIdIsString_Generic,The length of the statement  "                JObject itemToInsert = JToken.Parse("{\"id\":\"an id\"'\"String\":\"what?\"'\"" + testSystemProperty + "\":\"a value\"}") as JObject; " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsync_DoesNotRemoveSystemPropertiesTest,The length of the statement  "                JObject itemToInsert = JToken.Parse("{\"id\":\"an id\"'\"String\":\"what?\"'\"" + testSystemProperty + "\":\"a value\"}") as JObject; " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsyncStringIdNonSystemPropertiesNotRemovedFromRequest,The length of the statement  "                JObject itemToInsert = JToken.Parse("{\"id\":\"an id\"'\"String\":\"what?\"'\"" + testSystemProperty + "\":\"a value\"}") as JObject; " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsync_DoesNotRemoveSystemProperties_WhenIdIsNull,The length of the statement  "                JObject itemToInsert = JToken.Parse("{\"id\":null'\"String\":\"what?\"'\"" + testSystemProperty + "\":\"a value\"}") as JObject; " is 128.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsyncNullIdNonSystemPropertiesNotRemovedFromRequest,The length of the statement  "                JObject itemToInsert = JToken.Parse("{\"id\":null'\"String\":\"what?\"'\"" + testSystemProperty + "\":\"a value\"}") as JObject; " is 128.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,UpdateAsyncStringIdSystemPropertiesRemovedFromRequest,The length of the statement  "                JObject itemToUpdate = JToken.Parse("{\"id\":\"an id\"'\"String\":\"what?\"'\"" + testSystemProperty + "\":\"a value\"}") as JObject; " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,UpdateAsyncStringIdNonSystemPropertiesNotRemovedFromRequest,The length of the statement  "                JObject itemToUpdate = JToken.Parse("{\"id\":\"an id\"'\"String\":\"what?\"'\"" + testSystemProperty + "\":\"a value\"}") as JObject; " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,UpdateAsyncIntegerIdNoPropertiesRemovedFromRequest,The length of the statement  "                JObject itemToUpdate = JToken.Parse("{\"id\":5'\"String\":\"what?\"'\"" + testSystemProperty + "\":\"a value\"}") as JObject; " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,TableOperationUserParameterWithsystemPropertyQueryStringIsCorrect,The length of the statement  "                await table.ReadAsync("$select=id'String"' new Dictionary<string' string>() { { "__systemproperties"' "__createdAt" } }); " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,FeatureHeaderValidation_UntypedTableReadWithQuery,The length of the statement  "            return this.ValidateFeaturesHeader("TU'QS"' true' t => t.ReadAsync(""' new Dictionary<string' string> { { "a"' "b" } })); " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,FeatureHeaderValidation_UntypedTableLookupWithQuery_FeaturesHeaderIsCorrect,The length of the statement  "            return this.ValidateFeaturesHeader("TU'QS"' false' t => t.LookupAsync("id"' new Dictionary<string' string> { { "a"' "b" } })); " is 126.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,FeatureHeaderValidation_UntypedTableInsertWithQuery,The length of the statement  "            return this.ValidateFeaturesHeader("TU'QS"' false' t => t.InsertAsync(obj' new Dictionary<string' string> { { "a"' "b" } })); " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,FeatureHeaderValidation_UntypedTableUpdateWithQuery,The length of the statement  "            return this.ValidateFeaturesHeader("TU'QS"' false' t => t.UpdateAsync(obj' new Dictionary<string' string> { { "a"' "b" } })); " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,FeatureHeaderValidation_UntypedTableDeleteWithQuery,The length of the statement  "            return this.ValidateFeaturesHeader("TU'QS"' false' t => t.DeleteAsync(obj' new Dictionary<string' string> { { "a"' "b" } })); " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,ReadAsync_Throws_IfAbsoluteUriHostNameDoesNotMatch,The length of the statement  "            var ex = await AssertEx.Throws<ArgumentException>(async () => await table.ReadAsync<ToDo>("http://www.contoso.com/about?$filter=a eq b&$orderby=c")); " is 149.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,ReadAsyncWithStringIdTypeAndStringIdFilter,The length of the statement  "                Uri expectedUri = new Uri(string.Format("http://www.test.com/tables/StringIdType?$filter=(id eq '{0}')"' idForOdataQuery)); " is 123.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,RefreshAsyncWithStringIdTypeAndStringIdItem,The length of the statement  "                Uri expectedUri = new Uri(string.Format("http://www.test.com/tables/StringIdType?$filter=(id eq '{0}')"' idForOdataQuery)); " is 123.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,IncludeTotalGenericEnum,The length of the statement  "            QueryResultEnumerable<StringType> results = (QueryResultEnumerable<StringType>)await table.IncludeTotalCount().ToEnumerableAsync(); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdSystemPropertiesRemovedFromRequest,The length of the statement  "            await namedCreatedAtTable.InsertAsync(new NamedSystemPropertiesType() { __createdAt = new DateTime(2012' 1' 8)' Id = "an id" }); " is 128.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdNonSystemPropertiesNotRemovedFromRequest,The length of the statement  "            IMobileServiceTable<NotSystemPropertyCreatedAtType> createdAtTable = service.GetTable<NotSystemPropertyCreatedAtType>(); " is 120.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdNonSystemPropertiesNotRemovedFromRequest,The length of the statement  "            await createdAtTable.InsertAsync(new NotSystemPropertyCreatedAtType() { CreatedAt = new DateTime(2012' 1' 8)' Id = "an id" }); " is 126.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdNonSystemPropertiesNotRemovedFromRequest,The length of the statement  "            IMobileServiceTable<NotSystemPropertyUpdatedAtType> updatedAtTable = service.GetTable<NotSystemPropertyUpdatedAtType>(); " is 120.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdNonSystemPropertiesNotRemovedFromRequest,The length of the statement  "            await updatedAtTable.InsertAsync(new NotSystemPropertyUpdatedAtType() { _UpdatedAt = new DateTime(2012' 1' 8)' Id = "an id" }); " is 127.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SystemPropertiesPropertySetCorrectly,The length of the statement  "            IMobileServiceTable<NotSystemPropertyCreatedAtType> notSystemPropertyTable = service.GetTable<NotSystemPropertyCreatedAtType>(); " is 128.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SystemPropertiesPropertySetCorrectly,The length of the statement  "            IMobileServiceTable<IntegerIdNotSystemPropertyCreatedAtType> integerIdNotsystemPropertyTable = service.GetTable<IntegerIdNotSystemPropertyCreatedAtType>(); " is 155.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SystemPropertiesPropertySetCorrectly,The length of the statement  "            IMobileServiceTable<NotSystemPropertyUpdatedAtType> notSystemPropertyUpdatedTable = service.GetTable<NotSystemPropertyUpdatedAtType>(); " is 135.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SystemPropertiesPropertySetCorrectly,The length of the statement  "            IMobileServiceTable<NotSystemPropertyVersionType> notSystemPropertyVersionTable = service.GetTable<NotSystemPropertyVersionType>(); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SystemPropertiesPropertySetCorrectly,The length of the statement  "            IMobileServiceTable<IntegerIdWithNamedSystemPropertiesType> integerIdWithNamedSystemPropertyTable = service.GetTable<IntegerIdWithNamedSystemPropertiesType>(); " is 159.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SystemPropertiesPropertySetCorrectly,The length of the statement  "            IMobileServiceTable<LongIdWithNamedSystemPropertiesType> longIdWithNamedSystemPropertyTable = service.GetTable<LongIdWithNamedSystemPropertiesType>(); " is 150.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SystemPropertiesPropertySetCorrectly,The length of the statement  "            IMobileServiceTable<DoubleNamedSystemPropertiesType> doubleNamedCreatedAtTable = service.GetTable<DoubleNamedSystemPropertiesType>(); " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SystemPropertiesPropertySetCorrectly,The length of the statement  "            IMobileServiceTable<NamedDifferentCasingSystemPropertiesType> namedDifferentCasingCreatedAtTable = service.GetTable<NamedDifferentCasingSystemPropertiesType>(); " is 160.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,IntegerIdTypesCanNotHaveSystemPropertyAttributes,The length of the statement  "                IMobileServiceTable<IntegerIdWithSystemPropertiesType> stringIdTable = service.GetTable<IntegerIdWithSystemPropertiesType>(); " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,IntegerIdTypesCanNotHaveSystemPropertyAttributes,The length of the statement  "            Assert.IsTrue(exception.Message.Contains("has an integer id member and therefore can not have any members with the system property attribute")); " is 144.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,IntegerIdTypesCanNotHaveSystemPropertyAttributes,The length of the statement  "            Assert.IsTrue(exception.Message.Contains("has an integer id member and therefore can not have any members with the system property attribute")); " is 144.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,TypesCanNotHaveMultiplePropertiesWithTheSameSystemAttribute,The length of the statement  "                IMobileServiceTable<NamedAndAttributedSystemPropertiesType> stringIdTable = service.GetTable<NamedAndAttributedSystemPropertiesType>(); " is 135.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,TypesCanNotHaveMultiplePropertiesWithTheSameSystemAttribute,The length of the statement  "                IMobileServiceTable<DoubleJsonPropertyNamedSystemPropertiesType> stringIdTable = service.GetTable<DoubleJsonPropertyNamedSystemPropertiesType>(); " is 145.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,TestIfMatchHeaderIsSet,The length of the statement  "                new Tuple<string' string>("a version with an already escaped \\\" quote"' "\"a version with an already escaped \\\" quote\"")' " is 126.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,VersionSystemPropertySetFromEtagHeader,The length of the statement  "                new Tuple<string' string>("a version with an already escaped \" quote"' "\"a version with an already escaped \\\" quote\"")' " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,FeatureHeaderValidation_TypedTableToEnumerableWithQuery,The length of the statement  "            return this.ValidateFeaturesHeader("TT'QS"' true' t => t.WithParameters(new Dictionary<string' string> { { "a"' "b" } }).ToEnumerableAsync()); " is 142.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,FeatureHeaderValidation_TypedTableReadViaQueryWithQuery,The length of the statement  "            return this.ValidateFeaturesHeader("TT'QS"' true' t => t.Where(s => s.String != null).WithParameters(new Dictionary<string' string> { { "a"' "b" } }).ToListAsync()); " is 165.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,FeatureHeaderValidation_TypedTableLookupWithQuery,The length of the statement  "            return this.ValidateFeaturesHeader("TT'QS"' false' t => t.LookupAsync("id"' new Dictionary<string' string> { { "a"' "b" } })); " is 126.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,FeatureHeaderValidation_TypedTableRefreshWithQuery,The length of the statement  "            return this.ValidateFeaturesHeader("TT'QS"' false' t => t.RefreshAsync(obj' new Dictionary<string' string> { { "a"' "b" } })); " is 126.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,FeatureHeaderValidation_TypedTableInsertWithQuery,The length of the statement  "            return this.ValidateFeaturesHeader("TT'QS"' false' t => t.InsertAsync(obj' new Dictionary<string' string> { { "a"' "b" } })); " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,FeatureHeaderValidation_TypedTableUpdateWithQuery,The length of the statement  "            return this.ValidateFeaturesHeader("TT'QS"' false' t => t.UpdateAsync(obj' new Dictionary<string' string> { { "a"' "b" } })); " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,FeatureHeaderValidation_TypedTableDeleteWithQuery,The length of the statement  "            return this.ValidateFeaturesHeader("TT'QS"' false' t => t.DeleteAsync(obj' new Dictionary<string' string> { { "a"' "b" } })); " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The length of the statement  "            var query = Compile<Product' Product>(table => table.Where(p => p.Weight <= new Product() { Weight = foo }.Weight || p.InStock == true)); " is 137.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The length of the statement  "            query = Compile<Product' Product>(table => table.Where(p => p.Weight <= new Product(15) { Weight = foo }.Weight || p.InStock == true)); " is 135.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The length of the statement  "            query = Compile<Product' Product>(table => table.Where(p => p.Weight <= new Product(15) { Weight = 10 }.Weight || p.InStock == true)); " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The length of the statement  "            query = Compile<Product' Product>(table => table.Where(p => p.Weight <= new Product(id) { Weight = 10 }.Weight || p.InStock == true)); " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The length of the statement  "            query = Compile<Product' Product>(table => table.Where(p => p.Created == new DateTime(1994' 10' 14' 0' 0' 0' DateTimeKind.Utc))); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The length of the statement  "            query = Compile<ProductWithDateTimeOffset' ProductWithDateTimeOffset>(table => table.Where(p => p.Created == new DateTimeOffset(1994' 10' 13' 17' 0' 0' TimeSpan.FromHours(7)))); " is 177.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,CombinedQuery,The length of the statement  "            Assert.AreEqual("$filter=(((Price le 10M) and (Weight gt 10f)) and not(InStock))&$orderby=Price desc'Name&$skip=20&$top=10&$select=Name'Price'Weight'WeightInKG"' query.ToODataString()); " is 185.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterContainsMethod,The length of the statement  "            IEnumerable<string> productNames = new Product[] { new Product { Name = "name1" }' new Product { Name = "name2" } }.Select(pr => pr.Name); " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,GetIdNegative,The length of the statement  "                new Tuple<object' string>(new MissingIdType()' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.MissingIdType'.")' " is 139.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,GetIdNegative,The length of the statement  "                new Tuple<object' string>(new PocoType[1]' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.PocoType[]'.")' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,HasDefaultIdNegative,The length of the statement  "                new Tuple<object' string>(new MissingIdType()' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.MissingIdType'.")' " is 139.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,HasDefaultIdNegative,The length of the statement  "                new Tuple<object' string>(new PocoType[1]' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.PocoType[]'.")' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IndentedFormattingCustomSerialization,The length of the statement  "            Assert.AreEqual(actual' "{" + Environment.NewLine + "  \"PublicField\": null'" + Environment.NewLine + "  \"PublicProperty\": null" + Environment.NewLine + "}"); " is 161.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,BoolDeserializationNegative,The length of the statement  "                Assert.AreEqual(actualError.Message' "Error converting value \"I can't be parsed\" to type 'System.Boolean'. Path 'Bool'' line 2' position 30."); " is 145.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ByteDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"Byte\":256}"' "Error converting value 256 to type 'System.Byte'. Path 'Byte'' line 2' position 14.")' " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ByteDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"Byte\":\"256\"}"'"Error converting value \"256\" to type 'System.Byte'. Path 'Byte'' line 2' position 16.")' " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ByteDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"Byte\":-1}"'"Error converting value -1 to type 'System.Byte'. Path 'Byte'' line 2' position 13.")' " is 128.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,SByteDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"SByte\":128}"' "Error converting value 128 to type 'System.SByte'. Path 'SByte'' line 1' position 12.")' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,SByteDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"SByte\":\"128\"}"'"Error converting value \"128\" to type 'System.SByte'. Path 'SByte'' line 1' position 14.")' " is 141.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,SByteDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"SByte\":-129}"'"Error converting value -129 to type 'System.SByte'. Path 'SByte'' line 1' position 13.")' " is 135.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UShortDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"UShort\":65536}"' "Error converting value 65536 to type 'System.UInt16'. Path 'UShort'' line 1' position 15.")' " is 141.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UShortDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"UShort\":\"65536\"}"'"Error converting value \"65536\" to type 'System.UInt16'. Path 'UShort'' line 1' position 17.")' " is 148.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UShortDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"UShort\":-1}"'"Error converting value -1 to type 'System.UInt16'. Path 'UShort'' line 1' position 12.")' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IntDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"id\":2147483648}"' "Error converting value 2147483648 to type 'System.Int32'. Path 'id'' line 1' position 16.")' " is 142.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IntDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"id\":-2147483649}"' "Error converting value -2147483649 to type 'System.Int32'. Path 'id'' line 1' position 17.")' " is 144.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UIntDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"UInt\":4294967296}"' "Error converting value 4294967296 to type 'System.UInt32'. Path 'UInt'' line 1' position 18.")' " is 147.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UIntDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"UInt\":\"4294967296\"}"' "Error converting value \"4294967296\" to type 'System.UInt32'. Path 'UInt'' line 1' position 20.")' " is 155.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UIntDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"UInt\":-1}"' "Error converting value -1 to type 'System.UInt32'. Path 'UInt'' line 1' position 10.")' " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,LongSerialization,The length of the statement  "                new Tuple<LongType' string>(new LongType() { Long = twoToTheFifthyThird }' "{\"Long\":9007199254740992}")' // All integers <= 2^53 will fit in a double; this should be our upper limit " is 183.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,LongSerialization,The length of the statement  "                new Tuple<LongType' string>(new LongType() { Long = -twoToTheFifthyThird }' "{\"Long\":-9007199254740992}")' // All integers >= -2^53 will fit in a double; this should be our lower limit " is 186.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,LongSerializationNegative,The length of the statement  "                new Tuple<LongType' string>(new LongType() { Long = twoToTheFifthyThird + 1 }'"The value 9007199254740993 for member Long is outside the valid range for numeric columns.")' // 2^53 + 1 " is 184.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,LongSerializationNegative,The length of the statement  "                new Tuple<LongType' string>(new LongType() { Long = -twoToTheFifthyThird - 1 }'"The value -9007199254740993 for member Long is outside the valid range for numeric columns.")' // -2^53 - 1 " is 187.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,LongSerializationNegative,The length of the statement  "                new Tuple<LongType' string>(new LongType() { Long = long.MaxValue }'"The value 9223372036854775807 for member Long is outside the valid range for numeric columns.")' // long.MaxValue " is 182.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,LongSerializationNegative,The length of the statement  "                new Tuple<LongType' string>(new LongType() { Long = long.MinValue }' "The value -9223372036854775808 for member Long is outside the valid range for numeric columns.") " is 166.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,LongDeserialization,The length of the statement  "                new Tuple<LongType' string>(new LongType() { Long = long.MinValue }' "{\"Long\":-9.2233720368547758E+18}")' // There is a loss of precision here' but we'll accept it when deserializing. " is 185.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,LongDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"Long\":9.2233720368547758E+18}"'"Error converting value 9.22337203685478E+18 to type 'System.Int64'. Path 'Long'' line 1' position 30.")'  // Fails because this will be read as a double' which then doesn't convert into a long       " is 255.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,LongDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"Long\":9223372036854775808}"'"Error converting value 9223372036854775808 to type 'System.Int64'. Path 'Long'' line 1' position 27.")' // long.MaxValue + 1 " is 184.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ULongSerialization,The length of the statement  "                new Tuple<ULongType' string>(new ULongType() { ULong = twoToTheFifthyThird }'  "{\"ULong\":9007199254740992}")' // All integers <= 2^53 will fit in a double; this should be our upper limit " is 188.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ULongSerializationNegative,The length of the statement  "                new Tuple<ULongType' string>(new ULongType() { ULong = twoToTheFifthyThird + 1 }'"The value 9007199254740993 for member ULong is outside the valid range for numeric columns.")' // 2^53 + 1 " is 188.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ULongSerializationNegative,The length of the statement  "                new Tuple<ULongType' string>(new ULongType() { ULong = ulong.MaxValue }'"The value 18446744073709551615 for member ULong is outside the valid range for numeric columns.") // ulong.MaxValue " is 188.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ULongDeserialization,The length of the statement  "                new Tuple<ULongType' string>(new ULongType() { ULong = twoToTheFifthyThird }'  "{\"ULong\":9007199254740992}")' // All integers <= 2^53 will fit in a double; this should be our upper limit " is 188.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ULongDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"ULong\":18446744073709551616}"'"Error converting value 18446744073709551616 to type 'System.UInt64'. Path 'ULong'' line 1' position 29.")' // ulong.MaxValue + 1 " is 190.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ULongDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"ULong\":-1}"'"Error converting value -1 to type 'System.UInt64'. Path 'ULong'' line 1' position 11.")' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,FloatDeserialization,The length of the statement  "                new Tuple<FloatType' string>(new FloatType() { Float = float.NegativeInfinity }' "{\"Float\":-3.4028234663852887E+39}")' " is 120.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DoubleDeserialization,The length of the statement  "                new Tuple<DoubleType' string>(new DoubleType() { Double = double.MaxValue }' "{\"Double\":1.79769313486231575E+308}")'  // We're ok with lossing precision here; note the extra 5 digit at the end " is 194.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DoubleDeserialization,The length of the statement  "                new Tuple<DoubleType' string>(new DoubleType() { Double = double.MinValue }' "{\"Double\":-1.79769313486231575E+308}")' // We're ok with lossing precision here; note the extra 5 digit at the end " is 194.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit " is 197.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit " is 200.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")' " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")' " is 126.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))' " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))' " is 140.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))' " is 142.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))' " is 143.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))' " is 136.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))' " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalDeserialization,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992}")'  " is 120.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalDeserialization,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991}")'    " is 122.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalDeserialization,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991}")'  " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalDeserialization,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' "{\"Decimal\":9007199254740993}")'   " is 122.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalDeserialization,The length of the statement  "                new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' "{\"Decimal\":-9007199254740993}")'  " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"Decimal\":-7.9228162514264338E+28}"'"Error converting value -7.92281625142643E+28 to type 'System.Decimal'. Path 'Decimal'' line 1' position 34.")'  " is 177.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"Decimal\":7.9228162514264338E+28}"'"Error converting value 7.92281625142643E+28 to type 'System.Decimal'. Path 'Decimal'' line 1' position 33.")'  " is 175.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,StringSerialization,The length of the statement  "                new Tuple<StringType' string>(new StringType() { String = new string('*'' 1025) }' "{\"String}")'  " is 1129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,StringDeserialization,The length of the statement  "                new Tuple<StringType' string>(new StringType() { String = new string('*'' 1025) }' "{\"String}")'  " is 1129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CharDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"Char\":\"I'm not a char\"}"' "Error converting value \"I'm not a char\" to type 'System.Char'. Path 'Char'' line 1' position 24.")' " is 161.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CharDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"Char\":true}"'"Error converting value True to type 'System.Char'. Path 'Char'' line 1' position 12.") " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UriDeserialization,The length of the statement  "                new Tuple<UriType' string>(new UriType() { Uri = new Uri("I'm not a URI"' UriKind.Relative) }' "{\"Uri\":\"I'm not a URI\"}")'      " is 126.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UriDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"Uri\":5}"' "Error converting value 5 to type 'System.Uri'. Path 'Uri'' line 1' position 8.")' " is 123.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UriDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"Uri\":true}"' "Error converting value True to type 'System.Uri'. Path 'Uri'' line 1' position 11.")' " is 130.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The length of the statement  "                new Tuple<DateTimeType' string>(new DateTimeType() { DateTime = new DateTime() }' "{\"DateTime\":" + MinDateTimeSerializedToJson + "}")' " is 136.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The length of the statement  "                new Tuple<DateTimeType' string>(new DateTimeType() { DateTime = new DateTime() }' "{\"DateTime\":" + MinDateTimeSerializedToJson + "}") " is 135.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"DateTime\":true}"' "Unexpected token parsing date. Expected String' got Boolean. Path 'DateTime'' line 1' position 16.")' " is 151.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"DateTime\":5}"' "Unexpected token parsing date. Expected String' got Integer. Path 'DateTime'' line 1' position 13.")' " is 148.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The length of the statement  "                new Tuple<DateTimeOffsetType' string>(new DateTimeOffsetType() { DateTimeOffset = new DateTimeOffset() }' "{\"DateTimeOffset\":null}")' " is 135.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"DateTimeOffset\":true}"' "Unexpected token parsing date. Expected String' got Boolean. Path 'DateTimeOffset'' line 1' position 22.")' " is 163.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserializationNegative,The length of the statement  "                new Tuple<string' string>("{\"DateTimeOffset\":5}"' "Unexpected token parsing date. Expected String' got Integer. Path 'DateTimeOffset'' line 1' position 19.")' " is 160.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,NullableSerialization,The length of the statement  "                new Tuple<NullableType' string>(new NullableType() { Nullable = double.Epsilon }' "{\"Nullable\":4.94065645841247E-324}")' " is 122.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,NullableSerialization,The length of the statement  "                new Tuple<NullableType' string>(new NullableType() { Nullable = -double.Epsilon }' "{\"Nullable\":-4.94065645841247E-324}")' " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,NullableSerialization,The length of the statement  "                new Tuple<NullableType' string>(new NullableType() { Nullable = double.MaxValue }' "{\"Nullable\":1.7976931348623157E+308}")' " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,NullableSerialization,The length of the statement  "                new Tuple<NullableType' string>(new NullableType() { Nullable = double.MinValue }' "{\"Nullable\":-1.7976931348623157E+308}") " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,NullableDeserialization,The length of the statement  "                new Tuple<NullableType' string>(new NullableType() { Nullable = double.Epsilon }' "{\"Nullable\":4.94065645841247E-324}")' " is 122.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,NullableDeserialization,The length of the statement  "                new Tuple<NullableType' string>(new NullableType() { Nullable = -double.Epsilon }' "{\"Nullable\":-4.94065645841247E-324}")' " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,NullableDeserialization,The length of the statement  "                new Tuple<NullableType' string>(new NullableType() { Nullable = double.MaxValue }' "{\"Nullable\":1.7976931348623157E+308}")' " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,NullableDeserialization,The length of the statement  "                new Tuple<NullableType' string>(new NullableType() { Nullable = double.MinValue }' "{\"Nullable\":-1.7976931348623157E+308}")' " is 126.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,NullableDeserialization,The length of the statement  "                new Tuple<NullableType' string>(new NullableType() { Nullable = double.MaxValue }' "{\"Nullable\":1.79769313486231575E+308}")'  // We're ok with lossing precision here; note the extra 5 digit at the end " is 202.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,NullableDeserialization,The length of the statement  "                new Tuple<NullableType' string>(new NullableType() { Nullable = double.MinValue }' "{\"Nullable\":-1.79769313486231575E+308}")' // We're ok with lossing precision here; note the extra 5 digit at the end " is 202.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoSerialization,The length of the statement  "                new Tuple<PocoType' string>(new PocoType("_XYZ")' "{\"PublicField\":\"PublicField_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"}" )' " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDeserialization,The length of the statement  "                new Tuple<PocoType' string>(new PocoType("_XYZ"' onlySetSerializableMembers: true)' "{\"PublicProperty\":\"PublicProperty_XYZ\"'\"PublicField\":\"PublicField_XYZ\"}" )' " is 168.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoPopulation,The length of the statement  "                new Tuple<PocoType' string>(new PocoType("_XYZ"' onlySetSerializableMembers: true)' "{\"PublicProperty\":\"PublicProperty_XYZ\"'\"PublicField\":\"PublicField_XYZ\"}" )' " is 168.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractSerialization,The length of the statement  "                new Tuple<DataContractType' string>(new DataContractType()' "{\"PublicFieldDataMember\":null'\"InternalFieldDataMember\":null'\"PublicField\":null'\"InternalField\":null'\"PublicPropertyDataMember\":null'\"InternalPropertyDataMember\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateFieldDataMember\":null'\"PrivateField\":null'\"PrivatePropertyDataMember\":null'\"PrivateProperty\":null}")'  " is 407.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractSerialization,The length of the statement  "                new Tuple<DataContractType' string>(new DataContractType("_XYZ")' "{\"PublicFieldDataMember\":\"PublicFieldNamedDataMember_XYZ\"'\"InternalFieldDataMember\":\"InternalFieldNamedDataMember_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"PublicPropertyDataMember\":\"PublicPropertyNamedDataMember_XYZ\"'\"InternalPropertyDataMember\":\"InternalPropertyNamedDataMember_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PrivateFieldDataMember\":\"PrivateFieldNamedDataMember_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"'\"PrivatePropertyDataMember\":\"PrivatePropertyNamedDataMember_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"}")  " is 712.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDeserialization,The length of the statement  "                new Tuple<DataContractType' string>(new DataContractType()' "{\"PublicPropertyDataMember\":null'\"InternalPropertyDataMember\":null'\"PrivatePropertyDataMember\":null'\"PublicPropertyGetOnlyDataMember\":\"PublicPropertyGetOnlyNamedDataMember\"'\"InternalPropertyGetOnlyDataMember\":\"InternalPropertyGetOnlyNamedDataMember\"'\"PrivatePropertyGetOnlyDataMember\":\"PrivatePropertyGetOnlyNamedDataMember\"'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateProperty\":null'\"PublicPropertyGetOnly\":\"PublicPropertyGetOnly\"'\"InternalPropertyGetOnly\":\"InternalPropertyGetOnly\"'\"PrivatePropertyGetOnly\":\"PrivatePropertyGetOnly\"'\"PublicFieldDataMember\":null'\"InternalFieldDataMember\":null'\"PrivateFieldDataMember\":null'\"PublicField\":null'\"InternalField\":null'\"PrivateField\":null}")' " is 806.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDeserialization,The length of the statement  "                new Tuple<DataContractType' string>(new DataContractType("_XYZ"' onlySetSerializableMembers: true)' "{\"PublicPropertyDataMember\":\"PublicPropertyNamedDataMember_XYZ\"'\"InternalPropertyDataMember\":\"InternalPropertyNamedDataMember_XYZ\"'\"PrivatePropertyDataMember\":\"PrivatePropertyNamedDataMember_XYZ\"'\"PublicPropertyGetOnlyDataMember\":\"PublicPropertyGetOnlyNamedDataMember\"'\"InternalPropertyGetOnlyDataMember\":\"InternalPropertyGetOnlyNamedDataMember\"'\"PrivatePropertyGetOnlyDataMember\":\"PrivatePropertyGetOnlyNamedDataMember\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"'\"PublicPropertyGetOnly\":\"PublicPropertyGetOnly\"'\"InternalPropertyGetOnly\":\"InternalPropertyGetOnly\"'\"PrivatePropertyGetOnly\":\"PrivatePropertyGetOnly\"'\"PublicFieldDataMember\":\"PublicFieldNamedDataMember_XYZ\"'\"InternalFieldDataMember\":\"InternalFieldNamedDataMember_XYZ\"'\"PrivateFieldDataMember\":\"PrivateFieldNamedDataMember_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"}" )' " is 1147.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractPopulation,The length of the statement  "                new Tuple<DataContractType' string>(new DataContractType()' "{\"PublicPropertyDataMember\":null'\"InternalPropertyDataMember\":null'\"PrivatePropertyDataMember\":null'\"PublicPropertyGetOnlyDataMember\":\"PublicPropertyGetOnlyNamedDataMember\"'\"InternalPropertyGetOnlyDataMember\":\"InternalPropertyGetOnlyNamedDataMember\"'\"PrivatePropertyGetOnlyDataMember\":\"PrivatePropertyGetOnlyNamedDataMember\"'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateProperty\":null'\"PublicPropertyGetOnly\":\"PublicPropertyGetOnly\"'\"InternalPropertyGetOnly\":\"InternalPropertyGetOnly\"'\"PrivatePropertyGetOnly\":\"PrivatePropertyGetOnly\"'\"PublicFieldDataMember\":null'\"InternalFieldDataMember\":null'\"PrivateFieldDataMember\":null'\"PublicField\":null'\"InternalField\":null'\"PrivateField\":null}")' " is 806.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractPopulation,The length of the statement  "                new Tuple<DataContractType' string>(new DataContractType("_XYZ"' onlySetSerializableMembers: true)' "{\"PublicPropertyDataMember\":\"PublicPropertyNamedDataMember_XYZ\"'\"InternalPropertyDataMember\":\"InternalPropertyNamedDataMember_XYZ\"'\"PrivatePropertyDataMember\":\"PrivatePropertyNamedDataMember_XYZ\"'\"PublicPropertyGetOnlyDataMember\":\"PublicPropertyGetOnlyNamedDataMember\"'\"InternalPropertyGetOnlyDataMember\":\"InternalPropertyGetOnlyNamedDataMember\"'\"PrivatePropertyGetOnlyDataMember\":\"PrivatePropertyGetOnlyNamedDataMember\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"'\"PublicPropertyGetOnly\":\"PublicPropertyGetOnly\"'\"InternalPropertyGetOnly\":\"InternalPropertyGetOnly\"'\"PrivatePropertyGetOnly\":\"PrivatePropertyGetOnly\"'\"PublicFieldDataMember\":\"PublicFieldNamedDataMember_XYZ\"'\"InternalFieldDataMember\":\"InternalFieldNamedDataMember_XYZ\"'\"PrivateFieldDataMember\":\"PrivateFieldNamedDataMember_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"}" )' " is 1147.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertySerialization,The length of the statement  "                new Tuple<JsonPropertyType' string>(new JsonPropertyType()' "{\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PublicField\":null'\"InternalField\":null'\"PublicFieldSansAttribute\":null'\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PublicPropertySansAttribute\":null'\"PrivateFieldJsonProperty\":null'\"PrivateField\":null'\"PrivatePropertyJsonProperty\":null'\"PrivateProperty\":null}")'  " is 490.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertySerialization,The length of the statement  "                new Tuple<JsonPropertyType' string>(new JsonPropertyType("_XYZ")' "{\"PublicFieldJsonProperty\":\"PublicFieldNamedJsonProperty_XYZ\"'\"InternalFieldJsonProperty\":\"InternalFieldNamedJsonProperty_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"PublicFieldSansAttribute\":\"PublicFieldSansAttribute_XYZ\"'\"PublicPropertyJsonProperty\":\"PublicPropertyNamedJsonProperty_XYZ\"'\"InternalPropertyJsonProperty\":\"InternalPropertyNamedJsonProperty_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PublicPropertySansAttribute\":\"PublicPropertySansAttribute_XYZ\"'\"PrivateFieldJsonProperty\":\"PrivateFieldNamedJsonProperty_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"'\"PrivatePropertyJsonProperty\":\"PrivatePropertyNamedJsonProperty_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"}" )' " is 868.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDeserialization,The length of the statement  "                new Tuple<JsonPropertyType' string>(new JsonPropertyType()' "{\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PrivateFieldJsonProperty\":null'\"PublicField\":null'\"InternalField\":null'\"PrivateField\":null'\"PublicFieldSansAttribute\":null'\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PrivatePropertyJsonProperty\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateProperty\":null'\"PublicPropertySansAttribute\":null}")' " is 490.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDeserialization,The length of the statement  "                new Tuple<JsonPropertyType' string>(new JsonPropertyType("_XYZ"'  onlySetSerializableMembers: true)' "{\"PublicFieldJsonProperty\":\"PublicFieldNamedJsonProperty_XYZ\"'\"InternalFieldJsonProperty\":\"InternalFieldNamedJsonProperty_XYZ\"'\"PrivateFieldJsonProperty\":\"PrivateFieldNamedJsonProperty_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"'\"PublicFieldSansAttribute\":\"PublicFieldSansAttribute_XYZ\"'\"PublicPropertyJsonProperty\":\"PublicPropertyNamedJsonProperty_XYZ\"'\"InternalPropertyJsonProperty\":\"InternalPropertyNamedJsonProperty_XYZ\"'\"PrivatePropertyJsonProperty\":\"PrivatePropertyNamedJsonProperty_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"'\"PublicPropertySansAttribute\":\"PublicPropertySansAttribute_XYZ\"}" )' " is 903.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyPopulation,The length of the statement  "                new Tuple<JsonPropertyType' string>(new JsonPropertyType()' "{\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PrivateFieldJsonProperty\":null'\"PublicField\":null'\"InternalField\":null'\"PrivateField\":null'\"PublicFieldSansAttribute\":null'\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PrivatePropertyJsonProperty\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateProperty\":null'\"PublicPropertySansAttribute\":null}")' " is 490.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyPopulation,The length of the statement  "                new Tuple<JsonPropertyType' string>(new JsonPropertyType("_XYZ"'  onlySetSerializableMembers: true)' "{\"PublicFieldJsonProperty\":\"PublicFieldNamedJsonProperty_XYZ\"'\"InternalFieldJsonProperty\":\"InternalFieldNamedJsonProperty_XYZ\"'\"PrivateFieldJsonProperty\":\"PrivateFieldNamedJsonProperty_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"'\"PublicFieldSansAttribute\":\"PublicFieldSansAttribute_XYZ\"'\"PublicPropertyJsonProperty\":\"PublicPropertyNamedJsonProperty_XYZ\"'\"InternalPropertyJsonProperty\":\"InternalPropertyNamedJsonProperty_XYZ\"'\"PrivatePropertyJsonProperty\":\"PrivatePropertyNamedJsonProperty_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"'\"PublicPropertySansAttribute\":\"PublicPropertySansAttribute_XYZ\"}" )' " is 903.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedPocoSerialization,The length of the statement  "                new Tuple<PocoDerivedPocoType' string>(new PocoDerivedPocoType()' "{\"DerivedPublicField\":null'\"PublicField\":null'\"DerivedPublicProperty\":null'\"PublicProperty\":null}")' " is 175.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedPocoSerialization,The length of the statement  "                new Tuple<PocoDerivedPocoType' string>(new PocoDerivedPocoType("_XYZ")' "{\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"}" )' " is 262.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedPocoDeserialization,The length of the statement  "                new Tuple<PocoDerivedPocoType' string>(new PocoDerivedPocoType()' "{\"DerivedPublicProperty\":null'\"PublicProperty\":null'\"DerivedPublicField\":null'\"PublicField\":null}")' " is 175.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedPocoDeserialization,The length of the statement  "                new Tuple<PocoDerivedPocoType' string>(new PocoDerivedPocoType("_XYZ"' onlySetSerializableMembers: true)' "{\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"PublicField\":\"PublicField_XYZ\"}" )' " is 296.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedPocoPopulation,The length of the statement  "                new Tuple<PocoDerivedPocoType' string>(new PocoDerivedPocoType()' "{\"DerivedPublicProperty\":null'\"PublicProperty\":null'\"DerivedPublicField\":null'\"PublicField\":null}")' " is 175.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedPocoPopulation,The length of the statement  "                new Tuple<PocoDerivedPocoType' string>(new PocoDerivedPocoType("_XYZ"' onlySetSerializableMembers: true)' "{\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"PublicField\":\"PublicField_XYZ\"}" )' " is 296.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedDataContractSerialization,The length of the statement  "                new Tuple<PocoDerivedDataContractType' string>(new PocoDerivedDataContractType()' "{\"PublicFieldDataMember\":null'\"InternalFieldDataMember\":null'\"PrivateFieldDataMember\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicPropertyDataMember\":null'\"InternalPropertyDataMember\":null'\"PrivatePropertyDataMember\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null}")'    " is 471.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedDataContractSerialization,The length of the statement  "                new Tuple<PocoDerivedDataContractType' string>(new PocoDerivedDataContractType("_XYZ")' "{\"PublicFieldDataMember\":\"PublicFieldNamedDataMember_XYZ\"'\"InternalFieldDataMember\":\"InternalFieldNamedDataMember_XYZ\"'\"PrivateFieldDataMember\":\"PrivateFieldNamedDataMember_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicPropertyDataMember\":\"PublicPropertyNamedDataMember_XYZ\"'\"InternalPropertyDataMember\":\"InternalPropertyNamedDataMember_XYZ\"'\"PrivatePropertyDataMember\":\"PrivatePropertyNamedDataMember_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"}" )' " is 820.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedDataContractDeserialization,The length of the statement  "                new Tuple<PocoDerivedDataContractType' string>(new PocoDerivedDataContractType()' "{\"PublicPropertyDataMember\":null'\"InternalPropertyDataMember\":null'\"PrivatePropertyDataMember\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicFieldDataMember\":null'\"InternalFieldDataMember\":null'\"PrivateFieldDataMember\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null}")' " is 471.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedDataContractDeserialization,The length of the statement  "                new Tuple<PocoDerivedDataContractType' string>(new PocoDerivedDataContractType("_XYZ"' onlySetSerializableMembers:true)' "{\"PublicPropertyDataMember\":\"PublicPropertyNamedDataMember_XYZ\"'\"InternalPropertyDataMember\":\"InternalPropertyNamedDataMember_XYZ\"'\"PrivatePropertyDataMember\":\"PrivatePropertyNamedDataMember_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicFieldDataMember\":\"PublicFieldNamedDataMember_XYZ\"'\"InternalFieldDataMember\":\"InternalFieldNamedDataMember_XYZ\"'\"PrivateFieldDataMember\":\"PrivateFieldNamedDataMember_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"}" )' " is 853.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedDataContractPopulation,The length of the statement  "                new Tuple<PocoDerivedDataContractType' string>(new PocoDerivedDataContractType()' "{\"PublicPropertyDataMember\":null'\"InternalPropertyDataMember\":null'\"PrivatePropertyDataMember\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicFieldDataMember\":null'\"InternalFieldDataMember\":null'\"PrivateFieldDataMember\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null}")' " is 471.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedDataContractPopulation,The length of the statement  "                new Tuple<PocoDerivedDataContractType' string>(new PocoDerivedDataContractType("_XYZ"' onlySetSerializableMembers:true)' "{\"PublicPropertyDataMember\":\"PublicPropertyNamedDataMember_XYZ\"'\"InternalPropertyDataMember\":\"InternalPropertyNamedDataMember_XYZ\"'\"PrivatePropertyDataMember\":\"PrivatePropertyNamedDataMember_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicFieldDataMember\":\"PublicFieldNamedDataMember_XYZ\"'\"InternalFieldDataMember\":\"InternalFieldNamedDataMember_XYZ\"'\"PrivateFieldDataMember\":\"PrivateFieldNamedDataMember_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"}" )' " is 853.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedJsonPropertySerialization,The length of the statement  "                new Tuple<PocoDerivedJsonPropertyType' string>(new PocoDerivedJsonPropertyType()' "{\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PrivateFieldJsonProperty\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicFieldSansAttribute\":null'\"PublicField\":null'\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PrivatePropertyJsonProperty\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicPropertySansAttribute\":null'\"PublicProperty\":null}")' " is 599.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedJsonPropertySerialization,The length of the statement  "                new Tuple<PocoDerivedJsonPropertyType' string>(new PocoDerivedJsonPropertyType("_XYZ")' "{\"PublicFieldJsonProperty\":\"PublicFieldNamedJsonProperty_XYZ\"'\"InternalFieldJsonProperty\":\"InternalFieldNamedJsonProperty_XYZ\"'\"PrivateFieldJsonProperty\":\"PrivateFieldNamedJsonProperty_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicFieldSansAttribute\":\"PublicFieldSansAttribute_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"PublicPropertyJsonProperty\":\"PublicPropertyNamedJsonProperty_XYZ\"'\"InternalPropertyJsonProperty\":\"InternalPropertyNamedJsonProperty_XYZ\"'\"PrivatePropertyJsonProperty\":\"PrivatePropertyNamedJsonProperty_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicPropertySansAttribute\":\"PublicPropertySansAttribute_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"}" )' " is 1052.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedJsonPropertyDeserialization,The length of the statement  "                new Tuple<PocoDerivedJsonPropertyType' string>(new PocoDerivedJsonPropertyType()' "{\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PrivatePropertyJsonProperty\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PrivateFieldJsonProperty\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicPropertySansAttribute\":null'\"PublicProperty\":null'\"PublicFieldSansAttribute\":null'\"PublicField\":null}")' " is 599.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedJsonPropertyDeserialization,The length of the statement  "                new Tuple<PocoDerivedJsonPropertyType' string>(new PocoDerivedJsonPropertyType("_XYZ"' onlySetSerializableMembers: true)' "{\"PublicPropertyJsonProperty\":\"PublicPropertyNamedJsonProperty_XYZ\"'\"InternalPropertyJsonProperty\":\"InternalPropertyNamedJsonProperty_XYZ\"'\"PrivatePropertyJsonProperty\":\"PrivatePropertyNamedJsonProperty_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicFieldJsonProperty\":\"PublicFieldNamedJsonProperty_XYZ\"'\"InternalFieldJsonProperty\":\"InternalFieldNamedJsonProperty_XYZ\"'\"PrivateFieldJsonProperty\":\"PrivateFieldNamedJsonProperty_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicPropertySansAttribute\":\"PublicPropertySansAttribute_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"PublicFieldSansAttribute\":\"PublicFieldSansAttribute_XYZ\"'\"PublicField\":\"PublicField_XYZ\"}" )' " is 1086.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedJsonPropertyPopulation,The length of the statement  "                new Tuple<PocoDerivedJsonPropertyType' string>(new PocoDerivedJsonPropertyType()' "{\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PrivatePropertyJsonProperty\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PrivateFieldJsonProperty\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicPropertySansAttribute\":null'\"PublicProperty\":null'\"PublicFieldSansAttribute\":null'\"PublicField\":null}")' " is 599.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,PocoDerivedJsonPropertyPopulation,The length of the statement  "                new Tuple<PocoDerivedJsonPropertyType' string>(new PocoDerivedJsonPropertyType("_XYZ"' onlySetSerializableMembers: true)' "{\"PublicPropertyJsonProperty\":\"PublicPropertyNamedJsonProperty_XYZ\"'\"InternalPropertyJsonProperty\":\"InternalPropertyNamedJsonProperty_XYZ\"'\"PrivatePropertyJsonProperty\":\"PrivatePropertyNamedJsonProperty_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicFieldJsonProperty\":\"PublicFieldNamedJsonProperty_XYZ\"'\"InternalFieldJsonProperty\":\"InternalFieldNamedJsonProperty_XYZ\"'\"PrivateFieldJsonProperty\":\"PrivateFieldNamedJsonProperty_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicPropertySansAttribute\":\"PublicPropertySansAttribute_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"PublicFieldSansAttribute\":\"PublicFieldSansAttribute_XYZ\"'\"PublicField\":\"PublicField_XYZ\"}" )' " is 1086.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedDataContractSerialization,The length of the statement  "            List<Tuple<DataContractDerivedDataContractType' string>> testCases = new List<Tuple<DataContractDerivedDataContractType' string>>() {    " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedDataContractSerialization,The length of the statement  "                new Tuple<DataContractDerivedDataContractType' string>(new DataContractDerivedDataContractType()' "{\"DerivedPublicFieldDataMember\":null'\"DerivedInternalFieldDataMember\":null'\"DerivedPrivateFieldDataMember\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicFieldDataMember\":null'\"InternalFieldDataMember\":null'\"PublicField\":null'\"InternalField\":null'\"DerivedPublicPropertyDataMember\":null'\"DerivedInternalPropertyDataMember\":null'\"DerivedPrivatePropertyDataMember\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicPropertyDataMember\":null'\"InternalPropertyDataMember\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateFieldDataMember\":null'\"PrivateField\":null'\"PrivatePropertyDataMember\":null'\"PrivateProperty\":null}")'  " is 871.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedDataContractSerialization,The length of the statement  "                new Tuple<DataContractDerivedDataContractType' string>(new DataContractDerivedDataContractType("_XYZ")' "{\"DerivedPublicFieldDataMember\":\"DerivedPublicFieldNamedDataMember_XYZ\"'\"DerivedInternalFieldDataMember\":\"DerivedInternalFieldNamedDataMember_XYZ\"'\"DerivedPrivateFieldDataMember\":\"DerivedPrivateFieldNamedDataMember_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicFieldDataMember\":\"PublicFieldNamedDataMember_XYZ\"'\"InternalFieldDataMember\":\"InternalFieldNamedDataMember_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"DerivedPublicPropertyDataMember\":\"DerivedPublicPropertyNamedDataMember_XYZ\"'\"DerivedInternalPropertyDataMember\":\"DerivedInternalPropertyNamedDataMember_XYZ\"'\"DerivedPrivatePropertyDataMember\":\"DerivedPrivatePropertyNamedDataMember_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicPropertyDataMember\":\"PublicPropertyNamedDataMember_XYZ\"'\"InternalPropertyDataMember\":\"InternalPropertyNamedDataMember_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PrivateFieldDataMember\":\"PrivateFieldNamedDataMember_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"'\"PrivatePropertyDataMember\":\"PrivatePropertyNamedDataMember_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"}")  " is 1560.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedDataContractDeserialization,The length of the statement  "            List<Tuple<DataContractDerivedDataContractType' string>> testCases = new List<Tuple<DataContractDerivedDataContractType' string>>() { " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedDataContractDeserialization,The length of the statement  "                new Tuple<DataContractDerivedDataContractType' string>(new DataContractDerivedDataContractType()' "{\"DerivedPublicPropertyDataMember\":null'\"DerivedInternalPropertyDataMember\":null'\"DerivedPrivatePropertyDataMember\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicPropertyDataMember\":null'\"InternalPropertyDataMember\":null'\"PrivatePropertyDataMember\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateProperty\":null'\"DerivedPublicFieldDataMember\":null'\"DerivedInternalFieldDataMember\":null'\"DerivedPrivateFieldDataMember\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicFieldDataMember\":null'\"InternalFieldDataMember\":null'\"PrivateFieldDataMember\":null'\"PublicField\":null'\"InternalField\":null'\"PrivateField\":null}")' " is 871.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedDataContractDeserialization,The length of the statement  "                new Tuple<DataContractDerivedDataContractType' string>(new DataContractDerivedDataContractType("_XYZ"' onlySetSerializableMembers: true)' "{\"DerivedPublicPropertyDataMember\":\"DerivedPublicPropertyNamedDataMember_XYZ\"'\"DerivedInternalPropertyDataMember\":\"DerivedInternalPropertyNamedDataMember_XYZ\"'\"DerivedPrivatePropertyDataMember\":\"DerivedPrivatePropertyNamedDataMember_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicPropertyDataMember\":\"PublicPropertyNamedDataMember_XYZ\"'\"InternalPropertyDataMember\":\"InternalPropertyNamedDataMember_XYZ\"'\"PrivatePropertyDataMember\":\"PrivatePropertyNamedDataMember_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"'\"DerivedPublicFieldDataMember\":\"DerivedPublicFieldNamedDataMember_XYZ\"'\"DerivedInternalFieldDataMember\":\"DerivedInternalFieldNamedDataMember_XYZ\"'\"DerivedPrivateFieldDataMember\":\"DerivedPrivateFieldNamedDataMember_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicFieldDataMember\":\"PublicFieldNamedDataMember_XYZ\"'\"InternalFieldDataMember\":\"InternalFieldNamedDataMember_XYZ\"'\"PrivateFieldDataMember\":\"PrivateFieldNamedDataMember_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"}")' " is 1595.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedDataContractPopulation,The length of the statement  "            List<Tuple<DataContractDerivedDataContractType' string>> testCases = new List<Tuple<DataContractDerivedDataContractType' string>>() { " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedDataContractPopulation,The length of the statement  "                new Tuple<DataContractDerivedDataContractType' string>(new DataContractDerivedDataContractType()' "{\"DerivedPublicPropertyDataMember\":null'\"DerivedInternalPropertyDataMember\":null'\"DerivedPrivatePropertyDataMember\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicPropertyDataMember\":null'\"InternalPropertyDataMember\":null'\"PrivatePropertyDataMember\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateProperty\":null'\"DerivedPublicFieldDataMember\":null'\"DerivedInternalFieldDataMember\":null'\"DerivedPrivateFieldDataMember\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicFieldDataMember\":null'\"InternalFieldDataMember\":null'\"PrivateFieldDataMember\":null'\"PublicField\":null'\"InternalField\":null'\"PrivateField\":null}")' " is 871.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedDataContractPopulation,The length of the statement  "                new Tuple<DataContractDerivedDataContractType' string>(new DataContractDerivedDataContractType("_XYZ"' onlySetSerializableMembers: true)' "{\"DerivedPublicPropertyDataMember\":\"DerivedPublicPropertyNamedDataMember_XYZ\"'\"DerivedInternalPropertyDataMember\":\"DerivedInternalPropertyNamedDataMember_XYZ\"'\"DerivedPrivatePropertyDataMember\":\"DerivedPrivatePropertyNamedDataMember_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicPropertyDataMember\":\"PublicPropertyNamedDataMember_XYZ\"'\"InternalPropertyDataMember\":\"InternalPropertyNamedDataMember_XYZ\"'\"PrivatePropertyDataMember\":\"PrivatePropertyNamedDataMember_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"'\"DerivedPublicFieldDataMember\":\"DerivedPublicFieldNamedDataMember_XYZ\"'\"DerivedInternalFieldDataMember\":\"DerivedInternalFieldNamedDataMember_XYZ\"'\"DerivedPrivateFieldDataMember\":\"DerivedPrivateFieldNamedDataMember_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicFieldDataMember\":\"PublicFieldNamedDataMember_XYZ\"'\"InternalFieldDataMember\":\"InternalFieldNamedDataMember_XYZ\"'\"PrivateFieldDataMember\":\"PrivateFieldNamedDataMember_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"}")' " is 1595.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedDataContractPopulation,The length of the statement  "                DataContractDerivedDataContractType actual = new DataContractDerivedDataContractType("_ABC"' onlySetSerializableMembers: true); " is 127.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedJsonPropertySerialization,The length of the statement  "            List<Tuple<DataContractDerivedJsonPropertyType' string>> testCases = new List<Tuple<DataContractDerivedJsonPropertyType' string>>() {                                                                                                                 " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedJsonPropertySerialization,The length of the statement  "                new Tuple<DataContractDerivedJsonPropertyType' string>(new DataContractDerivedJsonPropertyType()' "{\"DerivedPublicFieldJsonProperty\":null'\"DerivedInternalFieldJsonProperty\":null'\"DerivedPrivateFieldJsonProperty\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicFieldDataMember\":null'\"InternalFieldDataMember\":null'\"PublicField\":null'\"InternalField\":null'\"DerivedPublicPropertyJsonProperty\":null'\"DerivedInternalPropertyJsonProperty\":null'\"DerivedPrivatePropertyJsonProperty\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicPropertyDataMember\":null'\"InternalPropertyDataMember\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateFieldDataMember\":null'\"PrivateField\":null'\"PrivatePropertyDataMember\":null'\"PrivateProperty\":null}")'                                                              " is 883.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedJsonPropertySerialization,The length of the statement  "                new Tuple<DataContractDerivedJsonPropertyType' string>(new DataContractDerivedJsonPropertyType("_XYZ")' "{\"DerivedPublicFieldJsonProperty\":\"DerivedPublicFieldNamedJsonProperty_XYZ\"'\"DerivedInternalFieldJsonProperty\":\"DerivedInternalFieldNamedJsonProperty_XYZ\"'\"DerivedPrivateFieldJsonProperty\":\"DerivedPrivateFieldNamedJsonProperty_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicFieldDataMember\":\"PublicFieldNamedDataMember_XYZ\"'\"InternalFieldDataMember\":\"InternalFieldNamedDataMember_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"DerivedPublicPropertyJsonProperty\":\"DerivedPublicPropertyNamedJsonProperty_XYZ\"'\"DerivedInternalPropertyJsonProperty\":\"DerivedInternalPropertyNamedJsonProperty_XYZ\"'\"DerivedPrivatePropertyJsonProperty\":\"DerivedPrivatePropertyNamedJsonProperty_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicPropertyDataMember\":\"PublicPropertyNamedDataMember_XYZ\"'\"InternalPropertyDataMember\":\"InternalPropertyNamedDataMember_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PrivateFieldDataMember\":\"PrivateFieldNamedDataMember_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"'\"PrivatePropertyDataMember\":\"PrivatePropertyNamedDataMember_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"}")  " is 1584.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedJsonPropertyDeserialization,The length of the statement  "            List<Tuple<DataContractDerivedJsonPropertyType' string>> testCases = new List<Tuple<DataContractDerivedJsonPropertyType' string>>() { " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedJsonPropertyDeserialization,The length of the statement  "                new Tuple<DataContractDerivedJsonPropertyType' string>(new DataContractDerivedJsonPropertyType()' "{\"DerivedPublicFieldJsonProperty\":null'\"DerivedInternalFieldJsonProperty\":null'\"DerivedPrivateFieldJsonProperty\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicFieldDataMember\":null'\"InternalFieldDataMember\":null'\"PublicField\":null'\"InternalField\":null'\"PrivateFieldDataMember\":null'\"PrivateField\":null'\"DerivedPublicPropertyJsonProperty\":null'\"DerivedInternalPropertyJsonProperty\":null'\"DerivedPrivatePropertyJsonProperty\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicPropertyDataMember\":null'\"InternalPropertyDataMember\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivatePropertyDataMember\":null'\"PrivateProperty\":null}")' " is 883.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedJsonPropertyDeserialization,The length of the statement  "                new Tuple<DataContractDerivedJsonPropertyType' string>(new DataContractDerivedJsonPropertyType("_XYZ"' onlySetSerializableMembers: true)' "{\"DerivedPublicFieldJsonProperty\":\"DerivedPublicFieldNamedJsonProperty_XYZ\"'\"DerivedInternalFieldJsonProperty\":\"DerivedInternalFieldNamedJsonProperty_XYZ\"'\"DerivedPrivateFieldJsonProperty\":\"DerivedPrivateFieldNamedJsonProperty_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicFieldDataMember\":\"PublicFieldNamedDataMember_XYZ\"'\"InternalFieldDataMember\":\"InternalFieldNamedDataMember_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"PrivateFieldDataMember\":\"PrivateFieldNamedDataMember_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"'\"DerivedPublicPropertyJsonProperty\":\"DerivedPublicPropertyNamedJsonProperty_XYZ\"'\"DerivedInternalPropertyJsonProperty\":\"DerivedInternalPropertyNamedJsonProperty_XYZ\"'\"DerivedPrivatePropertyJsonProperty\":\"DerivedPrivatePropertyNamedJsonProperty_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicPropertyDataMember\":\"PublicPropertyNamedDataMember_XYZ\"'\"InternalPropertyDataMember\":\"InternalPropertyNamedDataMember_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PrivatePropertyDataMember\":\"PrivatePropertyNamedDataMember_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"}")' " is 1619.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedJsonPropertyPopulation,The length of the statement  "            List<Tuple<DataContractDerivedJsonPropertyType' string>> testCases = new List<Tuple<DataContractDerivedJsonPropertyType' string>>() { " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedJsonPropertyPopulation,The length of the statement  "                new Tuple<DataContractDerivedJsonPropertyType' string>(new DataContractDerivedJsonPropertyType()' "{\"DerivedPublicFieldJsonProperty\":null'\"DerivedInternalFieldJsonProperty\":null'\"DerivedPrivateFieldJsonProperty\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicFieldDataMember\":null'\"InternalFieldDataMember\":null'\"PublicField\":null'\"InternalField\":null'\"PrivateFieldDataMember\":null'\"PrivateField\":null'\"DerivedPublicPropertyJsonProperty\":null'\"DerivedInternalPropertyJsonProperty\":null'\"DerivedPrivatePropertyJsonProperty\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicPropertyDataMember\":null'\"InternalPropertyDataMember\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivatePropertyDataMember\":null'\"PrivateProperty\":null}")' " is 883.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedJsonPropertyPopulation,The length of the statement  "                new Tuple<DataContractDerivedJsonPropertyType' string>(new DataContractDerivedJsonPropertyType("_XYZ"' onlySetSerializableMembers: true)' "{\"DerivedPublicFieldJsonProperty\":\"DerivedPublicFieldNamedJsonProperty_XYZ\"'\"DerivedInternalFieldJsonProperty\":\"DerivedInternalFieldNamedJsonProperty_XYZ\"'\"DerivedPrivateFieldJsonProperty\":\"DerivedPrivateFieldNamedJsonProperty_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicFieldDataMember\":\"PublicFieldNamedDataMember_XYZ\"'\"InternalFieldDataMember\":\"InternalFieldNamedDataMember_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"PrivateFieldDataMember\":\"PrivateFieldNamedDataMember_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"'\"DerivedPublicPropertyJsonProperty\":\"DerivedPublicPropertyNamedJsonProperty_XYZ\"'\"DerivedInternalPropertyJsonProperty\":\"DerivedInternalPropertyNamedJsonProperty_XYZ\"'\"DerivedPrivatePropertyJsonProperty\":\"DerivedPrivatePropertyNamedJsonProperty_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicPropertyDataMember\":\"PublicPropertyNamedDataMember_XYZ\"'\"InternalPropertyDataMember\":\"InternalPropertyNamedDataMember_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PrivatePropertyDataMember\":\"PrivatePropertyNamedDataMember_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"}")' " is 1619.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedJsonPropertyPopulation,The length of the statement  "                DataContractDerivedJsonPropertyType actual = new DataContractDerivedJsonPropertyType("_ABC"' onlySetSerializableMembers: true); " is 127.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedJsonPropertySerialization,The length of the statement  "            List<Tuple<JsonPropertyDerivedJsonPropertyType' string>> testCases = new List<Tuple<JsonPropertyDerivedJsonPropertyType' string>>() { " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedJsonPropertySerialization,The length of the statement  "                new Tuple<JsonPropertyDerivedJsonPropertyType' string>(new JsonPropertyDerivedJsonPropertyType()' "{\"DerivedPublicFieldJsonProperty\":null'\"DerivedInternalFieldJsonProperty\":null'\"DerivedPrivateFieldJsonProperty\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"DerivedPublicFieldSansAttribute\":null'\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PublicField\":null'\"InternalField\":null'\"PublicFieldSansAttribute\":null'\"DerivedPublicPropertyJsonProperty\":null'\"DerivedInternalPropertyJsonProperty\":null'\"DerivedPrivatePropertyJsonProperty\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"DerivedPublicPropertySansAttribute\":null'\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PublicPropertySansAttribute\":null'\"PrivateFieldJsonProperty\":null'\"PrivateField\":null'\"PrivatePropertyJsonProperty\":null'\"PrivateProperty\":null}") ' " is 1052.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedJsonPropertySerialization,The length of the statement  "                new Tuple<JsonPropertyDerivedJsonPropertyType' string>(new JsonPropertyDerivedJsonPropertyType("_XYZ")' "{\"DerivedPublicFieldJsonProperty\":\"DerivedPublicFieldNamedJsonProperty_XYZ\"'\"DerivedInternalFieldJsonProperty\":\"DerivedInternalFieldNamedJsonProperty_XYZ\"'\"DerivedPrivateFieldJsonProperty\":\"DerivedPrivateFieldNamedJsonProperty_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"DerivedPublicFieldSansAttribute\":\"DerivedPublicFieldSansAttribute_XYZ\"'\"PublicFieldJsonProperty\":\"PublicFieldNamedJsonProperty_XYZ\"'\"InternalFieldJsonProperty\":\"InternalFieldNamedJsonProperty_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"PublicFieldSansAttribute\":\"PublicFieldSansAttribute_XYZ\"'\"DerivedPublicPropertyJsonProperty\":\"DerivedPublicPropertyNamedJsonProperty_XYZ\"'\"DerivedInternalPropertyJsonProperty\":\"DerivedInternalPropertyNamedJsonProperty_XYZ\"'\"DerivedPrivatePropertyJsonProperty\":\"DerivedPrivatePropertyNamedJsonProperty_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"DerivedPublicPropertySansAttribute\":\"DerivedPublicPropertySansAttribute_XYZ\"'\"PublicPropertyJsonProperty\":\"PublicPropertyNamedJsonProperty_XYZ\"'\"InternalPropertyJsonProperty\":\"InternalPropertyNamedJsonProperty_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PublicPropertySansAttribute\":\"PublicPropertySansAttribute_XYZ\"'\"PrivateFieldJsonProperty\":\"PrivateFieldNamedJsonProperty_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"'\"PrivatePropertyJsonProperty\":\"PrivatePropertyNamedJsonProperty_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"}")  " is 1896.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedJsonPropertyDeserialization,The length of the statement  "            List<Tuple<JsonPropertyDerivedJsonPropertyType' string>> testCases = new List<Tuple<JsonPropertyDerivedJsonPropertyType' string>>() { " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedJsonPropertyDeserialization,The length of the statement  "                new Tuple<JsonPropertyDerivedJsonPropertyType' string>(new JsonPropertyDerivedJsonPropertyType()' "{\"DerivedPublicPropertyJsonProperty\":null'\"DerivedInternalPropertyJsonProperty\":null'\"DerivedPrivatePropertyJsonProperty\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PrivatePropertyJsonProperty\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateProperty\":null'\"DerivedPublicFieldJsonProperty\":null'\"DerivedInternalFieldJsonProperty\":null'\"DerivedPrivateFieldJsonProperty\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PrivateFieldJsonProperty\":null'\"PublicField\":null'\"InternalField\":null'\"PrivateField\":null'\"DerivedPublicPropertySansAttribute\":null'\"PublicPropertySansAttribute\":null'\"DerivedPublicFieldSansAttribute\":null'\"PublicFieldSansAttribute\":null}")' " is 1051.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedJsonPropertyDeserialization,The length of the statement  "                new Tuple<JsonPropertyDerivedJsonPropertyType' string>(new JsonPropertyDerivedJsonPropertyType("_XYZ"' onlySetSerializableMembers: true)' "{\"DerivedPublicPropertyJsonProperty\":\"DerivedPublicPropertyNamedJsonProperty_XYZ\"'\"DerivedInternalPropertyJsonProperty\":\"DerivedInternalPropertyNamedJsonProperty_XYZ\"'\"DerivedPrivatePropertyJsonProperty\":\"DerivedPrivatePropertyNamedJsonProperty_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicPropertyJsonProperty\":\"PublicPropertyNamedJsonProperty_XYZ\"'\"InternalPropertyJsonProperty\":\"InternalPropertyNamedJsonProperty_XYZ\"'\"PrivatePropertyJsonProperty\":null'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PrivateProperty\":null'\"DerivedPublicFieldJsonProperty\":\"DerivedPublicFieldNamedJsonProperty_XYZ\"'\"DerivedInternalFieldJsonProperty\":\"DerivedInternalFieldNamedJsonProperty_XYZ\"'\"DerivedPrivateFieldJsonProperty\":\"DerivedPrivateFieldNamedJsonProperty_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicFieldJsonProperty\":\"PublicFieldNamedJsonProperty_XYZ\"'\"InternalFieldJsonProperty\":\"InternalFieldNamedJsonProperty_XYZ\"'\"PrivateFieldJsonProperty\":null'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"PrivateField\":null'\"DerivedPublicPropertySansAttribute\":\"DerivedPublicPropertySansAttribute_XYZ\"'\"PublicPropertySansAttribute\":\"PublicPropertySansAttribute_XYZ\"'\"DerivedPublicFieldSansAttribute\":\"DerivedPublicFieldSansAttribute_XYZ\"'\"PublicFieldSansAttribute\":\"PublicFieldSansAttribute_XYZ\"}")' " is 1827.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedJsonPropertyPopulation,The length of the statement  "            List<Tuple<JsonPropertyDerivedJsonPropertyType' string>> testCases = new List<Tuple<JsonPropertyDerivedJsonPropertyType' string>>() { " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedJsonPropertyPopulation,The length of the statement  "                new Tuple<JsonPropertyDerivedJsonPropertyType' string>(new JsonPropertyDerivedJsonPropertyType()' "{\"DerivedPublicPropertyJsonProperty\":null'\"DerivedInternalPropertyJsonProperty\":null'\"DerivedPrivatePropertyJsonProperty\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PrivatePropertyJsonProperty\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateProperty\":null'\"DerivedPublicFieldJsonProperty\":null'\"DerivedInternalFieldJsonProperty\":null'\"DerivedPrivateFieldJsonProperty\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PrivateFieldJsonProperty\":null'\"PublicField\":null'\"InternalField\":null'\"PrivateField\":null'\"DerivedPublicPropertySansAttribute\":null'\"PublicPropertySansAttribute\":null'\"DerivedPublicFieldSansAttribute\":null'\"PublicFieldSansAttribute\":null}")' " is 1051.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedJsonPropertyPopulation,The length of the statement  "                new Tuple<JsonPropertyDerivedJsonPropertyType' string>(new JsonPropertyDerivedJsonPropertyType("_XYZ"' onlySetSerializableMembers: true)' "{\"DerivedPublicFieldJsonProperty\":\"DerivedPublicFieldNamedJsonProperty_XYZ\"'\"DerivedInternalFieldJsonProperty\":\"DerivedInternalFieldNamedJsonProperty_XYZ\"'\"DerivedPrivateFieldJsonProperty\":\"DerivedPrivateFieldNamedJsonProperty_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"DerivedPublicFieldSansAttribute\":\"DerivedPublicFieldSansAttribute_XYZ\"'\"PublicFieldJsonProperty\":\"PublicFieldNamedJsonProperty_XYZ\"'\"InternalFieldJsonProperty\":\"InternalFieldNamedJsonProperty_XYZ\"'\"PublicField\":\"PublicField_XYZ\"'\"InternalField\":\"InternalField_XYZ\"'\"PublicFieldSansAttribute\":\"PublicFieldSansAttribute_XYZ\"'\"DerivedPublicPropertyJsonProperty\":\"DerivedPublicPropertyNamedJsonProperty_XYZ\"'\"DerivedInternalPropertyJsonProperty\":\"DerivedInternalPropertyNamedJsonProperty_XYZ\"'\"DerivedPrivatePropertyJsonProperty\":\"DerivedPrivatePropertyNamedJsonProperty_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"DerivedPublicPropertySansAttribute\":\"DerivedPublicPropertySansAttribute_XYZ\"'\"PublicPropertyJsonProperty\":\"PublicPropertyNamedJsonProperty_XYZ\"'\"InternalPropertyJsonProperty\":\"InternalPropertyNamedJsonProperty_XYZ\"'\"PublicProperty\":\"PublicProperty_XYZ\"'\"InternalProperty\":\"InternalProperty_XYZ\"'\"PublicPropertySansAttribute\":\"PublicPropertySansAttribute_XYZ\"'\"PrivateFieldJsonProperty\":\"PrivateFieldNamedJsonProperty_XYZ\"'\"PrivateField\":\"PrivateField_XYZ\"'\"PrivatePropertyJsonProperty\":\"PrivatePropertyNamedJsonProperty_XYZ\"'\"PrivateProperty\":\"PrivateProperty_XYZ\"}")' " is 1931.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedJsonPropertyPopulation,The length of the statement  "                JsonPropertyDerivedJsonPropertyType actual = new JsonPropertyDerivedJsonPropertyType("_ABC"' onlySetSerializableMembers: true); " is 127.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedDataContractSerialization,The length of the statement  "            List<Tuple<JsonPropertyDerivedDataContractType' string>> testCases = new List<Tuple<JsonPropertyDerivedDataContractType' string>>() {                                                                                                       " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedDataContractSerialization,The length of the statement  "                new Tuple<JsonPropertyDerivedDataContractType' string>(new JsonPropertyDerivedDataContractType()' "{\"DerivedPublicFieldDataMember\":null'\"DerivedInternalFieldDataMember\":null'\"DerivedPrivateFieldDataMember\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PublicField\":null'\"InternalField\":null'\"DerivedPublicPropertyDataMember\":null'\"DerivedInternalPropertyDataMember\":null'\"DerivedPrivatePropertyDataMember\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateFieldJsonProperty\":null'\"PrivateField\":null'\"PrivatePropertyJsonProperty\":null'\"PrivateProperty\":null}")'  " is 883.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedDataContractSerialization,The length of the statement  "                new Tuple<JsonPropertyDerivedDataContractType' string>(new JsonPropertyDerivedDataContractType("_XYZ")' "{\"DerivedPublicFieldDataMember\":\"DerivedPublicFieldNamedDataMember_XYZ\"'\"DerivedInternalFieldDataMember\":\"DerivedInternalFieldNamedDataMember_XYZ\"'\"DerivedPrivateFieldDataMember\":\"DerivedPrivateFieldNamedDataMember_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PublicField\":null'\"InternalField\":null'\"DerivedPublicPropertyDataMember\":\"DerivedPublicPropertyNamedDataMember_XYZ\"'\"DerivedInternalPropertyDataMember\":\"DerivedInternalPropertyNamedDataMember_XYZ\"'\"DerivedPrivatePropertyDataMember\":\"DerivedPrivatePropertyNamedDataMember_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateFieldJsonProperty\":null'\"PrivateField\":null'\"PrivatePropertyJsonProperty\":null'\"PrivateProperty\":null}")             " is 1272.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedDataContractDeserialization,The length of the statement  "            List<Tuple<JsonPropertyDerivedDataContractType' string>> testCases = new List<Tuple<JsonPropertyDerivedDataContractType' string>>() { " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedDataContractDeserialization,The length of the statement  "                new Tuple<JsonPropertyDerivedDataContractType' string>(new JsonPropertyDerivedDataContractType()' "{\"DerivedPublicFieldDataMember\":null'\"DerivedInternalFieldDataMember\":null'\"DerivedPrivateFieldDataMember\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PublicField\":null'\"InternalField\":null'\"PrivateFieldJsonProperty\":null'\"PrivateField\":null'\"DerivedPublicPropertyDataMember\":null'\"DerivedInternalPropertyDataMember\":null'\"DerivedPrivatePropertyDataMember\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivatePropertyJsonProperty\":null'\"PrivateProperty\":null}")' " is 883.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedDataContractDeserialization,The length of the statement  "                new Tuple<JsonPropertyDerivedDataContractType' string>(new JsonPropertyDerivedDataContractType("_XYZ"' onlySetSerializableMembers: true)' "{\"DerivedPublicFieldDataMember\":\"DerivedPublicFieldNamedDataMember_XYZ\"'\"DerivedInternalFieldDataMember\":\"DerivedInternalFieldNamedDataMember_XYZ\"'\"DerivedPrivateFieldDataMember\":\"DerivedPrivateFieldNamedDataMember_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PublicField\":null'\"InternalField\":null'\"PrivateFieldJsonProperty\":null'\"PrivateField\":null'\"DerivedPublicPropertyDataMember\":\"DerivedPublicPropertyNamedDataMember_XYZ\"'\"DerivedInternalPropertyDataMember\":\"DerivedInternalPropertyNamedDataMember_XYZ\"'\"DerivedPrivatePropertyDataMember\":\"DerivedPrivatePropertyNamedDataMember_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivatePropertyJsonProperty\":null'\"PrivateProperty\":null}")' " is 1307.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedDataContractPopulation,The length of the statement  "            List<Tuple<JsonPropertyDerivedDataContractType' string>> testCases = new List<Tuple<JsonPropertyDerivedDataContractType' string>>() { " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedDataContractPopulation,The length of the statement  "                new Tuple<JsonPropertyDerivedDataContractType' string>(new JsonPropertyDerivedDataContractType()' "{\"DerivedPublicFieldDataMember\":null'\"DerivedInternalFieldDataMember\":null'\"DerivedPrivateFieldDataMember\":null'\"DerivedPublicField\":null'\"DerivedInternalField\":null'\"DerivedPrivateField\":null'\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PublicField\":null'\"InternalField\":null'\"PrivateFieldJsonProperty\":null'\"PrivateField\":null'\"DerivedPublicPropertyDataMember\":null'\"DerivedInternalPropertyDataMember\":null'\"DerivedPrivatePropertyDataMember\":null'\"DerivedPublicProperty\":null'\"DerivedInternalProperty\":null'\"DerivedPrivateProperty\":null'\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivatePropertyJsonProperty\":null'\"PrivateProperty\":null}")' " is 883.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedDataContractPopulation,The length of the statement  "                new Tuple<JsonPropertyDerivedDataContractType' string>(new JsonPropertyDerivedDataContractType("_XYZ"' onlySetSerializableMembers: true)' "{\"DerivedPublicFieldDataMember\":\"DerivedPublicFieldNamedDataMember_XYZ\"'\"DerivedInternalFieldDataMember\":\"DerivedInternalFieldNamedDataMember_XYZ\"'\"DerivedPrivateFieldDataMember\":\"DerivedPrivateFieldNamedDataMember_XYZ\"'\"DerivedPublicField\":\"DerivedPublicField_XYZ\"'\"DerivedInternalField\":\"DerivedInternalField_XYZ\"'\"DerivedPrivateField\":\"DerivedPrivateField_XYZ\"'\"PublicFieldJsonProperty\":null'\"InternalFieldJsonProperty\":null'\"PublicField\":null'\"InternalField\":null'\"DerivedPublicPropertyDataMember\":\"DerivedPublicPropertyNamedDataMember_XYZ\"'\"DerivedInternalPropertyDataMember\":\"DerivedInternalPropertyNamedDataMember_XYZ\"'\"DerivedPrivatePropertyDataMember\":\"DerivedPrivatePropertyNamedDataMember_XYZ\"'\"DerivedPublicProperty\":\"DerivedPublicProperty_XYZ\"'\"DerivedInternalProperty\":\"DerivedInternalProperty_XYZ\"'\"DerivedPrivateProperty\":\"DerivedPrivateProperty_XYZ\"'\"PublicPropertyJsonProperty\":null'\"InternalPropertyJsonProperty\":null'\"PublicProperty\":null'\"InternalProperty\":null'\"PrivateFieldJsonProperty\":null'\"PrivateField\":null'\"PrivatePropertyJsonProperty\":null'\"PrivateProperty\":null}") " is 1306.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,JsonPropertyDerivedDataContractPopulation,The length of the statement  "                JsonPropertyDerivedDataContractType actual = new JsonPropertyDerivedDataContractType("_ABC"' onlySetSerializableMembers: true); " is 127.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,SimpleTreeSerialization,The length of the statement  "                new Tuple<SimpleTreeType' string>(new SimpleTreeType(setValues:true)' "{\"id\":5'\"Name\":\"Root\"'\"Children\":[{\"id\":6'\"Name\":\"Child1\"'\"Children\":[]}'{\"id\":7'\"Name\":\"Child2\"'\"Children\":[]}]}")' " is 211.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,SimpleTreeDeserialization,The length of the statement  "                new Tuple<SimpleTreeType' string>(new SimpleTreeType(setValues:true)' "{\"id\":5'\"name\":\"Root\"'\"children\":[{\"id\":6'\"name\":\"Child1\"'\"children\":[]}'{\"id\":7'\"name\":\"Child2\"'\"children\":[]}]}")' " is 211.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,SimpleTreePopulation,The length of the statement  "                new Tuple<SimpleTreeType' string>(new SimpleTreeType(setValues:true)' "{\"id\":5'\"name\":\"Root\"'\"children\":[{\"id\":6'\"name\":\"Child1\"'\"children\":[]}'{\"id\":7'\"name\":\"Child2\"'\"children\":[]}]}")' " is 211.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataContractDerivedPocoSerialization,The length of the statement  "            Assert.AreEqual(actual.Message' "The type 'Microsoft.WindowsAzure.MobileServices.Test.DataContractDerivedPocoType' does not have a DataContractAttribute' but the type derives from the type 'Microsoft.WindowsAzure.MobileServices.Test.DataContractType'' which does have a DataContractAttribute. If a type has a DataContractAttribute' any type that derives from that type must also have a DataContractAttribute."); " is 411.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DataMemberSerialization,The length of the statement  "            Assert.AreEqual(actual.Message' "The type 'Microsoft.WindowsAzure.MobileServices.Test.DataMemberType' has one or members with a DataMemberAttribute' but the type itself does not have a DataContractAttribute. Use the Newtonsoft.Json.JsonPropertyAttribute in place of the DataMemberAttribute and set the PropertyName to the desired name."); " is 338.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DuplicateKeySerialization,The length of the statement  "            Assert.AreEqual(actual.Message' "A member with the name 'PublicProperty' already exists on 'Microsoft.WindowsAzure.MobileServices.Test.DuplicateKeyType'. Use the JsonPropertyAttribute to specify another name."); " is 211.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IdTypeSerializationNegative,The length of the statement  "                new Tuple<object' string>(new iDType() { iD = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.iDType'.")' " is 136.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IdTypeSerializationNegative,The length of the statement  "                new Tuple<object' string>(new DataContractMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.DataContractMissingIdType'.")' " is 174.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IdTypeSerializationNegative,The length of the statement  "                new Tuple<object' string>(new IgnoreDataMemberMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.IgnoreDataMemberMissingIdType'.")' " is 182.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IdTypeSerializationNegative,The length of the statement  "                new Tuple<object' string>(new JsonIgnoreMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.JsonIgnoreMissingIdType'.")' " is 170.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IdTypeSerializationNegative,The length of the statement  "                new Tuple<object' string>(new MulitpleIdType() { Id = 7' id = 8 }' "Only one member may have the property name 'id' (regardless of casing) on type 'Microsoft.WindowsAzure.MobileServices.Test.MulitpleIdType'.") " is 209.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,InterfacePropertyTypeSerialization,The length of the statement  "                new Tuple<object' string>(new InterfacePropertyType() { Id = 5' Lookup = new Dictionary<string'string>() { { "x"' "y"}} }' "{\"id\":5'\"Lookup\":{\"x\":\"y\"}}")' " is 162.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,InterfacePropertyTypeDeserialization,The length of the statement  "                new Tuple<object' string>(new InterfacePropertyType() { Id = 5' Lookup = new Dictionary<string'string>() { { "x"' "y"}} }' "{\"id\":5'\"Lookup\":{\"x\":\"y\"}}")' " is 162.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,EnumSerialization,The length of the statement  "                new Tuple<EnumType' string>(new EnumType() { Enum1 = Enum1.Enum1Value1 }' "{\"Enum1\":\"Enum1Value1\"'\"Enum2\":\"Enum2Value1\"'\"Enum3\":0'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")' " is 207.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,EnumSerialization,The length of the statement  "                new Tuple<EnumType' string>(new EnumType() { Enum1 = Enum1.Enum1Value2 }' "{\"Enum1\":\"Enum1Value2\"'\"Enum2\":\"Enum2Value1\"'\"Enum3\":0'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")' " is 207.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,EnumSerialization,The length of the statement  "                new Tuple<EnumType' string>(new EnumType() { Enum3 = Enum3.Enum3Value2 | Enum3.Enum3Value1 }' "{\"Enum1\":\"Enum1Value1\"'\"Enum2\":\"Enum2Value1\"'\"Enum3\":\"Enum3Value1' Enum3Value2\"'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")' " is 254.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,EnumSerialization,The length of the statement  "                new Tuple<EnumType' string>(new EnumType() { Enum1 = (Enum1)1000 }' "{\"Enum1\":1000'\"Enum2\":\"Enum2Value1\"'\"Enum3\":0'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")' " is 190.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,EnumSerialization,The length of the statement  "                new Tuple<EnumType' string>(new EnumType() { Enum1 = (Enum1)(-1000) }' "{\"Enum1\":-1000'\"Enum2\":\"Enum2Value1\"'\"Enum3\":0'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")' " is 194.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,EnumDeserialization,The length of the statement  "                new Tuple<EnumType' string>(new EnumType() { Enum3 = Enum3.Enum3Value2 | Enum3.Enum3Value1 }' "{\"Enum3\":'Enum3Value2'Enum3Value1'}")' " is 135.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ComplexTypeSerialization,The length of the statement  "                new Tuple<object' string>(new ComplexType() { Id = 5' Name = "Some Name"' Child = new MissingIdType() { NotAnId = 4 }}' "{\"id\":5'\"Name\":\"Some Name\"'\"Child\":{\"NotAnId\":4}}")' " is 183.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CreatedAtTypeDeserialization,The length of the statement  "                new Tuple<CreatedAtType' string>(new CreatedAtType { CreatedAt = default(DateTime) }' "{\"__createdAt\":" + MinDateTimeSerializedToJson + "}")' " is 143.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CreatedAtTypeDeserialization,The length of the statement  "                new Tuple<CreatedAtType' string>(new CreatedAtType { CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }' "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"}")' " is 171.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UpdatedAtTypeDeserialization,The length of the statement  "                new Tuple<UpdatedAtType' string>(new UpdatedAtType { UpdatedAt = default(DateTime) }' "{\"__updatedAt\":" + MinDateTimeSerializedToJson + "}")' " is 143.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UpdatedAtTypeDeserialization,The length of the statement  "                new Tuple<UpdatedAtType' string>(new UpdatedAtType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }' "{\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"}")' " is 171.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,Deserialize_DoesNotTransformException_WhenIdTypeDoesNotMismatch,The length of the statement  "            Assert.AreEqual(ex.Message' "Error converting value True to type 'Microsoft.WindowsAzure.MobileServices.Test.LongIdType'. Path ''."); " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,Deserialize_TransoformsException_WhenIdTypeMismatches,The length of the statement  "            string expectedMessage = @"Error converting value ""asdf"" to type 'System.Int64'. Path 'id'." + Environment.NewLine + @"You might be affected by Mobile Services latest changes to support string Ids. For more details: http://go.microsoft.com/fwlink/?LinkId=330396"; " is 265.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeSerialization,The length of the statement  "                new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)' " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeSerialization,The length of the statement  "                                                                                         "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")' " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeSerialization,The length of the statement  "                    "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson) " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeDeserialization,The length of the statement  "                new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)' " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeDeserialization,The length of the statement  "                                                                                         "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")' " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeDeserialization,The length of the statement  "                    "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson))' " is 123.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Cancels_WhenCancellationTokenIsCancelled,The length of the statement  "            handler.TableOperationAction = op => Task.Delay(TimeSpan.MaxValue).ContinueWith<JObject>(t => null); // long slow operation " is 123.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_FollowsNextLinks,The length of the statement  "            hijack.Responses[0].Headers.Add("Link"' "http://localhost:31475/tables/Green?$top=1&$select=Text%2CDone%2CId&$skip=2; rel=next"); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_FollowsNextLinks,The length of the statement  "            AssertEx.MatchUris(hijack.Requests' "http://www.test.com/tables/stringId_test_table?$skip=0&$top=50&__includeDeleted=true&__systemproperties=__version%2C__deleted"' " is 164.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_FollowsNextLinks,The length of the statement  "                                        "http://www.test.com/tables/stringId_test_table?$skip=4&$top=50&__includeDeleted=true&__systemproperties=__version%2C__deleted"); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UpdatesDeltaToken_AfterEachResult_IfOrderByIsSupported,The length of the statement  "            hijack.AddResponseContent(@"[{""id"":""abc""'""String"":""Hey""' ""__updatedAt"": ""2001-02-03T00:00:00.0000000+00:00""}' " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UpdatesDeltaToken_AfterEachResult_IfOrderByIsSupported,The length of the statement  "            AssertEx.MatchUris(hijack.Requests' "http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'1970-01-01T00:00:00.0000000%2B00:00')&$orderby=__updatedAt&$skip=0&$top=50&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"' " is 276.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UpdatesDeltaToken_AfterEachResult_IfOrderByIsSupported,The length of the statement  "                                                "http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'2001-02-04T00:00:00.0000000%2B00:00')&$orderby=__updatedAt&$skip=0&$top=50&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"); " is 241.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UpdatesDeltaToken_AfterEachResult_IfOrderByIsSupported,The length of the statement  "            Assert.Equals(store.TableMap[MobileServiceLocalSystemTables.Config]["deltaToken|stringId_test_table|items"]["value"]' "2001-02-04T00:00:00.0000000+00:00"); " is 155.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotUpdateDeltaToken_AfterEachResult_IfOrderByIsNotSupported,The length of the statement  "            hijack.AddResponseContent(@"[{""id"":""abc""'""String"":""Hey""' ""__updatedAt"": ""2001-02-03T00:00:00.0000000+00:00""}' " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotUpdateDeltaToken_AfterEachResult_IfOrderByIsNotSupported,The length of the statement  "            AssertEx.MatchUris(hijack.Requests' "http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'1970-01-01T00:00:00.0000000%2B00:00')&$skip=0&$top=50&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"' " is 255.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotUpdateDeltaToken_AfterEachResult_IfOrderByIsNotSupported,The length of the statement  "                                                "http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'1970-01-01T00:00:00.0000000%2B00:00')&$skip=2&$top=50&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"); " is 220.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotUpdateDeltaToken_AfterEachResult_IfOrderByIsNotSupported,The length of the statement  "            Assert.IsFalse(store.TableMap[MobileServiceLocalSystemTables.Config].ContainsKey("deltaToken|stringId_test_table|items")); " is 122.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UsesSkipAndTakeThenFollowsLinkThenUsesSkipAndTake,The length of the statement  "            hijack.Responses[1].Headers.Add("Link"' "http://localhost:31475/tables/Green?$top=1&$select=Text%2CDone%2CId&$skip=2; rel=next"); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UsesSkipAndTakeThenFollowsLinkThenUsesSkipAndTake,The length of the statement  "            AssertEx.MatchUris(hijack.Requests' "http://www.test.com/tables/stringId_test_table?$skip=3&$top=50&__includeDeleted=true&__systemproperties=__version%2C__deleted"' " is 164.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UsesSkipAndTakeThenFollowsLinkThenUsesSkipAndTake,The length of the statement  "                                        "http://www.test.com/tables/stringId_test_table?$skip=5&$top=49&__includeDeleted=true&__systemproperties=__version%2C__deleted"' " is 128.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UsesSkipAndTakeThenFollowsLinkThenUsesSkipAndTake,The length of the statement  "                                        "http://www.test.com/tables/stringId_test_table?$skip=9&$top=45&__includeDeleted=true&__systemproperties=__version%2C__deleted"); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Supports_AbsoluteAndRelativeUri,The length of the statement  "                AssertEx.MatchUris(hijack.Requests' "http://www.test.com/api/todoitem?$skip=0&$top=50&__includeDeleted=true&__systemproperties=__version%2C__deleted"' " is 150.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullASync_Throws_IfAbsoluteUriHostNameDoesNotMatch,The length of the statement  "            var ex = await AssertEx.Throws<ArgumentException>(async () => await table.PullAsync(null' "http://www.contoso.com/about?$filter=a eq b&$orderby=c")); " is 149.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotFollowLink_IfRelationIsNotNext,The length of the statement  "            hijack.Responses[0].Headers.Add("Link"' "http://contoso.com:31475/tables/Green?$top=1&$select=Text%2CDone%2CId&$skip=2; rel=prev"); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotFollowLink_IfRelationIsNotNext,The length of the statement  "            AssertEx.MatchUris(hijack.Requests' "http://www.test.com/tables/stringId_test_table?$skip=0&$top=50&__includeDeleted=true&__systemproperties=__version%2C__deleted"' " is 164.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotFollowLink_IfRelationIsNotNext,The length of the statement  "                                        "http://www.test.com/tables/stringId_test_table?$skip=2&$top=50&__includeDeleted=true&__systemproperties=__version%2C__deleted"' " is 128.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotFollowLink_IfRelationIsNotNext,The length of the statement  "                                        "http://www.test.com/tables/stringId_test_table?$skip=4&$top=50&__includeDeleted=true&__systemproperties=__version%2C__deleted"); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotFollowLink_IfLinkHasNonSupportedOptions,The length of the statement  "            hijack.Responses[0].Headers.Add("Link"' "http://contoso.com:31475/tables/Green?$top=1&$select=Text%2CDone%2CId&$skip=2; rel=next"); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotFollowLink_IfLinkHasNonSupportedOptions,The length of the statement  "            AssertEx.MatchUris(hijack.Requests' "http://www.test.com/tables/stringId_test_table?$top=50&__includeDeleted=true&__systemproperties=__version%2C__deleted"); " is 157.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UsesTopInQuery_IfLessThanMaxPageSize,The length of the statement  "            AssertEx.MatchUris(hijack.Requests' "http://www.test.com/tables/stringId_test_table?$skip=0&$top=49&__includeDeleted=true&__systemproperties=__version%2C__deleted"' " is 164.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UsesTopInQuery_IfLessThanMaxPageSize,The length of the statement  "                                        "http://www.test.com/tables/stringId_test_table?$skip=2&$top=47&__includeDeleted=true&__systemproperties=__version%2C__deleted"); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DefaultsTo50_IfGreaterThanMaxPageSize,The length of the statement  "            AssertEx.MatchUris(hijack.Requests' "http://www.test.com/tables/stringId_test_table?$skip=0&$top=50&__includeDeleted=true&__systemproperties=__version%2C__deleted"' " is 164.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DefaultsTo50_IfGreaterThanMaxPageSize,The length of the statement  "                                        "http://www.test.com/tables/stringId_test_table?$skip=2&$top=49&__includeDeleted=true&__systemproperties=__version%2C__deleted"); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotFollowLink_IfMaxRecordsAreRetrieved,The length of the statement  "            hijack.Responses[0].Headers.Add("Link"' "http://localhost:31475/tables/Green?$top=1&$select=Text%2CDone%2CId&$skip=2; rel=next"); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotFollowLink_IfResultIsEmpty,The length of the statement  "            hijack.Responses[0].Headers.Add("Link"' "http://localhost:31475/tables/Green?$top=1&$select=Text%2CDone%2CId&$skip=2; rel=next"); " is 129.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Throws_WhenSelectClauseIsSpecified,The length of the statement  "            var exception = await ThrowsAsync<ArgumentException>(() => table.PullAsync(null' query' cancellationToken: CancellationToken.None)); " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Throws_WhenOrderByClauseIsSpecifiedWithQueryId,The length of the statement  "            var exception = await ThrowsAsync<ArgumentException>(() => table.PullAsync("incQuery"' query' cancellationToken: CancellationToken.None)); " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Throws_WhenTopOrSkipIsSpecifiedWithQueryId,The length of the statement  "            var exception = await ThrowsAsync<ArgumentException>(() => table.PullAsync("incQuery"' query' cancellationToken: CancellationToken.None)); " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Throws_WhenTopOrSkipIsSpecifiedWithQueryId,The length of the statement  "            exception = await ThrowsAsync<ArgumentException>(() => table.PullAsync("incQuery"' query' cancellationToken: CancellationToken.None)); " is 134.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Succeeds,The length of the statement  "            AssertEx.QueryEquals(hijack.Requests[0].RequestUri.Query' "?$filter=(String%20eq%20'world')&$orderby=String%20desc'id&$skip=5&$top=3&param1=val1&__includeDeleted=true&__systemproperties=__version%2C__deleted"); " is 210.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_AllOptions_MovesByUpdatedAt,The length of the statement  "                    "http://test.com/tables/stringId_test_table?$filter=((String eq 'world') and (__updatedAt ge datetimeoffset'2001-02-01T00:00:00.0000000%2B00:00'))&$orderby=__updatedAt&$skip=0&$top=50&param1=val1&__includeDeleted=true&__systemproperties=__createdAt%2C__updatedAt%2C__deleted"' " is 276.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_AllOptions_MovesByUpdatedAt,The length of the statement  "                    "http://test.com/tables/stringId_test_table?$filter=((String eq 'world') and (__updatedAt ge datetimeoffset'2001-02-03T00:00:00.0000000%2B00:00'))&$orderby=__updatedAt&$skip=0&$top=50&param1=val1&__includeDeleted=true&__systemproperties=__createdAt%2C__updatedAt%2C__deleted"); " is 277.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_WithNullUpdatedAt_Succeeds,The length of the statement  "                "http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'1970-01-01T00:00:00.0000000%2B00:00')&$orderby=__updatedAt&$skip=0&$top=50&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"' " is 240.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_WithNullUpdatedAt_Succeeds,The length of the statement  "                "http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'1970-01-01T00:00:00.0000000%2B00:00')&$orderby=__updatedAt&$skip=1&$top=50&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"); " is 241.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_MovesByUpdatedAt_ThenUsesSkipAndTop_WhenUpdatedAtDoesNotChange,The length of the statement  "            hijack.AddResponseContent(@"[{""id"":""abc""'""String"":""Hey""' ""__updatedAt"": ""2001-02-03T00:00:00.0000000+00:00""}]"); " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_MovesByUpdatedAt_ThenUsesSkipAndTop_WhenUpdatedAtDoesNotChange,The length of the statement  "            hijack.AddResponseContent(@"[{""id"":""def""'""String"":""World""' ""__updatedAt"": ""2001-02-03T00:00:00.0000000+00:00""}]"); " is 126.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_MovesByUpdatedAt_ThenUsesSkipAndTop_WhenUpdatedAtDoesNotChange,The length of the statement  "                "http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'1970-01-01T00:00:00.0000000%2B00:00')&$orderby=__updatedAt&$skip=0&$top=50&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"' " is 240.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_MovesByUpdatedAt_ThenUsesSkipAndTop_WhenUpdatedAtDoesNotChange,The length of the statement  "                "http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'2001-02-03T00:00:00.0000000%2B00:00')&$orderby=__updatedAt&$skip=0&$top=50&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"' " is 240.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_MovesByUpdatedAt_ThenUsesSkipAndTop_WhenUpdatedAtDoesNotChange,The length of the statement  "                "http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'2001-02-03T00:00:00.0000000%2B00:00')&$orderby=__updatedAt&$skip=1&$top=50&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"); " is 241.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_WithoutOrderBy_MovesBySkipAndTop,The length of the statement  "                "http://test.com/tables/stringId_test_table?$filter=((String eq 'world') and (__updatedAt ge datetimeoffset'2001-02-01T00:00:00.0000000%2B00:00'))&$skip=0&$top=50&param1=val1&__includeDeleted=true&__systemproperties=__createdAt%2C__updatedAt%2C__deleted"' " is 255.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_WithoutOrderBy_MovesBySkipAndTop,The length of the statement  "                "http://test.com/tables/stringId_test_table?$filter=((String eq 'world') and (__updatedAt ge datetimeoffset'2001-02-01T00:00:00.0000000%2B00:00'))&$skip=2&$top=50&param1=val1&__includeDeleted=true&__systemproperties=__createdAt%2C__updatedAt%2C__deleted"); " is 256.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_WithoutSkipAndOrderBy_CanNotMoveForward,The length of the statement  "                "http://test.com/tables/stringId_test_table?$filter=((String eq 'world') and (__updatedAt ge datetimeoffset'2001-02-01T00:00:00.0000000%2B00:00'))&$top=50&param1=val1&__includeDeleted=true&__systemproperties=__createdAt%2C__updatedAt%2C__deleted"); " is 248.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_WithoutTopAndOrderBy_MovesBySkip,The length of the statement  "                "http://test.com/tables/stringId_test_table?$filter=((String eq 'world') and (__updatedAt ge datetimeoffset'2001-02-01T00:00:00.0000000%2B00:00'))&param1=val1&__includeDeleted=true&__systemproperties=__createdAt%2C__updatedAt%2C__deleted"' " is 239.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_WithoutTopAndOrderBy_MovesBySkip,The length of the statement  "                "http://test.com/tables/stringId_test_table?$filter=((String eq 'world') and (__updatedAt ge datetimeoffset'2001-02-01T00:00:00.0000000%2B00:00'))&$skip=2&param1=val1&__includeDeleted=true&__systemproperties=__createdAt%2C__updatedAt%2C__deleted"); " is 248.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_WithoutSkipAndTop_MovesByUpdatedAt,The length of the statement  "                "http://test.com/tables/stringId_test_table?$filter=((String eq 'world') and (__updatedAt ge datetimeoffset'2001-02-01T00:00:00.0000000%2B00:00'))&$orderby=__updatedAt&param1=val1&__includeDeleted=true&__systemproperties=__createdAt%2C__updatedAt%2C__deleted"' " is 260.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_WithoutSkipAndTop_MovesByUpdatedAt,The length of the statement  "                "http://test.com/tables/stringId_test_table?$filter=((String eq 'world') and (__updatedAt ge datetimeoffset'2001-02-03T00:00:00.0000000%2B00:00'))&$orderby=__updatedAt&param1=val1&__includeDeleted=true&__systemproperties=__createdAt%2C__updatedAt%2C__deleted"); " is 261.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_PageSize,The length of the statement  "                string.Format("http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'1970-01-01T00:00:00.0000000%2B00:00')&$orderby=__updatedAt&$skip=0&$top={0}&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"' pullOptions.MaxPageSize)' " is 281.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_PageSize,The length of the statement  "                string.Format("http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'1970-01-01T00:00:00.0000000%2B00:00')&$orderby=__updatedAt&$skip=1&$top={0}&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"' pullOptions.MaxPageSize)); " is 282.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,TestPullAsyncIncrementalWithOptions,The length of the statement  "            await settings.SetDeltaTokenAsync("stringId_test_table"' "incquery"' new DateTime(2001' 02' 01' 0' 0' 0' DateTimeKind.Utc)); " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_WithoutDeltaTokenInDb,The length of the statement  "                "http://test.com/tables/stringId_test_table?$filter=((String eq 'world') and (__updatedAt ge datetimeoffset'1970-01-01T00:00:00.0000000%2B00:00'))&$orderby=__updatedAt&$skip=0&$top=50&param1=val1&__includeDeleted=true&__systemproperties=__createdAt%2C__updatedAt%2C__deleted"' " is 276.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_WithoutDeltaTokenInDb,The length of the statement  "                "http://test.com/tables/stringId_test_table?$filter=((String eq 'world') and (__updatedAt ge datetimeoffset'2001-02-03T00:00:00.0000000%2B00:00'))&$orderby=__updatedAt&$skip=0&$top=50&param1=val1&__includeDeleted=true&__systemproperties=__createdAt%2C__updatedAt%2C__deleted"); " is 277.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,TestIncrementalPull,The length of the statement  "            hijack.AddResponseContent(@"[{""id"":""abc""'""String"":""Hey""' ""__updatedAt"": ""2001-02-03T00:00:00.0000000+00:00""}' " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,TestPullQueryOverrideThrows,The length of the statement  "            var ex = await ThrowsAsync<ArgumentException>(() => table.PullAsync(null' query' cancellationToken: CancellationToken.None)); " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PurgeAsync_DoesNotTriggerPush_WhenThereIsNoOperationInTable,The length of the statement  "            Assert.AreEqual(store.DeleteQueries[0].TableName' MobileServiceLocalSystemTables.SyncErrors); // push deletes all sync erros " is 124.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PurgeAsync_ResetsDeltaToken_WhenQueryIdIsSpecified,The length of the statement  "            hijack.AddResponseContent(@"[{""id"":""abc""'""String"":""Hey""' ""__updatedAt"": ""2001-02-03T00:00:00.0000000+00:00""}' " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PurgeAsync_ResetsDeltaToken_WhenQueryIdIsSpecified,The length of the statement  "            Assert.Equals(store.TableMap[MobileServiceLocalSystemTables.Config]["deltaToken|stringId_test_table|items"]["value"]' "2001-02-04T00:00:00.0000000+00:00"); " is 155.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PurgeAsync_ResetsDeltaToken_WhenQueryIdIsSpecified,The length of the statement  "            Assert.IsFalse(store.TableMap[MobileServiceLocalSystemTables.Config].ContainsKey("deltaToken|stringId_test_table|items")); " is 122.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PurgeAsync_ResetsDeltaToken_WhenQueryIdIsSpecified,The length of the statement  "            AssertEx.MatchUris(hijack.Requests' "http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'1970-01-01T00:00:00.0000000%2B00:00')&$orderby=__updatedAt&$skip=0&$top=50&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"' " is 276.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PurgeAsync_ResetsDeltaToken_WhenQueryIdIsSpecified,The length of the statement  "                                                "http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'2001-02-04T00:00:00.0000000%2B00:00')&$orderby=__updatedAt&$skip=0&$top=50&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"' " is 240.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PurgeAsync_ResetsDeltaToken_WhenQueryIdIsSpecified,The length of the statement  "                                                "http://www.test.com/tables/stringId_test_table?$filter=(__updatedAt ge datetimeoffset'1970-01-01T00:00:00.0000000%2B00:00')&$orderby=__updatedAt&$skip=0&$top=50&__includeDeleted=true&__systemproperties=__updatedAt%2C__version%2C__deleted"); " is 241.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PurgeAsync_Throws_WhenThereIsOperationInTable_AndForceIsTrue_AndQueryIsSpecified,The length of the statement  "            var ex = await ThrowsAsync<InvalidOperationException>(() => table.PurgeAsync(null' "$filter=a eq b"' true' CancellationToken.None)); " is 132.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PurgeAsync_DeletesOperations_WhenThereIsOperationInTable_AndForceIsTrue,The length of the statement  "            store.TableMap[MobileServiceLocalSystemTables.Config] = new Dictionary<string' JObject>() { { deltaKey' new JObject() } }; " is 122.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PushAsync_IsAborted_OnAuthenticationError,The length of the statement  "            var authError = new MobileServiceInvalidOperationException(String.Empty' new HttpRequestMessage()' new HttpResponseMessage(HttpStatusCode.Unauthorized)); " is 153.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,DeleteAsync_Throws_WhenInsertWasAttempted,The length of the statement  "            Assert.AreEqual(delException.Message' "The item is in inconsistent state in the local store. Please complete the pending sync by calling PushAsync() before deleting the item."); " is 177.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,DeleteAsync_CancelsUpdate_WhenUpdateIsInQueue,The length of the statement  "                                              if (executed == 1) // order is maintained by doing insert first and delete after that. This means first update was cancelled' not the second one. " is 145.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,UpdateAsync_CancelsSecondUpdate_WhenUpdateIsInQueue,The length of the statement  "                                            if (executed == 1) // order is maintained by doing update first and delete after that. This means second update was cancelled' not the first one. " is 145.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,Collapse_DeletesTheError_OnMutualCancel,The length of the statement  "            store.TableMap[MobileServiceLocalSystemTables.SyncErrors] = new Dictionary<string' JObject>() { { id' new JObject() } }; " is 120.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,Collapse_DeletesTheError_OnReplace,The length of the statement  "            store.TableMap[MobileServiceLocalSystemTables.SyncErrors] = new Dictionary<string' JObject>() { { id' new JObject() } }; " is 120.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,UpdateAsync_CancelsSecondUpdate_WhenInsertIsInQueue,The length of the statement  "                                            if (executed == 1) // order is maintained by doing insert first and delete after that. This means second update was cancelled. " is 126.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,TestPushAbort,The length of the statement  "            MobileServicePushFailedException ex = await ThrowsAsync<MobileServicePushFailedException>(service.SyncContext.PushAsync); " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.UnitTests.OData,ODataExpressionParserTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\OData\ODataExpressionParser.Test.cs,ParseFilter_Guid_InvalidGuidString,The length of the statement  "            var ex = AssertEx.Throws<MobileServiceODataException>(() => ODataExpressionParser.ParseFilter(string.Format("Field eq guid'this is not a guid'"))); " is 147.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.UnitTests.OData,ODataExpressionParserTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\OData\ODataExpressionParser.Test.cs,ParseFilter_Guid_InvalidGuidString,The length of the statement  "            Assert.IsTrue(ex.Message.Equals("Guid should contain 32 digits with 4 dashes (xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).") || ex.Message.Equals("Invalid Guid format: this is not a guid")); " is 184.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.UnitTests.Table,MobileServiceObjectReaderTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceObjectReaderTests.cs,GetUpdatedAt_ReturnsSystemProperty_ByDefault,The length of the statement  "            DateTimeOffset? actualValue = new MobileServiceObjectReader().GetUpdatedAt(new JObject() { { "__updatedAt"' new JValue(value) } }); " is 131.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.UnitTests.Table,MobileServiceObjectReaderTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceObjectReaderTests.cs,GetCreatedAt_ReturnsSystemProperty_ByDefault,The length of the statement  "            DateTimeOffset? actualValue = new MobileServiceObjectReader().GetCreatedAt(new JObject() { { "__createdAt"' new JValue(value) } }); " is 131.
Complex Conditional,Microsoft.WindowsAzure.MobileServices.Test,InterfacePropertyType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\InterfacePropertyType.cs,Equals,The conditional expression  "(this.Lookup == null && other.Lookup == null) ||                          (this.Lookup.Count == other.Lookup.Count &&                          this.Lookup.SequenceEqual(other.Lookup))"  is complex.
Complex Conditional,Microsoft.WindowsAzure.MobileServices.Test,SimpleTreeType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\SimpleTreeType.cs,Equals,The conditional expression  "other == null ||                   this.Id != other.Id ||                   this.Name != other.Name ||                  this.Children.Count != other.Children.Count"  is complex.
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_ExecutesThePendingOperations_InOrder,The following statement contains a magic number: Assert.AreEqual(hijack.Requests.Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithClientWinsPolicy,The following statement contains a magic number: handler.TableOperationAction = async op =>              {                  for (int i = 0; i < 2; i++)                  {                      try                      {                          return await op.ExecuteAsync();                      }                      catch (MobileServicePreconditionFailedException ex)                      {                          op.Item[MobileServiceSystemColumns.Version] = ex.Value[MobileServiceSystemColumns.Version];                      }                  }                  return null;              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The following statement contains a magic number: handler.TableOperationAction = async op =>              {                  try                  {                      untilAboutToExecuteOp.Release();                      await untilPendingOpsCreated.WaitAsync();                        JObject result = await op.ExecuteAsync();                        if (0 == pushState)                      {                          Assert.AreEqual(MobileServiceTableOperationKind.Insert' op.Kind);                          Assert.AreEqual(0' op.Item.Value<int>("value"));                      }                      else                      {                          Assert.AreEqual(MobileServiceTableOperationKind.Update' op.Kind);                          Assert.AreEqual(2' op.Item.Value<int>("value")); // We shouldn't see the value == 1' since it should have been collapsed                      }                        // We don't care what the server actually returned' as long as there was no exception raised in our Push logic                      return result;                  }                  catch (Exception ex)                  {                      Assert.Fail("Things are bad: " + ex.Message);                  }                    return null;              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The following statement contains a magic number: item = new JObject() { { "id"' idStr }' { "value"' 2 } };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The following statement contains a magic number: mockLocalStore.SetLookupDelay(500);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The following statement contains a magic number: pushState = (pushState + 1) % 2;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The following statement contains a magic number: pushState = (pushState + 1) % 2;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,PushAsync_Succeeds_WithPendingOperations_AndOpQueueIsConsistent,The following statement contains a magic number: id < 10
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,UpdateOperationAsync_UpsertTheItemInOperation_AndDeletesTheError,The following statement contains a magic number: var item2 = new JObject() { { "id"' itemId }' { "name"' "unknown" }' { "version"' 2 } };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncContextTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncContext.Test.cs,TestOperationModifiedException,The following statement contains a magic number: store.TableMap[MobileServiceLocalSystemTables.OperationQueue].Add(operationId' new JObject() { { "version"' 3 } });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DataSourceTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DataSourceTest.cs,SimpleDataSource,The following statement contains a magic number: Assert.AreEqual(18' dataSource.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DataSourceTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DataSourceTest.cs,SimpleDataSource,The following statement contains a magic number: Assert.AreEqual(22.95' dataSource[0].Price);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DataSourceTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DataSourceTest.cs,SimpleDataSourceWithTotalCount,The following statement contains a magic number: MobileServiceCollection<Book' Book> dataSource =                  await table.Take(5).IncludeTotalCount().ToCollectionAsync();
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DataSourceTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DataSourceTest.cs,SimpleDataSourceWithTotalCount,The following statement contains a magic number: Assert.AreEqual(5' dataSource.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DataSourceTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DataSourceTest.cs,SimpleDataSourceWithTotalCount,The following statement contains a magic number: Assert.AreEqual((long)18' ((ITotalCountProvider)dataSource).TotalCount);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,EnsureEmptyTableAsync,The following statement contains a magic number: IEnumerable<T> results = await table.Take(1000).ToListAsync();
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual(9' items.Count());
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("_C"' items[2].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("1"' items[3].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("2"' items[4].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("3"' items[5].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("a"' items[6].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("b"' items[7].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("C"' items[8].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual(9' items.Count());
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("_A"' items[8].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("_B"' items[7].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("_C"' items[6].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("1"' items[5].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("2"' items[4].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("3"' items[3].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithValidStringIdAgainstStringIdTable,The following statement contains a magic number: Assert.AreEqual("a"' items[2].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncTableOperationsWithStringIdAgainstIntegerIdTable,The following statement contains a magic number: i < 10
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithStringIdAgainstIntegerIdTable,The following statement contains a magic number: i < 10
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithStringIdAgainstIntegerIdTable,The following statement contains a magic number: Assert.AreEqual(10' items.Count());
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithStringIdAgainstIntegerIdTable,The following statement contains a magic number: i < 8
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,OrderingReadAsyncWithStringIdAgainstIntegerIdTable,The following statement contains a magic number: Assert.AreEqual(10' items.Count());
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,FilterReadAsyncWithIntegerAsStringIdAgainstIntegerIdTable,The following statement contains a magic number: i < 10
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,FilterReadAsyncWithEmptyStringIdAgainstIntegerIdTable,The following statement contains a magic number: i < 10
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncFilterSelectOrderingOperationsNotImpactedBySystemProperties,The following statement contains a magic number: await Task.Delay(10);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncFilterSelectOrderingOperationsNotImpactedBySystemProperties,The following statement contains a magic number: id < 5
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncFilterSelectOrderingOperationsNotImpactedBySystemProperties,The following statement contains a magic number: results = await table.Where(t => t.CreatedAt >= items[4].CreatedAt).ToEnumerableAsync();
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncFilterSelectOrderingOperationsNotImpactedBySystemProperties,The following statement contains a magic number: Assert.IsTrue(filteredItems[i].CreatedAt >= items[4].CreatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncFilterSelectOrderingOperationsNotImpactedBySystemProperties,The following statement contains a magic number: results = await table.Where(t => t.UpdatedAt >= items[4].UpdatedAt).ToEnumerableAsync();
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncFilterSelectOrderingOperationsNotImpactedBySystemProperties,The following statement contains a magic number: Assert.IsTrue(filteredItems[i].UpdatedAt >= items[4].UpdatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncFilterSelectOrderingOperationsNotImpactedBySystemProperties,The following statement contains a magic number: results = await table.Where(t => t.Version == items[4].Version).ToEnumerableAsync();
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericFunctionalTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\Table\MobileServiceTableTest.cs,AsyncFilterSelectOrderingOperationsNotImpactedBySystemProperties,The following statement contains a magic number: Assert.IsTrue(filteredItems[i].Version == items[4].Version);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableQueryMock<T>,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\Mocks\MobileServiceTableQueryMock.cs,ToEnumerableAsync,The following statement contains a magic number: return Task.Run(() => Task.Delay(500).ContinueWith(t => (IEnumerable<T>)new QueryResultEnumerable<T>(2' null' new T[] { Activator.CreateInstance<T>()' Activator.CreateInstance<T>() })));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableQueryMock<T>,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\Mocks\MobileServiceTableQueryMock.cs,ToEnumerableAsync,The following statement contains a magic number: return Task.Run(() => Task.Delay(500).ContinueWith(t => (IEnumerable<T>)new QueryResultEnumerable<T>(2' null' new T[] { Activator.CreateInstance<T>()' Activator.CreateInstance<T>() })));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceCollectionTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Collections\MobileServiceCollection.Test.cs,MobileServiceCollectionTotalCountSet,The following statement contains a magic number: Assert.AreEqual((long)2' collection.TotalCount);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceCollectionTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Collections\MobileServiceCollection.Test.cs,MobileServiceCollectionLoadMoreItemsAsyncFiresLoadingCompleteEventAfterReadingData,The following statement contains a magic number: Assert.AreEqual(loadedEventArgsManyItemsLoaded' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,BloggingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\BloggingTest.cs,PostComments,The following statement contains a magic number: Assert.AreEqual(2' (await postTable.Where(p => p.Id >= post.Id)                                                  .WithParameters(userDefinedParameters)                                                  .ToListAsync()).Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,BloggingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\BloggingTest.cs,PostExceptionMessageFromZumoRuntime,The following statement contains a magic number: await postTable.DeleteAsync(new BlogPost() { CommentCount = 5' Id = 9999999 });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,BloggingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\BloggingTest.cs,PostExceptionMessageFromZumoRuntime,The following statement contains a magic number: await postTable.DeleteAsync(new BlogPost() { CommentCount = 5' Id = 9999999 });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,BloggingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\BloggingTest.cs,PostCommentsWithDataContract,The following statement contains a magic number: Assert.AreEqual(2' (await postTable.Where(p => p.Id >= post.Id).ToListAsync()).Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: DateTime date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Utc);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: DateTime date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Utc);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: DateTime date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Utc);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: DateTime date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Utc);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: DateTime date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Utc);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: DateTime date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Utc);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: DateTime date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Utc);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateUri,The following statement contains a magic number: date = new DateTime(2009' 11' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQuery,The following statement contains a magic number: DateTime date = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQuery,The following statement contains a magic number: DateTime date = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQuery,The following statement contains a magic number: DateTime date = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQuery,The following statement contains a magic number: DateTime date = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQuery,The following statement contains a magic number: DateTime date = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQuery,The following statement contains a magic number: DateTime date = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQuery,The following statement contains a magic number: DateTime date = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQueryOffset,The following statement contains a magic number: DateTimeOffset date = new DateTimeOffset(                  new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Utc).ToLocalTime());
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQueryOffset,The following statement contains a magic number: DateTimeOffset date = new DateTimeOffset(                  new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Utc).ToLocalTime());
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQueryOffset,The following statement contains a magic number: DateTimeOffset date = new DateTimeOffset(                  new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Utc).ToLocalTime());
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQueryOffset,The following statement contains a magic number: DateTimeOffset date = new DateTimeOffset(                  new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Utc).ToLocalTime());
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQueryOffset,The following statement contains a magic number: DateTimeOffset date = new DateTimeOffset(                  new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Utc).ToLocalTime());
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQueryOffset,The following statement contains a magic number: DateTimeOffset date = new DateTimeOffset(                  new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Utc).ToLocalTime());
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,InsertAndQueryOffset,The following statement contains a magic number: DateTimeOffset date = new DateTimeOffset(                  new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Utc).ToLocalTime());
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateKinds,The following statement contains a magic number: DateTime original = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateKinds,The following statement contains a magic number: DateTime original = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateKinds,The following statement contains a magic number: DateTime original = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateKinds,The following statement contains a magic number: DateTime original = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateKinds,The following statement contains a magic number: DateTime original = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateKinds,The following statement contains a magic number: DateTime original = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateKinds,The following statement contains a magic number: DateTime original = new DateTime(2009' 10' 21' 14' 22' 59' 860' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateKinds,The following statement contains a magic number: instance.Date = new DateTime(2010' 5' 21' 0' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateKinds,The following statement contains a magic number: instance.Date = new DateTime(2010' 5' 21' 0' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateKinds,The following statement contains a magic number: instance.Date = new DateTime(2010' 5' 21' 0' 0' 0' 0' DateTimeKind.Utc);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateKinds,The following statement contains a magic number: instance.Date = new DateTime(2010' 5' 21' 0' 0' 0' 0' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateKinds,The following statement contains a magic number: instance.Date = new DateTime(2010' 5' 21' 0' 0' 0' 0' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,DateTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\DateTests.cs,DateKinds,The following statement contains a magic number: instance.Date = new DateTime(2010' 5' 21' 0' 0' 0' 0' DateTimeKind.Local);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveSkipTake,The following statement contains a magic number: await Query<Book' Book>(table =>                  (from p in table                   select p).Skip(2).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveSkipTake,The following statement contains a magic number: await Query<Book' Book>(table =>                  (from p in table                   select p).Skip(2).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveSkipTake,The following statement contains a magic number: await Query<Book' Book>(table => table.Select(p => p).Skip(2).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveSkipTake,The following statement contains a magic number: await Query<Book' Book>(table => table.Select(p => p).Skip(2).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFiltering,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Price > 50                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFiltering,The following statement contains a magic number: await Query<Book' Book>(table => table.Where(p => p.Price > 50));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFiltering,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Advance <= 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFiltering,The following statement contains a magic number: await Query<Book' Book>(table => table.Where(p => p.Advance <= 10));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFiltering,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Advance <= 10 && p.Id > 0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFiltering,The following statement contains a magic number: await Query<Book' Book>(table => table.Where(p => p.Advance <= 10 && p.Id > 0));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFiltering,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Advance <= 10 || p.Id > 0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFiltering,The following statement contains a magic number: await Query<Book' Book>(table => table.Where(p => p.Advance <= 10 || p.Id > 0));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveCombinedQuery,The following statement contains a magic number: await Query((IMobileServiceTable<Book> table) =>                  (from p in table                   where p.Price <= 10 && p.Advance > 10f                   where !(p.Id > 0)                   orderby p.Price descending                   orderby p.Title                   select new { p.Title' p.Price })                  .Skip(20)                  .Take(10));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveCombinedQuery,The following statement contains a magic number: await Query((IMobileServiceTable<Book> table) =>                  (from p in table                   where p.Price <= 10 && p.Advance > 10f                   where !(p.Id > 0)                   orderby p.Price descending                   orderby p.Title                   select new { p.Title' p.Price })                  .Skip(20)                  .Take(10));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveCombinedQuery,The following statement contains a magic number: await Query((IMobileServiceTable<Book> table) =>                  (from p in table                   where p.Price <= 10 && p.Advance > 10f                   where !(p.Id > 0)                   orderby p.Price descending                   orderby p.Title                   select new { p.Title' p.Price })                  .Skip(20)                  .Take(10));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveCombinedQuery,The following statement contains a magic number: await Query((IMobileServiceTable<Book> table) =>                  (from p in table                   where p.Price <= 10 && p.Advance > 10f                   where !(p.Id > 0)                   orderby p.Price descending                   orderby p.Title                   select new { p.Title' p.Price })                  .Skip(20)                  .Take(10));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterOperators,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Advance + 1.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterOperators,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Advance - 1.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterOperators,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Advance * 2.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterOperators,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Advance * 2.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterOperators,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Advance / 2.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterOperators,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Advance / 2.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterOperators,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Id % 2 == 1                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterOperators,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where (p.Advance * 2.0) / 3.0 + 1.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterOperators,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where (p.Advance * 2.0) / 3.0 + 1.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterOperators,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where (p.Advance * 2.0) / 3.0 + 1.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Title.Length == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.PublicationDate.Day == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.PublicationDate.Month == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.PublicationDate.Year == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.PublicationDate.Hour == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.PublicationDate.Minute == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.PublicationDate.Second == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where Math.Floor(p.Advance) == 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where Math.Floor(p.Price) == 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where Math.Ceiling(p.Advance) == 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where Math.Ceiling(p.Price) == 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where Math.Round(p.Advance) == 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where Math.Round(p.Price) == 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Title.IndexOf("x") == 2                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Title.IndexOf('x') == 2                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Title.Substring(2) == "A"                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Title.Substring(2' 3) == "A"                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where p.Title.Substring(2' 3) == "A"                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,QueryingTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\QueryingTest.cs,LiveFilterMethods,The following statement contains a magic number: await Query<Book' Book>(table =>                  from p in table                  where (p.Title + "x").Length == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,Basics,The following statement contains a magic number: Assert.AreEqual(3' items.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,Basics,The following statement contains a magic number: Assert.AreEqual(3' items.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,Basics,The following statement contains a magic number: Assert.AreEqual("GHI"' items[2].Title);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,Basics,The following statement contains a magic number: Assert.AreEqual(3' items.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,Basics,The following statement contains a magic number: Assert.AreEqual("ABC"' items[2].Title);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,UseToDo,The following statement contains a magic number: Assert.AreEqual(2' items.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,UseToDo,The following statement contains a magic number: Assert.AreEqual(2' remaining.Count());
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,UseToDo,The following statement contains a magic number: Assert.AreEqual(2' items.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,TotalCountBasics,The following statement contains a magic number: Assert.AreEqual(3' items.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,TotalCountBasics,The following statement contains a magic number: Assert.AreEqual(3' items.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,TotalCountBasics,The following statement contains a magic number: Assert.AreEqual(3L' countProvider.TotalCount);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,TotalCountBasics,The following statement contains a magic number: Assert.AreEqual(3L' countProvider.TotalCount);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,TotalCountBasics,The following statement contains a magic number: Assert.AreEqual(3' titles.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,TotalCountBasics,The following statement contains a magic number: Assert.AreEqual(3L' countProvider.TotalCount);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,TotalCountWithTooManyElements,The following statement contains a magic number: long totalCount = 65L;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ToDoTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\FunctionalTests\ToDoTest.cs,TotalCountWithTooManyElements,The following statement contains a magic number: Assert.AreEqual(50' items.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,SimpleTreeType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\SimpleTreeType.cs,SimpleTreeType,The following statement contains a magic number: this.Id = 5;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,SimpleTreeType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\SimpleTreeType.cs,SimpleTreeType,The following statement contains a magic number: this.Children.Add(new SimpleTreeType() { Id = 6' Name = "Child1" });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,SimpleTreeType,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\SerializationTypes\SimpleTreeType.cs,SimpleTreeType,The following statement contains a magic number: this.Children.Add(new SimpleTreeType() { Id = 7' Name = "Child2" });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,MultipleHttpHandlerConstructor,The following statement contains a magic number: Assert.AreEqual(4' storedMessages.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,MultipleHttpHandlerConstructor,The following statement contains a magic number: Assert.AreEqual(secondAfterMessage' storedMessages[2]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,MultipleHttpHandlerConstructor,The following statement contains a magic number: Assert.AreEqual(firstAfterMessage' storedMessages[3]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,InvokeCustomAPISimple,The following statement contains a magic number: Assert.AreEqual(3' expected.Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,InvokeCustomAPISimpleJToken,The following statement contains a magic number: Assert.AreEqual(3' (int)expected["id"]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,InvokeCustomAPIGet,The following statement contains a magic number: Assert.AreEqual(3' expected.Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceClientTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\MobileServiceClient.Test.cs,InvokeCustomAPIGetJToken,The following statement contains a magic number: Assert.AreEqual(3' (int)expected["id"]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_Native,The following statement contains a magic number: Assert.AreEqual(tags[2]' "4de2605e-fd09-4875-a897-c8c4c0a51682"' "tag[2] on the registration is not correct.");
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_Template,The following statement contains a magic number: Assert.AreEqual(tags[2]' "4de2605e-fd09-4875-a897-c8c4c0a51682"' "tag[2] on the registration is not correct.");
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_NativeAndTemplate,The following statement contains a magic number: Assert.AreEqual(registrationsArray.Length' 2' "Expected 2 registrations.");
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_NativeAndTemplate,The following statement contains a magic number: Assert.AreEqual(nativeTags[2]' "4de2605e-fd09-4875-a897-c8c4c0a51682"' "nativeTags[2] on the registration is not correct.");
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,PushHttpClientTest,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Push\PushHttpClient.Test.cs,ListRegistrations_NativeAndTemplate,The following statement contains a magic number: Assert.AreEqual(templateTags[2]' "4de2605e-fd09-4875-a897-c8c4c0a51682"' "templateTags[2] on the registration is not correct.");
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,ReadAsync_DoesNotwrapResult_WhenParameterIsFalse,The following statement contains a magic number: AssertResult(result' 53' null);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,ReadAsync_FormatsResult_WhenParameterIsTrue,The following statement contains a magic number: AssertResult(result' 53' "http://contoso.com/tables/Todo?$top=1&$skip=2");
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,ReadAsyncWithUserParameters,The following statement contains a magic number: Assert.AreEqual(12' (int)people["People"][0]["Id"]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,LookupAsyncWithUserParameters,The following statement contains a magic number: Assert.AreEqual(12' (int)people["People"][0]["Id"]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsyncWithNullIdItem,The following statement contains a magic number: Assert.AreEqual(5L' (long)item["id"]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsyncWithNoIdItem,The following statement contains a magic number: Assert.AreEqual(5L' (long)item["id"]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsyncWithZeroIdItem,The following statement contains a magic number: Assert.AreEqual(5L' (long)item["id"]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsyncWithUserParameters,The following statement contains a magic number: Assert.AreEqual(12' (int)newObj["id"]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,InsertAsyncWithIntId_DoesNotStripSystemProperties,The following statement contains a magic number: Assert.AreEqual(12' (int)newObj["id"]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,UpdateAsyncWithIntId_DoesNotStripSystemProperties,The following statement contains a magic number: Assert.AreEqual(12' (int)newObj["id"]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,DeleteAsyncWithIntId_DoesNotStripSystemProperties,The following statement contains a magic number: Assert.AreEqual(12' (int)newObj["id"]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,TableOperationSystemPropertiesQueryStringIsCorrect,The following statement contains a magic number: await table.LookupAsync(5);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Test.cs,TableOperationUserParameterWithsystemPropertyQueryStringIsCorrect,The following statement contains a magic number: await table.LookupAsync(5' new Dictionary<string' string>() { { "__systemproperties"' "__createdAt" } });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,TestIQueryResultEnumerable,The following statement contains a magic number: Assert.AreEqual(item.Id' 23L);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,TestIQueryResultEnumerable,The following statement contains a magic number: Assert.AreEqual(provider.TotalCount' 53L);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,LookupAsyncWithIntIdTypeAndIntIdResponseContent,The following statement contains a magic number: LongIdType item = await table.LookupAsync(10);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,LookupAsyncWithIntIdTypeAndIntParseableIdResponseContent,The following statement contains a magic number: LongIdType item = await table.LookupAsync(10);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,LookupAsyncWithIntIdTypeAndNullIdResponseContent,The following statement contains a magic number: LongIdType item = await table.LookupAsync(10);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,LookupAsyncWithIntIdTypeAndNoIdResponseContent,The following statement contains a magic number: LongIdType item = await table.LookupAsync(10);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,LookupAsyncWithIntIdTypeAndStringIdResponseContent,The following statement contains a magic number: LongIdType item = await table.LookupAsync(10);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,LookupAsyncWithUserParameters,The following statement contains a magic number: StringType expected = await table.LookupAsync(12' userDefinedParameters);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,LookupAsyncWithUserParameters,The following statement contains a magic number: Assert.AreEqual(12' expected.Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,RefreshAsyncWithIntIdTypeAndIntIdResponseContent,The following statement contains a magic number: LongIdType item = new LongIdType() { Id = 3' String = "what?" };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,RefreshAsyncWithIntIdTypeParseableIdResponseContent,The following statement contains a magic number: LongIdType item = new LongIdType() { Id = 3' String = "what?" };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,RefreshAsyncWithIntIdTypeParseableIdResponseContent,The following statement contains a magic number: expectedId = 3;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,RefreshAsyncWithIntIdTypeAndNullIdResponseContent,The following statement contains a magic number: LongIdType item = new LongIdType() { Id = 3' String = "what?" };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,RefreshAsyncWithIntIdTypeAndNullIdResponseContent,The following statement contains a magic number: Assert.AreEqual(3L' item.Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,RefreshAsyncWithIntIdTypeAndNoIdResponseContent,The following statement contains a magic number: LongIdType item = new LongIdType() { Id = 3' String = "what?" };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,RefreshAsyncWithIntIdTypeAndNoIdResponseContent,The following statement contains a magic number: Assert.AreEqual(3L' item.Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,RefreshAsyncWithIntIdTypeAndStringIdResponseContent,The following statement contains a magic number: LongIdType item = new LongIdType() { Id = 3' String = "what?" };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,RefreshAsyncWithUserParameters,The following statement contains a magic number: expected.Id = 12;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,RefreshAsyncWithUserParameters,The following statement contains a magic number: Assert.AreEqual(12' expected.Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,RefreshAsyncThrowsWhenNotFound,The following statement contains a magic number: await table.RefreshAsync(new StringType() { Id = 5' String = "Just Created" });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsync_DerivedTypeOnBaseTable_Succeeds,The following statement contains a magic number: Assert.AreEqual(23L' item.Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncWithStringIdAndList_DoesNotDuplicateList,The following statement contains a magic number: Assert.AreEqual(item.Values.Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncWithIntIdTypeAndZeroIdItem,The following statement contains a magic number: Assert.AreEqual(10L' item.Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncGenericWithUserParameters,The following statement contains a magic number: Assert.AreEqual(12' obj.Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdateAsyncWithIntIdTypeAndIntIdResponseContent,The following statement contains a magic number: LongIdType item = new LongIdType() { Id = 12' String = "what?" };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdateAsyncWithIntIdTypeParseableIdResponseContent,The following statement contains a magic number: LongIdType item = new LongIdType() { Id = 12' String = "what?" };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdateAsyncWithIntIdTypeParseableIdResponseContent,The following statement contains a magic number: expectedId = 12;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdateAsyncWithIntIdTypeAndNullIdResponseContent,The following statement contains a magic number: LongIdType item = new LongIdType() { Id = 12' String = "what?" };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdateAsyncWithIntIdTypeAndNullIdResponseContent,The following statement contains a magic number: Assert.AreEqual(12L' item.Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdateAsyncWithIntIdTypeAndNoIdResponseContent,The following statement contains a magic number: LongIdType item = new LongIdType() { Id = 12' String = "what?" };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdateAsyncWithIntIdTypeAndNoIdResponseContent,The following statement contains a magic number: Assert.AreEqual(12L' item.Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdateAsyncWithIntIdTypeAndStringIdResponseContent,The following statement contains a magic number: LongIdType item = new LongIdType() { Id = 12' String = "what?" };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdateAsyncGenericWithUserParameters,The following statement contains a magic number: obj.Id = 12;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,DeleteAsyncWithUserParameters,The following statement contains a magic number: obj.Id = 12;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,IncludeDeleted,The following statement contains a magic number: Assert.AreEqual(12' people[0].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,IncludeTotalGenericList,The following statement contains a magic number: Assert.AreEqual(12' people[0].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,IncludeTotalGenericEnum,The following statement contains a magic number: Assert.AreEqual(12' people[0].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,WithParametersAsyncGeneric,The following statement contains a magic number: Assert.AreEqual(12' people[0].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,WhereAsyncGeneric,The following statement contains a magic number: List<StringType> people = await table.Where(p => p.Id == 12).ToListAsync();
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,WhereAsyncGeneric,The following statement contains a magic number: Assert.AreEqual(12' people[0].Id);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SelectAsyncGeneric,The following statement contains a magic number: me.Id = 10;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SkipAndTakeAsyncGeneric,The following statement contains a magic number: List<StringType> people = await table.Skip(100).Take(10).ToListAsync();
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,SkipAndTakeAsyncGeneric,The following statement contains a magic number: List<StringType> people = await table.Skip(100).Take(10).ToListAsync();
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdSystemPropertiesRemovedFromRequest,The following statement contains a magic number: await createdAtTable.InsertAsync(new CreatedAtType() { CreatedAt = new DateTime(2012' 1' 8)' Id = "an id" });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdSystemPropertiesRemovedFromRequest,The following statement contains a magic number: await createdAtTable.InsertAsync(new CreatedAtType() { CreatedAt = new DateTime(2012' 1' 8)' Id = "an id" });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdSystemPropertiesRemovedFromRequest,The following statement contains a magic number: await namedCreatedAtTable.InsertAsync(new NamedSystemPropertiesType() { __createdAt = new DateTime(2012' 1' 8)' Id = "an id" });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdSystemPropertiesRemovedFromRequest,The following statement contains a magic number: await namedCreatedAtTable.InsertAsync(new NamedSystemPropertiesType() { __createdAt = new DateTime(2012' 1' 8)' Id = "an id" });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdSystemPropertiesRemovedFromRequest,The following statement contains a magic number: await updatedAtTable.InsertAsync(new UpdatedAtType() { UpdatedAt = new DateTime(2012' 1' 8)' Id = "an id" });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdSystemPropertiesRemovedFromRequest,The following statement contains a magic number: await updatedAtTable.InsertAsync(new UpdatedAtType() { UpdatedAt = new DateTime(2012' 1' 8)' Id = "an id" });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdSystemPropertiesRemovedFromRequest,The following statement contains a magic number: await allsystemPropertiesTable.InsertAsync(new AllSystemPropertiesType()              {                  Version = "a version"'                  UpdatedAt = new DateTime(2012' 1' 8)'                  CreatedAt = new DateTime(2012' 1' 8)'                  Id = "an id"              });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdSystemPropertiesRemovedFromRequest,The following statement contains a magic number: await allsystemPropertiesTable.InsertAsync(new AllSystemPropertiesType()              {                  Version = "a version"'                  UpdatedAt = new DateTime(2012' 1' 8)'                  CreatedAt = new DateTime(2012' 1' 8)'                  Id = "an id"              });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdSystemPropertiesRemovedFromRequest,The following statement contains a magic number: await allsystemPropertiesTable.InsertAsync(new AllSystemPropertiesType()              {                  Version = "a version"'                  UpdatedAt = new DateTime(2012' 1' 8)'                  CreatedAt = new DateTime(2012' 1' 8)'                  Id = "an id"              });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdSystemPropertiesRemovedFromRequest,The following statement contains a magic number: await allsystemPropertiesTable.InsertAsync(new AllSystemPropertiesType()              {                  Version = "a version"'                  UpdatedAt = new DateTime(2012' 1' 8)'                  CreatedAt = new DateTime(2012' 1' 8)'                  Id = "an id"              });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdNonSystemPropertiesNotRemovedFromRequest,The following statement contains a magic number: await createdAtTable.InsertAsync(new NotSystemPropertyCreatedAtType() { CreatedAt = new DateTime(2012' 1' 8)' Id = "an id" });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdNonSystemPropertiesNotRemovedFromRequest,The following statement contains a magic number: await createdAtTable.InsertAsync(new NotSystemPropertyCreatedAtType() { CreatedAt = new DateTime(2012' 1' 8)' Id = "an id" });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdNonSystemPropertiesNotRemovedFromRequest,The following statement contains a magic number: await updatedAtTable.InsertAsync(new NotSystemPropertyUpdatedAtType() { _UpdatedAt = new DateTime(2012' 1' 8)' Id = "an id" });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,InsertAsyncStringIdNonSystemPropertiesNotRemovedFromRequest,The following statement contains a magic number: await updatedAtTable.InsertAsync(new NotSystemPropertyUpdatedAtType() { _UpdatedAt = new DateTime(2012' 1' 8)' Id = "an id" });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,CreatedAtSystemPropertyDeserializesToDatetimeOrString,The following statement contains a magic number: Assert.AreEqual(new DateTime(1999' 12' 31' 23' 59' 59' DateTimeKind.Utc).ToLocalTime()' items[0].CreatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,CreatedAtSystemPropertyDeserializesToDatetimeOrString,The following statement contains a magic number: Assert.AreEqual(new DateTime(1999' 12' 31' 23' 59' 59' DateTimeKind.Utc).ToLocalTime()' items[0].CreatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,CreatedAtSystemPropertyDeserializesToDatetimeOrString,The following statement contains a magic number: Assert.AreEqual(new DateTime(1999' 12' 31' 23' 59' 59' DateTimeKind.Utc).ToLocalTime()' items[0].CreatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,CreatedAtSystemPropertyDeserializesToDatetimeOrString,The following statement contains a magic number: Assert.AreEqual(new DateTime(1999' 12' 31' 23' 59' 59' DateTimeKind.Utc).ToLocalTime()' items[0].CreatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,CreatedAtSystemPropertyDeserializesToDatetimeOrString,The following statement contains a magic number: Assert.AreEqual(new DateTime(1999' 12' 31' 23' 59' 59' DateTimeKind.Utc).ToLocalTime()' items[0].CreatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,CreatedAtSystemPropertyDeserializesToDatetimeOrString,The following statement contains a magic number: Assert.AreEqual(new DateTime(1999' 12' 31' 23' 59' 59' DateTimeKind.Utc).ToLocalTime()' items[0].CreatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdatedAtSystemPropertyDeserializesToDatetimeOrString,The following statement contains a magic number: Assert.AreEqual(new DateTime(1999' 12' 31' 23' 59' 59' DateTimeKind.Utc).ToLocalTime()' items[0].UpdatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdatedAtSystemPropertyDeserializesToDatetimeOrString,The following statement contains a magic number: Assert.AreEqual(new DateTime(1999' 12' 31' 23' 59' 59' DateTimeKind.Utc).ToLocalTime()' items[0].UpdatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdatedAtSystemPropertyDeserializesToDatetimeOrString,The following statement contains a magic number: Assert.AreEqual(new DateTime(1999' 12' 31' 23' 59' 59' DateTimeKind.Utc).ToLocalTime()' items[0].UpdatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdatedAtSystemPropertyDeserializesToDatetimeOrString,The following statement contains a magic number: Assert.AreEqual(new DateTime(1999' 12' 31' 23' 59' 59' DateTimeKind.Utc).ToLocalTime()' items[0].UpdatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdatedAtSystemPropertyDeserializesToDatetimeOrString,The following statement contains a magic number: Assert.AreEqual(new DateTime(1999' 12' 31' 23' 59' 59' DateTimeKind.Utc).ToLocalTime()' items[0].UpdatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\MobileServiceTable.Generic.Test.cs,UpdatedAtSystemPropertyDeserializesToDatetimeOrString,The following statement contains a magic number: Assert.AreEqual(new DateTime(1999' 12' 31' 23' 59' 59' DateTimeKind.Utc).ToLocalTime()' items[0].UpdatedAt);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,BasicQuery,The following statement contains a magic number: Assert.AreEqual(2' query.Selection.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Ordering,The following statement contains a magic number: Assert.AreEqual(2' query.Ordering.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Ordering,The following statement contains a magic number: Assert.AreEqual(2' query.Ordering.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Projection,The following statement contains a magic number: Assert.AreEqual(3' query.Selection.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Projection,The following statement contains a magic number: Assert.AreEqual("WeightInKG"' query.Selection[2]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Projection,The following statement contains a magic number: Assert.AreEqual(3' query.Selection.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Projection,The following statement contains a magic number: Assert.AreEqual("WeightInKG"' query.Selection[2]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MutlipleProjection,The following statement contains a magic number: Assert.AreEqual(3' query.Selection.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MutlipleProjection,The following statement contains a magic number: Assert.AreEqual("WeightInKG"' query.Selection[2]);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,SkipTake,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table =>                  (from p in table                   select p).Skip(2).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,SkipTake,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table =>                  (from p in table                   select p).Skip(2).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,SkipTake,The following statement contains a magic number: Assert.AreEqual(2' query.Skip);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,SkipTake,The following statement contains a magic number: Assert.AreEqual(5' query.Top);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,SkipTake,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Select(p => p).Skip(2).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,SkipTake,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Select(p => p).Skip(2).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,SkipTake,The following statement contains a magic number: Assert.AreEqual(2' query.Skip);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,SkipTake,The following statement contains a magic number: Assert.AreEqual(5' query.Top);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,SkipTake,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Select(p => p).Skip(new Product() { SmallId = 2 }.SmallId).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,SkipTake,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Select(p => p).Skip(new Product() { SmallId = 2 }.SmallId).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,SkipTake,The following statement contains a magic number: Assert.AreEqual(2' query.Skip);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,SkipTake,The following statement contains a magic number: Assert.AreEqual(5' query.Top);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,WithParameters,The following statement contains a magic number: IMobileServiceTableQuery<Product> query = originalQuery.WithParameters(userParmeters1)                                                                     .Skip(2)                                                                     .WithParameters(userParmeters2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table =>                  from p in table                  where p.Price > 50                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Where(p => p.Price > 50));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Weight <= 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Where(p => p.Weight <= 10));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Weight <= 10 && p.InStock == true                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Where(p => p.Weight <= 10 && p.InStock == true));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Weight <= 10 || p.InStock == true                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Where(p => p.Weight <= 10 || p.InStock == true));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: float foo = 10;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Where(p => p.Weight <= new Product(15) { Weight = foo }.Weight || p.InStock == true));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Where(p => p.Weight <= new Product(15) { Weight = 10 }.Weight || p.InStock == true));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Where(p => p.Weight <= new Product(15) { Weight = 10 }.Weight || p.InStock == true));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: long id = 15;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Where(p => p.Weight <= new Product(id) { Weight = 10 }.Weight || p.InStock == true));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Where(p => p.Created == new DateTime(1994' 10' 14' 0' 0' 0' DateTimeKind.Utc)));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Where(p => p.Created == new DateTime(1994' 10' 14' 0' 0' 0' DateTimeKind.Utc)));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Where(p => p.Created == new DateTime(1994' 10' 14' 0' 0' 0' DateTimeKind.Utc)));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: query = Compile<ProductWithDateTimeOffset' ProductWithDateTimeOffset>(table => table.Where(p => p.Created == new DateTimeOffset(1994' 10' 13' 17' 0' 0' TimeSpan.FromHours(7))));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: query = Compile<ProductWithDateTimeOffset' ProductWithDateTimeOffset>(table => table.Where(p => p.Created == new DateTimeOffset(1994' 10' 13' 17' 0' 0' TimeSpan.FromHours(7))));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: query = Compile<ProductWithDateTimeOffset' ProductWithDateTimeOffset>(table => table.Where(p => p.Created == new DateTimeOffset(1994' 10' 13' 17' 0' 0' TimeSpan.FromHours(7))));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: query = Compile<ProductWithDateTimeOffset' ProductWithDateTimeOffset>(table => table.Where(p => p.Created == new DateTimeOffset(1994' 10' 13' 17' 0' 0' TimeSpan.FromHours(7))));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Filtering_PartialEval,The following statement contains a magic number: query = Compile<ProductWithDateTimeOffset' ProductWithDateTimeOffset>(table => table.Where(p => p.Created == new DateTimeOffset(1994' 10' 13' 17' 0' 0' TimeSpan.FromHours(7))));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,CombinedQuery,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile((IMobileServiceTable<Product> table) =>                  (from p in table                   where p.Price <= 10M && p.Weight > 10f                   where !p.InStock                   orderby p.Price descending' p.Name                   select new { p.Name' p.Price })                  .Skip(20)                  .Take(10));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,CombinedQuery,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile((IMobileServiceTable<Product> table) =>                  (from p in table                   where p.Price <= 10M && p.Weight > 10f                   where !p.InStock                   orderby p.Price descending' p.Name                   select new { p.Name' p.Price })                  .Skip(20)                  .Take(10));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,CombinedQuery,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile((IMobileServiceTable<Product> table) =>                  (from p in table                   where p.Price <= 10M && p.Weight > 10f                   where !p.InStock                   orderby p.Price descending' p.Name                   select new { p.Name' p.Price })                  .Skip(20)                  .Take(10));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,CombinedQuery,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile((IMobileServiceTable<Product> table) =>                  (from p in table                   where p.Price <= 10M && p.Weight > 10f                   where !p.InStock                   orderby p.Price descending' p.Name                   select new { p.Name' p.Price })                  .Skip(20)                  .Take(10));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610UsingShorts,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table =>                  table.Where(p => p.DisplayAisle == 2));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610UsingShorts,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.DisplayAisle == (short)3                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610UsingShorts,The following statement contains a magic number: short closedOverVariable = (short)5;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610UsingShorts,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  table.Where(p => p.OptionFlags == 7));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610UsingShorts,The following statement contains a magic number: object aisle = 12.0;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610BareSkipTake,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table => table.Skip(3));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610BareSkipTake,The following statement contains a magic number: Assert.AreEqual(query.Skip' 3);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610BareSkipTake,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610BareSkipTake,The following statement contains a magic number: Assert.AreEqual(query.Top' 5);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610BareSkipTake,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Skip(7).Take(9));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610BareSkipTake,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Skip(7).Take(9));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610BareSkipTake,The following statement contains a magic number: Assert.AreEqual(query.Skip' 7);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610BareSkipTake,The following statement contains a magic number: Assert.AreEqual(query.Top' 9);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610BareSkipTake,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Take(11).Skip(13));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610BareSkipTake,The following statement contains a magic number: query = Compile<Product' Product>(table => table.Take(11).Skip(13));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610BareSkipTake,The following statement contains a magic number: Assert.AreEqual(query.Skip' 13);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,Bug466610BareSkipTake,The following statement contains a magic number: Assert.AreEqual(query.Top' 11);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterOperators,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Weight + 1.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterOperators,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Weight + 1 == 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterOperators,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Weight - 1.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterOperators,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Weight * 2.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterOperators,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Weight * 2.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterOperators,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Weight / 2.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterOperators,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Weight / 2.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterOperators,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Id % 2 == 1                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterOperators,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where (p.Weight * 2.0) / 3.0 + 1.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterOperators,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where (p.Weight * 2.0) / 3.0 + 1.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterOperators,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where (p.Weight * 2.0) / 3.0 + 1.0 == 10.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table =>                  from p in table                  where p.Name.Length == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Created.Day == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Created.Month == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Created.Year == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Created.Hour == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Created.Minute == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Created.Second == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where Math.Floor(p.Weight) == 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where Decimal.Floor(p.Price) == 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where Math.Ceiling(p.Weight) == 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where Decimal.Ceiling(p.Price) == 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where Math.Round(p.Weight) == 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where Math.Round(p.Price) == 10                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Name.IndexOf("x") == 2                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Name.IndexOf('x') == 2                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Name.Substring(2) == "A"                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Name.Substring(2' 3) == "A"                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.Name.Substring(2' 3) == "A"                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterMethods,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where (p.Name + "x").Length == 7                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterContainsMethod,The following statement contains a magic number: IEnumerable<int> numbers = new[] { 13' 6 };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterContainsMethod,The following statement contains a magic number: IEnumerable<int> numbers = new[] { 13' 6 };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterContainsMethod,The following statement contains a magic number: IEnumerable<double> doubles = new[] { 4.6' 3.9089 };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterContainsMethod,The following statement contains a magic number: IEnumerable<double> doubles = new[] { 4.6' 3.9089 };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterContainsMethodNegative,The following statement contains a magic number: IEnumerable<int> numbers = new[] { 13' 6' 5 };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterContainsMethodNegative,The following statement contains a magic number: IEnumerable<int> numbers = new[] { 13' 6' 5 };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterContainsMethodNegative,The following statement contains a magic number: IEnumerable<int> numbers = new[] { 13' 6' 5 };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterContainsMethodNegative,The following statement contains a magic number: IEnumerable<object> objects = new object[] { 4.6' "string" };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterNullable,The following statement contains a magic number: var minDate = new DateTime(1' 1' 1' 8' 0' 0' DateTimeKind.Utc);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,FilterNullable,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.WeightInKG == 4.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleSkipShouldAddUp,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table =>                  (from p in table                   select p).Skip(2).Skip(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleSkipShouldAddUp,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table =>                  (from p in table                   select p).Skip(2).Skip(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleSkipShouldAddUp,The following statement contains a magic number: Assert.AreEqual(7' query.Skip);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleSkipShouldAddUp,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  (from p in table                   select p).Skip(5).Skip(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleSkipShouldAddUp,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  (from p in table                   select p).Skip(5).Skip(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleSkipShouldAddUp,The following statement contains a magic number: Assert.AreEqual(10' query.Skip);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleSkipShouldAddUp,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  (from p in table                   select p).Skip(20).Skip(6).Skip(5).Skip(2).Skip(9).Skip(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleSkipShouldAddUp,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  (from p in table                   select p).Skip(20).Skip(6).Skip(5).Skip(2).Skip(9).Skip(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleSkipShouldAddUp,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  (from p in table                   select p).Skip(20).Skip(6).Skip(5).Skip(2).Skip(9).Skip(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleSkipShouldAddUp,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  (from p in table                   select p).Skip(20).Skip(6).Skip(5).Skip(2).Skip(9).Skip(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleSkipShouldAddUp,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  (from p in table                   select p).Skip(20).Skip(6).Skip(5).Skip(2).Skip(9).Skip(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleSkipShouldAddUp,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  (from p in table                   select p).Skip(20).Skip(6).Skip(5).Skip(2).Skip(9).Skip(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleSkipShouldAddUp,The following statement contains a magic number: Assert.AreEqual(47' query.Skip);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleTakeShouldChooseSmallest,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table =>                  (from p in table                   select p).Take(2).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleTakeShouldChooseSmallest,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table =>                  (from p in table                   select p).Take(2).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleTakeShouldChooseSmallest,The following statement contains a magic number: Assert.AreEqual(2' query.Top);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleTakeShouldChooseSmallest,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  (from p in table                   select p).Take(5).Take(2));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleTakeShouldChooseSmallest,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  (from p in table                   select p).Take(5).Take(2));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleTakeShouldChooseSmallest,The following statement contains a magic number: Assert.AreEqual(2' query.Top);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleTakeShouldChooseSmallest,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  (from p in table                   select p).Take(5).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleTakeShouldChooseSmallest,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  (from p in table                   select p).Take(5).Take(5));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,MultipleTakeShouldChooseSmallest,The following statement contains a magic number: Assert.AreEqual(5' query.Top);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,TableNameShouldPropagateCorrectly,The following statement contains a magic number: Assert.AreEqual(2' query.Selection.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,TableNameShouldPropagateCorrectly,The following statement contains a magic number: Assert.AreEqual(3' query.Selection.Count);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,UnsignedDataTypesTest,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table =>                  from p in table                  where p.UnsignedId == 12UL                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,UnsignedDataTypesTest,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.UnsignedSmallId == 12U //uint                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,UnsignedDataTypesTest,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where p.UnsignedDisplayAisle == (ushort)12                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,DoublesSerializedUsingInvariantCulture,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table =>                  from p in table                  where p.Weight > 1.3f                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,DoublesSerializedAsDoubles,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table =>                  from p in table                  where (p.SmallId / 100.0) == 2                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,DoublesSerializedAsDoubles,The following statement contains a magic number: MobileServiceTableQueryDescription query = Compile<Product' Product>(table =>                  from p in table                  where (p.SmallId / 100.0) == 2                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,DoublesSerializedAsDoubles,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where (p.Weight * 31.213) == 60200000000000000000000000.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,ZumoQuery,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Query\ZumoQuery.Test.cs,DoublesSerializedAsDoubles,The following statement contains a magic number: query = Compile<Product' Product>(table =>                  from p in table                  where (p.Weight * 31.213) == 60200000000000000000000000.0                  select p);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,GetId,The following statement contains a magic number: List<Tuple<object' object>> testCases = new List<Tuple<object' object>>() {                  new Tuple<object' object>(new BoolType() { Bool = true }' 0)'                  new Tuple<object' object>(new BoolType() { Bool = false' Id = 15 }' 15)'                  new Tuple<object' object>(JToken.Parse("{\"id\":0}")' 0L)'                  new Tuple<object' object>(JToken.Parse("{\"id\":25}")' 25L)'                  new Tuple<object' object>(JToken.Parse("{\"id\":0.0}")' 0.0)'                  new Tuple<object' object>(JToken.Parse("{\"id\":25.0}")' 25.0)'                  new Tuple<object' object>(JToken.Parse("{}")' null)'                  new Tuple<object' object>(JToken.Parse("{\"id\":null}")' null)'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,GetId,The following statement contains a magic number: List<Tuple<object' object>> testCases = new List<Tuple<object' object>>() {                  new Tuple<object' object>(new BoolType() { Bool = true }' 0)'                  new Tuple<object' object>(new BoolType() { Bool = false' Id = 15 }' 15)'                  new Tuple<object' object>(JToken.Parse("{\"id\":0}")' 0L)'                  new Tuple<object' object>(JToken.Parse("{\"id\":25}")' 25L)'                  new Tuple<object' object>(JToken.Parse("{\"id\":0.0}")' 0.0)'                  new Tuple<object' object>(JToken.Parse("{\"id\":25.0}")' 25.0)'                  new Tuple<object' object>(JToken.Parse("{}")' null)'                  new Tuple<object' object>(JToken.Parse("{\"id\":null}")' null)'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,GetId,The following statement contains a magic number: List<Tuple<object' object>> testCases = new List<Tuple<object' object>>() {                  new Tuple<object' object>(new BoolType() { Bool = true }' 0)'                  new Tuple<object' object>(new BoolType() { Bool = false' Id = 15 }' 15)'                  new Tuple<object' object>(JToken.Parse("{\"id\":0}")' 0L)'                  new Tuple<object' object>(JToken.Parse("{\"id\":25}")' 25L)'                  new Tuple<object' object>(JToken.Parse("{\"id\":0.0}")' 0.0)'                  new Tuple<object' object>(JToken.Parse("{\"id\":25.0}")' 25.0)'                  new Tuple<object' object>(JToken.Parse("{}")' null)'                  new Tuple<object' object>(JToken.Parse("{\"id\":null}")' null)'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,GetId,The following statement contains a magic number: List<Tuple<object' object>> testCases = new List<Tuple<object' object>>() {                  new Tuple<object' object>(new BoolType() { Bool = true }' 0)'                  new Tuple<object' object>(new BoolType() { Bool = false' Id = 15 }' 15)'                  new Tuple<object' object>(JToken.Parse("{\"id\":0}")' 0L)'                  new Tuple<object' object>(JToken.Parse("{\"id\":25}")' 25L)'                  new Tuple<object' object>(JToken.Parse("{\"id\":0.0}")' 0.0)'                  new Tuple<object' object>(JToken.Parse("{\"id\":25.0}")' 25.0)'                  new Tuple<object' object>(JToken.Parse("{}")' null)'                  new Tuple<object' object>(JToken.Parse("{\"id\":null}")' null)'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,HasDefaultId,The following statement contains a magic number: List<Tuple<object' bool>> testCases = new List<Tuple<object' bool>>() {                  new Tuple<object' bool>(new BoolType() { Bool = true }' true)'                  new Tuple<object' bool>(new BoolType() { Bool = false' Id = 15 }' false)'                  new Tuple<object' bool>(JToken.Parse("{\"id\":0}")' true)'                  new Tuple<object' bool>(JToken.Parse("{\"id\":25}")' false)'                  new Tuple<object' bool>(JToken.Parse("{\"id\":0.0}")' true)'                  new Tuple<object' bool>(JToken.Parse("{\"id\":25.0}")' false)'                  new Tuple<object' bool>(JToken.Parse("{}")' true)'                  new Tuple<object' bool>(JToken.Parse("{\"id\":null}")' true)'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,SetIdToDefault,The following statement contains a magic number: List<Tuple<object' object>> testCases = new List<Tuple<object' object>>() {                  new Tuple<object' object>(new BoolType() { Bool = true' Id = 0 }' 0)'                  new Tuple<object' object>(new BoolType() { Bool = false' Id = 15 }' 0)'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ByteDeserialization,The following statement contains a magic number: actual.Byte = 15;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,SByteDeserialization,The following statement contains a magic number: actual.SByte = 12;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UShortDeserialization,The following statement contains a magic number: List<Tuple<UShortType' string>> testCases = new List<Tuple<UShortType' string>>() {                  new Tuple<UShortType' string>(new UShortType() { UShort = 0 }' "{}")'                  new Tuple<UShortType' string>(new UShortType() { UShort = 0 }' "{\"UShort\":null}")'                  new Tuple<UShortType' string>(new UShortType() { UShort = 0 }' "{\"UShort\":0}")'                  new Tuple<UShortType' string>(new UShortType() { UShort = 1 }' "{\"UShort\":1}")'                  new Tuple<UShortType' string>(new UShortType() { UShort = 0 }' "{\"UShort\":false}")'                  new Tuple<UShortType' string>(new UShortType() { UShort = 1 }' "{\"UShort\":true}")'                  new Tuple<UShortType' string>(new UShortType() { UShort = 19 }' "{\"UShort\":\"19\"}")'                  new Tuple<UShortType' string>(new UShortType() { UShort = UInt16.MaxValue }' "{\"UShort\":65535}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UShortDeserialization,The following statement contains a magic number: actual.UShort = 10;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UIntDeserialization,The following statement contains a magic number: List<Tuple<UIntType' string>> testCases = new List<Tuple<UIntType' string>>() {                  new Tuple<UIntType' string>(new UIntType() { UInt = 0 }' "{}")'                  new Tuple<UIntType' string>(new UIntType() { UInt = 0 }' "{\"UInt\":null}")'                  new Tuple<UIntType' string>(new UIntType() { UInt = 0 }' "{\"UInt\":0}")'                  new Tuple<UIntType' string>(new UIntType() { UInt = 1 }' "{\"UInt\":1}")'                  new Tuple<UIntType' string>(new UIntType() { UInt = 0 }' "{\"UInt\":false}")'                  new Tuple<UIntType' string>(new UIntType() { UInt = 1 }' "{\"UInt\":true}")'                  new Tuple<UIntType' string>(new UIntType() { UInt = 150 }' "{\"UInt\":\"150\"}")'                  new Tuple<UIntType' string>(new UIntType() { UInt = UInt32.MaxValue }' "{\"UInt\":4294967295}")'                  new Tuple<UIntType' string>(new UIntType() { UInt = UInt32.MaxValue }' "{\"UInt\":\"4294967295\"}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UIntDeserialization,The following statement contains a magic number: actual.UInt = 12;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,LongDeserialization,The following statement contains a magic number: List<Tuple<LongType' string>> testCases = new List<Tuple<LongType' string>>() {                  new Tuple<LongType' string>(new LongType() { Long = 0 }' "{}")'                  new Tuple<LongType' string>(new LongType() { Long = 0 }' "{\"Long\":null}")'                  new Tuple<LongType' string>(new LongType() { Long = 0 }' "{\"Long\":false}")'                  new Tuple<LongType' string>(new LongType() { Long = 1 }' "{\"Long\":true}")'                  new Tuple<LongType' string>(new LongType() { Long = -1 }' "{\"Long\":-1}")'                  new Tuple<LongType' string>(new LongType() { Long = 1 }' "{\"Long\":1}")'                  new Tuple<LongType' string>(new LongType() { Long = -55 }' "{\"Long\":\"-55\"}")'                  new Tuple<LongType' string>(new LongType() { Long = twoToTheFifthyThird }' "{\"Long\":9007199254740992}")'                  new Tuple<LongType' string>(new LongType() { Long = -twoToTheFifthyThird }' "{\"Long\":-9007199254740992}")'                  new Tuple<LongType' string>(new LongType() { Long = long.MinValue }' "{\"Long\":-9223372036854775808}")'                   new Tuple<LongType' string>(new LongType() { Long = long.MaxValue }' "{\"Long\":9223372036854775807}")'                  new Tuple<LongType' string>(new LongType() { Long = long.MinValue }' "{\"Long\":-9.2233720368547758E+18}")' // There is a loss of precision here' but we'll accept it when deserializing.              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,LongDeserialization,The following statement contains a magic number: actual.Long = 62;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ULongDeserialization,The following statement contains a magic number: List<Tuple<ULongType' string>> testCases = new List<Tuple<ULongType' string>>() {                  new Tuple<ULongType' string>(new ULongType() { ULong = 0 }' "{}")'                  new Tuple<ULongType' string>(new ULongType() { ULong = 0 }' "{\"ULong\":null}")'                  new Tuple<ULongType' string>(new ULongType() { ULong = 0 }' "{\"ULong\":0}")'                  new Tuple<ULongType' string>(new ULongType() { ULong = 1 }' "{\"ULong\":1}")'                  new Tuple<ULongType' string>(new ULongType() { ULong = 0 }' "{\"ULong\":false}")'                  new Tuple<ULongType' string>(new ULongType() { ULong = 1 }' "{\"ULong\":true}")'                  new Tuple<ULongType' string>(new ULongType() { ULong = 15 }' "{\"ULong\":\"15\"}")'                  new Tuple<ULongType' string>(new ULongType() { ULong = ulong.MaxValue }' "{\"ULong\":\"18446744073709551615\"}")'                  new Tuple<ULongType' string>(new ULongType() { ULong = twoToTheFifthyThird - 1 }'  "{\"ULong\":9007199254740991}")'                  new Tuple<ULongType' string>(new ULongType() { ULong = twoToTheFifthyThird + 1 }'  "{\"ULong\":9007199254740993}")'                  new Tuple<ULongType' string>(new ULongType() { ULong = twoToTheFifthyThird }'  "{\"ULong\":9007199254740992}")' // All integers <= 2^53 will fit in a double; this should be our upper limit              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ULongDeserialization,The following statement contains a magic number: actual.ULong = 19;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,FloatDeserialization,The following statement contains a magic number: List<Tuple<FloatType' string>> testCases = new List<Tuple<FloatType' string>>() {                  new Tuple<FloatType' string>(new FloatType() { Float = 0 }' "{}")'                  new Tuple<FloatType' string>(new FloatType() { Float = 0 }' "{\"Float\":null}")'                  new Tuple<FloatType' string>(new FloatType() { Float = 0 }' "{\"Float\":0}")'                  new Tuple<FloatType' string>(new FloatType() { Float = 0 }' "{\"Float\":false}")'                  new Tuple<FloatType' string>(new FloatType() { Float = 1 }' "{\"Float\":true}")'                  new Tuple<FloatType' string>(new FloatType() { Float = 5.8f }' "{\"Float\":\"5.8\"}")'                  new Tuple<FloatType' string>(new FloatType() { Float = -1 }' "{\"Float\":-1}")'                  new Tuple<FloatType' string>(new FloatType() { Float = 1 }' "{\"Float\":1}")'                  new Tuple<FloatType' string>(new FloatType() { Float = 0.0F }' "{\"Float\":4.94065645841247E-325}")'                   new Tuple<FloatType' string>(new FloatType() { Float = 0.0F }' "{\"Float\":-4.94065645841247E-325}")'                   new Tuple<FloatType' string>(new FloatType() { Float = float.Epsilon }' "{\"Float\":1.401298E-45}")'                  new Tuple<FloatType' string>(new FloatType() { Float = -float.Epsilon }' "{\"Float\":-1.401298E-45}")'                  new Tuple<FloatType' string>(new FloatType() { Float = float.Epsilon }' "{\"Float\":1.4012984643248171E-45}")'                  new Tuple<FloatType' string>(new FloatType() { Float = -float.Epsilon }' "{\"Float\":-1.4012984643248171E-45}")'                  new Tuple<FloatType' string>(new FloatType() { Float = float.Epsilon }' "{\"Float\":1.4012984643248171E-46}")'                  new Tuple<FloatType' string>(new FloatType() { Float = -float.Epsilon }' "{\"Float\":-1.4012984643248171E-46}")'                  new Tuple<FloatType' string>(new FloatType() { Float = float.MaxValue }' "{\"Float\":3.40282347E+38}")'                  new Tuple<FloatType' string>(new FloatType() { Float = float.MinValue }' "{\"Float\":-3.40282347E+38}")'                  new Tuple<FloatType' string>(new FloatType() { Float = float.MaxValue }' "{\"Float\":3.4028234663852886E+38}")'                  new Tuple<FloatType' string>(new FloatType() { Float = float.MinValue }' "{\"Float\":-3.4028234663852886E+38}")'                  new Tuple<FloatType' string>(new FloatType() { Float = float.MinValue }' "{\"Float\":\"-3.4028234663852886E+38\"}")'                  new Tuple<FloatType' string>(new FloatType() { Float = float.MaxValue }' "{\"Float\":3.40282346638528865E+38}")'                    new Tuple<FloatType' string>(new FloatType() { Float = float.MinValue }' "{\"Float\":-3.40282346638528865E+38}")'                   new Tuple<FloatType' string>(new FloatType() { Float = float.PositiveInfinity }' "{\"Float\":3.4028234663852887E+39}")'                    new Tuple<FloatType' string>(new FloatType() { Float = float.NegativeInfinity }' "{\"Float\":-3.4028234663852887E+39}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,FloatDeserialization,The following statement contains a magic number: actual.Float = 34.6F;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DoubleDeserialization,The following statement contains a magic number: List<Tuple<DoubleType' string>> testCases = new List<Tuple<DoubleType' string>>() {                  new Tuple<DoubleType' string>(new DoubleType() { Double = 0 }' "{}")'                  new Tuple<DoubleType' string>(new DoubleType() { Double = 0 }' "{\"Double\":null}")'                  new Tuple<DoubleType' string>(new DoubleType() { Double = 0 }' "{\"Double\":false}")'                  new Tuple<DoubleType' string>(new DoubleType() { Double = 1 }' "{\"Double\":true}")'                  new Tuple<DoubleType' string>(new DoubleType() { Double = 5.5 }' "{\"Double\":\"5.5\"}")'                  new Tuple<DoubleType' string>(new DoubleType() { Double = 0 }' "{\"Double\":0}")'                  new Tuple<DoubleType' string>(new DoubleType() { Double = -1 }' "{\"Double\":-1}")'                  new Tuple<DoubleType' string>(new DoubleType() { Double = 1 }' "{\"Double\":1}")'                  new Tuple<DoubleType' string>(new DoubleType() { Double = 0 }' "{\"Double\":4.94065645841247E-325}")'                  new Tuple<DoubleType' string>(new DoubleType() { Double = 0 }' "{\"Double\":-4.94065645841247E-325}")'                   new Tuple<DoubleType' string>(new DoubleType() { Double = double.Epsilon }' "{\"Double\":4.94065645841247E-324}")'                  new Tuple<DoubleType' string>(new DoubleType() { Double = -double.Epsilon }' "{\"Double\":-4.94065645841247E-324}")'                  new Tuple<DoubleType' string>(new DoubleType() { Double = double.MaxValue }' "{\"Double\":1.7976931348623157E+308}")'                  new Tuple<DoubleType' string>(new DoubleType() { Double = double.MinValue }' "{\"Double\":-1.7976931348623157E+308}")'                  new Tuple<DoubleType' string>(new DoubleType() { Double = double.MaxValue }' "{\"Double\":1.79769313486231575E+308}")'  // We're ok with lossing precision here; note the extra 5 digit at the end                  new Tuple<DoubleType' string>(new DoubleType() { Double = double.MinValue }' "{\"Double\":-1.79769313486231575E+308}")' // We're ok with lossing precision here; note the extra 5 digit at the end              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DoubleDeserialization,The following statement contains a magic number: actual.Double = 34.6;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0.0}")'                      new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992.0}")' // All integers <= 2^53 will fit in a double; this should be our upper limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992.0}")' // All integers >= -2^53 will fit in a double; this should be our lower limit                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991.0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9007199.25474099m }' "{\"Decimal\":9007199.25474099}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999999.9m }' "{\"Decimal\":-99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999999.99m }' "{\"Decimal\":-9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999999.999m }' "{\"Decimal\":-999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999999.9999m }' "{\"Decimal\":-99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999999.99999m }' "{\"Decimal\":-9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999999.999999m }' "{\"Decimal\":-999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999999.9999999m }' "{\"Decimal\":-99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999999.99999999m }' "{\"Decimal\":-9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999999.999999999m }' "{\"Decimal\":-999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99999.9999999999m }' "{\"Decimal\":-99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9999.99999999999m }' "{\"Decimal\":-9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -999.999999999999m }' "{\"Decimal\":-999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -99.9999999999999m }' "{\"Decimal\":-99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -9.99999999999999m }' "{\"Decimal\":-9.99999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999999.9m }' "{\"Decimal\":99999999999999.9}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999999.99m }' "{\"Decimal\":9999999999999.99}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999999.999m }' "{\"Decimal\":999999999999.999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999999.9999m }' "{\"Decimal\":99999999999.9999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999999.99999m }' "{\"Decimal\":9999999999.99999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999999.999999m }' "{\"Decimal\":999999999.999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999999.9999999m }' "{\"Decimal\":99999999.9999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999999.99999999m }' "{\"Decimal\":9999999.99999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999999.999999999m }' "{\"Decimal\":999999.999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99999.9999999999m }' "{\"Decimal\":99999.9999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9999.99999999999m }' "{\"Decimal\":9999.99999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 999.999999999999m }' "{\"Decimal\":999.999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 99.9999999999999m }' "{\"Decimal\":99.9999999999999}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 9.99999999999999m }' "{\"Decimal\":9.99999999999999}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: decimal twoToTheFifthyThird = 9007199254740992.0m;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalSerializationNegative,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' string.Format(errorString' "9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' string.Format(errorString' "-9007199254740993.0"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MaxValue }' string.Format(errorString' "79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = decimal.MinValue }' string.Format(errorString' "-79228162514264337593543950335"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 90071992.547409920m }' string.Format(errorString' "90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -90071992.547409920m }' string.Format(errorString' "-90071992.547409920"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000000.1m }' string.Format(errorString' "-100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000000.01m }' string.Format(errorString' "-10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000000.001m }' string.Format(errorString' "-1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000000.0001m }' string.Format(errorString' "-100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000000.00001m }' string.Format(errorString' "-10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000000.000001m }' string.Format(errorString' "-1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000000.0000001m }' string.Format(errorString' "-100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000000.00000001m }' string.Format(errorString' "-10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000000.000000001m }' string.Format(errorString' "-1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100000.0000000001m }' string.Format(errorString' "-100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10000.00000000001m }' string.Format(errorString' "-10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1000.000000000001m }' string.Format(errorString' "-1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -100.0000000000001m }' string.Format(errorString' "-100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -10.00000000000001m }' string.Format(errorString' "-10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1.000000000000001m }' string.Format(errorString' "-1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000000.1m }' string.Format(errorString' "100000000000000.1"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000.01m }' string.Format(errorString' "10000000000000.01"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000000.001m }' string.Format(errorString' "1000000000000.001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000000.0001m }' string.Format(errorString' "100000000000.0001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000.00001m }' string.Format(errorString' "10000000000.00001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000000.000001m }' string.Format(errorString' "1000000000.000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000000.0000001m }' string.Format(errorString' "100000000.0000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000.00000001m }' string.Format(errorString' "10000000.00000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000000.000000001m }' string.Format(errorString' "1000000.000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100000.0000000001m }' string.Format(errorString' "100000.0000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000.00000000001m }' string.Format(errorString' "10000.00000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1000.000000000001m }' string.Format(errorString' "1000.000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 100.0000000000001m }' string.Format(errorString' "100.0000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10.00000000000001m }' string.Format(errorString' "10.00000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1.000000000000001m }' string.Format(errorString' "1.000000000000001"))'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 10000000000000000m }' string.Format(errorString' "10000000000000000"))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalDeserialization,The following statement contains a magic number: List<Tuple<DecimalType' string>> testCases = new List<Tuple<DecimalType' string>>() {                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":0}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = -1 }' "{\"Decimal\":-1}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":1}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 1 }' "{\"Decimal\":true}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":false}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird }' "{\"Decimal\":9007199254740992}")'                   new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird }' "{\"Decimal\":-9007199254740992}")'                   new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird - 1 }' "{\"Decimal\":9007199254740991}")'                     new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird + 1 }' "{\"Decimal\":-9007199254740991}")'                   new Tuple<DecimalType' string>(new DecimalType() { Decimal = twoToTheFifthyThird + 1 }' "{\"Decimal\":9007199254740993}")'                    new Tuple<DecimalType' string>(new DecimalType() { Decimal = -twoToTheFifthyThird - 1 }' "{\"Decimal\":-9007199254740993}")'                   new Tuple<DecimalType' string>(new DecimalType() { Decimal = 0 }' "{\"Decimal\":null}")'                  new Tuple<DecimalType' string>(new DecimalType() { Decimal = 5.00M }' "{\"Decimal\":\"5.00\"}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DecimalDeserialization,The following statement contains a magic number: actual.Decimal = 34.5M;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,StringSerialization,The following statement contains a magic number: List<Tuple<StringType' string>> testCases = new List<Tuple<StringType' string>>() {                  new Tuple<StringType' string>(new StringType() { String = null }' "{\"String\":null}")'                  new Tuple<StringType' string>(new StringType() { String = "" }' "{\"String\":\"\"}")'                  new Tuple<StringType' string>(new StringType() { String = " " }' "{\"String\":\" \"}")'                  new Tuple<StringType' string>(new StringType() { String = "\n" }' "{\"String\":\"\\n\"}")'                  new Tuple<StringType' string>(new StringType() { String = "\t" }' "{\"String\":\"\\t\"}")'                   new Tuple<StringType' string>(new StringType() { String = "hello" }' "{\"String\":\"hello\"}")'                   new Tuple<StringType' string>(new StringType() { String = "\"hello\"" }' "{\"String\":\"\\\"hello\\\"\"}")'                   new Tuple<StringType' string>(new StringType() { String = new string('*'' 1025) }' "{\"String}")'                   new Tuple<StringType' string>(new StringType() { String = "ÃÇßÑᾆΏ" }' "{\"String\":\"ÃÇßÑᾆΏ\"}")'                   new Tuple<StringType' string>(new StringType() { String = "'hello'" }' "{\"String\":\"'hello'\"}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,StringDeserialization,The following statement contains a magic number: List<Tuple<StringType' string>> testCases = new List<Tuple<StringType' string>>() {                  new Tuple<StringType' string>(new StringType() { String = null }' "{}")'                  new Tuple<StringType' string>(new StringType() { String = null }' "{\"String\":null}")'                  new Tuple<StringType' string>(new StringType() { String = "" }' "{\"String\":\"\"}")'                  new Tuple<StringType' string>(new StringType() { String = " " }' "{\"String\":\" \"}")'                  new Tuple<StringType' string>(new StringType() { String = "\n" }' "{\"String\":\"\\n\"}")'                  new Tuple<StringType' string>(new StringType() { String = "\t" }' "{\"String\":\"\\t\"}")'                   new Tuple<StringType' string>(new StringType() { String = "\n" }' "{\"String\":\"\n\"}")'                  new Tuple<StringType' string>(new StringType() { String = "\t" }' "{\"String\":\"\t\"}")'                  new Tuple<StringType' string>(new StringType() { String = "hello" }' "{\"String\":\"hello\"}")'                   new Tuple<StringType' string>(new StringType() { String = "\"hello\"" }' "{\"String\":\"\\\"hello\\\"\"}")'                   new Tuple<StringType' string>(new StringType() { String = new string('*'' 1025) }' "{\"String\":\"*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************\"}")'                   new Tuple<StringType' string>(new StringType() { String = "ÃÇßÑᾆΏ" }' "{\"String\":\"ÃÇßÑᾆΏ\"}")'                   new Tuple<StringType' string>(new StringType() { String = "'hello'" }' "{\"String\":\"'hello'\"}")'                   new Tuple<StringType' string>(new StringType() { String = "True" }' "{\"String\":true}")'                  new Tuple<StringType' string>(new StringType() { String = "5" }' "{\"String\":5}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CharDeserialization,The following statement contains a magic number: List<Tuple<CharType' string>> testCases = new List<Tuple<CharType' string>>() {                  new Tuple<CharType' string>(new CharType() { Char = (char)0 }' "{}")'                  new Tuple<CharType' string>(new CharType() { Char = (char)0 }' "{\"Char\":null}")'                  new Tuple<CharType' string>(new CharType() { Char = (char)0 }' "{\"Char\":\"\\u0000\"}")'                  new Tuple<CharType' string>(new CharType() { Char = (char)1 }' "{\"Char\":\"\\u0001\"}")'                  new Tuple<CharType' string>(new CharType() { Char = (char)5 }' "{\"Char\":5}")'                   new Tuple<CharType' string>(new CharType() { Char = ' ' }' "{\"Char\":\" \"}")'                  new Tuple<CharType' string>(new CharType() { Char = '\n' }' "{\"Char\":\"\\n\"}")'                  new Tuple<CharType' string>(new CharType() { Char = '\t' }' "{\"Char\":\"\\t\"}")'                   new Tuple<CharType' string>(new CharType() { Char = '\n' }' "{\"Char\":\"\n\"}")'                  new Tuple<CharType' string>(new CharType() { Char = '\t' }' "{\"Char\":\"\t\"}")'                  new Tuple<CharType' string>(new CharType() { Char = '?' }' "{\"Char\":\"?\"}")'                   new Tuple<CharType' string>(new CharType() { Char = '\u1000' }' "{\"Char\":\"က\"}")'                   new Tuple<CharType' string>(new CharType() { Char = 'Ã' }' "{\"Char\":\"Ã\"}")'               };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeSerialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeDeserialization,The following statement contains a magic number: List<DateTime> dates = new List<DateTime>              {                  new DateTime(1999' 12' 31' 23' 59' 59)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local).ToLocalTime()'                  new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)'                  new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)'                  new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc).ToLocalTime()'                  new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc).ToLocalTime() // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetSerialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset()'                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified))'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local))'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc))'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc))' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,DateTimeOffsetDeserialization,The following statement contains a magic number: List<DateTimeOffset> dates = new List<DateTimeOffset>              {                  new DateTimeOffset(new DateTime(1999' 12' 31' 23' 59' 59)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 4' 14' 12' 34' 16' DateTimeKind.Unspecified)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 3' 14' 12' 34' 16' DateTimeKind.Local)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2005' 5' 14' 12' 34' 16' DateTimeKind.Utc)).ToLocalTime()'                  new DateTimeOffset(new DateTime(2012' 2' 29' 12' 0' 0' DateTimeKind.Utc)).ToLocalTime()' // leap day              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,NullableDeserialization,The following statement contains a magic number: actual.Nullable = 34.6;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IdTypeSerialization,The following statement contains a magic number: List<Tuple<object' string>> testCases = new List<Tuple<object' string>>() {                  new Tuple<object' string>(new idType() { id = 9 }' "{\"id\":9}")'                  new Tuple<object' string>(new IDType() { ID = 10 }' "{\"id\":10}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IdTypeSerialization,The following statement contains a magic number: List<Tuple<object' string>> testCases = new List<Tuple<object' string>>() {                  new Tuple<object' string>(new idType() { id = 9 }' "{\"id\":9}")'                  new Tuple<object' string>(new IDType() { ID = 10 }' "{\"id\":10}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IdTypeSerializationNegative,The following statement contains a magic number: List<Tuple<object' string>> testCases = new List<Tuple<object' string>>() {                  new Tuple<object' string>(new iDType() { iD = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.iDType'.")'                  new Tuple<object' string>(new DataContractMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.DataContractMissingIdType'.")'                  new Tuple<object' string>(new IgnoreDataMemberMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.IgnoreDataMemberMissingIdType'.")'                  new Tuple<object' string>(new JsonIgnoreMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.JsonIgnoreMissingIdType'.")'                  new Tuple<object' string>(new MulitpleIdType() { Id = 7' id = 8 }' "Only one member may have the property name 'id' (regardless of casing) on type 'Microsoft.WindowsAzure.MobileServices.Test.MulitpleIdType'.")              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IdTypeSerializationNegative,The following statement contains a magic number: List<Tuple<object' string>> testCases = new List<Tuple<object' string>>() {                  new Tuple<object' string>(new iDType() { iD = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.iDType'.")'                  new Tuple<object' string>(new DataContractMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.DataContractMissingIdType'.")'                  new Tuple<object' string>(new IgnoreDataMemberMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.IgnoreDataMemberMissingIdType'.")'                  new Tuple<object' string>(new JsonIgnoreMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.JsonIgnoreMissingIdType'.")'                  new Tuple<object' string>(new MulitpleIdType() { Id = 7' id = 8 }' "Only one member may have the property name 'id' (regardless of casing) on type 'Microsoft.WindowsAzure.MobileServices.Test.MulitpleIdType'.")              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IdTypeSerializationNegative,The following statement contains a magic number: List<Tuple<object' string>> testCases = new List<Tuple<object' string>>() {                  new Tuple<object' string>(new iDType() { iD = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.iDType'.")'                  new Tuple<object' string>(new DataContractMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.DataContractMissingIdType'.")'                  new Tuple<object' string>(new IgnoreDataMemberMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.IgnoreDataMemberMissingIdType'.")'                  new Tuple<object' string>(new JsonIgnoreMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.JsonIgnoreMissingIdType'.")'                  new Tuple<object' string>(new MulitpleIdType() { Id = 7' id = 8 }' "Only one member may have the property name 'id' (regardless of casing) on type 'Microsoft.WindowsAzure.MobileServices.Test.MulitpleIdType'.")              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IdTypeSerializationNegative,The following statement contains a magic number: List<Tuple<object' string>> testCases = new List<Tuple<object' string>>() {                  new Tuple<object' string>(new iDType() { iD = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.iDType'.")'                  new Tuple<object' string>(new DataContractMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.DataContractMissingIdType'.")'                  new Tuple<object' string>(new IgnoreDataMemberMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.IgnoreDataMemberMissingIdType'.")'                  new Tuple<object' string>(new JsonIgnoreMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.JsonIgnoreMissingIdType'.")'                  new Tuple<object' string>(new MulitpleIdType() { Id = 7' id = 8 }' "Only one member may have the property name 'id' (regardless of casing) on type 'Microsoft.WindowsAzure.MobileServices.Test.MulitpleIdType'.")              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IdTypeSerializationNegative,The following statement contains a magic number: List<Tuple<object' string>> testCases = new List<Tuple<object' string>>() {                  new Tuple<object' string>(new iDType() { iD = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.iDType'.")'                  new Tuple<object' string>(new DataContractMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.DataContractMissingIdType'.")'                  new Tuple<object' string>(new IgnoreDataMemberMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.IgnoreDataMemberMissingIdType'.")'                  new Tuple<object' string>(new JsonIgnoreMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.JsonIgnoreMissingIdType'.")'                  new Tuple<object' string>(new MulitpleIdType() { Id = 7' id = 8 }' "Only one member may have the property name 'id' (regardless of casing) on type 'Microsoft.WindowsAzure.MobileServices.Test.MulitpleIdType'.")              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,IdTypeSerializationNegative,The following statement contains a magic number: List<Tuple<object' string>> testCases = new List<Tuple<object' string>>() {                  new Tuple<object' string>(new iDType() { iD = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.iDType'.")'                  new Tuple<object' string>(new DataContractMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.DataContractMissingIdType'.")'                  new Tuple<object' string>(new IgnoreDataMemberMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.IgnoreDataMemberMissingIdType'.")'                  new Tuple<object' string>(new JsonIgnoreMissingIdType() { id = 8 }' "No 'id' member found on type 'Microsoft.WindowsAzure.MobileServices.Test.JsonIgnoreMissingIdType'.")'                  new Tuple<object' string>(new MulitpleIdType() { Id = 7' id = 8 }' "Only one member may have the property name 'id' (regardless of casing) on type 'Microsoft.WindowsAzure.MobileServices.Test.MulitpleIdType'.")              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,InterfacePropertyTypeSerialization,The following statement contains a magic number: List<Tuple<object' string>> testCases = new List<Tuple<object' string>>() {                  new Tuple<object' string>(new InterfacePropertyType() { Id = 5' Lookup = new Dictionary<string'string>() { { "x"' "y"}} }' "{\"id\":5'\"Lookup\":{\"x\":\"y\"}}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,InterfacePropertyTypeDeserialization,The following statement contains a magic number: List<Tuple<object' string>> testCases = new List<Tuple<object' string>>() {                  new Tuple<object' string>(new InterfacePropertyType() { Id = 5' Lookup = new Dictionary<string'string>() { { "x"' "y"}} }' "{\"id\":5'\"Lookup\":{\"x\":\"y\"}}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,EnumSerialization,The following statement contains a magic number: List<Tuple<EnumType' string>> testCases = new List<Tuple<EnumType' string>>() {                  new Tuple<EnumType' string>(new EnumType() { Enum1 = Enum1.Enum1Value1 }' "{\"Enum1\":\"Enum1Value1\"'\"Enum2\":\"Enum2Value1\"'\"Enum3\":0'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")'                  new Tuple<EnumType' string>(new EnumType() { Enum1 = Enum1.Enum1Value2 }' "{\"Enum1\":\"Enum1Value2\"'\"Enum2\":\"Enum2Value1\"'\"Enum3\":0'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")'                  new Tuple<EnumType' string>(new EnumType() { Enum3 = Enum3.Enum3Value2 | Enum3.Enum3Value1 }' "{\"Enum1\":\"Enum1Value1\"'\"Enum2\":\"Enum2Value1\"'\"Enum3\":\"Enum3Value1' Enum3Value2\"'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")'                  new Tuple<EnumType' string>(new EnumType() { Enum1 = (Enum1)1000 }' "{\"Enum1\":1000'\"Enum2\":\"Enum2Value1\"'\"Enum3\":0'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")'                  new Tuple<EnumType' string>(new EnumType() { Enum1 = (Enum1)(-1000) }' "{\"Enum1\":-1000'\"Enum2\":\"Enum2Value1\"'\"Enum3\":0'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,EnumSerialization,The following statement contains a magic number: List<Tuple<EnumType' string>> testCases = new List<Tuple<EnumType' string>>() {                  new Tuple<EnumType' string>(new EnumType() { Enum1 = Enum1.Enum1Value1 }' "{\"Enum1\":\"Enum1Value1\"'\"Enum2\":\"Enum2Value1\"'\"Enum3\":0'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")'                  new Tuple<EnumType' string>(new EnumType() { Enum1 = Enum1.Enum1Value2 }' "{\"Enum1\":\"Enum1Value2\"'\"Enum2\":\"Enum2Value1\"'\"Enum3\":0'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")'                  new Tuple<EnumType' string>(new EnumType() { Enum3 = Enum3.Enum3Value2 | Enum3.Enum3Value1 }' "{\"Enum1\":\"Enum1Value1\"'\"Enum2\":\"Enum2Value1\"'\"Enum3\":\"Enum3Value1' Enum3Value2\"'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")'                  new Tuple<EnumType' string>(new EnumType() { Enum1 = (Enum1)1000 }' "{\"Enum1\":1000'\"Enum2\":\"Enum2Value1\"'\"Enum3\":0'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")'                  new Tuple<EnumType' string>(new EnumType() { Enum1 = (Enum1)(-1000) }' "{\"Enum1\":-1000'\"Enum2\":\"Enum2Value1\"'\"Enum3\":0'\"Enum4\":\"Enum4Value1\"'\"Enum5\":\"Enum5Value1\"'\"Enum6\":0}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,EnumDeserialization,The following statement contains a magic number: List<Tuple<EnumType' string>> testCases = new List<Tuple<EnumType' string>>() {                  new Tuple<EnumType' string>(new EnumType() { Enum1 = Enum1.Enum1Value1 }' "{\"Enum1\":'Enum1Value1'}")'                  new Tuple<EnumType' string>(new EnumType() { Enum1 = Enum1.Enum1Value2 }' "{\"Enum1\":'Enum1Value2'}")'                  new Tuple<EnumType' string>(new EnumType() { Enum3 = Enum3.Enum3Value2 | Enum3.Enum3Value1 }' "{\"Enum3\":'Enum3Value2'Enum3Value1'}")'                  new Tuple<EnumType' string>(new EnumType() { Enum3 = (Enum3)1000 }' "{\"Enum3\":1000}")'                  new Tuple<EnumType' string>(new EnumType() { Enum1 = (Enum1)(-1000) }' "{\"Enum1\":-1000}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,EnumDeserialization,The following statement contains a magic number: List<Tuple<EnumType' string>> testCases = new List<Tuple<EnumType' string>>() {                  new Tuple<EnumType' string>(new EnumType() { Enum1 = Enum1.Enum1Value1 }' "{\"Enum1\":'Enum1Value1'}")'                  new Tuple<EnumType' string>(new EnumType() { Enum1 = Enum1.Enum1Value2 }' "{\"Enum1\":'Enum1Value2'}")'                  new Tuple<EnumType' string>(new EnumType() { Enum3 = Enum3.Enum3Value2 | Enum3.Enum3Value1 }' "{\"Enum3\":'Enum3Value2'Enum3Value1'}")'                  new Tuple<EnumType' string>(new EnumType() { Enum3 = (Enum3)1000 }' "{\"Enum3\":1000}")'                  new Tuple<EnumType' string>(new EnumType() { Enum1 = (Enum1)(-1000) }' "{\"Enum1\":-1000}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ComplexTypeSerialization,The following statement contains a magic number: List<Tuple<object' string>> testCases = new List<Tuple<object' string>>() {                  new Tuple<object' string>(new ComplexType() { Id = 5' Name = "Some Name"' Child = new MissingIdType() { NotAnId = 4 }}' "{\"id\":5'\"Name\":\"Some Name\"'\"Child\":{\"NotAnId\":4}}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,ComplexTypeSerialization,The following statement contains a magic number: List<Tuple<object' string>> testCases = new List<Tuple<object' string>>() {                  new Tuple<object' string>(new ComplexType() { Id = 5' Name = "Some Name"' Child = new MissingIdType() { NotAnId = 4 }}' "{\"id\":5'\"Name\":\"Some Name\"'\"Child\":{\"NotAnId\":4}}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CustomConverterOnPropertyTestSerialization,The following statement contains a magic number: List<Tuple<ConverterType' string>> testCases = new List<Tuple<ConverterType' string>>              {                  new Tuple<ConverterType' string>(                      new ConverterType { Number = 12 }'                      "{\"Number\":null}")'                  new Tuple<ConverterType' string>(                      new ConverterType { Number = 0 }'                      "{\"Number\":null}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CustomConverterOnPropertyTestDeserialization,The following statement contains a magic number: actual.Number = 10;
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CustomConverterOnPropertyTestDeserialization,The following statement contains a magic number: Assert.AreEqual(actual.Number' 10);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CreatedAtTypeSerialization,The following statement contains a magic number: List<Tuple<CreatedAtType' string>> testCases = new List<Tuple<CreatedAtType' string>>              {                  new Tuple<CreatedAtType' string>(                      new CreatedAtType { CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }'                      "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"}")'                  new Tuple<CreatedAtType' string>(                      new CreatedAtType { CreatedAt = default(DateTime) }'                      "{\"__createdAt\":" + MinDateTimeSerializedToJson + "}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CreatedAtTypeSerialization,The following statement contains a magic number: List<Tuple<CreatedAtType' string>> testCases = new List<Tuple<CreatedAtType' string>>              {                  new Tuple<CreatedAtType' string>(                      new CreatedAtType { CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }'                      "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"}")'                  new Tuple<CreatedAtType' string>(                      new CreatedAtType { CreatedAt = default(DateTime) }'                      "{\"__createdAt\":" + MinDateTimeSerializedToJson + "}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CreatedAtTypeSerialization,The following statement contains a magic number: List<Tuple<CreatedAtType' string>> testCases = new List<Tuple<CreatedAtType' string>>              {                  new Tuple<CreatedAtType' string>(                      new CreatedAtType { CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }'                      "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"}")'                  new Tuple<CreatedAtType' string>(                      new CreatedAtType { CreatedAt = default(DateTime) }'                      "{\"__createdAt\":" + MinDateTimeSerializedToJson + "}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CreatedAtTypeDeserialization,The following statement contains a magic number: List<Tuple<CreatedAtType' string>> testCases = new List<Tuple<CreatedAtType' string>>() {                  new Tuple<CreatedAtType' string>(new CreatedAtType { CreatedAt = default(DateTime) }' "{\"__createdAt\":" + MinDateTimeSerializedToJson + "}")'                  new Tuple<CreatedAtType' string>(new CreatedAtType { CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }' "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CreatedAtTypeDeserialization,The following statement contains a magic number: List<Tuple<CreatedAtType' string>> testCases = new List<Tuple<CreatedAtType' string>>() {                  new Tuple<CreatedAtType' string>(new CreatedAtType { CreatedAt = default(DateTime) }' "{\"__createdAt\":" + MinDateTimeSerializedToJson + "}")'                  new Tuple<CreatedAtType' string>(new CreatedAtType { CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }' "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,CreatedAtTypeDeserialization,The following statement contains a magic number: List<Tuple<CreatedAtType' string>> testCases = new List<Tuple<CreatedAtType' string>>() {                  new Tuple<CreatedAtType' string>(new CreatedAtType { CreatedAt = default(DateTime) }' "{\"__createdAt\":" + MinDateTimeSerializedToJson + "}")'                  new Tuple<CreatedAtType' string>(new CreatedAtType { CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }' "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UpdatedAtTypeSerialization,The following statement contains a magic number: List<Tuple<UpdatedAtType' string>> testCases = new List<Tuple<UpdatedAtType' string>>              {                  new Tuple<UpdatedAtType' string>(                      new UpdatedAtType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }'                      "{\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"}")'                  new Tuple<UpdatedAtType' string>(                      new UpdatedAtType { UpdatedAt = default(DateTime) }'                      "{\"__updatedAt\":" + MinDateTimeSerializedToJson + "}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UpdatedAtTypeSerialization,The following statement contains a magic number: List<Tuple<UpdatedAtType' string>> testCases = new List<Tuple<UpdatedAtType' string>>              {                  new Tuple<UpdatedAtType' string>(                      new UpdatedAtType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }'                      "{\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"}")'                  new Tuple<UpdatedAtType' string>(                      new UpdatedAtType { UpdatedAt = default(DateTime) }'                      "{\"__updatedAt\":" + MinDateTimeSerializedToJson + "}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UpdatedAtTypeSerialization,The following statement contains a magic number: List<Tuple<UpdatedAtType' string>> testCases = new List<Tuple<UpdatedAtType' string>>              {                  new Tuple<UpdatedAtType' string>(                      new UpdatedAtType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }'                      "{\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"}")'                  new Tuple<UpdatedAtType' string>(                      new UpdatedAtType { UpdatedAt = default(DateTime) }'                      "{\"__updatedAt\":" + MinDateTimeSerializedToJson + "}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UpdatedAtTypeDeserialization,The following statement contains a magic number: List<Tuple<UpdatedAtType' string>> testCases = new List<Tuple<UpdatedAtType' string>>() {                  new Tuple<UpdatedAtType' string>(new UpdatedAtType { UpdatedAt = default(DateTime) }' "{\"__updatedAt\":" + MinDateTimeSerializedToJson + "}")'                  new Tuple<UpdatedAtType' string>(new UpdatedAtType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }' "{\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UpdatedAtTypeDeserialization,The following statement contains a magic number: List<Tuple<UpdatedAtType' string>> testCases = new List<Tuple<UpdatedAtType' string>>() {                  new Tuple<UpdatedAtType' string>(new UpdatedAtType { UpdatedAt = default(DateTime) }' "{\"__updatedAt\":" + MinDateTimeSerializedToJson + "}")'                  new Tuple<UpdatedAtType' string>(new UpdatedAtType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }' "{\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,UpdatedAtTypeDeserialization,The following statement contains a magic number: List<Tuple<UpdatedAtType' string>> testCases = new List<Tuple<UpdatedAtType' string>>() {                  new Tuple<UpdatedAtType' string>(new UpdatedAtType { UpdatedAt = default(DateTime) }' "{\"__updatedAt\":" + MinDateTimeSerializedToJson + "}")'                  new Tuple<UpdatedAtType' string>(new UpdatedAtType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc) }' "{\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"}")'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeSerialization,The following statement contains a magic number: List<Tuple<AllSystemPropertiesType' string>> testCases = new List<Tuple<AllSystemPropertiesType' string>>              {                  new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                           CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                            Version = "0x0004F" }'                                                                                            "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")'                  new Tuple<AllSystemPropertiesType' string>(                      new AllSystemPropertiesType { Version = null }'                       "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson)                  )'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeSerialization,The following statement contains a magic number: List<Tuple<AllSystemPropertiesType' string>> testCases = new List<Tuple<AllSystemPropertiesType' string>>              {                  new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                           CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                            Version = "0x0004F" }'                                                                                            "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")'                  new Tuple<AllSystemPropertiesType' string>(                      new AllSystemPropertiesType { Version = null }'                       "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson)                  )'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeSerialization,The following statement contains a magic number: List<Tuple<AllSystemPropertiesType' string>> testCases = new List<Tuple<AllSystemPropertiesType' string>>              {                  new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                           CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                            Version = "0x0004F" }'                                                                                            "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")'                  new Tuple<AllSystemPropertiesType' string>(                      new AllSystemPropertiesType { Version = null }'                       "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson)                  )'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeSerialization,The following statement contains a magic number: List<Tuple<AllSystemPropertiesType' string>> testCases = new List<Tuple<AllSystemPropertiesType' string>>              {                  new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                           CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                            Version = "0x0004F" }'                                                                                            "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")'                  new Tuple<AllSystemPropertiesType' string>(                      new AllSystemPropertiesType { Version = null }'                       "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson)                  )'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeSerialization,The following statement contains a magic number: List<Tuple<AllSystemPropertiesType' string>> testCases = new List<Tuple<AllSystemPropertiesType' string>>              {                  new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                           CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                            Version = "0x0004F" }'                                                                                            "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")'                  new Tuple<AllSystemPropertiesType' string>(                      new AllSystemPropertiesType { Version = null }'                       "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson)                  )'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeSerialization,The following statement contains a magic number: List<Tuple<AllSystemPropertiesType' string>> testCases = new List<Tuple<AllSystemPropertiesType' string>>              {                  new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                           CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                            Version = "0x0004F" }'                                                                                            "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")'                  new Tuple<AllSystemPropertiesType' string>(                      new AllSystemPropertiesType { Version = null }'                       "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson)                  )'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeDeserialization,The following statement contains a magic number: List<Tuple<AllSystemPropertiesType' string>> testCases = new List<Tuple<AllSystemPropertiesType' string>>              {                  new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                           CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                            Version = "0x0004F" }'                                                                                            "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")'                  new Tuple<AllSystemPropertiesType' string>(                      new AllSystemPropertiesType { Version = null }'                       "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeDeserialization,The following statement contains a magic number: List<Tuple<AllSystemPropertiesType' string>> testCases = new List<Tuple<AllSystemPropertiesType' string>>              {                  new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                           CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                            Version = "0x0004F" }'                                                                                            "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")'                  new Tuple<AllSystemPropertiesType' string>(                      new AllSystemPropertiesType { Version = null }'                       "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeDeserialization,The following statement contains a magic number: List<Tuple<AllSystemPropertiesType' string>> testCases = new List<Tuple<AllSystemPropertiesType' string>>              {                  new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                           CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                            Version = "0x0004F" }'                                                                                            "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")'                  new Tuple<AllSystemPropertiesType' string>(                      new AllSystemPropertiesType { Version = null }'                       "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeDeserialization,The following statement contains a magic number: List<Tuple<AllSystemPropertiesType' string>> testCases = new List<Tuple<AllSystemPropertiesType' string>>              {                  new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                           CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                            Version = "0x0004F" }'                                                                                            "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")'                  new Tuple<AllSystemPropertiesType' string>(                      new AllSystemPropertiesType { Version = null }'                       "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeDeserialization,The following statement contains a magic number: List<Tuple<AllSystemPropertiesType' string>> testCases = new List<Tuple<AllSystemPropertiesType' string>>              {                  new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                           CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                            Version = "0x0004F" }'                                                                                            "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")'                  new Tuple<AllSystemPropertiesType' string>(                      new AllSystemPropertiesType { Version = null }'                       "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSerializerTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Serialization\MobileServiceSerializer.Test.cs,AllSystemPropertiesTypeDeserialization,The following statement contains a magic number: List<Tuple<AllSystemPropertiesType' string>> testCases = new List<Tuple<AllSystemPropertiesType' string>>              {                  new Tuple<AllSystemPropertiesType' string>(new AllSystemPropertiesType { UpdatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                           CreatedAt = new DateTime(2012' 1' 5' 12' 0' 0' DateTimeKind.Utc)'                                                                                            Version = "0x0004F" }'                                                                                            "{\"__createdAt\":\"2012-01-05T12:00:00.000Z\"'\"__updatedAt\":\"2012-01-05T12:00:00.000Z\"'\"__version\":\"0x0004F\"}")'                  new Tuple<AllSystemPropertiesType' string>(                      new AllSystemPropertiesType { Version = null }'                       "{\"__createdAt\":MIN_DATE'\"__updatedAt\":MIN_DATE'\"__version\":null}".Replace("MIN_DATE"' MinDateTimeSerializedToJson))'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotPurge_WhenItemIsMissing,The following statement contains a magic number: Assert.AreEqual(store.TableMap[table.TableName].Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotPurge_WhenItemIsMissing,The following statement contains a magic number: Assert.AreEqual(hijack.Requests.Count' 3);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotTriggerPush_WhenThereIsNoOperationInTable,The following statement contains a magic number: Assert.AreEqual(store.TableMap[table1.TableName].Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotTriggerPush_WhenThereIsNoOperationInTable,The following statement contains a magic number: Assert.AreEqual(hijack.Requests.Count' 3);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_TriggersPush_WhenThereIsOperationInTable,The following statement contains a magic number: Assert.AreEqual(hijack.Requests.Count' 3);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_TriggersPush_WhenThereIsOperationInTable,The following statement contains a magic number: Assert.AreEqual(store.TableMap[table1.TableName].Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_TriggersPush_FeatureHeaderInOperation,The following statement contains a magic number: Assert.AreEqual(hijack.Requests[2].Headers.GetValues("X-ZUMO-FEATURES").First()' "QS'OL");
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_FollowsNextLinks,The following statement contains a magic number: Assert.AreEqual(store.TableMap["stringId_test_table"].Count' 4);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UpdatesDeltaToken_AfterEachResult_IfOrderByIsSupported,The following statement contains a magic number: Assert.AreEqual(store.TableMap["stringId_test_table"].Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotUpdateDeltaToken_AfterEachResult_IfOrderByIsNotSupported,The following statement contains a magic number: Assert.AreEqual(store.TableMap["stringId_test_table"].Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UsesSkipAndTakeThenFollowsLinkThenUsesSkipAndTake,The following statement contains a magic number: await table.PullAsync(null' table.Take(51).Skip(3));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UsesSkipAndTakeThenFollowsLinkThenUsesSkipAndTake,The following statement contains a magic number: await table.PullAsync(null' table.Take(51).Skip(3));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UsesSkipAndTakeThenFollowsLinkThenUsesSkipAndTake,The following statement contains a magic number: Assert.AreEqual(store.TableMap["stringId_test_table"].Count' 6);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Supports_AbsoluteAndRelativeUri,The following statement contains a magic number: Assert.AreEqual(store.TableMap["stringId_test_table"].Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotFollowLink_IfRelationIsNotNext,The following statement contains a magic number: Assert.AreEqual(store.TableMap["stringId_test_table"].Count' 4);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DoesNotFollowLink_IfLinkHasNonSupportedOptions,The following statement contains a magic number: Assert.AreEqual(store.TableMap["stringId_test_table"].Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UsesTopInQuery_IfLessThanMaxPageSize,The following statement contains a magic number: var pullOptions = new PullOptions              {                  MaxPageSize = 50'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UsesTopInQuery_IfLessThanMaxPageSize,The following statement contains a magic number: await table.PullAsync(null' table.Take(49)' pullOptions);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_UsesTopInQuery_IfLessThanMaxPageSize,The following statement contains a magic number: Assert.AreEqual(store.TableMap["stringId_test_table"].Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DefaultsTo50_IfGreaterThanMaxPageSize,The following statement contains a magic number: var pullOptions = new PullOptions              {                  MaxPageSize = 50'              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DefaultsTo50_IfGreaterThanMaxPageSize,The following statement contains a magic number: await table.PullAsync(null' table.Take(51)' pullOptions);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_DefaultsTo50_IfGreaterThanMaxPageSize,The following statement contains a magic number: Assert.AreEqual(store.TableMap["stringId_test_table"].Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Throws_WhenTopClauseIsSpecifiedAndOptionIsNotSet,The following statement contains a magic number: var query = table.Take(30);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Throws_WhenSkipClauseIsSpecifiedAndOptionIsNotSet,The following statement contains a magic number: var query = table.Skip(30);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Throws_WhenTopOrSkipIsSpecifiedWithQueryId,The following statement contains a magic number: var query = table.Take(5);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Throws_WhenTopOrSkipIsSpecifiedWithQueryId,The following statement contains a magic number: query = table.Skip(5);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Succeeds,The following statement contains a magic number: var query = table.Skip(5)                               .Take(3)                               .Where(t => t.String == "world")                               .OrderBy(o => o.Id)                               .WithParameters(new Dictionary<string' string>() { { "param1"' "val1" } })                               .OrderByDescending(o => o.String)                               .IncludeTotalCount();
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Succeeds,The following statement contains a magic number: var query = table.Skip(5)                               .Take(3)                               .Where(t => t.String == "world")                               .OrderBy(o => o.Id)                               .WithParameters(new Dictionary<string' string>() { { "param1"' "val1" } })                               .OrderByDescending(o => o.String)                               .IncludeTotalCount();
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Succeeds,The following statement contains a magic number: Assert.AreEqual(hijack.Requests.Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PullAsync_Incremental_PageSize,The following statement contains a magic number: PullOptions pullOptions = new PullOptions              {                  MaxPageSize = 10              };
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,TestPullAsyncIncrementalWithOptions,The following statement contains a magic number: await settings.SetDeltaTokenAsync("stringId_test_table"' "incquery"' new DateTime(2001' 02' 01' 0' 0' 0' DateTimeKind.Utc));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,TestPullAsyncIncrementalWithOptions,The following statement contains a magic number: await settings.SetDeltaTokenAsync("stringId_test_table"' "incquery"' new DateTime(2001' 02' 01' 0' 0' 0' DateTimeKind.Utc));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,PurgeAsync_ResetsDeltaToken_WhenQueryIdIsSpecified,The following statement contains a magic number: Assert.AreEqual(store.TableMap["stringId_test_table"].Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,DeleteAsync_CancelsUpdate_WhenUpdateIsInQueue,The following statement contains a magic number: await this.TestCollapseCancel(firstOperationOnItem1: (table' item1) => table.UpdateAsync(item1)'                                            operationOnItem2: (table' item2) => table.InsertAsync(item2)'                                            secondOperationOnItem1: (table' item1) => table.DeleteAsync(item1)'                                            assertRequest: (req' executed) =>                                            {                                                if (executed == 1) // order is maintained by doing insert first and delete after that. This means first update was cancelled' not the second one.                                                {                                                    Assert.AreEqual(req.Method' HttpMethod.Post);                                                }                                                else                                                {                                                    Assert.AreEqual(req.Method' HttpMethod.Delete);                                                }                                            }'                                            assertQueue: queue =>                                            {                                                var op = queue.Values.Single(o => o.Value<string>("itemId") == "item1");                                                Assert.AreEqual(op.Value<long>("version")' 2L);                                            });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,UpdateAsync_CancelsSecondUpdate_WhenUpdateIsInQueue,The following statement contains a magic number: await this.TestCollapseCancel(firstOperationOnItem1: (table' item1) => table.UpdateAsync(item1)'                                          operationOnItem2: (table' item2) => table.DeleteAsync(item2)'                                          secondOperationOnItem1: (table' item1) => table.UpdateAsync(item1)'                                          assertRequest: (req' executed) =>                                          {                                              if (executed == 1) // order is maintained by doing update first and delete after that. This means second update was cancelled' not the first one.                                              {                                                  Assert.AreEqual(req.Method' new HttpMethod("Patch"));                                              }                                              else                                              {                                                  Assert.AreEqual(req.Method' HttpMethod.Delete);                                              }                                          }'                                          assertQueue: queue =>                                          {                                              var op = queue.Values.Single(o => o.Value<string>("itemId") == "item1");                                              Assert.AreEqual(op.Value<long>("version")' 2L);                                          });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,UpdateAsync_CancelsSecondUpdate_WhenInsertIsInQueue,The following statement contains a magic number: await this.TestCollapseCancel(firstOperationOnItem1: (table' item1) => table.InsertAsync(item1)'                                          operationOnItem2: (table' item2) => table.DeleteAsync(item2)'                                          secondOperationOnItem1: (table' item1) => table.UpdateAsync(item1)'                                          assertRequest: (req' executed) =>                                          {                                              if (executed == 1) // order is maintained by doing insert first and delete after that. This means second update was cancelled.                                              {                                                  Assert.AreEqual(req.Method' HttpMethod.Post);                                              }                                              else                                              {                                                  Assert.AreEqual(req.Method' HttpMethod.Delete);                                              }                                          }'                                          assertQueue: queue =>                                          {                                              var op = queue.Values.Single(o => o.Value<string>("itemId") == "item1");                                              Assert.AreEqual(op.Value<long>("version")' 2L);                                          });
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,ReadAsync_PassesOdataToStore_WhenLinqIsUsed,The following statement contains a magic number: IMobileServiceTableQuery<string> query = table.Skip(5)                                                            .Take(3)                                                            .Where(t => t.String == "world")                                                            .OrderBy(o => o.Id)                                                            .OrderByDescending(o => o.String)                                                            .IncludeTotalCount()                                                            .Select(x => x.String);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,ReadAsync_PassesOdataToStore_WhenLinqIsUsed,The following statement contains a magic number: IMobileServiceTableQuery<string> query = table.Skip(5)                                                            .Take(3)                                                            .Where(t => t.String == "world")                                                            .OrderBy(o => o.Id)                                                            .OrderByDescending(o => o.String)                                                            .IncludeTotalCount()                                                            .Select(x => x.String);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,TestCollapseCancel,The following statement contains a magic number: Assert.AreEqual(service.SyncContext.PendingOperations' 2L);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,TestCollapseCancel,The following statement contains a magic number: Assert.AreEqual(service.SyncContext.PendingOperations' 2L);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test,MobileServiceSyncTableGenericTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test\UnitTests\Table\Sync\MobileServiceSyncTable.Generic.Test.cs,TestCollapseCancel,The following statement contains a magic number: Assert.AreEqual(executed' 2);
