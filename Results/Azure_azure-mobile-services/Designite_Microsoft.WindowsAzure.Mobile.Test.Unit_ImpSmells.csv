Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,TestIncrementalSync,The method has 6 parameters. Parameters: query' result' maxUpdatedAt' savesMax' firstQuery' secondQuery
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Extensions,ExceptionExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Extensions\ExceptionExtensions.Test.cs,IsNetworkError_ReturnsFalse_OnOtherErrors,The length of the statement  "            Assert.IsFalse(ExceptionExtensions.IsNetworkError(new MobileServiceInvalidOperationException(null' new HttpRequestMessage()' new HttpResponseMessage()))); " is 154.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Extensions,ExceptionExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Extensions\ExceptionExtensions.Test.cs,IsAuthenticationError_ReturnsTrue_OnAuthErrors,The length of the statement  "            Assert.IsTrue(ExceptionExtensions.IsAuthenticationError(new MobileServiceInvalidOperationException(null' new HttpRequestMessage()' new HttpResponseMessage(HttpStatusCode.Unauthorized)))); " is 187.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Extensions,ExceptionExtensionsTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Extensions\ExceptionExtensions.Test.cs,IsAuthenticationError_ReturnsFalse_OnOtherErrors,The length of the statement  "            Assert.IsFalse(ExceptionExtensions.IsAuthenticationError(new MobileServiceInvalidOperationException(null' new HttpRequestMessage()' new HttpResponseMessage()))); " is 161.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync,MobileServiceSyncTableTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\MobileServiceSyncTableTests.cs,ValidateQueryId_Throws_OnInvalidId,The length of the statement  "                Assert.AreEqual(ex.Message' "The query id must not contain pipe character and should be less than 50 characters in length."); " is 125.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotUpsertAnObject_IfItDoesNotHaveAnId,The length of the statement  "            var action = new PullAction(this.table.Object' MobileServiceTableKind.Table' this.context.Object' null' query' null' null' this.opQueue.Object' this.settings.Object' this.store.Object' MobileServiceRemoteTableOptions.All' pullOptions: null' reader: null' cancellationToken: CancellationToken.None); " is 298.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotUpsertAnObject_IfItDoesNotHaveAnId,The length of the statement  "            this.opQueue.Setup(q => q.LockTableAsync(It.IsAny<string>()' It.IsAny<CancellationToken>())).Returns(Task.FromResult<IDisposable>(null)); " is 137.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotUpsertAnObject_IfItDoesNotHaveAnId,The length of the statement  "            this.table.SetupSequence(t => t.ReadAsync(It.IsAny<string>()' It.IsAny<IDictionary<string' string>>()' It.IsAny<MobileServiceFeatures>())) " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotUpsertAnObject_IfItDoesNotHaveAnId,The length of the statement  "            store.Verify(s => s.DeleteAsync("test"' It.IsAny<IEnumerable<string>>())' Times.Never()' "There shouldn't be any call to delete"); " is 130.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified_WithoutFilter,The length of the statement  "            string firstQuery = "$filter=(__updatedAt ge datetimeoffset'2013-01-01T00%3A00%3A00.0000000%2B00%3A00')&$orderby=__updatedAt&$skip=0&$top=50"; " is 142.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified_WithoutFilter,The length of the statement  "            string secondQuery = "$filter=(__updatedAt ge datetimeoffset'2014-07-09T07%3A00%3A00.0000000%2B00%3A00')&$orderby=__updatedAt&$skip=0&$top=50"; " is 143.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified_WithoutFilter,The length of the statement  "            await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: true' firstQuery: firstQuery' secondQuery: secondQuery); " is 135.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified,The length of the statement  "            string firstQuery = "$filter=((4 eq 3) and (__updatedAt ge datetimeoffset'2013-01-01T00%3A00%3A00.0000000%2B00%3A00'))&$orderby=__updatedAt&$skip=0&$top=50"; " is 157.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified,The length of the statement  "            string secondQuery = "$filter=((4 eq 3) and (__updatedAt ge datetimeoffset'2014-07-09T07%3A00%3A00.0000000%2B00%3A00'))&$orderby=__updatedAt&$skip=0&$top=50"; " is 158.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified,The length of the statement  "            await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: true' firstQuery: firstQuery' secondQuery: secondQuery); " is 135.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfThereAreNoResults,The length of the statement  "            string expectedOdata = "$filter=(__updatedAt ge datetimeoffset'2013-01-01T00%3A00%3A00.0000000%2B00%3A00')&$orderby=__updatedAt&$skip=0&$top=50"; " is 145.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfThereAreNoResults,The length of the statement  "            await TestIncrementalSync(query' result' DateTime.MinValue' savesMax: false' firstQuery: expectedOdata' secondQuery: null); " is 123.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsHaveOlderUpdatedAt,The length of the statement  "            string firstQuery = "$filter=((4 eq 3) and (__updatedAt ge datetimeoffset'2013-01-01T00%3A00%3A00.0000000%2B00%3A00'))&$orderby=__updatedAt&$skip=0&$top=50"; " is 157.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsHaveOlderUpdatedAt,The length of the statement  "            string secondQuery = "$filter=((4 eq 3) and (__updatedAt ge datetimeoffset'2013-01-01T00%3A00%3A00.0000000%2B00%3A00'))&$orderby=__updatedAt&$skip=1&$top=50"; " is 158.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsHaveOlderUpdatedAt,The length of the statement  "            await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: false' firstQuery: firstQuery' secondQuery: secondQuery); " is 136.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsDoNotHaveUpdatedAt,The length of the statement  "            string firstQuery = "$filter=((4 eq 3) and (__updatedAt ge datetimeoffset'2013-01-01T00%3A00%3A00.0000000%2B00%3A00'))&$orderby=__updatedAt&$skip=0&$top=50"; " is 157.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsDoNotHaveUpdatedAt,The length of the statement  "            string secondQuery = "$filter=((4 eq 3) and (__updatedAt ge datetimeoffset'2013-01-01T00%3A00%3A00.0000000%2B00%3A00'))&$orderby=__updatedAt&$skip=2&$top=50"; " is 158.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsDoNotHaveUpdatedAt,The length of the statement  "            await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: false' firstQuery: firstQuery' secondQuery: secondQuery); " is 136.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,TestIncrementalSync,The length of the statement  "            this.opQueue.Setup(q => q.LockTableAsync(It.IsAny<string>()' It.IsAny<CancellationToken>())).Returns(Task.FromResult<IDisposable>(null)); " is 137.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,TestIncrementalSync,The length of the statement  "            this.table.Setup(t => t.ReadAsync(firstQuery' It.IsAny<IDictionary<string' string>>()' It.IsAny<MobileServiceFeatures>())) " is 122.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,TestIncrementalSync,The length of the statement  "                this.table.Setup(t => t.ReadAsync(secondQuery' It.IsAny<IDictionary<string' string>>()' It.IsAny<MobileServiceFeatures>())) " is 123.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,TestIncrementalSync,The length of the statement  "            this.settings.Setup(s => s.GetDeltaTokenAsync("test"' "latestItems")).Returns(Task.FromResult(new DateTimeOffset(2013' 1' 1' 0' 0' 0' TimeSpan.Zero))); " is 151.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,TestIncrementalSync,The length of the statement  "            store.Verify(s => s.DeleteAsync("test"' It.IsAny<IEnumerable<string>>())' Times.Never()' "There shouldn't be any call to delete"); " is 130.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,Initialize,The length of the statement  "            this.context.Setup(c => c.GetTable(It.IsAny<string>())).Returns(Task.FromResult(new MobileServiceTable("test"' this.client.Object))); " is 133.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,Initialize,The length of the statement  "            this.action = new PushAction(this.opQueue.Object' this.store.Object' MobileServiceTableKind.Table' null' this.handler.Object' this.client.Object' this.context.Object' CancellationToken.None); " is 191.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,AbortPush_AbortsThePush,The length of the statement  "            MobileServiceTableOperation op = new InsertOperation("abc"' MobileServiceTableKind.Table' "abc") { Item = new JObject() }; // putting an item so it won't load it " is 161.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,AbortPush_AbortsThePush,The length of the statement  "            this.opQueue.Setup(q => q.PeekAsync(0' MobileServiceTableKind.Table' It.IsAny<IEnumerable<string>>())).Returns(() => Task.FromResult(op)); " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,AbortPush_AbortsThePush,The length of the statement  "            this.store.Setup(s => s.ReadAsync(It.Is<MobileServiceTableQueryDescription>(q => q.TableName == MobileServiceLocalSystemTables.SyncErrors))).Returns(Task.FromResult(JToken.Parse(syncError))); " is 191.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,AbortPush_AbortsThePush,The length of the statement  "            this.handler.Setup(h => h.OnPushCompleteAsync(It.IsAny<MobileServicePushCompletionResult>())).Returns(Task.FromResult(0)) " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,AbortPush_AbortsThePush,The length of the statement  "            this.store.Setup(s => s.DeleteAsync(It.Is<MobileServiceTableQueryDescription>(q => q.TableName == MobileServiceLocalSystemTables.SyncErrors))).Returns(Task.FromResult(0)); " is 171.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,ExecuteAsync_DeletesTheErrors,The length of the statement  "            var op = new InsertOperation("table"' MobileServiceTableKind.Table' "id") { Item = new JObject() }; // putting an item so it won't load it " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,ExecuteAsync_DoesNotSaveTheResult_IfExecuteTableOperationThrows,The length of the statement  "            this.store.Setup(s => s.UpsertAsync(MobileServiceLocalSystemTables.SyncErrors' It.IsAny<JObject[]>()' false)).Returns(Task.FromResult(0)); " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,ExecuteAsync_DoesNotSaveTheResult_IfPresentButResultDoesNotHaveId,The length of the statement  "            this.action = new PushAction(this.opQueue.Object' this.store.Object' MobileServiceTableKind.Table' null' this.handler.Object' this.client.Object' this.context.Object' CancellationToken.None); " is 191.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,TestResultSave,The length of the statement  "                this.store.Setup(s => s.UpsertAsync("table"' It.Is<JObject[]>(list => list.Any(o => o.ToString() == result.ToString()))' true)) " is 127.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,TestExecuteAsync,The length of the statement  "            this.opQueue.Setup(q => q.PeekAsync(0' MobileServiceTableKind.Table' It.IsAny<IEnumerable<string>>())).Returns(() => Task.FromResult(op)); " is 138.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,TestExecuteAsync,The length of the statement  "            this.opQueue.Setup(q => q.PeekAsync(op.Sequence' MobileServiceTableKind.Table' It.IsAny<IEnumerable<string>>())).Returns(() => Task.FromResult<MobileServiceTableOperation>(null)); " is 179.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,TestExecuteAsync,The length of the statement  "            this.store.Setup(s => s.ReadAsync(It.Is<MobileServiceTableQueryDescription>(q => q.TableName == MobileServiceLocalSystemTables.SyncErrors))).Returns(Task.FromResult(JToken.Parse(syncError))); " is 191.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,TestExecuteAsync,The length of the statement  "            this.handler.Setup(h => h.OnPushCompleteAsync(It.IsAny<MobileServicePushCompletionResult>())).Returns(Task.FromResult(0)) " is 121.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PushActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PushActionTests.cs,TestExecuteAsync,The length of the statement  "            this.store.Setup(s => s.DeleteAsync(It.Is<MobileServiceTableQueryDescription>(q => q.TableName == MobileServiceLocalSystemTables.SyncErrors))).Returns(Task.FromResult(0)); " is 171.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Operations,DeleteOperationTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Operations\DeleteOperationTests.cs,ExecuteAsync_IgnoresNotFound,The length of the statement  "            table.Setup(t => t.DeleteAsync(item)).Throws(new MobileServiceInvalidOperationException("not found"' new HttpRequestMessage()' new HttpResponseMessage(HttpStatusCode.NotFound))); " is 178.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Operations,MobileServiceTableOperationTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Operations\MobileServiceTableOperationTests.cs,Initialize,The length of the statement  "            this.operation = new Mock<MobileServiceTableOperation>("test"' MobileServiceTableKind.Table' "abc") { CallBase = true }; " is 120.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Operations,MobileServiceTableOperationTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Operations\MobileServiceTableOperationTests.cs,Deserialize_Succeeds,The length of the statement  "            var serializedOperation = JObject.Parse("{\"id\":\"70cf6cc2-5981-4a32-ae6c-249572917a46\"'\"kind\": 0'\"tableName\":\"test\"'\"itemId\":\"abc\"'\"item\":null'\"__createdAt\":\"2014-03-11T20:37:10.3366689Z\"'\"sequence\":0}"); " is 225.
Long Statement,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Operations,InsertOperationTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Operations\InsertOperationTests.cs,Validate_Throws_WithDeleteOperation_WhenInsertIsAttempted,The length of the statement  "            Assert.AreEqual("The item is in inconsistent state in the local store. Please complete the pending sync by calling PushAsync() before deleting the item."' ex.Message); " is 167.
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Query,MobileServiceTableQueryDescriptionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Query\MobileServiceTableQueryDescriptionTests.cs,Parse_UnescapesThe_Uri,The following statement contains a magic number: var expectedDateTime = new DateTimeOffset(2014' 4' 4' 7' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Query,MobileServiceTableQueryDescriptionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Query\MobileServiceTableQueryDescriptionTests.cs,Parse_UnescapesThe_Uri,The following statement contains a magic number: var expectedDateTime = new DateTimeOffset(2014' 4' 4' 7' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Query,MobileServiceTableQueryDescriptionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Query\MobileServiceTableQueryDescriptionTests.cs,Parse_UnescapesThe_Uri,The following statement contains a magic number: var expectedDateTime = new DateTimeOffset(2014' 4' 4' 7' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Query,MobileServiceTableQueryDescriptionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Query\MobileServiceTableQueryDescriptionTests.cs,Parse_UnescapesThe_Uri,The following statement contains a magic number: var expectedDateTime = new DateTimeOffset(2014' 4' 4' 7' 0' 0' TimeSpan.Zero);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Query,MobileServiceTableQueryDescriptionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Query\MobileServiceTableQueryDescriptionTests.cs,Parse_UnescapesThe_Uri,The following statement contains a magic number: Assert.AreEqual(startswith.Arguments.Count' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Query,MobileServiceTableQueryDescriptionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Query\MobileServiceTableQueryDescriptionTests.cs,ToODataString_EscapesThe_Uri,The following statement contains a magic number: var datetime1 = new ConstantNode(new DateTimeOffset(2014' 4' 4' 7' 0' 0' TimeSpan.FromHours(0)));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Query,MobileServiceTableQueryDescriptionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Query\MobileServiceTableQueryDescriptionTests.cs,ToODataString_EscapesThe_Uri,The following statement contains a magic number: var datetime1 = new ConstantNode(new DateTimeOffset(2014' 4' 4' 7' 0' 0' TimeSpan.FromHours(0)));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Query,MobileServiceTableQueryDescriptionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Query\MobileServiceTableQueryDescriptionTests.cs,ToODataString_EscapesThe_Uri,The following statement contains a magic number: var datetime1 = new ConstantNode(new DateTimeOffset(2014' 4' 4' 7' 0' 0' TimeSpan.FromHours(0)));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Query,MobileServiceTableQueryDescriptionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Query\MobileServiceTableQueryDescriptionTests.cs,ToODataString_EscapesThe_Uri,The following statement contains a magic number: var datetime1 = new ConstantNode(new DateTimeOffset(2014' 4' 4' 7' 0' 0' TimeSpan.FromHours(0)));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Query,MobileServiceTableQueryDescriptionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Query\MobileServiceTableQueryDescriptionTests.cs,ToODataString_EscapesThe_Uri,The following statement contains a magic number: var datetime2 = new ConstantNode(new DateTime(2014' 4' 4' 7' 0' 0' DateTimeKind.Utc));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Query,MobileServiceTableQueryDescriptionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Query\MobileServiceTableQueryDescriptionTests.cs,ToODataString_EscapesThe_Uri,The following statement contains a magic number: var datetime2 = new ConstantNode(new DateTime(2014' 4' 4' 7' 0' 0' DateTimeKind.Utc));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Query,MobileServiceTableQueryDescriptionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Query\MobileServiceTableQueryDescriptionTests.cs,ToODataString_EscapesThe_Uri,The following statement contains a magic number: var datetime2 = new ConstantNode(new DateTime(2014' 4' 4' 7' 0' 0' DateTimeKind.Utc));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Query,MobileServiceTableQueryDescriptionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Query\MobileServiceTableQueryDescriptionTests.cs,ToODataString_EscapesThe_Uri,The following statement contains a magic number: var datetime2 = new ConstantNode(new DateTime(2014' 4' 4' 7' 0' 0' DateTimeKind.Utc));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified_WithoutFilter,The following statement contains a magic number: await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: true' firstQuery: firstQuery' secondQuery: secondQuery);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified_WithoutFilter,The following statement contains a magic number: await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: true' firstQuery: firstQuery' secondQuery: secondQuery);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified_WithoutFilter,The following statement contains a magic number: await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: true' firstQuery: firstQuery' secondQuery: secondQuery);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified,The following statement contains a magic number: query.Filter = new BinaryOperatorNode(BinaryOperatorKind.Equal' new ConstantNode(4)' new ConstantNode(3));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified,The following statement contains a magic number: query.Filter = new BinaryOperatorNode(BinaryOperatorKind.Equal' new ConstantNode(4)' new ConstantNode(3));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified,The following statement contains a magic number: await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: true' firstQuery: firstQuery' secondQuery: secondQuery);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified,The following statement contains a magic number: await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: true' firstQuery: firstQuery' secondQuery: secondQuery);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,SavesTheMaxUpdatedAt_IfQueryIdIsSpecified,The following statement contains a magic number: await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: true' firstQuery: firstQuery' secondQuery: secondQuery);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsHaveOlderUpdatedAt,The following statement contains a magic number: query.Filter = new BinaryOperatorNode(BinaryOperatorKind.Equal' new ConstantNode(4)' new ConstantNode(3));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsHaveOlderUpdatedAt,The following statement contains a magic number: query.Filter = new BinaryOperatorNode(BinaryOperatorKind.Equal' new ConstantNode(4)' new ConstantNode(3));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsHaveOlderUpdatedAt,The following statement contains a magic number: await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: false' firstQuery: firstQuery' secondQuery: secondQuery);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsHaveOlderUpdatedAt,The following statement contains a magic number: await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: false' firstQuery: firstQuery' secondQuery: secondQuery);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsHaveOlderUpdatedAt,The following statement contains a magic number: await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: false' firstQuery: firstQuery' secondQuery: secondQuery);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsDoNotHaveUpdatedAt,The following statement contains a magic number: query.Filter = new BinaryOperatorNode(BinaryOperatorKind.Equal' new ConstantNode(4)' new ConstantNode(3));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsDoNotHaveUpdatedAt,The following statement contains a magic number: query.Filter = new BinaryOperatorNode(BinaryOperatorKind.Equal' new ConstantNode(4)' new ConstantNode(3));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsDoNotHaveUpdatedAt,The following statement contains a magic number: await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: false' firstQuery: firstQuery' secondQuery: secondQuery);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsDoNotHaveUpdatedAt,The following statement contains a magic number: await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: false' firstQuery: firstQuery' secondQuery: secondQuery);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,DoesNotSaveTheMaxUpdatedAt_IfResultsDoNotHaveUpdatedAt,The following statement contains a magic number: await TestIncrementalSync(query' result' new DateTime(2014' 07' 09)' savesMax: false' firstQuery: firstQuery' secondQuery: secondQuery);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Actions,PullActionTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Actions\PullActionTests.cs,TestIncrementalSync,The following statement contains a magic number: this.settings.Setup(s => s.GetDeltaTokenAsync("test"' "latestItems")).Returns(Task.FromResult(new DateTimeOffset(2013' 1' 1' 0' 0' 0' TimeSpan.Zero)));
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Operations,DeleteOperationTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Operations\DeleteOperationTests.cs,Serialize_Succeeds_DeleteHasItem,The following statement contains a magic number: Assert.AreEqual(serializedOperation["kind"]' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Operations,UpdateOperationTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Operations\UpdateOperationTests.cs,Collapse_CancelsNewOperation_WithUpdateOperation,The following statement contains a magic number: Assert.AreEqual(this.operation.Version' 2);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Operations,UpdateOperationTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Operations\UpdateOperationTests.cs,Collapse_CancelsExistingOperation_WithDeleteOperation,The following statement contains a magic number: Assert.AreEqual(newOperation.Version' 2L);
Magic Number,Microsoft.WindowsAzure.MobileServices.Test.Unit.Table.Sync.Queue.Operations,InsertOperationTests,D:\research\architectureSmells\repos\Azure_azure-mobile-services\sdk\Managed\test\Microsoft.WindowsAzure.MobileServices.Test.Unit\Table\Sync\Queue\Operations\InsertOperationTests.cs,Collapse_CancelsExistingOperation_WithUpdateOperation,The following statement contains a magic number: Assert.AreEqual(this.operation.Version' 2);
