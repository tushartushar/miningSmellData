Implementation smell,Namespace,Class,File,Method,Description
Long Method,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The method has 381 lines of code.
Long Method,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The method has 251 lines of code.
Long Method,Bridge.ClientTest.Batch4.Reflection,TypeSystemLanguageSupportTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemLanguageSupportTests.cs,TypeIsWorksForReferenceTypes,The method has 140 lines of code.
Long Method,Bridge.ClientTest.Batch4.Reflection,TypeSystemLanguageSupportTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemLanguageSupportTests.cs,TypeAsWorksForReferenceTypes,The method has 140 lines of code.
Long Method,Bridge.ClientTest.Batch4.Reflection,TypeSystemLanguageSupportTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemLanguageSupportTests.cs,CastWorksForReferenceTypes,The method has 140 lines of code.
Long Method,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The method has 192 lines of code.
Long Method,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The method has 165 lines of code.
Long Method,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The method has 601 lines of code.
Long Method,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The method has 198 lines of code.
Long Method,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BinaryExpressionsWork,The method has 254 lines of code.
Long Method,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BlockWorks,The method has 109 lines of code.
Long Parameter List,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,RefTestMethod,The method has 6 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,AssertException,The method has 5 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithResultFactoryWorksWhenPromiseCompletes,The method has 5 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllParamArrayWithResultWorks,The method has 5 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllEnumerableWithResultWorks,The method has 5 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllParamArrayWithoutResultWorks,The method has 5 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllEnumerableWithoutResultWorks,The method has 5 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllShouldHaveAnErrorIfAnyIncludedTaskFaulted,The method has 6 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllShouldBeCancelledIfNoTaskWasFaultedButSomeWasCancelled,The method has 5 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,AssertEquivalent,The method has 5 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,AssertDateUtc,The method has 8 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AssertDateUtc,The method has 8 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,LambdaWorks,The method has 8 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BinaryExpressionsWork,The method has 87 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,UnaryExpressionsWork,The method has 15 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ConversionsWork,The method has 12 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MultiDimensionalArrayIndexWorks,The method has 5 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,CallWorks,The method has 11 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,InvokeWorks,The method has 5 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The method has 5 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The method has 8 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ObjectConstructionWorks,The method has 8 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListBindWorks,The method has 9 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListInitWorks,The method has 6 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,GotoWorks,The method has 6 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,SwitchWorks,The method has 7 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TryWorks,The method has 6 parameters.
Long Parameter List,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,DynamicWorks,The method has 9 parameters.
Long Statement,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,TypePropertiesAreCorrect_SPI_1548,The length of the statement  "	//Assert.True(interfaces.Contains(typeof(IReadOnlyCollection<int>))' "Interfaces should contain IReadOnlyCollection<int>"); " is 123.
Long Statement,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The length of the statement  "	Assert.AreEqual ("AAAABAAACAAADAAAEAAAFAAAGAAAHAAAIAAAJAAAKAAALAAAMAAANAAAOAAAPAAAQAAARAAASAAATAAAUAAAVAAAWAAAXAAAYAAAZAAAaAAAbAAAcAAAdAAAeAAAfAAAgAAAhAAAiAAAjAAAkAAAlAAAmAAAnAAAoAAApAAAqAAArAAAsAAAtAAAuAAAvAAAwAAAxAAAyAAAzAAA0AAA1AAA2AAA3AAA4AAA5AAA6AAA7AAA8AAA9AAA+AAA/AAA"' Convert.ToBase64String (testArr)); " is 311.
Long Statement,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndFormattingOptionsWorks,The length of the statement  "	Assert.AreEqual ("AAAABAAACAAADAAAEAAAFAAAGAAAHAAAIAAAJAAAKAAALAAAMAAANAAAOAAAPAAAQAAARAAASAAATAAAUAAAVAAAWAAAXAAAYAAAZAAAaAAAbAAAcAAAdAAAeAAAfAAAgAAAhAAAiAAAjAAAkAAAlAAAmAAAnAAAoAAApAAAqAAArAAAsAAAtAAAuAAAvAAAwAAAxAAAyAAAzAAA0AAA1AAA2AAA3AAA4AAA5AAA6AAA7AAA8AAA9AAA+AAA/AAA"' Convert.ToBase64String (testArr' Base64FormattingOptions.None)); " is 341.
Long Statement,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndFormattingOptionsWorks,The length of the statement  "	Assert.AreEqual ("AAAABAAACAAADAAAEAAAFAAAGAAAHAAAIAAAJAAAKAAALAAAMAAANAAAOAAAPAAAQAAARAAASAAA\r\n" + "TAAAUAAAVAAAWAAAXAAAYAAAZAAAaAAAbAAAcAAAdAAAeAAAfAAAgAAAhAAAiAAAjAAAkAAAlAAA\r\n" + "mAAAnAAAoAAApAAAqAAArAAAsAAAtAAAuAAAvAAAwAAAxAAAyAAAzAAA0AAA1AAA2AAA3AAA4AAA\r\n" + "5AAA6AAA7AAA8AAA9AAA+AAA/AAA"' Convert.ToBase64String (testArr' Base64FormattingOptions.InsertLineBreaks)); " is 380.
Long Statement,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndOffsetAndLengthWorks,The length of the statement  "	Assert.AreEqual ("AACIAACMAACQAACUAACYAACcAACgAACkAACoAACsAACwAAC0AAC4AAC8AADAAADEAADIAADMAADQAADUAADYAADcAADgAADkAADoAADsAADwAAD0AAD4AAD8"' Convert.ToBase64String (arr' 100' 90)); " is 180.
Long Statement,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndOffsetAndLengthAndFormattingOptionsWorks,The length of the statement  "	Assert.AreEqual ("AACIAACMAACQAACUAACYAACcAACgAACkAACoAACsAACwAAC0AAC4AAC8AADAAADEAADIAADMAADQAADUAADYAADcAADgAADkAADoAADsAADwAAD0AAD4AAD8"' Convert.ToBase64String (arr' 100' 90' Base64FormattingOptions.None)); " is 210.
Long Statement,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndOffsetAndLengthAndFormattingOptionsWorks,The length of the statement  "	Assert.AreEqual ("AACIAACMAACQAACUAACYAACcAACgAACkAACoAACsAACwAAC0AAC4AAC8AADAAADEAADIAADMAADQ\r\n" + "AADUAADYAADcAADgAADkAADoAADsAADwAAD0AAD4AAD8"' Convert.ToBase64String (arr' 100' 90' Base64FormattingOptions.InsertLineBreaks)); " is 231.
Long Statement,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndOffsetAndLengthAndFormattingOptionsWorks,The length of the statement  "	Assert.AreEqual ("AABgAABkAABoAABsAABwAAB0AAB4AAB8AACAAACEAACIAACMAACQAACUAACYAACcAACgAACkAACo\r\n" + "AACsAACwAAC0AAC4AAC8AADAAADEAADIAADMAADQAADUAADYAADcAADgAADkAADoAADsAADwAAD0"' Convert.ToBase64String (arr' 70' 114' Base64FormattingOptions.InsertLineBreaks)); " is 263.
Long Statement,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The length of the statement  "	Assert.AreEqual (GetTestArr ()' Convert.FromBase64String ("AAAABAAACAAADAAAEAAAFAAAGAAAHAAAIAAAJAAAKAAALAAAMAAANAAAOAAAPAAAQAAARAAASAAATAAAUAAAVAAAWAAAXAAAYAAAZAAAaAAAbAAAcAAAdAAAeAAAfAAAgAAAhAAAiAAAjAAAkAAAlAAAmAAAnAAAoAAApAAAqAAArAAAsAAAtAAAuAAAvAAAwAAAxAAAyAAAzAAA0AAA1AAA2AAA3AAA4AAA5AAA6AAA7AAA8AAA9AAA+AAA/AAA")); " is 319.
Long Statement,Bridge.ClientTest.Batch4,FormattableStringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\FormattableStringTests.cs,ToStringWithFormatProviderWorks_SPI_1651,The length of the statement  "	Assert.AreEqual ("x = Formatted: MyFormatProvider' y = Formatted: FMT' MyFormatProvider"' s.ToString (new MyFormatProvider ())); " is 128.
Long Statement,Bridge.ClientTest.Batch4,FormattableStringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\FormattableStringTests.cs,IFormattableToStringWorks_SPI_1633_1651,The length of the statement  "	Assert.AreEqual ("x = Formatted: MyFormatProvider' y = Formatted: FMT' MyFormatProvider"' s.ToString (null' new MyFormatProvider ())); " is 134.
Long Statement,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,Int32Int16Int16BytesConstructorWorks,The length of the statement  "	var g = new Guid ((int)0x789562a8' (short)0x267a' (short)0x4561' (byte)0x90' (byte)0x32' (byte)0xd9' (byte)0x1a' (byte)0x3d' (byte)0x54' (byte)0xbd' (byte)0x68); " is 161.
Long Statement,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,UInt32UInt16UInt16BytesConstructorWorks,The length of the statement  "	var g = new Guid ((uint)0x789562a8' (ushort)0x267a' (ushort)0x4561' (byte)0x90' (byte)0x32' (byte)0xd9' (byte)0x1a' (byte)0x3d' (byte)0x54' (byte)0xbd' (byte)0x68); " is 164.
Long Statement,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,ParseExactWorks,The length of the statement  "	Assert.Throws (() => Guid.ParseExact ("A6993C0A-A8CB-45D9-994B-90E7203E4FC6"' "B")' typeof(FormatException)' "Invalid B should throw"); " is 135.
Long Statement,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,ParseExactWorks,The length of the statement  "	Assert.Throws (() => Guid.ParseExact ("A6993C0A-A8CB-45D9-994B-90E7203E4FC6"' "P")' typeof(FormatException)' "Invalid P should throw"); " is 135.
Long Statement,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,ParseExactWorks,The length of the statement  "	Assert.Throws (() => Guid.ParseExact ("A6993C0A-A8CB-45D9-994B-90E7203E4FC6"' "N")' typeof(FormatException)' "Invalid N should throw"); " is 135.
Long Statement,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,ParseExactWorks,The length of the statement  "	Assert.Throws (() => Guid.ParseExact ("A6993C0AA8CB45D9994B90E7203E4FC6"' "D")' typeof(FormatException)' "Invalid D should throw"); " is 131.
Long Statement,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,GetHashCodeWorks,The length of the statement  "	Assert.AreEqual (new Guid ("f3d8b3c0-88f0-4148-844c-232ed03c153c").GetHashCode ()' new Guid ("F3D8B3C0-88F0-4148-844C-232ED03C153C").GetHashCode ()); " is 149.
Long Statement,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,GetHashCodeWorks,The length of the statement  "	Assert.AreNotEqual (new Guid ("F3D8B3C0-88F0-4148-844C-232ED03C153D").GetHashCode ()' new Guid ("F3D8B3C0-88F0-4148-844C-232ED03C153C").GetHashCode ()); " is 152.
Long Statement,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,EqualityOperatorWorks,The length of the statement  "	Assert.True (new Guid ("D311FC20-D7B6-40B6-88DB-9CD92AED6628") == new Guid ("D311FC20-D7B6-40B6-88DB-9CD92AED6628")' "Equal"); " is 126.
Long Statement,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,EqualityOperatorWorks,The length of the statement  "	Assert.False (new Guid ("D311FC20-D7B6-40B6-88DB-9CD92AED6628") == new Guid ("A317804C-A583-4857-804F-A0D276008C82")' "Not equal"); " is 131.
Long Statement,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,InequalityOperatorWorks,The length of the statement  "	Assert.False (new Guid ("D311FC20-D7B6-40B6-88DB-9CD92AED6628") != new Guid ("D311FC20-D7B6-40B6-88DB-9CD92AED6628")' "Equal"); " is 127.
Long Statement,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,InequalityOperatorWorks,The length of the statement  "	Assert.True (new Guid ("D311FC20-D7B6-40B6-88DB-9CD92AED6628") != new Guid ("A317804C-A583-4857-804F-A0D276008C82")' "Not equal"); " is 130.
Long Statement,Bridge.ClientTest.Batch4,IFormattableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\IFormattableTests.cs,CallingMethodThroughIFormattableInterfaceInvokesImplementingMethod_SPI_1565_1633,The length of the statement  "	Assert.AreEqual ("real success' The provider"' new MyFormattable ().ToString ("real"' new MyFormatProvider ())' "Non-interface call should succeed"); " is 149.
Long Statement,Bridge.ClientTest.Batch4,IFormattableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\IFormattableTests.cs,CallingMethodThroughIFormattableInterfaceInvokesImplementingMethod_SPI_1565_1633,The length of the statement  "	Assert.AreEqual ("real success' The provider"' ((IFormattable)new MyFormattable ()).ToString ("real"' new MyFormatProvider ())' "Interface call should succeed"); " is 161.
Long Statement,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,CreateWorks,The length of the statement  "	var d = (Func<int' int>)Delegate.CreateDelegate (this.GetType ()' this' this.GetType ().GetMethod ("AddForCreateWorks")); " is 121.
Long Statement,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,RemoveWorks,The length of the statement  "	Action d = (Action)Delegate.Combine (Delegate.Combine ((Action)(() => sb.Append ("1"))' d2)' (Action)(() => sb.Append ("3"))); " is 126.
Long Statement,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,SubtractWorks,The length of the statement  "	Action d = (Action)Delegate.Combine (Delegate.Combine ((Action)(() => sb.Append ("1"))' d2)' (Action)(() => sb.Append ("3"))); " is 126.
Long Statement,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,SubtractAssignWorks,The length of the statement  "	Action d = (Action)Delegate.Combine (Delegate.Combine ((Action)(() => sb.Append ("1"))' d2)' (Action)(() => sb.Append ("3"))); " is 126.
Long Statement,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,TypePropertiesAreCorrect,The length of the statement  "	Assert.AreEqual ("System.Collections.Generic.IDictionary$2[[Object]'[Object]]"' typeof(IDictionary<object' object>).FullName' "FullName should be correct"); " is 156.
Long Statement,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,TypePropertiesAreCorrect,The length of the statement  "	Assert.AreEqual ("System.Collections.Generic.Comparer$1[[Object]]"' typeof(Comparer<object>).FullName' "FullName should be correct"); " is 133.
Long Statement,Bridge.ClientTest.Batch4.Collections.Generic,IListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IListTests.cs,TypePropertiesAreCorrect,The length of the statement  "	Assert.AreEqual ("System.Collections.Generic.IList$1[[Object]]"' typeof(IList<object>).FullName' "FullName should be correct"); " is 127.
Long Statement,Bridge.ClientTest.Batch4.Collections.Generic,ICollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ICollectionTests.cs,TypePropertiesAreCorrect,The length of the statement  "	Assert.AreEqual ("System.Collections.Generic.ICollection$1[[Object]]"' typeof(ICollection<object>).FullName' "FullName should be correct"); " is 139.
Long Statement,Bridge.ClientTest.Batch4.Collections.Generic,EqualityComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\EqualityComparerTests.cs,TypePropertiesAreCorrect,The length of the statement  "	Assert.AreEqual ("System.Collections.Generic.EqualityComparer$1[[Object]]"' typeof(EqualityComparer<object>).FullName' "FullName should be correct"); " is 149.
Long Statement,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,TypePropertiesAreCorrect,The length of the statement  "	Assert.AreEqual ("System.Collections.Generic.Dictionary$2[[System.Int32' mscorlib]'[String]]"' typeof(Dictionary<int' string>).FullName' "FullName should be correct"); " is 167.
Long Statement,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,TypePropertiesAreCorrect,The length of the statement  "	Assert.True (dict is IEnumerable<KeyValuePair<int' string>>' "is IEnumerable<KeyValuePair<int'string>> should be true"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,TypePropertiesAreCorrect,The length of the statement  "	Assert.AreEqual ("System.Collections.Generic.List$1[[System.Int32' mscorlib]]"' typeof(List<int>).FullName' "FullName should be Array"); " is 136.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithIEnumerableInnerExceptionsWorks,The length of the statement  "	Assert.True ((object)ex1.InnerExceptions is ReadOnlyCollection<Exception>' "ex1 InnerExceptions is ReadOnlyCollection"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithIEnumerableInnerExceptionsWorks,The length of the statement  "	Assert.True ((object)ex2.InnerExceptions is ReadOnlyCollection<Exception>' "ex2 InnerExceptions is ReadOnlyCollection"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithIEnumerableInnerExceptionsWorks,The length of the statement  "	Assert.True ((object)ex3.InnerExceptions is ReadOnlyCollection<Exception>' "ex3 InnerExceptions is ReadOnlyCollection"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithInnerExceptionArrayWorks,The length of the statement  "	Assert.True ((object)ex1.InnerExceptions is ReadOnlyCollection<Exception>' "ex1 InnerExceptions is ReadOnlyCollection"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithInnerExceptionArrayWorks,The length of the statement  "	Assert.True ((object)ex2.InnerExceptions is ReadOnlyCollection<Exception>' "ex2 InnerExceptions is ReadOnlyCollection"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithInnerExceptionArrayWorks,The length of the statement  "	Assert.True ((object)ex3.InnerExceptions is ReadOnlyCollection<Exception>' "ex3 InnerExceptions is ReadOnlyCollection"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithMessageAndIEnumerableInnerExceptionsWorks,The length of the statement  "	Assert.True ((object)ex1.InnerExceptions is ReadOnlyCollection<Exception>' "ex1 InnerExceptions is ReadOnlyCollection"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithMessageAndIEnumerableInnerExceptionsWorks,The length of the statement  "	Assert.True ((object)ex2.InnerExceptions is ReadOnlyCollection<Exception>' "ex2 InnerExceptions is ReadOnlyCollection"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithMessageAndIEnumerableInnerExceptionsWorks,The length of the statement  "	Assert.True ((object)ex3.InnerExceptions is ReadOnlyCollection<Exception>' "ex3 InnerExceptions is ReadOnlyCollection"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithMessageAndInnerExceptionArrayWorks,The length of the statement  "	Assert.True ((object)ex1.InnerExceptions is ReadOnlyCollection<Exception>' "ex1 InnerExceptions is ReadOnlyCollection"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithMessageAndInnerExceptionArrayWorks,The length of the statement  "	Assert.True ((object)ex2.InnerExceptions is ReadOnlyCollection<Exception>' "ex2 InnerExceptions is ReadOnlyCollection"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithMessageAndInnerExceptionArrayWorks,The length of the statement  "	Assert.True ((object)ex3.InnerExceptions is ReadOnlyCollection<Exception>' "ex3 InnerExceptions is ReadOnlyCollection"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,FlattenWorks,The length of the statement  "	Exception ex0 = new Exception ()' ex1 = new Exception ()' ex2 = new Exception ()' ex3 = new Exception ()' ex4 = new Exception ()' ex5 = new Exception ()' ex6 = new Exception (); " is 177.
Long Statement,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,FlattenWorks,The length of the statement  "	var ae = new AggregateException ("The message"' ex0' ex1' new AggregateException (ex2' new AggregateException (new AggregateException ("X")' new AggregateException (ex3' ex4)))' new AggregateException (ex5' ex6)); " is 213.
Long Statement,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,Assume,The length of the statement  "	AssertException (() => Contract.Assume (a == 99)' ContractFailureKind.Assume' "Contract 'a === 99' failed"' null' null); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,AssumeWithUserMessage,The length of the statement  "	AssertException (() => Contract.Assume (a == 99' "is 99")' ContractFailureKind.Assume' "Contract 'a === 99' failed: is 99"' "is 99"' null); " is 139.
Long Statement,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,Assert,The length of the statement  "	AssertException (() => Contract.Assert (a == 99)' ContractFailureKind.Assert' "Contract 'a === 99' failed"' null' null); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,AssertWithUserMessage,The length of the statement  "	AssertException (() => Contract.Assert (a == 99' "is 99")' ContractFailureKind.Assert' "Contract 'a === 99' failed: is 99"' "is 99"' null); " is 139.
Long Statement,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,Requires,The length of the statement  "	AssertException (() => Contract.Requires (a == 99)' ContractFailureKind.Precondition' "Contract 'a === 99' failed"' null' null); " is 128.
Long Statement,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,RequiresWithUserMessage,The length of the statement  "	Bridge.Test.Assert.Throws<ContractException> (() => Contract.Requires (a != 0' "must not be zero")' "ContractException"); " is 121.
Long Statement,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,RequiresWithUserMessage,The length of the statement  "	AssertException (() => Contract.Requires (a == 99' "can only be 99")' ContractFailureKind.Precondition' "Contract 'a === 99' failed: can only be 99"' "can only be 99"' null); " is 174.
Long Statement,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,TypePropertiesForCancellationTokenRegistrationAreCorrect,The length of the statement  "	Assert.AreEqual ("System.Threading.CancellationTokenRegistration"' typeof(CancellationTokenRegistration).FullName' "FullName"); " is 127.
Long Statement,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWithoutArgumentsWorks,The length of the statement  "	Assert.True (calledHandlers.Contains (0) && calledHandlers.Contains (1) && calledHandlers.Contains (2) && calledHandlers.Contains (3) && calledHandlers.Contains (4)); " is 166.
Long Statement,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsFalse,The length of the statement  "	Assert.True (calledHandlers.Contains (0) && calledHandlers.Contains (1) && calledHandlers.Contains (2) && calledHandlers.Contains (3) && calledHandlers.Contains (4)); " is 166.
Long Statement,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWorksWhenPromiseFails,The length of the statement  "		}' ((PromiseException)task.Exception.InnerExceptions [0]).Arguments' "The PromiseException arguments should be correct"); " is 121.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,TaskCompletionSourceTypePropertiesAreCorrect,The length of the statement  "	Assert.AreEqual ("System.Threading.Tasks.TaskCompletionSource"' typeof(TaskCompletionSource<int>).FullName' "FullName should be correct"); " is 138.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,TaskTypePropertiesAreCorrect,The length of the statement  "	Assert.AreEqual ("System.Threading.Tasks.Task"' typeof(Task).FullName' "FullName for non-generic task should be correct"); " is 122.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,TaskTypePropertiesAreCorrect,The length of the statement  "	Assert.AreEqual ("System.Threading.Tasks.Task"' typeof(Task<int>).FullName' "FullName for generic task should be correct"); " is 123.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,TaskCompletionSourceWorksWhenSettingResult,The length of the statement  "	Assert.AreEqual (TaskStatus.RanToCompletion' task.Status' "Task should be completed directly after SetResult() is called"); " is 123.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,TaskCompletionSourceWorksWhenSettingASingleException,The length of the statement  "	Assert.AreEqual (TaskStatus.Faulted' task.Status' "The task should be faulted immediately after the SetException() call"); " is 122.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,TaskCompletionSourceWorksWhenSettingASingleException,The length of the statement  "	Assert.True (task.Exception.InnerExceptions [0] == ex' "The exception should be correct immediately after SetException()"); " is 123.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,TaskCompletionSourceWorksWhenSettingTwoExceptions,The length of the statement  "	Assert.AreEqual (TaskStatus.Faulted' task.Status' "The task should be faulted immediately after the SetException() call"); " is 122.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,TaskCompletionSourceWorksWhenSettingTwoExceptions,The length of the statement  "	Assert.True (task.Exception.InnerExceptions [0] == ex1' "InnerExceptions[0] should be correct immediately after SetException"); " is 127.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,TaskCompletionSourceWorksWhenSettingTwoExceptions,The length of the statement  "	Assert.True (task.Exception.InnerExceptions [1] == ex2' "InnerExceptions[1] should be correct immediately after SetException"); " is 127.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,TaskCompletionSourceWorksWhenCancelling,The length of the statement  "	Assert.AreEqual (TaskStatus.Canceled' task.Status' "The task should be cancelled immediately after the SetCanceled() call"); " is 124.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,ContinueWithForNonGenericTaskWorkWithNoResultAndNoException,The length of the statement  "		Assert.AreEqual (TaskStatus.RanToCompletion' continuedTask.Status' "continuedTask should have run to completion at point 3"); " is 125.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,ContinueWithForNonGenericTaskCanReturnAValue,The length of the statement  "		Assert.AreEqual (TaskStatus.RanToCompletion' continuedTask.Status' "continuedTask should have run to completion at point 3"); " is 125.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,ContinueWithWithNoReturnValueForGenericTaskWorks,The length of the statement  "		Assert.AreEqual (TaskStatus.RanToCompletion' continuedTask.Status' "continuedTask should have run to completion at point 3"); " is 125.
Long Statement,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,ContinueWithForGenericTaskCanReturnAValue,The length of the statement  "		Assert.AreEqual (TaskStatus.RanToCompletion' continuedTask.Status' "continuedTask should have run to completion at point 3"); " is 125.
Long Statement,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetManifestResourceDataAsBase64WithoutTypeWorks,The length of the statement  "	Assert.AreEqual ("AAECAwQFBgc="' Assembly.GetExecutingAssembly ().GetManifestResourceDataAsBase64 ("Bridge.ClientTest.Batch4.Reflection.Resource1.bin")' "#1"); " is 159.
Long Statement,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetManifestResourceDataAsBase64WithoutTypeWorks,The length of the statement  "	Assert.AreEqual ("EBESExQV"' Assembly.GetExecutingAssembly ().GetManifestResourceDataAsBase64 ("Bridge.ClientTest.Batch4.Reflection.Resource2.bin")' "#2"); " is 155.
Long Statement,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetManifestResourceDataAsBase64WithTypeWorks,The length of the statement  "	Assert.AreEqual ("AAECAwQFBgc="' Assembly.GetExecutingAssembly ().GetManifestResourceDataAsBase64 (typeof(AssemblyTests)' "Resource1.bin")' "#1"); " is 146.
Long Statement,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetManifestResourceDataAsBase64WithTypeWorks,The length of the statement  "	Assert.AreEqual ("EBESExQV"' Assembly.GetExecutingAssembly ().GetManifestResourceDataAsBase64 (typeof(AssemblyTests)' "Resource2.bin")' "#2"); " is 142.
Long Statement,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetManifestResourceDataAsBase64WithTypeWorks,The length of the statement  "	Assert.Null (Assembly.GetExecutingAssembly ().GetManifestResourceDataAsBase64 (typeof(AssemblyTests)' "NonExistent")' "#3"); " is 124.
Long Statement,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetManifestResourceDataWithoutTypeWorks,The length of the statement  "	}' Assembly.GetExecutingAssembly ().GetManifestResourceData ("Bridge.ClientTest.Batch4.Reflection.Resource1.bin")' "#1"); " is 121.
Long Statement,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetManifestResourceDataWithoutTypeWorks,The length of the statement  "	}' Assembly.GetExecutingAssembly ().GetManifestResourceData ("Bridge.ClientTest.Batch4.Reflection.Resource2.bin")' "#2"); " is 121.
Long Statement,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,DeepInheritanceWorks,The length of the statement  "	Assert.True (arr [0] is A1Attribute || arr [1] is A1Attribute || arr [2] is A1Attribute || arr [3] is A1Attribute' "A1 should exist"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,DeepInheritanceWorks,The length of the statement  "	Assert.True (arr [0] is A2Attribute || arr [1] is A2Attribute || arr [2] is A2Attribute || arr [3] is A2Attribute' "A2 should exist"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,DeepInheritanceWorks,The length of the statement  "	Assert.True (arr [0] is A3Attribute || arr [1] is A3Attribute || arr [2] is A3Attribute || arr [3] is A3Attribute' "A3 should exist"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,DeepInheritanceWorks,The length of the statement  "	Assert.True (arr [0] is A4Attribute || arr [1] is A4Attribute || arr [2] is A4Attribute || arr [3] is A4Attribute' "A4 should exist"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,AssertEqual,The length of the statement  "	int? actualValue = actual != null ? ((A1Attribute)actual.GetCustomAttributes (typeof(A1Attribute)' true) [0]).I : (int?)null; " is 125.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] { " is 148.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] { " is 122.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] { " is 124.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D2).GetMember ("FB"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new int[0]); " is 132.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D2).GetMember ("FBS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] { " is 130.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D2).GetMember ("FS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] { " is 129.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] { " is 148.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] { " is 122.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] { " is 124.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetMethod ("MB"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' null); " is 121.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetMethod ("MBS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 122); " is 123.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetMethod ("MS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 321); " is 122.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetMethod ("M3"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly' new[] { " is 121.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetMethod ("M3"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly' new[] { " is 121.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetMethod ("M3S"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy' new[] { " is 124.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetMethod ("M3S"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy' new[] { " is 124.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] { " is 151.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] { " is 125.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] { " is 127.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetProperty ("PB"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' null); " is 123.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetProperty ("PBS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 162); " is 125.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetProperty ("PS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 361); " is 124.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetProperty ("Item"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly' new[] { " is 125.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetProperty ("Item"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly' new[] { " is 125.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetProperty ("Item"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly' new[] { " is 125.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetProperty ("Item"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly' new[] { " is 125.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] { " is 147.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] { " is 121.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] { " is 123.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetField ("FB"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' null); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetField ("FBS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 142); " is 122.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetField ("FS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 341); " is 121.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] { " is 147.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] { " is 121.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The length of the statement  "	AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] { " is 123.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetEvent ("EB"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' null); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetEvent ("EBS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 182); " is 122.
Long Statement,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventWithNameAndBindingFlagsWorks,The length of the statement  "	AssertEqual (typeof(D2).GetEvent ("ES"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 381); " is 121.
Long Statement,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,IsStaticFlagWorksForMethod,The length of the statement  "	Assert.AreEqual (false' typeof(C2).GetMembers (BindingFlags.Instance) [0].IsStatic' "Instance member should not be static"); " is 124.
Long Statement,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,DeclaringTypeShouldBeCorrectForMethods,The length of the statement  "	Assert.AreEqual (typeof(C5<int' string>)' typeof(C5<int' string>).GetMethod ("M").DeclaringType' "Constructed generic type"); " is 125.
Long Statement,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,VoidIsConsideredObjectAsReturnType,The length of the statement  "	Assert.AreEqual (typeof(object)' typeof(C3).GetMethod ("M4").ReturnType' "Return type of void method should be object"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,CreateDelegateWorksForNonGenericInstanceMethods,The length of the statement  "	Assert.Throws (() => m.CreateDelegate (typeof(Func<string' string' string>))' "Without target with delegate type should throw"); " is 128.
Long Statement,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,CreateDelegateWorksForNonGenericInstanceMethods,The length of the statement  "	Assert.Throws (() => m.CreateDelegate (typeof(Func<string' string' string>)' (object)null)' "Null target with delegate type should throw"); " is 139.
Long Statement,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,CreateDelegateWorksNonGenericStaticMethods,The length of the statement  "	Assert.Throws (() => m.CreateDelegate (typeof(Func<string' string' string>)' new C8 (""))' "With target with delegate type should throw"); " is 138.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemLanguageSupportTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemLanguageSupportTests.cs,GetTypeWorksOnObjects,The length of the statement  "	Assert.AreEqual ("Bridge.ClientTest.Batch4.Reflection.TypeSystemLanguageSupportTests.C1"' new C1 ().GetType ().FullName); " is 121.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemLanguageSupportTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemLanguageSupportTests.cs,GetTypeWorksOnObjects,The length of the statement  "	Assert.AreEqual ("Bridge.ClientTest.Batch4.Reflection.TypeSystemLanguageSupportTests.C2$1[[System.Int32' mscorlib]]"' new C2<int> ().GetType ().FullName); " is 154.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemLanguageSupportTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemLanguageSupportTests.cs,GetTypeWorksOnObjects,The length of the statement  "	Assert.AreEqual ("Bridge.ClientTest.Batch4.Reflection.TypeSystemLanguageSupportTests.C2$1[[String]]"' new C2<string> ().GetType ().FullName); " is 141.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,AssemblyQualifiedNameReturnsTheNameWithTheNamespaceAndAssemblyName,The length of the statement  "	Assert.AreEqual ("Bridge.ClientTest.Batch4.Reflection.TypeSystemTests' Bridge.ClientTest.Batch4"' typeof(TypeSystemTests).AssemblyQualifiedName); " is 145.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,AssemblyQualifiedNameReturnsTheNameWithTheNamespaceAndAssemblyName,The length of the statement  "	Assert.AreEqual ("Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.BX$1' Bridge.ClientTest.Batch4"' typeof(BX<>).AssemblyQualifiedName); " is 139.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,AssemblyQualifiedNameReturnsTheNameWithTheNamespaceAndAssemblyName,The length of the statement  "	Assert.AreEqual ("Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.BX$1[[System.Int32' mscorlib]]' Bridge.ClientTest.Batch4"' typeof(BX<int>).AssemblyQualifiedName); " is 168.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,NamePropertyRemovesTheNamespace,The length of the statement  "	Assert.AreEqual ("G$2[[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.BX$1[[System.Double' mscorlib]]' Bridge.ClientTest.Batch4]'[String]]"' typeof(G<BX<double>' string>).Name' "nested generic"); " is 200.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,TypeOfInstantiatedGenericClassWorks,The length of the statement  "	Assert.AreEqual ("Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.G$2[[System.Int32' mscorlib]'[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.C' Bridge.ClientTest.Batch4]]"' typeof(G<int' C>).FullName); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,TypeOfInstantiatedGenericInterfaceWorks,The length of the statement  "	Assert.AreEqual ("Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.IG$1[[System.Int32' mscorlib]]"' typeof(IG<int>).FullName); " is 129.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,AccessingAStaticMemberInAGenericClassWorks,The length of the statement  "	Assert.AreEqual ("Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.G$2[[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.C' Bridge.ClientTest.Batch4]'[System.Int32' mscorlib]] Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.G$2[[String]'[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.C' Bridge.ClientTest.Batch4]]"' G<G<C' int>' G<string' C>>.field); " is 366.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,TypeOfNestedGenericClassWorks,The length of the statement  "	Assert.AreEqual ("Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.G$2[[System.Int32' mscorlib]'[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.G$2[[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.C' Bridge.ClientTest.Batch4]'[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.IG$1[[String]]' Bridge.ClientTest.Batch4]]' Bridge.ClientTest.Batch4]]"' typeof(G<int' G<C' IG<string>>>).FullName); " is 407.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,BaseTypeAndImplementedInterfacesForGenericTypeWorks,The length of the statement  "	Assert.AreEqual ("Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.BX$1[[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.G$2[[System.Int32' mscorlib]'[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.C' Bridge.ClientTest.Batch4]]' Bridge.ClientTest.Batch4]]"' typeof(G<int' G<C' IG<string>>>).BaseType.FullName); " is 322.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,BaseTypeAndImplementedInterfacesForGenericTypeWorks,The length of the statement  "	Assert.AreEqual ("Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.IG$1[[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.G$2[[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.G$2[[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.C' Bridge.ClientTest.Batch4]'[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests.IG$1[[String]]' Bridge.ClientTest.Batch4]]' Bridge.ClientTest.Batch4]'[String]]' Bridge.ClientTest.Batch4]]"' typeof(G<int' G<C' IG<string>>>).GetInterfaces () [0].FullName); " is 498.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.C2<string>).IsAssignableFrom (typeof(IsAssignableFromTypes.D2<int>))' "#12"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I2<string>).IsAssignableFrom (typeof(IsAssignableFromTypes.D2<int>))' "#14"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I2<int>).IsAssignableFrom (typeof(IsAssignableFromTypes.I5<string>))' "#20"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>))' "#33"); " is 159.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>))' "#34"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>))' "#35"); " is 159.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>))' "#36"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>))' "#37"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y1<IsAssignableFromTypes.X1>))' "#38"); " is 159.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y1<IsAssignableFromTypes.X1>))' "#39"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y1X1))' "#40"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y1<IsAssignableFromTypes.X1>))' "#41"); " is 159.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y1X1))' "#42"); " is 135.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y1<IsAssignableFromTypes.X2>))' "#43"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y1X2))' "#44"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y1<IsAssignableFromTypes.X2>))' "#45"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y1X2))' "#46"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>))' "#47"); " is 159.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>))' "#48"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>))' "#49"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>))' "#50"); " is 159.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>))' "#51"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y2<IsAssignableFromTypes.X1>))' "#52"); " is 159.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y2<IsAssignableFromTypes.X1>))' "#53"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y2X1))' "#54"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y2<IsAssignableFromTypes.X1>))' "#55"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y2X1))' "#56"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y2<IsAssignableFromTypes.X2>))' "#57"); " is 159.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y2X2))' "#58"); " is 135.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y2<IsAssignableFromTypes.X2>))' "#59"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y2X2))' "#60"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I1).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#61"); " is 159.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#62"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>))' "#63"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>))' "#64"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#65"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#66"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>))' "#67"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>))' "#68"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#69"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#70"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>))' "#71"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>))' "#72"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#73"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#74"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>))' "#75"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>))' "#76"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#77"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I1).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#78"); " is 159.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#79"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X1X1))' "#80"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>))' "#81"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X1X2))' "#82"); " is 163.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>))' "#83"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X2X1))' "#84"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#85"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X2X2))' "#86"); " is 163.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#87"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X1X1))' "#88"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>))' "#89"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X1X2))' "#90"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>))' "#91"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X2X1))' "#92"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#93"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X2X2))' "#94"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#95"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X1X1))' "#96"); " is 163.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>))' "#97"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X1X2))' "#98"); " is 163.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>))' "#99"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X2X1))' "#100"); " is 163.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#101"); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X2X2))' "#102"); " is 164.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#103"); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X1X1))' "#104"); " is 164.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>))' "#105"); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X1X2))' "#106"); " is 164.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>))' "#107"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X2X1))' "#108"); " is 163.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#109"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y3X2X2))' "#110"); " is 163.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>))' "#111"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>))' "#112"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>))' "#113"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>))' "#114"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>))' "#115"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>))' "#116"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>))' "#117"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>))' "#118"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>))' "#119"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>))' "#120"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>))' "#121"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>))' "#122"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>))' "#123"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>))' "#124"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>))' "#125"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>))' "#126"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X1>))' "#127"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X1>))' "#128"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X1>))' "#129"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X1>))' "#130"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X1>))' "#131"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X1>))' "#132"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X1>))' "#133"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X1>))' "#134"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X2>))' "#135"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X2>))' "#136"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X2>))' "#137"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X2>))' "#138"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X2>))' "#139"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X2>))' "#140"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X2>))' "#141"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X2>))' "#142"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#143"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#144"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#145"); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#146"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#147"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#148"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#149"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#150"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#151"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#152"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#153"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#154"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#155"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#156"); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#157"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#158"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#159"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#160"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#161"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#162"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#163"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#164"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#165"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#166"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#167"); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#168"); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#169"); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#170"); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#171"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#172"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#173"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#174"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#175"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#176"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#177"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>))' "#178"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#179"); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#180"); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#181"); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#182"); " is 212.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#183"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#184"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#185"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#186"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#187"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#188"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#189"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsAssignableFromWorks,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsAssignableFrom (typeof(IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>))' "#190"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (Type.IsInstanceOfType (new IsAssignableFromTypes.D2<int> ()' typeof(IsAssignableFromTypes.C2<int>))' "#7"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (Type.IsInstanceOfType (new IsAssignableFromTypes.D2<int> ()' typeof(IsAssignableFromTypes.C2<string>))' "#8"); " is 124.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (Type.IsInstanceOfType (new IsAssignableFromTypes.D2<int> ()' typeof(IsAssignableFromTypes.I2<int>))' "#9"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (Type.IsInstanceOfType (new IsAssignableFromTypes.D2<int> ()' typeof(IsAssignableFromTypes.I2<string>))' "#0"); " is 124.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (Type.IsInstanceOfType (new IsAssignableFromTypes.D3 ()' typeof(IsAssignableFromTypes.C2<string>))' "#12"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y1<IsAssignableFromTypes.X1> ())' "#48"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y1<IsAssignableFromTypes.X1> ())' "#49"); " is 157.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y1X1 ())' "#50"); " is 133.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y1<IsAssignableFromTypes.X1> ())' "#51"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y1X1 ())' "#52"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y1<IsAssignableFromTypes.X2> ())' "#53"); " is 157.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y1X2 ())' "#54"); " is 133.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y1<IsAssignableFromTypes.X2> ())' "#55"); " is 157.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y1X2 ())' "#56"); " is 133.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y2<IsAssignableFromTypes.X1> ())' "#57"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y2<IsAssignableFromTypes.X1> ())' "#58"); " is 157.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y2X1 ())' "#59"); " is 133.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y2<IsAssignableFromTypes.X1> ())' "#60"); " is 157.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y2X1 ())' "#61"); " is 133.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y2<IsAssignableFromTypes.X2> ())' "#62"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y2X2 ())' "#63"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y2<IsAssignableFromTypes.X2> ())' "#64"); " is 157.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y2X2 ())' "#65"); " is 133.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I1).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#66"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#67"); " is 209.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3X1X1 ())' "#68"); " is 161.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2> ())' "#69"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3X1X2 ())' "#70"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1> ())' "#71"); " is 209.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3X2X1 ())' "#72"); " is 161.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#73"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3X2X2 ())' "#74"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#75"); " is 209.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3X1X1 ())' "#76"); " is 161.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2> ())' "#77"); " is 209.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3X1X2 ())' "#78"); " is 161.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1> ())' "#79"); " is 209.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3X2X1 ())' "#80"); " is 161.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#81"); " is 209.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3X2X2 ())' "#82"); " is 161.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#83"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3X1X1 ())' "#84"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2> ())' "#85"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3X1X2 ())' "#86"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1> ())' "#87"); " is 209.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3X2X1 ())' "#88"); " is 161.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#89"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y3X2X2 ())' "#90"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#91"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3X1X1 ())' "#92"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2> ())' "#93"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3X1X2 ())' "#94"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1> ())' "#95"); " is 209.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3X2X1 ())' "#96"); " is 161.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#97"); " is 209.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y3X2X2 ())' "#98"); " is 161.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X1> ())' "#99"); " is 173.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X1> ())' "#100"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X1> ())' "#101"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X1> ())' "#102"); " is 174.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X1> ())' "#103"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X1> ())' "#104"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X1> ())' "#105"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X1> ())' "#106"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X2> ())' "#107"); " is 174.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X2> ())' "#108"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X2> ())' "#109"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X1>).IsInstanceOfType (new IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X2> ())' "#110"); " is 174.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X2> ())' "#111"); " is 174.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y4<string' IsAssignableFromTypes.X2> ())' "#112"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I9<string' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X2> ())' "#113"); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I9<object' IsAssignableFromTypes.X2>).IsInstanceOfType (new IsAssignableFromTypes.Y4<object' IsAssignableFromTypes.X2> ())' "#114"); " is 174.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#115"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#116"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#117"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#118"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#119"); " is 236.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#120"); " is 236.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#121"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#122"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#123"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#124"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#125"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#126"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#127"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#128"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#129"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#130"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#131"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#132"); " is 236.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#133"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#134"); " is 236.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#135"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#136"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#137"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I6<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y5<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#138"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#139"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#140"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#141"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#142"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#143"); " is 236.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#144"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#145"); " is 236.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#146"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#147"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#148"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#149"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1> ())' "#150"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I6<IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#151"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I7<IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#152"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I6<IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#153"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I7<IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#154"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#155"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#156"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#157"); " is 236.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I8<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#158"); " is 236.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#159"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.False (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X1' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#160"); " is 238.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X1>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#161"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,IsInstanceOfTypeWorksForReferenceTypes,The length of the statement  "	Assert.True (typeof(IsAssignableFromTypes.I7<IsAssignableFromTypes.I10<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2>>).IsInstanceOfType (new IsAssignableFromTypes.Y6<IsAssignableFromTypes.X2' IsAssignableFromTypes.X2> ())' "#162"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,StaticGetTypeMethodWorks,The length of the statement  "	Assert.AreEqual (typeof(TypeSystemTests)' Type.GetType ("Bridge.ClientTest.Batch4.Reflection.TypeSystemTests' Bridge.ClientTest.Batch4")' "#2"); " is 144.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,StaticGetTypeMethodWithGenericsWorks,The length of the statement  "	Assert.AreEqual (typeof(Dictionary<string' TypeSystemTests>)' Type.GetType ("System.Collections.Generic.Dictionary$2[[String]'[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests' Bridge.ClientTest.Batch4]]")' "#1"); " is 216.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,StaticGetTypeMethodWithGenericsWorks,The length of the statement  "	Assert.AreEqual (typeof(Dictionary<TypeSystemTests' string>)' Type.GetType ("System.Collections.Generic.Dictionary$2[[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests' Bridge.ClientTest.Batch4]'[String]]")' "#2"); " is 216.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,StaticGetTypeMethodWithGenericsWorks,The length of the statement  "	Assert.AreEqual (typeof(Dictionary<int' TypeSystemTests>)' Type.GetType ("System.Collections.Generic.Dictionary$2[[System.Int32' mscorlib]'[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests' Bridge.ClientTest.Batch4]]")' "#3"); " is 229.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,StaticGetTypeMethodWithGenericsWorks,The length of the statement  "	Assert.AreEqual (typeof(Dictionary<string' TypeSystemTests>)' Type.GetType ("System.Collections.Generic.Dictionary$2[[String]'[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests' Bridge.ClientTest.Batch4]]' mscorlib")' "#4"); " is 226.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,StaticGetTypeMethodWithGenericsWorks,The length of the statement  "	Assert.AreEqual (typeof(Dictionary<TypeSystemTests' string>)' Type.GetType ("System.Collections.Generic.Dictionary$2[[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests' Bridge.ClientTest.Batch4]'[String]]' mscorlib")' "#5"); " is 226.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,StaticGetTypeMethodWithGenericsWorks,The length of the statement  "	Assert.AreEqual (typeof(Dictionary<TypeSystemTests' TypeSystemTests>)' Type.GetType ("System.Collections.Generic.Dictionary$2[[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests' Bridge.ClientTest.Batch4]'[Bridge.ClientTest.Batch4.Reflection.TypeSystemTests' Bridge.ClientTest.Batch4]]' mscorlib")' "#6"); " is 306.
Long Statement,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,StaticGetTypeMethodWithGenericsWorks,The length of the statement  "	Assert.AreEqual (typeof(Dictionary<string' Dictionary<Dictionary<int' DateTime>' Dictionary<int' double>>>)' Type.GetType ("System.Collections.Generic.Dictionary$2[[String]'[System.Collections.Generic.Dictionary$2[[System.Collections.Generic.Dictionary$2[[System.Int32' mscorlib]'[Date]]' mscorlib]'[System.Collections.Generic.Dictionary$2[[System.Int32' mscorlib]'[System.Double]]' mscorlib]]' mscorlib]]' mscorlib")' "#7"); " is 425.
Long Statement,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,TypePropertiesAreCorrect_SPI_1559,The length of the statement  "	//Assert.True(interfaces.Contains(typeof(IReadOnlyCollection<byte>))' "Interfaces should contain IReadOnlyCollection<byte>"); " is 125.
Long Statement,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,TypePropertiesAreCorrect_SPI_1559,The length of the statement  "	//Assert.True(interfaces.Contains(typeof(IReadOnlyCollection<double>))' "Interfaces should contain IReadOnlyCollection<double>"); " is 129.
Long Statement,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,TypePropertiesAreCorrect_SPI_1559,The length of the statement  "	//Assert.False(interfaces.Contains(typeof(IReadOnlyCollection<float>))' "Interfaces should contain IReadOnlyCollection<float>"); " is 128.
Long Statement,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,TypePropertiesAreCorrect_SPI_1559,The length of the statement  "	//Assert.True(interfaces.Contains(typeof(IReadOnlyCollection<ushort>))' "Interfaces should contain IReadOnlyCollection<ushort>"); " is 129.
Long Statement,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,TypePropertiesAreCorrect_SPI_1559,The length of the statement  "	//Assert.True(interfaces.Contains(typeof(IReadOnlyCollection<uint>))' "Interfaces should contain IReadOnlyCollection<uint>"); " is 125.
Long Statement,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,TypePropertiesAreCorrect_SPI_1559,The length of the statement  "	//Assert.True(interfaces.Contains(typeof(IReadOnlyCollection<byte>))' "Interfaces should contain IReadOnlyCollection<byte>"); " is 125.
Long Statement,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,TypePropertiesAreCorrect_SPI_1559,The length of the statement  "	//Assert.True(interfaces.Contains(typeof(IReadOnlyCollection<short>))' "Interfaces should contain IReadOnlyCollection<short>"); " is 127.
Long Statement,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,TypePropertiesAreCorrect_SPI_1559,The length of the statement  "	//Assert.True(interfaces.Contains(typeof(IReadOnlyCollection<sbyte>))' "Interfaces should contain IReadOnlyCollection<sbyte>"); " is 127.
Long Statement,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,TypePropertiesAreCorrect_SPI_1559,The length of the statement  "	//Assert.True(interfaces.Contains(typeof(IReadOnlyCollection<int>))' "Interfaces should contain IReadOnlyCollection<int>"); " is 123.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,PropertiesWork,The length of the statement  "	Assert.AreEqual (15 * TimeSpan.TicksPerDay + 10 * TimeSpan.TicksPerHour + 20 * TimeSpan.TicksPerMinute + 5 * TimeSpan.TicksPerSecond + 14 * TimeSpan.TicksPerMillisecond' time.Ticks); " is 182.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AddWorks,The length of the statement  "	Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct"); " is 137.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractWorks,The length of the statement  "	Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct"); " is 135.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The length of the statement  "	Assert.AreEqual ((((((3 * 24) + 2) * 60 + 1) * 60) + 5) * 1000 + 4' actual1.TotalMilliseconds' "Negative should be negated"); " is 125.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The length of the statement  "	Assert.AreEqual ((((((2 * 24) + 1) * 60 + 5) * 60) + 4) * 1000 + 3' actual2.TotalMilliseconds' "Positive should be preserved"); " is 127.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,NegateWorks,The length of the statement  "	Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct"); " is 121.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AdditionOperatorWorks,The length of the statement  "	Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct"); " is 137.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractionOperatorWorks,The length of the statement  "	Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct"); " is 135.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryPlusWorks,The length of the statement  "	Assert.AreEqual ((((((-3 * 24) + 2) * 60 - 1) * 60) + 5) * 1000 - 4' actual.TotalMilliseconds' "Ticks should be correct"); " is 122.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryMinusWorks,The length of the statement  "	Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct"); " is 121.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TupleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TupleTests.cs,Tuple5Works,The length of the statement  "		var t = i == 0 ? Tuple.Create ("a"' "b"' "c"' "d"' "e") : new Tuple<string' string' string' string' string> ("a"' "b"' "c"' "d"' "e"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TupleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TupleTests.cs,Tuple6Works,The length of the statement  "		var t = i == 0 ? Tuple.Create ("a"' "b"' "c"' "d"' "e"' "f") : new Tuple<string' string' string' string' string' string> ("a"' "b"' "c"' "d"' "e"' "f"); " is 152.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TupleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TupleTests.cs,Tuple7Works,The length of the statement  "		var t = i == 0 ? Tuple.Create ("a"' "b"' "c"' "d"' "e"' "f"' "g") : new Tuple<string' string' string' string' string' string' string> ("a"' "b"' "c"' "d"' "e"' "f"' "g"); " is 170.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,TupleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TupleTests.cs,Tuple8Works,The length of the statement  "		var t = i == 0 ? Tuple.Create ("a"' "b"' "c"' "d"' "e"' "f"' "g"' "h") : new Tuple<string' string' string' string' string' string' string' string> ("a"' "b"' "c"' "d"' "e"' "f"' "g"' "h"); " is 188.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ConstantsWork,The length of the statement  "	Assert.True ((float)(object)float.MinValue < -3.4e38 && (float)(object)float.MinValue > -3.5e38' "MinValue should be correct"); " is 127.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ConstantsWork,The length of the statement  "	Assert.True ((float)(object)float.MaxValue > 3.4e38 && (float)(object)float.MaxValue < 3.5e38' "MaxValue should be correct"); " is 125.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,EnumTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\EnumTests.cs,ParseWorks,The length of the statement  "	Assert.AreEqual ((int)(FlagsEnum.FirstValue | FlagsEnum.ThirdValue)' (TestEnum)Enum.Parse (typeof(FlagsEnum)' "FirstValue' ThirdValue")); " is 137.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,EnumTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\EnumTests.cs,StaticToStringWorks,The length of the statement  "	Assert.AreEqual ("FirstValue' ThirdValue"' Enum.ToString (typeof(FlagsEnum)' FlagsEnum.FirstValue | FlagsEnum.ThirdValue)); " is 123.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	// #1590 All the tests below use decimal.ToString() that uses Template Bridge.Int.format({this}' 'G') with significant digits 15 instead of 29 " is 142.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0"' ((new Decimal (-1)) + 1).CompareTo (0).ToString ()' "(new Decimal(-1)).add(1).compare(0).ToString() == \"0\" FAILED"); " is 140.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0"' (decimal.Round (new Decimal (0)' 8' MidpointRounding.ToEven)).ToString ()' "(Decimal.round(new Decimal(0)' 8' Decimal.MidpointRounding.ToEven)).ToString() == \"0\" FAILED"); " is 195.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("8"' ((decimal.Parse ("8")) - decimal.Parse ("0")).ToString ()' "(new Decimal(\"8\").sub(\"0\").ToString() == \"8\" FAILED"); " is 142.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0"' ((decimal.Parse ("0.3")) - (decimal.Parse ("0.1")) * 3).ToString ()' "(new Decimal(\"0.3\")).sub((new Decimal(\"0.1\")).mul(3)).toString() == \"0\" FAILED"); " is 179.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("10000000000000000000000000000"' ((decimal.Parse ("9999999999999999999999999999")) + decimal.Parse ("1")).ToString ()' "(new Decimal(\"9999999999999999999999999999\")).add(\"1\").toString() == \"10000000000000000000000000000\" FAILED"); " is 253.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-10000000000000000000000000000"' (((decimal.Parse ("-9999999999999999999999999999")) - decimal.Parse ("1"))).ToString ()' "(new Decimal(\"-9999999999999999999999999999\")).sub(\"1\").toString() == \"-10000000000000000000000000000\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2"' (decimal.Round (decimal.Parse ("1.5")' 0' MidpointRounding.ToEven)).ToString ()' "(Decimal.round(new Decimal(\"1.5\")' 0' Decimal.MidpointRounding.ToEven)).toString() == \"2\" FAILED"); " is 207.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2"' (decimal.Round (decimal.Parse ("2.5")' 0' MidpointRounding.ToEven)).ToString ()' "(Decimal.round(new Decimal(\"2.5\")' 0' Decimal.MidpointRounding.ToEven)).toString() == \"2\" FAILED"); " is 207.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3"' (decimal.Round (decimal.Parse ("2.5")' 0' MidpointRounding.AwayFromZero)).ToString ()' "(Decimal.round(new Decimal(\"2.5\")' 0' Decimal.MidpointRounding.AwayFromZero)).toString() == \"3\" FAILED"); " is 219.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-3"' (decimal.Round (decimal.Parse ("-2.5")' 0' MidpointRounding.AwayFromZero)).ToString ()' "(Decimal.round(new Decimal(\"2.5\")' 0' Decimal.MidpointRounding.AwayFromZero)).toString() == \"-3\" FAILED"); " is 222.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-2"' (decimal.Round (decimal.Parse ("-2.5")' 0' MidpointRounding.ToEven)).ToString ()' "(Decimal.round(new Decimal(\"2.5\")' 0' Decimal.MidpointRounding.ToEven)).toString() == \"-2\" FAILED"); " is 210.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("4"' (decimal.Round (decimal.Parse ("3.5")' 0' MidpointRounding.ToEven)).ToString ()' "(Decimal.round(new Decimal(\"3.5\")' 0' Decimal.MidpointRounding.ToEven)).toString() == \"4\" FAILED"); " is 207.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-4"' (decimal.Round (decimal.Parse ("-3.5")' 0' MidpointRounding.ToEven)).ToString ()' "(Decimal.round(new Decimal(\"-3.5\")' 0' Decimal.MidpointRounding.ToEven)).toString() == \"-4\" FAILED"); " is 211.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.000000000000000000000000002"' (decimal.Round (decimal.Parse ("0.0000000000000000000000000015")' 27' MidpointRounding.ToEven)).ToString ()' "(Decimal.round(new Decimal(\"0.0000000000000000000000000015\")' 27' Decimal.MidpointRounding.ToEven)).toString() == \"0.000000000000000000000000002\" FAILED"); " is 319.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.000000000000000000002"' (decimal.Round (decimal.Parse ("0.0000000000000000000015")' 21' MidpointRounding.ToEven)).ToString ()' "(Decimal.round(new Decimal(\"0.0000000000000000000015\")' 21' Decimal.MidpointRounding.ToEven)).toString() == \"0.000000000000000000002\" FAILED"); " is 295.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("4176.1574388808460777044"' ((decimal.Parse ("4176.15752861656")) - decimal.Parse ("0.0000897357139222956")).ToString ()' "(new Decimal(\"4176.15752861656\")).sub(\"0.0000897357139222956\").toString() == \"4176.1574388808460777044\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000000000000000893034"' ((decimal.Parse ("0.00000008487069606076")) / decimal.Parse ("950363559159620")).ToString ()' "(new Decimal(\"0.00000008487069606076\")).div(\"950363559159620\").toString() == \"0.0000000000000000000000893034\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0446138050763932217"' ((decimal.Parse ("0.0000360056907106217")) + decimal.Parse ("0.0445777993856826")).ToString ()' "(new Decimal(\"0.0000360056907106217\")).add(\"0.0445777993856826\").toString() == \"0.0446138050763932217\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.3811764806776453983061876207"' ((decimal.Parse ("264385997906.507")) / decimal.Parse ("693605223062.264")).ToString ()' "(new Decimal(\"264385997906.507\")).div(\"693605223062.264\").toString() == \"0.3811764806776453983061876207\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("59.80408060158849245782"' ((decimal.Parse ("0.00000000734869245782")) + decimal.Parse ("59.8040805942398")).ToString ()' "(new Decimal(\"0.00000000734869245782\")).add(\"59.8040805942398\").toString() == \"59.80408060158849245782\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("81663498.972849838663929672"' ((decimal.Parse ("81663498.9723859")) + decimal.Parse ("0.000463938663929672")).ToString ()' "(new Decimal(\"81663498.9723859\")).add(\"0.000463938663929672\").toString() == \"81663498.972849838663929672\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00775515796977892822"' ((decimal.Parse ("0.00775515796977801")) + decimal.Parse ("0.00000000000000091822")).ToString ()' "(new Decimal(\"0.00775515796977801\")).add(\"0.00000000000000091822\").toString() == \"0.00775515796977892822\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2.1064457175212998398851037786"' ((decimal.Parse ("0.00000016207366118304")) / decimal.Parse ("0.00000007694176965251")).ToString ()' "(new Decimal(\"0.00000016207366118304\")).div(\"0.00000007694176965251\").toString() == \"2.1064457175212998398851037786\" FAILED"); " is 285.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000002340974167914459"' ((decimal.Parse ("0.00000008179731703447")) / decimal.Parse ("349415.71827485")).ToString ()' "(new Decimal(\"0.00000008179731703447\")).div(\"349415.71827485\").toString() == \"0.0000000000002340974167914459\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0002294787101020031897957214"' ((decimal.Parse ("0.0059732997352133")) / decimal.Parse ("26.029864524505")).ToString ()' "(new Decimal(\"0.0059732997352133\")).div(\"26.029864524505\").toString() == \"0.0002294787101020031897957214\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("418.23899073391138947972"' ((decimal.Parse ("0.00000006466138947972")) + decimal.Parse ("418.23899066925")).ToString ()' "(new Decimal(\"0.00000006466138947972\")).add(\"418.23899066925\").toString() == \"418.23899073391138947972\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0131911163190212695095445568"' ((decimal.Parse ("0.00000034492730644761")) * decimal.Parse ("38243.1778303549")).ToString ()' "(new Decimal(\"0.00000034492730644761\")).mul(\"38243.1778303549\").toString() == \"0.0131911163190212695095445568\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("9114466.43914248870254245"' ((decimal.Parse ("9114466.44883345")) - decimal.Parse ("0.00969096129745755")).ToString ()' "(new Decimal(\"9114466.44883345\")).sub(\"0.00969096129745755\").toString() == \"9114466.43914248870254245\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.1084411276877017282935587367"' ((decimal.Parse ("86700.1936243382")) / decimal.Parse ("799513.943400008")).ToString ()' "(new Decimal(\"86700.1936243382\")).div(\"799513.943400008\").toString() == \"0.1084411276877017282935587367\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("7026.76928435766970903"' ((decimal.Parse ("7026.76950349788")) - decimal.Parse ("0.00021914021029097")).ToString ()' "(new Decimal(\"7026.76950349788\")).sub(\"0.00021914021029097\").toString() == \"7026.76928435766970903\" FAILED"); " is 251.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.096260924858888151563666271"' ((decimal.Parse ("0.00000857409563314826")) / decimal.Parse ("0.0000890714030196291")).ToString ()' "(new Decimal(\"0.00000857409563314826\")).div(\"0.0000890714030196291\").toString() == \"0.096260924858888151563666271\" FAILED"); " is 281.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0008115914662837657985794708"' ((decimal.Parse ("514.340747387307")) / decimal.Parse ("633743.414950438")).ToString ()' "(new Decimal(\"514.340747387307\")).div(\"633743.414950438\").toString() == \"0.0008115914662837657985794708\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3705.2205420798556425449221712"' ((decimal.Parse ("36636.1514835787")) / decimal.Parse ("9.88771142432825")).ToString ()' "(new Decimal(\"36636.1514835787\")).div(\"9.88771142432825\").toString() == \"3705.2205420798556425449221712\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("6218044.0995191186755705386"' ((decimal.Parse ("0.0000196286755705386")) + decimal.Parse ("6218044.09949949")).ToString ()' "(new Decimal(\"0.0000196286755705386\")).add(\"6218044.09949949\").toString() == \"6218044.0995191186755705386\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("5425486298351.5378945951530291"' ((decimal.Parse ("9271557.35402906")) * decimal.Parse ("585175.293770235")).ToString ()' "(new Decimal(\"9271557.35402906\")).mul(\"585175.293770235\").toString() == \"5425486298351.5378945951530291\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.2685349089827301535187896581"' ((decimal.Parse ("0.00000630784588228345")) * decimal.Parse ("42571.5710234696")).ToString ()' "(new Decimal(\"0.00000630784588228345\")).mul(\"42571.5710234696\").toString() == \"0.2685349089827301535187896581\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.008990286561656895507628185"' ((decimal.Parse ("79.3662822709262")) / decimal.Parse ("8828.00361552648")).ToString ()' "(new Decimal(\"79.3662822709262\")).div(\"8828.00361552648\").toString() == \"0.008990286561656895507628185\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000016331518727729320183918"' ((decimal.Parse ("0.000195716225633266")) * decimal.Parse ("0.00834448890217789")).ToString ()' "(new Decimal(\"0.000195716225633266\")).mul(\"0.00834448890217789\").toString() == \"0.0000016331518727729320183918\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2.7085135033764363901309324465"' ((decimal.Parse ("1806435.33906268")) / decimal.Parse ("666947.141600282")).ToString ()' "(new Decimal(\"1806435.33906268\")).div(\"666947.141600282\").toString() == \"2.7085135033764363901309324465\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000252033112738355342"' ((decimal.Parse ("0.00000000625330349722")) / decimal.Parse ("248.114362008923")).ToString ()' "(new Decimal(\"0.00000000625330349722\")).div(\"248.114362008923\").toString() == \"0.0000000000252033112738355342\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("201.42054334961017180748893008"' ((decimal.Parse ("8526.34712985081")) * decimal.Parse ("0.0236233102267717")).ToString ()' "(new Decimal(\"8526.34712985081\")).mul(\"0.0236233102267717\").toString() == \"201.42054334961017180748893008\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("10.754236522481885"' ((decimal.Parse ("0.859148376090055")) + decimal.Parse ("9.89508814639183")).ToString ()' "(new Decimal(\"0.859148376090055\")).add(\"9.89508814639183\").toString() == \"10.754236522481885\" FAILED"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000264204888310194008"' ((decimal.Parse ("0.0000334460014633117")) * decimal.Parse ("0.00000078994461744556")).ToString ()' "(new Decimal(\"0.0000334460014633117\")).mul(\"0.00000078994461744556\").toString() == \"0.0000000000264204888310194008\" FAILED"); " is 283.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000001107996313797422688"' ((decimal.Parse ("0.00000007144519755218")) * decimal.Parse ("0.00155083385834044")).ToString ()' "(new Decimal(\"0.00000007144519755218\")).mul(\"0.00155083385834044\").toString() == \"0.0000000001107996313797422688\" FAILED"); " is 279.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("25826.170172550776692"' ((decimal.Parse ("0.911257319576692")) + decimal.Parse ("25825.2589152312")).ToString ()' "(new Decimal(\"0.911257319576692\")).add(\"25825.2589152312\").toString() == \"25826.170172550776692\" FAILED"); " is 245.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.5746307910946065180997849971"' ((decimal.Parse ("0.00000942942031166955")) * decimal.Parse ("60940.2033318487")).ToString ()' "(new Decimal(\"0.00000942942031166955\")).mul(\"60940.2033318487\").toString() == \"0.5746307910946065180997849971\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-7131030.08640726074029256"' ((decimal.Parse ("0.00613527925970744")) - decimal.Parse ("7131030.09254254")).ToString ()' "(new Decimal(\"0.00613527925970744\")).sub(\"7131030.09254254\").toString() == \"-7131030.08640726074029256\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("135954446978.90433258950744003"' ((decimal.Parse ("19833.5587139398")) * decimal.Parse ("6854768.17044186")).ToString ()' "(new Decimal(\"19833.5587139398\")).mul(\"6854768.17044186\").toString() == \"135954446978.90433258950744003\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000000184016013412280"' ((decimal.Parse ("0.00000070385779892274")) * decimal.Parse ("0.00000002614391908336")).ToString ()' "(new Decimal(\"0.00000070385779892274\")).mul(\"0.00000002614391908336\").toString() == \"0.0000000000000184016013412280\" FAILED"); " is 285.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0967324902802857563"' ((decimal.Parse ("0.0966366946681574")) + decimal.Parse ("0.0000957956121283563")).ToString ()' "(new Decimal(\"0.0966366946681574\")).add(\"0.0000957956121283563\").toString() == \"0.0967324902802857563\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3.4858202900689973161525454314"' ((decimal.Parse ("0.0000390598294507059")) * decimal.Parse ("89243.1006251104")).ToString ()' "(new Decimal(\"0.0000390598294507059\")).mul(\"89243.1006251104\").toString() == \"3.4858202900689973161525454314\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.2996117010710819"' ((decimal.Parse ("0.343008653886155")) - decimal.Parse ("0.0433969528150731")).ToString ()' "(new Decimal(\"0.343008653886155\")).sub(\"0.0433969528150731\").toString() == \"0.2996117010710819\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1019564526579.2600710122794931"' ((decimal.Parse ("675939.590519266")) * decimal.Parse ("1508366.34054238")).ToString ()' "(new Decimal(\"675939.590519266\")).mul(\"1508366.34054238\").toString() == \"1019564526579.2600710122794931\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("11701304382166.336357593545003"' ((decimal.Parse ("9346774.15031324")) / decimal.Parse ("0.00000079878053292575")).ToString ()' "(new Decimal(\"9346774.15031324\")).div(\"0.00000079878053292575\").toString() == \"11701304382166.336357593545003\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("18.8587275649694"' ((decimal.Parse ("0.8043270324377")) + decimal.Parse ("18.0544005325317")).ToString ()' "(new Decimal(\"0.8043270324377\")).add(\"18.0544005325317\").toString() == \"18.8587275649694\" FAILED"); " is 231.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.3614881075703330391274611142"' ((decimal.Parse ("8283.88977715927")) / decimal.Parse ("22916.0782987792")).ToString ()' "(new Decimal(\"8283.88977715927\")).div(\"22916.0782987792\").toString() == \"0.3614881075703330391274611142\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0179138243756634479624427415"' ((decimal.Parse ("0.0000051464565215383")) * decimal.Parse ("3480.80748388581")).ToString ()' "(new Decimal(\"0.0000051464565215383\")).mul(\"3480.80748388581\").toString() == \"0.0179138243756634479624427415\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3141.0458269720196"' ((decimal.Parse ("3232.22058975707")) - decimal.Parse ("91.1747627850504")).ToString ()' "(new Decimal(\"3232.22058975707\")).sub(\"91.1747627850504\").toString() == \"3141.0458269720196\" FAILED"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.049293336888446162"' ((decimal.Parse ("0.0490677212593461")) + decimal.Parse ("0.000225615629100062")).ToString ()' "(new Decimal(\"0.0490677212593461\")).add(\"0.000225615629100062\").toString() == \"0.049293336888446162\" FAILED"); " is 253.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000002423683290519788850175"' ((decimal.Parse ("0.802657312156007")) * decimal.Parse ("0.00000030195741742009")).ToString ()' "(new Decimal(\"0.802657312156007\")).mul(\"0.00000030195741742009\").toString() == \"0.0000002423683290519788850175\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.2919303207154997"' ((decimal.Parse ("0.205025212003396")) + decimal.Parse ("0.0869051087121037")).ToString ()' "(new Decimal(\"0.205025212003396\")).add(\"0.0869051087121037\").toString() == \"0.2919303207154997\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-2406054.4941042150782588707"' ((decimal.Parse ("0.0000560349217411293")) - decimal.Parse ("2406054.49416025")).ToString ()' "(new Decimal(\"0.0000560349217411293\")).sub(\"2406054.49416025\").toString() == \"-2406054.4941042150782588707\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-5980723.48834614900984"' ((decimal.Parse ("5.51880703099016")) - decimal.Parse ("5980729.00715318")).ToString ()' "(new Decimal(\"5.51880703099016\")).sub(\"5980729.00715318\").toString() == \"-5980723.48834614900984\" FAILED"); " is 247.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("35.122946130589056903"' ((decimal.Parse ("0.000517838589156903")) + decimal.Parse ("35.1224282919999")).ToString ()' "(new Decimal(\"0.000517838589156903\")).add(\"35.1224282919999\").toString() == \"35.122946130589056903\" FAILED"); " is 251.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1.0616395296301390956592254412"' ((decimal.Parse ("1.59909562747883")) / decimal.Parse ("1.50625102292106")).ToString ()' "(new Decimal(\"1.59909562747883\")).div(\"1.50625102292106\").toString() == \"1.0616395296301390956592254412\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.000000042829703949835811464"' ((decimal.Parse ("0.0037773409643105")) / decimal.Parse ("88194.4215335857")).ToString ()' "(new Decimal(\"0.0037773409643105\")).div(\"88194.4215335857\").toString() == \"0.000000042829703949835811464\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.4558196858208716574150445539"' ((decimal.Parse ("0.0000338279696804602")) * decimal.Parse ("13474.6391854597")).ToString ()' "(new Decimal(\"0.0000338279696804602\")).mul(\"13474.6391854597\").toString() == \"0.4558196858208716574150445539\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("10427310854.650511570542647536"' ((decimal.Parse ("929163.589109277")) / decimal.Parse ("0.0000891086495896376")).ToString ()' "(new Decimal(\"929163.589109277\")).div(\"0.0000891086495896376\").toString() == \"10427310854.650511570542647536\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00007532895142320958"' ((decimal.Parse ("0.0000743901701990469")) + decimal.Parse ("0.00000093878122416268")).ToString ()' "(new Decimal(\"0.0000743901701990469\")).add(\"0.00000093878122416268\").toString() == \"0.00007532895142320958\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0264909276176229880949718672"' ((decimal.Parse ("0.00000944754593514258")) * decimal.Parse ("2804.00093309768")).ToString ()' "(new Decimal(\"0.00000944754593514258\")).mul(\"2804.00093309768\").toString() == \"0.0264909276176229880949718672\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("6656977.0298766358644049502"' ((decimal.Parse ("0.0000534158644049502")) + decimal.Parse ("6656977.02982322")).ToString ()' "(new Decimal(\"0.0000534158644049502\")).add(\"6656977.02982322\").toString() == \"6656977.0298766358644049502\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("45.06192539196946555197"' ((decimal.Parse ("45.0619251211462")) + decimal.Parse ("0.00000027082326555197")).ToString ()' "(new Decimal(\"45.0619251211462\")).add(\"0.00000027082326555197\").toString() == \"45.06192539196946555197\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.7532491528292065411818236803"' ((decimal.Parse ("0.0192431670703195")) * decimal.Parse ("39.1437204736954")).ToString ()' "(new Decimal(\"0.0192431670703195\")).mul(\"39.1437204736954\").toString() == \"0.7532491528292065411818236803\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("32841.42265702106787944802"' ((decimal.Parse ("32841.4226569428")) + decimal.Parse ("0.00000007826787944802")).ToString ()' "(new Decimal(\"32841.4226569428\")).add(\"0.00000007826787944802\").toString() == \"32841.42265702106787944802\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.533546652893328"' ((decimal.Parse ("0.586064839077212")) - decimal.Parse ("1.11961149197054")).ToString ()' "(new Decimal(\"0.586064839077212\")).sub(\"1.11961149197054\").toString() == \"-0.533546652893328\" FAILED"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0152641533045431917355310935"' ((decimal.Parse ("0.0829612452457479")) / decimal.Parse ("5.43503747574754")).ToString ()' "(new Decimal(\"0.0829612452457479\")).div(\"5.43503747574754\").toString() == \"0.0152641533045431917355310935\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2.07943625828976430743030201"' ((decimal.Parse ("20551.2384514097")) * decimal.Parse ("0.0001011830145033")).ToString ()' "(new Decimal(\"20551.2384514097\")).mul(\"0.0001011830145033\").toString() == \"2.07943625828976430743030201\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00200242491956568541"' ((decimal.Parse ("0.00000000928487284541")) + decimal.Parse ("0.00200241563469284")).ToString ()' "(new Decimal(\"0.00000000928487284541\")).add(\"0.00200241563469284\").toString() == \"0.00200242491956568541\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("27474.82141819801736601648"' ((decimal.Parse ("27474.8214182792")) - decimal.Parse ("0.00000008118263398352")).ToString ()' "(new Decimal(\"27474.8214182792\")).sub(\"0.00000008118263398352\").toString() == \"27474.82141819801736601648\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("19505128.063929281919635586038"' ((decimal.Parse ("6414.16630540703")) * decimal.Parse ("3040.9451727946")).ToString ()' "(new Decimal(\"6414.16630540703\")).mul(\"3040.9451727946\").toString() == \"19505128.063929281919635586038\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000000211764764198660"' ((decimal.Parse ("0.00000000801082840562")) * decimal.Parse ("0.00000264348146628751")).ToString ()' "(new Decimal(\"0.00000000801082840562\")).mul(\"0.00000264348146628751\").toString() == \"0.0000000000000211764764198660\" FAILED"); " is 285.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("29310.7074822921281587436"' ((decimal.Parse ("29310.7074821883")) + decimal.Parse ("0.0000001038281587436")).ToString ()' "(new Decimal(\"29310.7074821883\")).add(\"0.0000001038281587436\").toString() == \"29310.7074822921281587436\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("617351.64866589589161"' ((decimal.Parse ("1.61116872989161")) + decimal.Parse ("617350.037497166")).ToString ()' "(new Decimal(\"1.61116872989161\")).add(\"617350.037497166\").toString() == \"617351.64866589589161\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("337233.524335051926147"' ((decimal.Parse ("337234.288611093")) - decimal.Parse ("0.764276041073853")).ToString ()' "(new Decimal(\"337234.288611093\")).sub(\"0.764276041073853\").toString() == \"337233.524335051926147\" FAILED"); " is 247.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("7.6904022918582991385960050287"' ((decimal.Parse ("32138.4941377391")) / decimal.Parse ("4179.03939456634")).ToString ()' "(new Decimal(\"32138.4941377391\")).div(\"4179.03939456634\").toString() == \"7.6904022918582991385960050287\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0047544230501718142812280295"' ((decimal.Parse ("0.00000007299932379881")) * decimal.Parse ("65129.6861773029")).ToString ()' "(new Decimal(\"0.00000007299932379881\")).mul(\"65129.6861773029\").toString() == \"0.0047544230501718142812280295\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("177.17069194538229090005225569"' ((decimal.Parse ("61.8418688242519")) * decimal.Parse ("2.86489873792273")).ToString ()' "(new Decimal(\"61.8418688242519\")).mul(\"2.86489873792273\").toString() == \"177.17069194538229090005225569\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.00090633373724312275"' ((decimal.Parse ("0.00000015291550483225")) - decimal.Parse ("0.000906486652747955")).ToString ()' "(new Decimal(\"0.00000015291550483225\")).sub(\"0.000906486652747955\").toString() == \"-0.00090633373724312275\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("210814147.39980929140353613261"' ((decimal.Parse ("201009.576768153")) / decimal.Parse ("0.0009534918754145")).ToString ()' "(new Decimal(\"201009.576768153\")).div(\"0.0009534918754145\").toString() == \"210814147.39980929140353613261\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("65.305649646129420352210897086"' ((decimal.Parse ("61261.8303211694")) / decimal.Parse ("938.078568288162")).ToString ()' "(new Decimal(\"61261.8303211694\")).div(\"938.078568288162\").toString() == \"65.305649646129420352210897086\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000567043665774743633592246"' ((decimal.Parse ("0.000743901346690907")) * decimal.Parse ("0.0762256538850375")).ToString ()' "(new Decimal(\"0.000743901346690907\")).mul(\"0.0762256538850375\").toString() == \"0.0000567043665774743633592246\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.05230421037247136292"' ((decimal.Parse ("0.00000023104058123708")) - decimal.Parse ("0.0523044414130526")).ToString ()' "(new Decimal(\"0.00000023104058123708\")).sub(\"0.0523044414130526\").toString() == \"-0.05230421037247136292\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00017292070654543156"' ((decimal.Parse ("0.000172902369020927")) + decimal.Parse ("0.00000001833752450456")).ToString ()' "(new Decimal(\"0.000172902369020927\")).add(\"0.00000001833752450456\").toString() == \"0.00017292070654543156\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("143190227.86340201590179660913"' ((decimal.Parse ("3255426.24725747")) * decimal.Parse ("43.9850934985956")).ToString ()' "(new Decimal(\"3255426.24725747\")).mul(\"43.9850934985956\").toString() == \"143190227.86340201590179660913\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.1676963823218234630227555937"' ((decimal.Parse ("21.2078276654742")) * decimal.Parse ("0.00790728710960005")).ToString ()' "(new Decimal(\"21.2078276654742\")).mul(\"0.00790728710960005\").toString() == \"0.1676963823218234630227555937\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("60489172470134.035656681147318"' ((decimal.Parse ("4188316.9832585")) / decimal.Parse ("0.00000006924077173194")).ToString ()' "(new Decimal(\"4188316.9832585\")).div(\"0.00000006924077173194\").toString() == \"60489172470134.035656681147318\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000318298804579463009"' ((decimal.Parse ("0.00000895273411132057")) * decimal.Parse ("0.00000355532511768645")).ToString ()' "(new Decimal(\"0.00000895273411132057\")).mul(\"0.00000355532511768645\").toString() == \"0.0000000000318298804579463009\" FAILED"); " is 285.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000089928800565775915465556"' ((decimal.Parse ("0.00000007554147973449")) / decimal.Parse ("0.00840014314204461")).ToString ()' "(new Decimal(\"0.00000007554147973449\")).div(\"0.00840014314204461\").toString() == \"0.0000089928800565775915465556\" FAILED"); " is 279.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.8703972221908718709658421930"' ((decimal.Parse ("1970.18939162148")) * decimal.Parse ("0.000441783528980698")).ToString ()' "(new Decimal(\"1970.18939162148\")).mul(\"0.000441783528980698\").toString() == \"0.8703972221908718709658421930\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0004450282480720230655413695"' ((decimal.Parse ("85093.5901911434")) * decimal.Parse ("0.00000000522986804379")).ToString ()' "(new Decimal(\"85093.5901911434\")).mul(\"0.00000000522986804379\").toString() == \"0.0004450282480720230655413695\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000029398859004321386304627"' ((decimal.Parse ("0.00000063867933891652")) / decimal.Parse ("0.21724630157335")).ToString ()' "(new Decimal(\"0.00000063867933891652\")).div(\"0.21724630157335\").toString() == \"0.0000029398859004321386304627\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("27880476326.169787243758340455"' ((decimal.Parse ("1174.96172020909")) / decimal.Parse ("0.00000004214281371894")).ToString ()' "(new Decimal(\"1174.96172020909\")).div(\"0.00000004214281371894\").toString() == \"27880476326.169787243758340455\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3.943883571766263181"' ((decimal.Parse ("0.000293723326313181")) + decimal.Parse ("3.94358984843995")).ToString ()' "(new Decimal(\"0.000293723326313181\")).add(\"3.94358984843995\").toString() == \"3.943883571766263181\" FAILED"); " is 249.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0600993529068002334144135817"' ((decimal.Parse ("8807.4719481205")) * decimal.Parse ("0.00000682367803846657")).ToString ()' "(new Decimal(\"8807.4719481205\")).mul(\"0.00000682367803846657\").toString() == \"0.0600993529068002334144135817\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000431097888386651556"' ((decimal.Parse ("0.00000003024844593846")) / decimal.Parse ("701.660730737103")).ToString ()' "(new Decimal(\"0.00000003024844593846\")).div(\"701.660730737103\").toString() == \"0.0000000000431097888386651556\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("399060.217697562714717"' ((decimal.Parse ("399059.695377508")) + decimal.Parse ("0.522320054714717")).ToString ()' "(new Decimal(\"399059.695377508\")).add(\"0.522320054714717\").toString() == \"399060.217697562714717\" FAILED"); " is 247.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0012047312567642078041930781"' ((decimal.Parse ("0.0000555624811237503")) / decimal.Parse ("0.0461202287329921")).ToString ()' "(new Decimal(\"0.0000555624811237503\")).div(\"0.0461202287329921\").toString() == \"0.0012047312567642078041930781\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00079532968335544253"' ((decimal.Parse ("0.000795415484716844")) - decimal.Parse ("0.00000008580136140147")).ToString ()' "(new Decimal(\"0.000795415484716844\")).sub(\"0.00000008580136140147\").toString() == \"0.00079532968335544253\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000000031232274783683"' ((decimal.Parse ("0.0000000384458527148")) * decimal.Parse ("0.00000008123704529425")).ToString ()' "(new Decimal(\"0.0000000384458527148\")).mul(\"0.00000008123704529425\").toString() == \"0.0000000000000031232274783683\" FAILED"); " is 283.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("7.09650010408205501"' ((decimal.Parse ("7.10522364224551")) - decimal.Parse ("0.00872353816345499")).ToString ()' "(new Decimal(\"7.10522364224551\")).sub(\"0.00872353816345499\").toString() == \"7.09650010408205501\" FAILED"); " is 245.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0007994485260663810953884227"' ((decimal.Parse ("0.00000104549135595816")) * decimal.Parse ("764.66297067919")).ToString ()' "(new Decimal(\"0.00000104549135595816\")).mul(\"764.66297067919\").toString() == \"0.0007994485260663810953884227\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00005958359417346475"' ((decimal.Parse ("0.00005906747824469")) + decimal.Parse ("0.00000051611592877475")).ToString ()' "(new Decimal(\"0.00005906747824469\")).add(\"0.00000051611592877475\").toString() == \"0.00005958359417346475\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("22.984133602578256"' ((decimal.Parse ("23.9156692400182")) - decimal.Parse ("0.931535637439944")).ToString ()' "(new Decimal(\"23.9156692400182\")).sub(\"0.931535637439944\").toString() == \"22.984133602578256\" FAILED"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("9044.376757482239651"' ((decimal.Parse ("0.847812742389651")) + decimal.Parse ("9043.52894473985")).ToString ()' "(new Decimal(\"0.847812742389651\")).add(\"9043.52894473985\").toString() == \"9044.376757482239651\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("6.0742324680822732941708751327"' ((decimal.Parse ("0.00575696487713464")) / decimal.Parse ("0.000947768283052262")).ToString ()' "(new Decimal(\"0.00575696487713464\")).div(\"0.000947768283052262\").toString() == \"6.0742324680822732941708751327\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("6530598.5049727231538"' ((decimal.Parse ("1.5620848031538")) + decimal.Parse ("6530596.94288792")).ToString ()' "(new Decimal(\"1.5620848031538\")).add(\"6530596.94288792\").toString() == \"6530598.5049727231538\" FAILED"); " is 241.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.83028435898026679"' ((decimal.Parse ("0.828937773047452")) + decimal.Parse ("0.00134658593281479")).ToString ()' "(new Decimal(\"0.828937773047452\")).add(\"0.00134658593281479\").toString() == \"0.83028435898026679\" FAILED"); " is 247.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("325484.521350383343706"' ((decimal.Parse ("0.376231768343706")) + decimal.Parse ("325484.145118615")).ToString ()' "(new Decimal(\"0.376231768343706\")).add(\"325484.145118615\").toString() == \"325484.521350383343706\" FAILED"); " is 247.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000777304608453940168"' ((decimal.Parse ("0.00000590405144537988")) / decimal.Parse ("75955.4411638321")).ToString ()' "(new Decimal(\"0.00000590405144537988\")).div(\"75955.4411638321\").toString() == \"0.0000000000777304608453940168\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("12434660348.106831437568180728"' ((decimal.Parse ("3653.47703623282")) * decimal.Parse ("3403514.0291804")).ToString ()' "(new Decimal(\"3653.47703623282\")).mul(\"3403514.0291804\").toString() == \"12434660348.106831437568180728\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-9833.95711193194680614"' ((decimal.Parse ("0.00173078235319386")) - decimal.Parse ("9833.9588427143")).ToString ()' "(new Decimal(\"0.00173078235319386\")).sub(\"9833.9588427143\").toString() == \"-9833.95711193194680614\" FAILED"); " is 251.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0015484436906515457496509768"' ((decimal.Parse ("0.00744602976247949")) / decimal.Parse ("4.80871846191991")).ToString ()' "(new Decimal(\"0.00744602976247949\")).div(\"4.80871846191991\").toString() == \"0.0015484436906515457496509768\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.00052546074370409361"' ((decimal.Parse ("0.00000004717649661339")) - decimal.Parse ("0.000525507920200707")).ToString ()' "(new Decimal(\"0.00000004717649661339\")).sub(\"0.000525507920200707\").toString() == \"-0.00052546074370409361\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00714578542212060626"' ((decimal.Parse ("0.00714523922984732")) + decimal.Parse ("0.00000054619227328626")).ToString ()' "(new Decimal(\"0.00714523922984732\")).add(\"0.00000054619227328626\").toString() == \"0.00714578542212060626\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("11896454.256511241955105336836"' ((decimal.Parse ("0.597390746975965")) / decimal.Parse ("0.00000005021586550875")).ToString ()' "(new Decimal(\"0.597390746975965\")).div(\"0.00000005021586550875\").toString() == \"11896454.256511241955105336836\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("364.437275047617911"' ((decimal.Parse ("363.565448840878")) + decimal.Parse ("0.871826206739911")).ToString ()' "(new Decimal(\"363.565448840878\")).add(\"0.871826206739911\").toString() == \"364.437275047617911\" FAILED"); " is 241.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000147725045250754551933182"' ((decimal.Parse ("0.932537071375426")) / decimal.Parse ("63126.5382110731")).ToString ()' "(new Decimal(\"0.932537071375426\")).div(\"63126.5382110731\").toString() == \"0.0000147725045250754551933182\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.4315077590098242678457705989"' ((decimal.Parse ("0.000505016916666653")) * decimal.Parse ("854.442187517156")).ToString ()' "(new Decimal(\"0.000505016916666653\")).mul(\"854.442187517156\").toString() == \"0.4315077590098242678457705989\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("412.7330880174277915666407937"' ((decimal.Parse ("0.00000767397499069291")) / decimal.Parse ("0.00000001859306950057")).ToString ()' "(new Decimal(\"0.00000767397499069291\")).div(\"0.00000001859306950057\").toString() == \"412.7330880174277915666407937\" FAILED"); " is 283.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("4.8954788657062800977983135139"' ((decimal.Parse ("48.1948680468811")) / decimal.Parse ("9.84477093436046")).ToString ()' "(new Decimal(\"48.1948680468811\")).div(\"9.84477093436046\").toString() == \"4.8954788657062800977983135139\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0064424440545718793484521534"' ((decimal.Parse ("35741.8810649504")) / decimal.Parse ("5547876.0486226")).ToString ()' "(new Decimal(\"35741.8810649504\")).div(\"5547876.0486226\").toString() == \"0.0064424440545718793484521534\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-7840059.26355683558168130721"' ((decimal.Parse ("0.00000038441831869279")) - decimal.Parse ("7840059.26355722")).ToString ()' "(new Decimal(\"0.00000038441831869279\")).sub(\"7840059.26355722\").toString() == \"-7840059.26355683558168130721\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000010412673718308481481839"' ((decimal.Parse ("0.58575165205903")) * decimal.Parse ("0.00000177766015370267")).ToString ()' "(new Decimal(\"0.58575165205903\")).mul(\"0.00000177766015370267\").toString() == \"0.0000010412673718308481481839\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0231355645607838738592882811"' ((decimal.Parse ("0.257475164838822")) * decimal.Parse ("0.0898555189789532")).ToString ()' "(new Decimal(\"0.257475164838822\")).mul(\"0.0898555189789532\").toString() == \"0.0231355645607838738592882811\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.89438686678278632674"' ((decimal.Parse ("0.894392650525269")) - decimal.Parse ("0.00000578374248267326")).ToString ()' "(new Decimal(\"0.894392650525269\")).sub(\"0.00000578374248267326\").toString() == \"0.89438686678278632674\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("337199.86960434358937474129803"' ((decimal.Parse ("0.866065117468156")) * decimal.Parse ("389347.016527013")).ToString ()' "(new Decimal(\"0.866065117468156\")).mul(\"389347.016527013\").toString() == \"337199.86960434358937474129803\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("6945.02700940949904670415"' ((decimal.Parse ("6945.02700909275")) + decimal.Parse ("0.00000031674904670415")).ToString ()' "(new Decimal(\"6945.02700909275\")).add(\"0.00000031674904670415\").toString() == \"6945.02700940949904670415\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.6270357829644514"' ((decimal.Parse ("0.0701352525829036")) - decimal.Parse ("0.697171035547355")).ToString ()' "(new Decimal(\"0.0701352525829036\")).sub(\"0.697171035547355\").toString() == \"-0.6270357829644514\" FAILED"); " is 245.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("4701135155925.6905911960346018"' ((decimal.Parse ("4111897.07187558")) / decimal.Parse ("0.00000087466046720495")).ToString ()' "(new Decimal(\"4111897.07187558\")).div(\"0.00000087466046720495\").toString() == \"4701135155925.6905911960346018\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1.2422351601221653564432762392"' ((decimal.Parse ("586.657266871378")) / decimal.Parse ("472.25942857203")).ToString ()' "(new Decimal(\"586.657266871378\")).div(\"472.25942857203\").toString() == \"1.2422351601221653564432762392\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("110083.27919112734183960167159"' ((decimal.Parse ("5794135.34411887")) / decimal.Parse ("52.6341092552217")).ToString ()' "(new Decimal(\"5794135.34411887\")).div(\"52.6341092552217\").toString() == \"110083.27919112734183960167159\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2702544.8136089281527176927398"' ((decimal.Parse ("0.836109915671921")) / decimal.Parse ("0.00000030937874238444")).ToString ()' "(new Decimal(\"0.836109915671921\")).div(\"0.00000030937874238444\").toString() == \"2702544.8136089281527176927398\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("9.5559085980678392684631700448"' ((decimal.Parse ("0.00855813363034191")) / decimal.Parse ("0.000895585547152714")).ToString ()' "(new Decimal(\"0.00855813363034191\")).div(\"0.000895585547152714\").toString() == \"9.5559085980678392684631700448\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00800141297577573362"' ((decimal.Parse ("0.00800136662460927")) + decimal.Parse ("0.00000004635116646362")).ToString ()' "(new Decimal(\"0.00800136662460927\")).add(\"0.00000004635116646362\").toString() == \"0.00800141297577573362\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00000763849065389414"' ((decimal.Parse ("0.00000759593656174649")) + decimal.Parse ("0.00000004255409214765")).ToString ()' "(new Decimal(\"0.00000759593656174649\")).add(\"0.00000004255409214765\").toString() == \"0.00000763849065389414\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("8586.7522222217789298276464381"' ((decimal.Parse ("92.2359921001997")) * decimal.Parse ("93.0954611828064")).ToString ()' "(new Decimal(\"92.2359921001997\")).mul(\"93.0954611828064\").toString() == \"8586.7522222217789298276464381\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.9931136155639471788378564663"' ((decimal.Parse ("1609.99809932429")) * decimal.Parse ("0.000616841483217125")).ToString ()' "(new Decimal(\"1609.99809932429\")).mul(\"0.000616841483217125\").toString() == \"0.9931136155639471788378564663\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("4.8983950361677169391106759502"' ((decimal.Parse ("7466.33106724654")) * decimal.Parse ("0.000656064537193656")).ToString ()' "(new Decimal(\"7466.33106724654\")).mul(\"0.000656064537193656\").toString() == \"4.8983950361677169391106759502\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0940287920654541467547713549"' ((decimal.Parse ("5.9157444098572")) / decimal.Parse ("62.9141806452135")).ToString ()' "(new Decimal(\"5.9157444098572\")).div(\"62.9141806452135\").toString() == \"0.0940287920654541467547713549\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000081194917301801093808069"' ((decimal.Parse ("0.00000000478547779135")) / decimal.Parse ("0.00058938144780201")).ToString ()' "(new Decimal(\"0.00000000478547779135\")).div(\"0.00058938144780201\").toString() == \"0.0000081194917301801093808069\" FAILED"); " is 279.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000237129540524444766519"' ((decimal.Parse ("0.242301107962756")) * decimal.Parse ("0.00000009786564432916")).ToString ()' "(new Decimal(\"0.242301107962756\")).mul(\"0.00000009786564432916\").toString() == \"0.0000000237129540524444766519\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1985896464.0383833019058040956"' ((decimal.Parse ("414250.732126763")) * decimal.Parse ("4793.94798855947")).ToString ()' "(new Decimal(\"414250.732126763\")).mul(\"4793.94798855947\").toString() == \"1985896464.0383833019058040956\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3.2317284500242951973203537433"' ((decimal.Parse ("2102650.26060056")) / decimal.Parse ("650627.146777989")).ToString ()' "(new Decimal(\"2102650.26060056\")).div(\"650627.146777989\").toString() == \"3.2317284500242951973203537433\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("105.92536134455608"' ((decimal.Parse ("111.791148368172")) - decimal.Parse ("5.86578702361592")).ToString ()' "(new Decimal(\"111.791148368172\")).sub(\"5.86578702361592\").toString() == \"105.92536134455608\" FAILED"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.8746476497299917849874735069"' ((decimal.Parse ("1.16457231397022")) * decimal.Parse ("0.751046233228895")).ToString ()' "(new Decimal(\"1.16457231397022\")).mul(\"0.751046233228895\").toString() == \"0.8746476497299917849874735069\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-8083400.16197386453424333806"' ((decimal.Parse ("0.00000185546575666194")) - decimal.Parse ("8083400.16197572")).ToString ()' "(new Decimal(\"0.00000185546575666194\")).sub(\"8083400.16197572\").toString() == \"-8083400.16197386453424333806\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1498.0600060982110689932047605"' ((decimal.Parse ("90.5140531205172")) / decimal.Parse ("0.0604208461290323")).ToString ()' "(new Decimal(\"90.5140531205172\")).div(\"0.0604208461290323\").toString() == \"1498.0600060982110689932047605\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0408729994202976123433973094"' ((decimal.Parse ("0.00000006767841650531")) * decimal.Parse ("603929.606081885")).ToString ()' "(new Decimal(\"0.00000006767841650531\")).mul(\"603929.606081885\").toString() == \"0.0408729994202976123433973094\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00008319630302265116"' ((decimal.Parse ("0.000082278563073966")) + decimal.Parse ("0.00000091773994868516")).ToString ()' "(new Decimal(\"0.000082278563073966\")).add(\"0.00000091773994868516\").toString() == \"0.00008319630302265116\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("5.499829306499955"' ((decimal.Parse ("6.2219416937893")) - decimal.Parse ("0.722112387289345")).ToString ()' "(new Decimal(\"6.2219416937893\")).sub(\"0.722112387289345\").toString() == \"5.499829306499955\" FAILED"); " is 235.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("367.786135251658876272"' ((decimal.Parse ("367.786185987194")) - decimal.Parse ("0.000050735535123728")).ToString ()' "(new Decimal(\"367.786185987194\")).sub(\"0.000050735535123728\").toString() == \"367.786135251658876272\" FAILED"); " is 253.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("10.312338090882360499767870669"' ((decimal.Parse ("517330.180628845")) / decimal.Parse ("50166.1384711816")).ToString ()' "(new Decimal(\"517330.180628845\")).div(\"50166.1384711816\").toString() == \"10.312338090882360499767870669\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000050661264951214749723215"' ((decimal.Parse ("0.243327718807071")) / decimal.Parse ("48030.3283073149")).ToString ()' "(new Decimal(\"0.243327718807071\")).div(\"48030.3283073149\").toString() == \"0.0000050661264951214749723215\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.00002335923605396378"' ((decimal.Parse ("0.00000005842985946612")) - decimal.Parse ("0.0000234176659134299")).ToString ()' "(new Decimal(\"0.00000005842985946612\")).sub(\"0.0000234176659134299\").toString() == \"-0.00002335923605396378\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("733335461.13670180722389446974"' ((decimal.Parse ("1060005.08231111")) * decimal.Parse ("691.822589697234")).ToString ()' "(new Decimal(\"1060005.08231111\")).mul(\"691.822589697234\").toString() == \"733335461.13670180722389446974\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("508358.93909651945980882198688"' ((decimal.Parse ("7.63294460141703")) * decimal.Parse ("66600.6326054226")).ToString ()' "(new Decimal(\"7.63294460141703\")).mul(\"66600.6326054226\").toString() == \"508358.93909651945980882198688\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1830847.8153588342112017535059"' ((decimal.Parse ("60437.9311485393")) * decimal.Parse ("30.2930259286859")).ToString ()' "(new Decimal(\"60437.9311485393\")).mul(\"30.2930259286859\").toString() == \"1830847.8153588342112017535059\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000810736550010910727"' ((decimal.Parse ("0.0000225892997917669")) / decimal.Parse ("278626.883066551")).ToString ()' "(new Decimal(\"0.0000225892997917669\")).div(\"278626.883066551\").toString() == \"0.0000000000810736550010910727\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("77.65643053701936456364"' ((decimal.Parse ("0.00000007573536456364")) + decimal.Parse ("77.656430461284")).ToString ()' "(new Decimal(\"0.00000007573536456364\")).add(\"77.656430461284\").toString() == \"77.65643053701936456364\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0248440823395338596229713692"' ((decimal.Parse ("0.293818466502157")) * decimal.Parse ("0.0845558913818355")).ToString ()' "(new Decimal(\"0.293818466502157\")).mul(\"0.0845558913818355\").toString() == \"0.0248440823395338596229713692\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00492439746169578524"' ((decimal.Parse ("0.00000572612989960524")) + decimal.Parse ("0.00491867133179618")).ToString ()' "(new Decimal(\"0.00000572612989960524\")).add(\"0.00491867133179618\").toString() == \"0.00492439746169578524\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("13138076.691468148650986791474"' ((decimal.Parse ("3923274.88117073")) * decimal.Parse ("3.34875253185106")).ToString ()' "(new Decimal(\"3923274.88117073\")).mul(\"3.34875253185106\").toString() == \"13138076.691468148650986791474\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0008676636364626068"' ((decimal.Parse ("0.000932349686013698")) - decimal.Parse ("0.0000646860495510912")).ToString ()' "(new Decimal(\"0.000932349686013698\")).sub(\"0.0000646860495510912\").toString() == \"0.0008676636364626068\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("41516.8349721547454"' ((decimal.Parse ("41601.7347674825")) - decimal.Parse ("84.8997953277546")).ToString ()' "(new Decimal(\"41601.7347674825\")).sub(\"84.8997953277546\").toString() == \"41516.8349721547454\" FAILED"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.33506006843864413748"' ((decimal.Parse ("0.00000371631919113748")) + decimal.Parse ("0.335056352119453")).ToString ()' "(new Decimal(\"0.00000371631919113748\")).add(\"0.335056352119453\").toString() == \"0.33506006843864413748\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("216355.8589961767217502328842"' ((decimal.Parse ("873.952093941137")) / decimal.Parse ("0.00403941958399463")).ToString ()' "(new Decimal(\"873.952093941137\")).div(\"0.00403941958399463\").toString() == \"216355.8589961767217502328842\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("45.974464247116189804566774409"' ((decimal.Parse ("278186.309746553")) * decimal.Parse ("0.000165265013540753")).ToString ()' "(new Decimal(\"278186.309746553\")).mul(\"0.000165265013540753\").toString() == \"45.974464247116189804566774409\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("411.8834926940230607258"' ((decimal.Parse ("411.883402341922")) + decimal.Parse ("0.0000903521010607258")).ToString ()' "(new Decimal(\"411.883402341922\")).add(\"0.0000903521010607258\").toString() == \"411.8834926940230607258\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2010677.7183839557954851115873"' ((decimal.Parse ("0.280687715057604")) * decimal.Parse ("7163397.64984483")).ToString ()' "(new Decimal(\"0.280687715057604\")).mul(\"7163397.64984483\").toString() == \"2010677.7183839557954851115873\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0268467935821811160643869611"' ((decimal.Parse ("484.96830299728")) * decimal.Parse ("0.0000553578314629187")).ToString ()' "(new Decimal(\"484.96830299728\")).mul(\"0.0000553578314629187\").toString() == \"0.0268467935821811160643869611\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0916931643365465232681665674"' ((decimal.Parse ("0.00000004376192267228")) / decimal.Parse ("0.00000047726483199618")).ToString ()' "(new Decimal(\"0.00000004376192267228\")).div(\"0.00000047726483199618\").toString() == \"0.0916931643365465232681665674\" FAILED"); " is 285.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0206632160994641183202944665"' ((decimal.Parse ("0.00000039209536760677")) / decimal.Parse ("0.000018975524706289")).ToString ()' "(new Decimal(\"0.00000039209536760677\")).div(\"0.000018975524706289\").toString() == \"0.0206632160994641183202944665\" FAILED"); " is 281.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("5657.8995636199841461392843417"' ((decimal.Parse ("6198172.99591292")) * decimal.Parse ("0.000912833437748641")).ToString ()' "(new Decimal(\"6198172.99591292\")).mul(\"0.000912833437748641\").toString() == \"5657.8995636199841461392843417\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("36474.31596809736535"' ((decimal.Parse ("7.05634104416535")) + decimal.Parse ("36467.2596270532")).ToString ()' "(new Decimal(\"7.05634104416535\")).add(\"36467.2596270532\").toString() == \"36474.31596809736535\" FAILED"); " is 241.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.4258812461246507845677082109"' ((decimal.Parse ("698.142959595725")) * decimal.Parse ("0.000610020111599015")).ToString ()' "(new Decimal(\"698.142959595725\")).mul(\"0.000610020111599015\").toString() == \"0.4258812461246507845677082109\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-3682769.2669420779522"' ((decimal.Parse ("88.0442409720478")) - decimal.Parse ("3682857.31118305")).ToString ()' "(new Decimal(\"88.0442409720478\")).sub(\"3682857.31118305\").toString() == \"-3682769.2669420779522\" FAILED"); " is 245.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-8049831.4965358431074197046"' ((decimal.Parse ("0.0000389968925802954")) - decimal.Parse ("8049831.49657484")).ToString ()' "(new Decimal(\"0.0000389968925802954\")).sub(\"8049831.49657484\").toString() == \"-8049831.4965358431074197046\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("36155.62014127020986184166"' ((decimal.Parse ("0.00000024290986184166")) + decimal.Parse ("36155.6201410273")).ToString ()' "(new Decimal(\"0.00000024290986184166\")).add(\"36155.6201410273\").toString() == \"36155.62014127020986184166\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3294378.802389452177"' ((decimal.Parse ("3294319.65169232")) + decimal.Parse ("59.150697132177")).ToString ()' "(new Decimal(\"3294319.65169232\")).add(\"59.150697132177\").toString() == \"3294378.802389452177\" FAILED"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("126628888131.45293056779587565"' ((decimal.Parse ("29296.0378012136")) * decimal.Parse ("4322389.56648968")).ToString ()' "(new Decimal(\"29296.0378012136\")).mul(\"4322389.56648968\").toString() == \"126628888131.45293056779587565\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("15.17547972741327"' ((decimal.Parse ("7.7507224575387")) + decimal.Parse ("7.42475726987457")).ToString ()' "(new Decimal(\"7.7507224575387\")).add(\"7.42475726987457\").toString() == \"15.17547972741327\" FAILED"); " is 233.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.7623358443707398129"' ((decimal.Parse ("0.762320778221973")) + decimal.Parse ("0.0000150661487668129")).ToString ()' "(new Decimal(\"0.762320778221973\")).add(\"0.0000150661487668129\").toString() == \"0.7623358443707398129\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-30306.453181107727"' ((decimal.Parse ("745.766049132573")) - decimal.Parse ("31052.2192302403")).ToString ()' "(new Decimal(\"745.766049132573\")).sub(\"31052.2192302403\").toString() == \"-30306.453181107727\" FAILED"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("43450065.810652162786851680039"' ((decimal.Parse ("4.03395124898942")) / decimal.Parse ("0.0000000928410849035")).ToString ()' "(new Decimal(\"4.03395124898942\")).div(\"0.0000000928410849035\").toString() == \"43450065.810652162786851680039\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("89.719799308907125"' ((decimal.Parse ("89.2452192442702")) + decimal.Parse ("0.474580064636925")).ToString ()' "(new Decimal(\"89.2452192442702\")).add(\"0.474580064636925\").toString() == \"89.719799308907125\" FAILED"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("7616096.4244623971027726383725"' ((decimal.Parse ("0.754648202450317")) / decimal.Parse ("0.00000009908595695118")).ToString ()' "(new Decimal(\"0.754648202450317\")).div(\"0.00000009908595695118\").toString() == \"7616096.4244623971027726383725\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0001721507228208858110900319"' ((decimal.Parse ("0.00000000703358706414")) / decimal.Parse ("0.0000408571451161323")).ToString ()' "(new Decimal(\"0.00000000703358706414\")).div(\"0.0000408571451161323\").toString() == \"0.0001721507228208858110900319\" FAILED"); " is 283.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000022714462393900636"' ((decimal.Parse ("0.00000008484566439169")) * decimal.Parse ("0.0000267715063070746")).ToString ()' "(new Decimal(\"0.00000008484566439169\")).mul(\"0.0000267715063070746\").toString() == \"0.0000000000022714462393900636\" FAILED"); " is 283.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("95740315594.555877584430293733"' ((decimal.Parse ("753944.105819773")) / decimal.Parse ("0.0000078748863646178")).ToString ()' "(new Decimal(\"753944.105819773\")).div(\"0.0000078748863646178\").toString() == \"95740315594.555877584430293733\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("6.4069192960141739237"' ((decimal.Parse ("6.40685234982839")) + decimal.Parse ("0.0000669461857839237")).ToString ()' "(new Decimal(\"6.40685234982839\")).add(\"0.0000669461857839237\").toString() == \"6.4069192960141739237\" FAILED"); " is 253.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2.7730492038105317936901033936"' ((decimal.Parse ("7091326.72152078")) * decimal.Parse ("0.00000039104801015512")).ToString ()' "(new Decimal(\"7091326.72152078\")).mul(\"0.00000039104801015512\").toString() == \"2.7730492038105317936901033936\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("39.225255132451082330972995533"' ((decimal.Parse ("0.0150400641909987")) * decimal.Parse ("2608.05104514959")).ToString ()' "(new Decimal(\"0.0150400641909987\")).mul(\"2608.05104514959\").toString() == \"39.225255132451082330972995533\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2.48947713311905352214"' ((decimal.Parse ("2.48947596293384")) + decimal.Parse ("0.00000117018521352214")).ToString ()' "(new Decimal(\"2.48947596293384\")).add(\"0.00000117018521352214\").toString() == \"2.48947713311905352214\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("880946682.13701250534829592747"' ((decimal.Parse ("720.791596789282")) / decimal.Parse ("0.00000081820115950806")).ToString ()' "(new Decimal(\"720.791596789282\")).div(\"0.00000081820115950806\").toString() == \"880946682.13701250534829592747\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("267.25912423523108411359660085"' ((decimal.Parse ("378388.367769489")) * decimal.Parse ("0.000706309038543286")).ToString ()' "(new Decimal(\"378388.367769489\")).mul(\"0.000706309038543286\").toString() == \"267.25912423523108411359660085\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-32046.841084978907"' ((decimal.Parse ("978.517128610293")) - decimal.Parse ("33025.3582135892")).ToString ()' "(new Decimal(\"978.517128610293\")).sub(\"33025.3582135892\").toString() == \"-32046.841084978907\" FAILED"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00139737929887948"' ((decimal.Parse ("0.00217247345120296")) - decimal.Parse ("0.00077509415232348")).ToString ()' "(new Decimal(\"0.00217247345120296\")).sub(\"0.00077509415232348\").toString() == \"0.00139737929887948\" FAILED"); " is 251.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000046530416190453426"' ((decimal.Parse ("0.000136329152219151")) * decimal.Parse ("0.0000000341309363647")).ToString ()' "(new Decimal(\"0.000136329152219151\")).mul(\"0.0000000341309363647\").toString() == \"0.0000000000046530416190453426\" FAILED"); " is 279.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-4850951.788916537256405138"' ((decimal.Parse ("0.000426702743594862")) - decimal.Parse ("4850951.78934324")).ToString ()' "(new Decimal(\"0.000426702743594862\")).sub(\"4850951.78934324\").toString() == \"-4850951.788916537256405138\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3607.9677572355331381655390708"' ((decimal.Parse ("219.782070359114")) / decimal.Parse ("0.0609157523423972")).ToString ()' "(new Decimal(\"219.782070359114\")).div(\"0.0609157523423972\").toString() == \"3607.9677572355331381655390708\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-59578.20478480686224"' ((decimal.Parse ("9.13404255133776")) - decimal.Parse ("59587.3388273582")).ToString ()' "(new Decimal(\"9.13404255133776\")).sub(\"59587.3388273582\").toString() == \"-59578.20478480686224\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("7579.1908166668147017746539623"' ((decimal.Parse ("0.000786728870489974")) / decimal.Parse ("0.00000010380116948104")).ToString ()' "(new Decimal(\"0.000786728870489974\")).div(\"0.00000010380116948104\").toString() == \"7579.1908166668147017746539623\" FAILED"); " is 281.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-4.1981967099609962025"' ((decimal.Parse ("0.0000004602920037975")) - decimal.Parse ("4.198197170253")).ToString ()' "(new Decimal(\"0.0000004602920037975\")).sub(\"4.198197170253\").toString() == \"-4.1981967099609962025\" FAILED"); " is 251.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00008656549534796066"' ((decimal.Parse ("0.0000866447461706795")) - decimal.Parse ("0.00000007925082271884")).ToString ()' "(new Decimal(\"0.0000866447461706795\")).sub(\"0.00000007925082271884\").toString() == \"0.00008656549534796066\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0002938065361778543390344760"' ((decimal.Parse ("0.00000388761161541921")) * decimal.Parse ("75.5750741695869")).ToString ()' "(new Decimal(\"0.00000388761161541921\")).mul(\"75.5750741695869\").toString() == \"0.0002938065361778543390344760\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.07021769672083374498"' ((decimal.Parse ("0.0702169635660094")) + decimal.Parse ("0.00000073315482434498")).ToString ()' "(new Decimal(\"0.0702169635660094\")).add(\"0.00000073315482434498\").toString() == \"0.07021769672083374498\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("248795975759.24153521774922170"' ((decimal.Parse ("274391.580035161")) * decimal.Parse ("906718.696424141")).ToString ()' "(new Decimal(\"274391.580035161\")).mul(\"906718.696424141\").toString() == \"248795975759.24153521774922170\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000063518043668020539957365"' ((decimal.Parse ("0.00000067736893644434")) * decimal.Parse ("9.37717102904672")).ToString ()' "(new Decimal(\"0.00000067736893644434\")).mul(\"9.37717102904672\").toString() == \"0.0000063518043668020539957365\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-25.24833340239167136"' ((decimal.Parse ("0.00810707191382864")) - decimal.Parse ("25.2564404743055")).ToString ()' "(new Decimal(\"0.00810707191382864\")).sub(\"25.2564404743055\").toString() == \"-25.24833340239167136\" FAILED"); " is 249.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("366652481671.12116866091032792"' ((decimal.Parse ("337218.588375123")) / decimal.Parse ("0.0000009197226399182")).ToString ()' "(new Decimal(\"337218.588375123\")).div(\"0.0000009197226399182\").toString() == \"366652481671.12116866091032792\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00097101861317670853"' ((decimal.Parse ("0.000970961897620448")) + decimal.Parse ("0.00000005671555626053")).ToString ()' "(new Decimal(\"0.000970961897620448\")).add(\"0.00000005671555626053\").toString() == \"0.00097101861317670853\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("7179480897.0413794612790482633"' ((decimal.Parse ("756541.015466927")) * decimal.Parse ("9489.8766230279")).ToString ()' "(new Decimal(\"756541.015466927\")).mul(\"9489.8766230279\").toString() == \"7179480897.0413794612790482633\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-3633.6398901126231489135"' ((decimal.Parse ("0.0000264943868510865")) - decimal.Parse ("3633.63991660701")).ToString ()' "(new Decimal(\"0.0000264943868510865\")).sub(\"3633.63991660701\").toString() == \"-3633.6398901126231489135\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-492238.57879213989935796"' ((decimal.Parse ("0.00587727810064204")) - decimal.Parse ("492238.584669418")).ToString ()' "(new Decimal(\"0.00587727810064204\")).sub(\"492238.584669418\").toString() == \"-492238.57879213989935796\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("7.9661666768610785486"' ((decimal.Parse ("7.96619214954143")) - decimal.Parse ("0.0000254726803514514")).ToString ()' "(new Decimal(\"7.96619214954143\")).sub(\"0.0000254726803514514\").toString() == \"7.9661666768610785486\" FAILED"); " is 253.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1.1127217455466662896347686896"' ((decimal.Parse ("346273.425196425")) / decimal.Parse ("311194.983455909")).ToString ()' "(new Decimal(\"346273.425196425\")).div(\"311194.983455909\").toString() == \"1.1127217455466662896347686896\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("4.8468358384313691963755308986"' ((decimal.Parse ("85.1793199242928")) / decimal.Parse ("17.5742118701219")).ToString ()' "(new Decimal(\"85.1793199242928\")).div(\"17.5742118701219\").toString() == \"4.8468358384313691963755308986\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.121457026045982637"' ((decimal.Parse ("0.121196779478899")) + decimal.Parse ("0.000260246567083637")).ToString ()' "(new Decimal(\"0.121196779478899\")).add(\"0.000260246567083637\").toString() == \"0.121457026045982637\" FAILED"); " is 251.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-30759.91316974471503713"' ((decimal.Parse ("0.00907333258496287")) - decimal.Parse ("30759.9222430773")).ToString ()' "(new Decimal(\"0.00907333258496287\")).sub(\"30759.9222430773\").toString() == \"-30759.91316974471503713\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("906.6246250772131248336"' ((decimal.Parse ("906.624596988142")) + decimal.Parse ("0.0000280890711248336")).ToString ()' "(new Decimal(\"906.624596988142\")).add(\"0.0000280890711248336\").toString() == \"906.6246250772131248336\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("279112366.91872199097653690363"' ((decimal.Parse ("5976325.60691625")) * decimal.Parse ("46.7030053710113")).ToString ()' "(new Decimal(\"5976325.60691625\")).mul(\"46.7030053710113\").toString() == \"279112366.91872199097653690363\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3487.68489765640454528"' ((decimal.Parse ("3487.68775513754")) - decimal.Parse ("0.00285748113545472")).ToString ()' "(new Decimal(\"3487.68775513754\")).sub(\"0.00285748113545472\").toString() == \"3487.68489765640454528\" FAILED"); " is 251.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000003104791009850215294554"' ((decimal.Parse ("0.000475329228898198")) / decimal.Parse ("1530.95402360473")).ToString ()' "(new Decimal(\"0.000475329228898198\")).div(\"1530.95402360473\").toString() == \"0.0000003104791009850215294554\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("843.49677454265676470597"' ((decimal.Parse ("843.496774716068")) - decimal.Parse ("0.00000017341123529403")).ToString ()' "(new Decimal(\"843.496774716068\")).sub(\"0.00000017341123529403\").toString() == \"843.49677454265676470597\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("27.32456344093503007762349601"' ((decimal.Parse ("0.00197717379870693")) * decimal.Parse ("13820.010895757")).ToString ()' "(new Decimal(\"0.00197717379870693\")).mul(\"13820.010895757\").toString() == \"27.32456344093503007762349601\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000133398085305956484381"' ((decimal.Parse ("0.000708901179353195")) / decimal.Parse ("53141.7806880277")).ToString ()' "(new Decimal(\"0.000708901179353195\")).div(\"53141.7806880277\").toString() == \"0.0000000133398085305956484381\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("63225.9975649597083791267"' ((decimal.Parse ("63225.9976413222")) - decimal.Parse ("0.0000763624916208733")).ToString ()' "(new Decimal(\"63225.9976413222\")).sub(\"0.0000763624916208733\").toString() == \"63225.9975649597083791267\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("90165.355585698323663902"' ((decimal.Parse ("90165.3561229656")) - decimal.Parse ("0.000537267276336098")).ToString ()' "(new Decimal(\"90165.3561229656\")).sub(\"0.000537267276336098\").toString() == \"90165.355585698323663902\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000004084178640305073762"' ((decimal.Parse ("0.0000351506077382484")) / decimal.Parse ("86065.3042728385")).ToString ()' "(new Decimal(\"0.0000351506077382484\")).div(\"86065.3042728385\").toString() == \"0.0000000004084178640305073762\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("6.36616576073451628351"' ((decimal.Parse ("6.36616601905141")) - decimal.Parse ("0.00000025831689371649")).ToString ()' "(new Decimal(\"6.36616601905141\")).sub(\"0.00000025831689371649\").toString() == \"6.36616576073451628351\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("950819.51903543659609543293061"' ((decimal.Parse ("0.0188125421380683")) / decimal.Parse ("0.00000001978560784822")).ToString ()' "(new Decimal(\"0.0188125421380683\")).div(\"0.00000001978560784822\").toString() == \"950819.51903543659609543293061\" FAILED"); " is 277.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0001281218872841341670208902"' ((decimal.Parse ("0.0000201579493098696")) * decimal.Parse ("6.35589887218359")).ToString ()' "(new Decimal(\"0.0000201579493098696\")).mul(\"6.35589887218359\").toString() == \"0.0001281218872841341670208902\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("100501.68372248376"' ((decimal.Parse ("96670.6671736532")) + decimal.Parse ("3831.01654883056")).ToString ()' "(new Decimal(\"96670.6671736532\")).add(\"3831.01654883056\").toString() == \"100501.68372248376\" FAILED"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.007565086812628940345573773"' ((decimal.Parse ("6377.50250118668")) / decimal.Parse ("843017.755003189")).ToString ()' "(new Decimal(\"6377.50250118668\")).div(\"843017.755003189\").toString() == \"0.007565086812628940345573773\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("8.6365193165306442105296800123"' ((decimal.Parse ("0.00984376350876119")) * decimal.Parse ("877.359488456212")).ToString ()' "(new Decimal(\"0.00984376350876119\")).mul(\"877.359488456212\").toString() == \"8.6365193165306442105296800123\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3395749.5740729445309136648368"' ((decimal.Parse ("9.97239828574117")) / decimal.Parse ("0.00000293672959922661")).ToString ()' "(new Decimal(\"9.97239828574117\")).div(\"0.00000293672959922661\").toString() == \"3395749.5740729445309136648368\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000503282881253889121331449"' ((decimal.Parse ("0.00000005182576428718")) * decimal.Parse ("971.10556530352")).ToString ()' "(new Decimal(\"0.00000005182576428718\")).mul(\"971.10556530352\").toString() == \"0.0000503282881253889121331449\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1755687.77683918075262034347"' ((decimal.Parse ("1755687.77683922")) - decimal.Parse ("0.00000003924737965653")).ToString ()' "(new Decimal(\"1755687.77683922\")).sub(\"0.00000003924737965653\").toString() == \"1755687.77683918075262034347\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000667441803526521607590"' ((decimal.Parse ("0.0000688309593912358")) * decimal.Parse ("0.000969682551906296")).ToString ()' "(new Decimal(\"0.0000688309593912358\")).mul(\"0.000969682551906296\").toString() == \"0.0000000667441803526521607590\" FAILED"); " is 279.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("5007756.38734349805052136446"' ((decimal.Parse ("5007756.38735283")) - decimal.Parse ("0.00000933194947863554")).ToString ()' "(new Decimal(\"5007756.38735283\")).sub(\"0.00000933194947863554\").toString() == \"5007756.38734349805052136446\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("8519.28502213539257358044"' ((decimal.Parse ("8519.28502252292")) - decimal.Parse ("0.00000038752742641956")).ToString ()' "(new Decimal(\"8519.28502252292\")).sub(\"0.00000038752742641956\").toString() == \"8519.28502213539257358044\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("8376.91325157743275230985"' ((decimal.Parse ("8376.9132515308")) + decimal.Parse ("0.00000004663275230985")).ToString ()' "(new Decimal(\"8376.9132515308\")).add(\"0.00000004663275230985\").toString() == \"8376.91325157743275230985\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00610815784999223683"' ((decimal.Parse ("0.0061082019266245")) - decimal.Parse ("0.00000004407663226317")).ToString ()' "(new Decimal(\"0.0061082019266245\")).sub(\"0.00000004407663226317\").toString() == \"0.00610815784999223683\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-6.6857970204242414917"' ((decimal.Parse ("0.0000091555889785083")) - decimal.Parse ("6.68580617601322")).ToString ()' "(new Decimal(\"0.0000091555889785083\")).sub(\"6.68580617601322\").toString() == \"-6.6857970204242414917\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000049877587914779734645683"' ((decimal.Parse ("0.679050468690251")) * decimal.Parse ("0.00000734519600744601")).ToString ()' "(new Decimal(\"0.679050468690251\")).mul(\"0.00000734519600744601\").toString() == \"0.0000049877587914779734645683\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1331757.9219696450201665110972"' ((decimal.Parse ("72.9822536338969")) / decimal.Parse ("0.0000548014413354925")).ToString ()' "(new Decimal(\"72.9822536338969\")).div(\"0.0000548014413354925\").toString() == \"1331757.9219696450201665110972\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0002184819375517202908665847"' ((decimal.Parse ("0.00000018985219774295")) / decimal.Parse ("0.000868960610064194")).ToString ()' "(new Decimal(\"0.00000018985219774295\")).div(\"0.000868960610064194\").toString() == \"0.0002184819375517202908665847\" FAILED"); " is 281.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-873438.38944748009399"' ((decimal.Parse ("7.31134765190601")) - decimal.Parse ("873445.700795132")).ToString ()' "(new Decimal(\"7.31134765190601\")).sub(\"873445.700795132\").toString() == \"-873438.38944748009399\" FAILED"); " is 245.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("4392083.3322472776428269303282"' ((decimal.Parse ("4389325.52672426")) / decimal.Parse ("0.999372096266305")).ToString ()' "(new Decimal(\"4389325.52672426\")).div(\"0.999372096266305\").toString() == \"4392083.3322472776428269303282\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3511082.4535909329651685"' ((decimal.Parse ("3511082.54562648")) - decimal.Parse ("0.0920355470348315")).ToString ()' "(new Decimal(\"3511082.54562648\")).sub(\"0.0920355470348315\").toString() == \"3511082.4535909329651685\" FAILED"); " is 253.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("619.45098835034374784773429077"' ((decimal.Parse ("310.688569820807")) / decimal.Parse ("0.501554724528247")).ToString ()' "(new Decimal(\"310.688569820807\")).div(\"0.501554724528247\").toString() == \"619.45098835034374784773429077\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000173331929981605953452824"' ((decimal.Parse ("0.00000003554128810556")) / decimal.Parse ("0.00205047553034987")).ToString ()' "(new Decimal(\"0.00000003554128810556\")).div(\"0.00205047553034987\").toString() == \"0.0000173331929981605953452824\" FAILED"); " is 279.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2197324.21086973644253935499"' ((decimal.Parse ("2197324.21086976")) - decimal.Parse ("0.00000002355746064501")).ToString ()' "(new Decimal(\"2197324.21086976\")).sub(\"0.00000002355746064501\").toString() == \"2197324.21086973644253935499\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("4.4226279162585874248"' ((decimal.Parse ("4.42253004499829")) + decimal.Parse ("0.0000978712602974248")).ToString ()' "(new Decimal(\"4.42253004499829\")).add(\"0.0000978712602974248\").toString() == \"4.4226279162585874248\" FAILED"); " is 253.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("352307.69884553949094527331"' ((decimal.Parse ("352307.698853457")) - decimal.Parse ("0.00000791750905472669")).ToString ()' "(new Decimal(\"352307.698853457\")).sub(\"0.00000791750905472669\").toString() == \"352307.69884553949094527331\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("17096896.787851146291328234831"' ((decimal.Parse ("721.870396156735")) * decimal.Parse ("23684.1639148463")).ToString ()' "(new Decimal(\"721.870396156735\")).mul(\"23684.1639148463\").toString() == \"17096896.787851146291328234831\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000058569075628029528804"' ((decimal.Parse ("0.000786162371181959")) / decimal.Parse ("134228.236104468")).ToString ()' "(new Decimal(\"0.000786162371181959\")).div(\"134228.236104468\").toString() == \"0.0000000058569075628029528804\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-5591696.2786194911832293"' ((decimal.Parse ("0.0291847988167707")) - decimal.Parse ("5591696.30780429")).ToString ()' "(new Decimal(\"0.0291847988167707\")).sub(\"5591696.30780429\").toString() == \"-5591696.2786194911832293\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("67077.9713607756712"' ((decimal.Parse ("67027.4105235131")) + decimal.Parse ("50.5608372625712")).ToString ()' "(new Decimal(\"67027.4105235131\")).add(\"50.5608372625712\").toString() == \"67077.9713607756712\" FAILED"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000442928238101105816891"' ((decimal.Parse ("0.452668749472438")) * decimal.Parse ("0.00000009784820326504")).ToString ()' "(new Decimal(\"0.452668749472438\")).mul(\"0.00000009784820326504\").toString() == \"0.0000000442928238101105816891\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("796.73004845438731539809"' ((decimal.Parse ("796.730048394171")) + decimal.Parse ("0.00000006021631539809")).ToString ()' "(new Decimal(\"796.730048394171\")).add(\"0.00000006021631539809\").toString() == \"796.73004845438731539809\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000001129027912971335249117"' ((decimal.Parse ("0.00393717444219495")) / decimal.Parse ("34872.2506942564")).ToString ()' "(new Decimal(\"0.00393717444219495\")).div(\"34872.2506942564\").toString() == \"0.0000001129027912971335249117\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0254376983229297496691344205"' ((decimal.Parse ("0.00680742215216505")) * decimal.Parse ("3.73675934213063")).ToString ()' "(new Decimal(\"0.00680742215216505\")).mul(\"3.73675934213063\").toString() == \"0.0254376983229297496691344205\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-315.51025068765613449375"' ((decimal.Parse ("0.00000893482386550625")) - decimal.Parse ("315.51025962248")).ToString ()' "(new Decimal(\"0.00000893482386550625\")).sub(\"315.51025962248\").toString() == \"-315.51025068765613449375\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0003013325022026421797172656"' ((decimal.Parse ("0.000027297311009512")) * decimal.Parse ("11.0389079018677")).ToString ()' "(new Decimal(\"0.000027297311009512\")).mul(\"11.0389079018677\").toString() == \"0.0003013325022026421797172656\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("402.83617806471816721794725061"' ((decimal.Parse ("54243.3473999814")) / decimal.Parse ("134.653614430993")).ToString ()' "(new Decimal(\"54243.3473999814\")).div(\"134.653614430993\").toString() == \"402.83617806471816721794725061\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000000039584325266911"' ((decimal.Parse ("0.00000021819561916319")) * decimal.Parse ("0.00000001814166820522")).ToString ()' "(new Decimal(\"0.00000021819561916319\")).mul(\"0.00000001814166820522\").toString() == \"0.0000000000000039584325266911\" FAILED"); " is 285.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.07274982420726249867"' ((decimal.Parse ("0.00000006649979439867")) + decimal.Parse ("0.0727497577074681")).ToString ()' "(new Decimal(\"0.00000006649979439867\")).add(\"0.0727497577074681\").toString() == \"0.07274982420726249867\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("125.09829068179389161411857875"' ((decimal.Parse ("0.0942382432959221")) / decimal.Parse ("0.000753313596711174")).ToString ()' "(new Decimal(\"0.0942382432959221\")).div(\"0.000753313596711174\").toString() == \"125.09829068179389161411857875\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3.1072210310858812077194224446"' ((decimal.Parse ("0.000336303566739105")) * decimal.Parse ("9239.33415638252")).ToString ()' "(new Decimal(\"0.000336303566739105\")).mul(\"9239.33415638252\").toString() == \"3.1072210310858812077194224446\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00000293927498163621"' ((decimal.Parse ("0.00000296421897735643")) - decimal.Parse ("0.00000002494399572022")).ToString ()' "(new Decimal(\"0.00000296421897735643\")).sub(\"0.00000002494399572022\").toString() == \"0.00000293927498163621\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.95424499521071008787"' ((decimal.Parse ("0.00000005236202508787")) + decimal.Parse ("0.954244942848685")).ToString ()' "(new Decimal(\"0.00000005236202508787\")).add(\"0.954244942848685\").toString() == \"0.95424499521071008787\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0840038726281231661070730835"' ((decimal.Parse ("0.544814708896361")) / decimal.Parse ("6.48559038829319")).ToString ()' "(new Decimal(\"0.544814708896361\")).div(\"6.48559038829319\").toString() == \"0.0840038726281231661070730835\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("5.584384619064811"' ((decimal.Parse ("5.92341898285012")) - decimal.Parse ("0.339034363785309")).ToString ()' "(new Decimal(\"5.92341898285012\")).sub(\"0.339034363785309\").toString() == \"5.584384619064811\" FAILED"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("768961.59481674478"' ((decimal.Parse ("761069.961246601")) + decimal.Parse ("7891.63357014378")).ToString ()' "(new Decimal(\"761069.961246601\")).add(\"7891.63357014378\").toString() == \"768961.59481674478\" FAILED"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("7.1449367324811184962392161905"' ((decimal.Parse ("0.0057420220671883")) / decimal.Parse ("0.000803649112956435")).ToString ()' "(new Decimal(\"0.0057420220671883\")).div(\"0.000803649112956435\").toString() == \"7.1449367324811184962392161905\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000671343925763854248084927"' ((decimal.Parse ("0.00000249094584141436")) / decimal.Parse ("0.0371038709939941")).ToString ()' "(new Decimal(\"0.00000249094584141436\")).div(\"0.0371038709939941\").toString() == \"0.0000671343925763854248084927\" FAILED"); " is 277.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3379.636871480214643"' ((decimal.Parse ("3379.79016051618")) - decimal.Parse ("0.153289035965357")).ToString ()' "(new Decimal(\"3379.79016051618\")).sub(\"0.153289035965357\").toString() == \"3379.636871480214643\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-5537047.53310281883348247913"' ((decimal.Parse ("0.00000000116651752087")) - decimal.Parse ("5537047.53310282")).ToString ()' "(new Decimal(\"0.00000000116651752087\")).sub(\"5537047.53310282\").toString() == \"-5537047.53310281883348247913\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-119.1551636528016"' ((decimal.Parse ("46.4980181523124")) - decimal.Parse ("165.653181805114")).ToString ()' "(new Decimal(\"46.4980181523124\")).sub(\"165.653181805114\").toString() == \"-119.1551636528016\" FAILED"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("7507411.17052143912417469505"' ((decimal.Parse ("7507411.17052148")) - decimal.Parse ("0.00000004087582530495")).ToString ()' "(new Decimal(\"7507411.17052148\")).sub(\"0.00000004087582530495\").toString() == \"7507411.17052143912417469505\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3680288.3885330385286851"' ((decimal.Parse ("3680288.43481107")) - decimal.Parse ("0.0462780314713149")).ToString ()' "(new Decimal(\"3680288.43481107\")).sub(\"0.0462780314713149\").toString() == \"3680288.3885330385286851\" FAILED"); " is 253.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.00064079973490480291"' ((decimal.Parse ("0.00000183056355073609")) - decimal.Parse ("0.000642630298455539")).ToString ()' "(new Decimal(\"0.00000183056355073609\")).sub(\"0.000642630298455539\").toString() == \"-0.00064079973490480291\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-2.057870254878829"' ((decimal.Parse ("0.390304429638341")) - decimal.Parse ("2.44817468451717")).ToString ()' "(new Decimal(\"0.390304429638341\")).sub(\"2.44817468451717\").toString() == \"-2.057870254878829\" FAILED"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.82801381893790463861"' ((decimal.Parse ("0.00000077470167063861")) + decimal.Parse ("0.828013044236234")).ToString ()' "(new Decimal(\"0.00000077470167063861\")).add(\"0.828013044236234\").toString() == \"0.82801381893790463861\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0575119050604619002876486373"' ((decimal.Parse ("71.2106066156228")) * decimal.Parse ("0.000807631163302637")).ToString ()' "(new Decimal(\"71.2106066156228\")).mul(\"0.000807631163302637\").toString() == \"0.0575119050604619002876486373\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000846380225479673155344"' ((decimal.Parse ("0.00000009483140771968")) * decimal.Parse ("0.892510451792046")).ToString ()' "(new Decimal(\"0.00000009483140771968\")).mul(\"0.892510451792046\").toString() == \"0.0000000846380225479673155344\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0001071853838444661455520212"' ((decimal.Parse ("2908.7434722617")) * decimal.Parse ("0.00000003684937666955")).ToString ()' "(new Decimal(\"2908.7434722617\")).mul(\"0.00000003684937666955\").toString() == \"0.0001071853838444661455520212\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.001658638454349077"' ((decimal.Parse ("0.000959274857751687")) + decimal.Parse ("0.00069936359659739")).ToString ()' "(new Decimal(\"0.000959274857751687\")).add(\"0.00069936359659739\").toString() == \"0.001658638454349077\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("24639.663275647384108817333496"' ((decimal.Parse ("8683.4491690078")) * decimal.Parse ("2.83754333054532")).ToString ()' "(new Decimal(\"8683.4491690078\")).mul(\"2.83754333054532\").toString() == \"24639.663275647384108817333496\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("6117906.68505150707818221165"' ((decimal.Parse ("0.00000935707818221165")) + decimal.Parse ("6117906.68504215")).ToString ()' "(new Decimal(\"0.00000935707818221165\")).add(\"6117906.68504215\").toString() == \"6117906.68505150707818221165\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("6.0121773791933949674368568908"' ((decimal.Parse ("6641.46798972109")) * decimal.Parse ("0.000905248265669331")).ToString ()' "(new Decimal(\"6641.46798972109\")).mul(\"0.000905248265669331\").toString() == \"6.0121773791933949674368568908\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000100639428179333997221056"' ((decimal.Parse ("0.0000713244643860145")) * decimal.Parse ("0.14110085374727")).ToString ()' "(new Decimal(\"0.0000713244643860145\")).mul(\"0.14110085374727\").toString() == \"0.0000100639428179333997221056\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("817567.71241020922149641"' ((decimal.Parse ("0.00126479322149641")) + decimal.Parse ("817567.711145416")).ToString ()' "(new Decimal(\"0.00126479322149641\")).add(\"817567.711145416\").toString() == \"817567.71241020922149641\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("5911522.4475117541555222"' ((decimal.Parse ("5911522.42660128")) + decimal.Parse ("0.0209104741555222")).ToString ()' "(new Decimal(\"5911522.42660128\")).add(\"0.0209104741555222\").toString() == \"5911522.4475117541555222\" FAILED"); " is 253.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-50.00480793221098247371"' ((decimal.Parse ("0.00000004386581752629")) - decimal.Parse ("50.0048079760768")).ToString ()' "(new Decimal(\"0.00000004386581752629\")).sub(\"50.0048079760768\").toString() == \"-50.00480793221098247371\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.00216393969813354769"' ((decimal.Parse ("0.00000009429415883231")) - decimal.Parse ("0.00216403399229238")).ToString ()' "(new Decimal(\"0.00000009429415883231\")).sub(\"0.00216403399229238\").toString() == \"-0.00216393969813354769\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("149554.64804066385942125034"' ((decimal.Parse ("0.00000007785942125034")) + decimal.Parse ("149554.648040586")).ToString ()' "(new Decimal(\"0.00000007785942125034\")).add(\"149554.648040586\").toString() == \"149554.64804066385942125034\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000401579705382523868391"' ((decimal.Parse ("0.000514483727288658")) * decimal.Parse ("0.0000780548896072688")).ToString ()' "(new Decimal(\"0.000514483727288658\")).mul(\"0.0000780548896072688\").toString() == \"0.0000000401579705382523868391\" FAILED"); " is 279.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("4391586.0938727875920041853806"' ((decimal.Parse ("85.0879618362933")) / decimal.Parse ("0.0000193752234426212")).ToString ()' "(new Decimal(\"85.0879618362933\")).div(\"0.0000193752234426212\").toString() == \"4391586.0938727875920041853806\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000001434686776916788182810"' ((decimal.Parse ("4.70885837669897")) * decimal.Parse ("0.0000000304678260025")).ToString ()' "(new Decimal(\"4.70885837669897\")).mul(\"0.0000000304678260025\").toString() == \"0.0000001434686776916788182810\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000061473669992779179347052"' ((decimal.Parse ("0.00000094580709000389")) / decimal.Parse ("0.153855640978485")).ToString ()' "(new Decimal(\"0.00000094580709000389\")).div(\"0.153855640978485\").toString() == \"0.0000061473669992779179347052\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.003314572249685679"' ((decimal.Parse ("0.000613740297785839")) + decimal.Parse ("0.00270083195189984")).ToString ()' "(new Decimal(\"0.000613740297785839\")).add(\"0.00270083195189984\").toString() == \"0.003314572249685679\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("68188.770830719145"' ((decimal.Parse ("68943.9000417217")) - decimal.Parse ("755.129211002555")).ToString ()' "(new Decimal(\"68943.9000417217\")).sub(\"755.129211002555\").toString() == \"68188.770830719145\" FAILED"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0185139114429308061"' ((decimal.Parse ("0.0000109071683655061")) + decimal.Parse ("0.0185030042745653")).ToString ()' "(new Decimal(\"0.0000109071683655061\")).add(\"0.0185030042745653\").toString() == \"0.0185139114429308061\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("88.66685930292445486"' ((decimal.Parse ("0.00319345103725486")) + decimal.Parse ("88.6636658518872")).ToString ()' "(new Decimal(\"0.00319345103725486\")).add(\"88.6636658518872\").toString() == \"88.66685930292445486\" FAILED"); " is 247.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00000478017811420382"' ((decimal.Parse ("0.00000776580248855325")) - decimal.Parse ("0.00000298562437434943")).ToString ()' "(new Decimal(\"0.00000776580248855325\")).sub(\"0.00000298562437434943\").toString() == \"0.00000478017811420382\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.3859582703495206"' ((decimal.Parse ("0.364325482567924")) + decimal.Parse ("0.0216327877815966")).ToString ()' "(new Decimal(\"0.364325482567924\")).add(\"0.0216327877815966\").toString() == \"0.3859582703495206\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0107406507813914476055243271"' ((decimal.Parse ("0.00000696548845943319")) / decimal.Parse ("0.000648516426164897")).ToString ()' "(new Decimal(\"0.00000696548845943319\")).div(\"0.000648516426164897\").toString() == \"0.0107406507813914476055243271\" FAILED"); " is 281.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-73.0557380282989268491"' ((decimal.Parse ("0.0000220559127731509")) - decimal.Parse ("73.0557600842117")).ToString ()' "(new Decimal(\"0.0000220559127731509\")).sub(\"73.0557600842117\").toString() == \"-73.0557380282989268491\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00000195673171615076"' ((decimal.Parse ("0.00000148999663139228")) + decimal.Parse ("0.00000046673508475848")).ToString ()' "(new Decimal(\"0.00000148999663139228\")).add(\"0.00000046673508475848\").toString() == \"0.00000195673171615076\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-838.010941593913"' ((decimal.Parse ("2.074972690118")) - decimal.Parse ("840.085914284031")).ToString ()' "(new Decimal(\"2.074972690118\")).sub(\"840.085914284031\").toString() == \"-838.010941593913\" FAILED"); " is 231.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000010790590363188315712"' ((decimal.Parse ("0.00000059002973120195")) / decimal.Parse ("546.800231815688")).ToString ()' "(new Decimal(\"0.00000059002973120195\")).div(\"546.800231815688\").toString() == \"0.0000000010790590363188315712\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0485027328186321794374224174"' ((decimal.Parse ("0.00000004584207597461")) * decimal.Parse ("1058039.62380534")).ToString ()' "(new Decimal(\"0.00000004584207597461\")).mul(\"1058039.62380534\").toString() == \"0.0485027328186321794374224174\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("214.85514206927846582617"' ((decimal.Parse ("214.855142037782")) + decimal.Parse ("0.00000003149646582617")).ToString ()' "(new Decimal(\"214.855142037782\")).add(\"0.00000003149646582617\").toString() == \"214.85514206927846582617\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0001626068155301757850120131"' ((decimal.Parse ("0.000824154042091292")) / decimal.Parse ("5.06838559874724")).ToString ()' "(new Decimal(\"0.000824154042091292\")).div(\"5.06838559874724\").toString() == \"0.0001626068155301757850120131\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("20.9788078560985709559"' ((decimal.Parse ("20.9787698560296")) + decimal.Parse ("0.0000380000689709559")).ToString ()' "(new Decimal(\"20.9787698560296\")).add(\"0.0000380000689709559\").toString() == \"20.9788078560985709559\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-81.88357175642793468"' ((decimal.Parse ("0.00617890391786532")) - decimal.Parse ("81.8897506603458")).ToString ()' "(new Decimal(\"0.00617890391786532\")).sub(\"81.8897506603458\").toString() == \"-81.88357175642793468\" FAILED"); " is 249.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("36.23358714435498025968"' ((decimal.Parse ("36.2335875333443")) - decimal.Parse ("0.00000038898931974032")).ToString ()' "(new Decimal(\"36.2335875333443\")).sub(\"0.00000038898931974032\").toString() == \"36.23358714435498025968\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0013658861233129413838425724"' ((decimal.Parse ("0.00000000292342323946")) * decimal.Parse ("467221.476820866")).ToString ()' "(new Decimal(\"0.00000000292342323946\")).mul(\"467221.476820866\").toString() == \"0.0013658861233129413838425724\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000074105712796113834889"' ((decimal.Parse ("0.000342916469715031")) / decimal.Parse ("46273.958751128")).ToString ()' "(new Decimal(\"0.000342916469715031\")).div(\"46273.958751128\").toString() == \"0.0000000074105712796113834889\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("472.3234209149721"' ((decimal.Parse ("476.05942677523")) - decimal.Parse ("3.7360058602579")).ToString ()' "(new Decimal(\"476.05942677523\")).sub(\"3.7360058602579\").toString() == \"472.3234209149721\" FAILED"); " is 231.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("8039026.45502754950084"' ((decimal.Parse ("9.76490417950084")) + decimal.Parse ("8039016.69012337")).ToString ()' "(new Decimal(\"9.76490417950084\")).add(\"8039016.69012337\").toString() == \"8039026.45502754950084\" FAILED"); " is 245.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("40912917253931.602151150686830"' ((decimal.Parse ("9044513.99065764")) * decimal.Parse ("4523506.43674075")).ToString ()' "(new Decimal(\"9044513.99065764\")).mul(\"4523506.43674075\").toString() == \"40912917253931.602151150686830\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-6914.3160116610779745959"' ((decimal.Parse ("0.0000627560420254041")) - decimal.Parse ("6914.31607441712")).ToString ()' "(new Decimal(\"0.0000627560420254041\")).sub(\"6914.31607441712\").toString() == \"-6914.3160116610779745959\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("22.802704082181585914"' ((decimal.Parse ("22.8028122907518")) - decimal.Parse ("0.000108208570214086")).ToString ()' "(new Decimal(\"22.8028122907518\")).sub(\"0.000108208570214086\").toString() == \"22.802704082181585914\" FAILED"); " is 251.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("788.3274362681265223337"' ((decimal.Parse ("788.327495468933")) - decimal.Parse ("0.0000592008064776663")).ToString ()' "(new Decimal(\"788.327495468933\")).sub(\"0.0000592008064776663\").toString() == \"788.3274362681265223337\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1.6066068917914018575324895115"' ((decimal.Parse ("8866.23474250838")) / decimal.Parse ("5518.60868256474")).ToString ()' "(new Decimal(\"8866.23474250838\")).div(\"5518.60868256474\").toString() == \"1.6066068917914018575324895115\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("26.72254360394047261816"' ((decimal.Parse ("0.00000009113297261816")) + decimal.Parse ("26.7225435128075")).ToString ()' "(new Decimal(\"0.00000009113297261816\")).add(\"26.7225435128075\").toString() == \"26.72254360394047261816\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000324317078514770886275385"' ((decimal.Parse ("0.815985052760683")) * decimal.Parse ("0.0000397454680594362")).ToString ()' "(new Decimal(\"0.815985052760683\")).mul(\"0.0000397454680594362\").toString() == \"0.0000324317078514770886275385\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("52977.103193989012886457"' ((decimal.Parse ("0.000779760512886457")) + decimal.Parse ("52977.1024142285")).ToString ()' "(new Decimal(\"0.000779760512886457\")).add(\"52977.1024142285\").toString() == \"52977.103193989012886457\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1913.0060727432645785740118483"' ((decimal.Parse ("126179.391576992")) / decimal.Parse ("65.9586989162297")).ToString ()' "(new Decimal(\"126179.391576992\")).div(\"65.9586989162297\").toString() == \"1913.0060727432645785740118483\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("770.923422558535548909"' ((decimal.Parse ("0.000830289780548909")) + decimal.Parse ("770.922592268755")).ToString ()' "(new Decimal(\"0.000830289780548909\")).add(\"770.922592268755\").toString() == \"770.923422558535548909\" FAILED"); " is 253.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000015660607711989182"' ((decimal.Parse ("0.00000279982820283614")) * decimal.Parse ("0.00000055934173732965")).ToString ()' "(new Decimal(\"0.00000279982820283614\")).mul(\"0.00000055934173732965\").toString() == \"0.0000000000015660607711989182\" FAILED"); " is 285.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00000161712928522245"' ((decimal.Parse ("0.0000015461405746388")) + decimal.Parse ("0.00000007098871058365")).ToString ()' "(new Decimal(\"0.0000015461405746388\")).add(\"0.00000007098871058365\").toString() == \"0.00000161712928522245\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("4253730.76659763509554093941"' ((decimal.Parse ("0.00000428509554093941")) + decimal.Parse ("4253730.76659335")).ToString ()' "(new Decimal(\"0.00000428509554093941\")).add(\"4253730.76659335\").toString() == \"4253730.76659763509554093941\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00008945709535687095"' ((decimal.Parse ("0.00000074108968849345")) + decimal.Parse ("0.0000887160056683775")).ToString ()' "(new Decimal(\"0.00000074108968849345\")).add(\"0.0000887160056683775\").toString() == \"0.00008945709535687095\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("60849.566901590769612814207798"' ((decimal.Parse ("4.50246398081186")) / decimal.Parse ("0.0000739933611704006")).ToString ()' "(new Decimal(\"4.50246398081186\")).div(\"0.0000739933611704006\").toString() == \"60849.566901590769612814207798\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("10025471.773941757"' ((decimal.Parse ("9073722.60423085")) + decimal.Parse ("951749.169710907")).ToString ()' "(new Decimal(\"9073722.60423085\")).add(\"951749.169710907\").toString() == \"10025471.773941757\" FAILED"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("6314.57694669888121625"' ((decimal.Parse ("6314.57190789029")) + decimal.Parse ("0.00503880859121625")).ToString ()' "(new Decimal(\"6314.57190789029\")).add(\"0.00503880859121625\").toString() == \"6314.57694669888121625\" FAILED"); " is 251.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("6410200.86892426925435156992"' ((decimal.Parse ("6410200.86892424")) + decimal.Parse ("0.00000002925435156992")).ToString ()' "(new Decimal(\"6410200.86892424\")).add(\"0.00000002925435156992\").toString() == \"6410200.86892426925435156992\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-50365.02975549733950225974"' ((decimal.Parse ("0.00000903436049774026")) - decimal.Parse ("50365.0297645317")).ToString ()' "(new Decimal(\"0.00000903436049774026\")).sub(\"50365.0297645317\").toString() == \"-50365.02975549733950225974\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("706275.0020093632"' ((decimal.Parse ("773516.946366763")) - decimal.Parse ("67241.9443573998")).ToString ()' "(new Decimal(\"773516.946366763\")).sub(\"67241.9443573998\").toString() == \"706275.0020093632\" FAILED"); " is 235.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.0007827090090991505"' ((decimal.Parse ("0.0000758509746174565")) - decimal.Parse ("0.000858559983716607")).ToString ()' "(new Decimal(\"0.0000758509746174565\")).sub(\"0.000858559983716607\").toString() == \"-0.0007827090090991505\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2221.3994020682519670422887012"' ((decimal.Parse ("0.0072728559734639")) / decimal.Parse ("0.00000327399744804669")).ToString ()' "(new Decimal(\"0.0072728559734639\")).div(\"0.00000327399744804669\").toString() == \"2221.3994020682519670422887012\" FAILED"); " is 277.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00797715439281503856"' ((decimal.Parse ("0.00000002090733708856")) + decimal.Parse ("0.00797713348547795")).ToString ()' "(new Decimal(\"0.00000002090733708856\")).add(\"0.00797713348547795\").toString() == \"0.00797715439281503856\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000152803982254922538614"' ((decimal.Parse ("0.0000248115556430125")) * decimal.Parse ("0.00061585812858113")).ToString ()' "(new Decimal(\"0.0000248115556430125\")).mul(\"0.00061585812858113\").toString() == \"0.0000000152803982254922538614\" FAILED"); " is 277.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000661183382579908907"' ((decimal.Parse ("0.00000008056083325323")) * decimal.Parse ("0.000820725600617344")).ToString ()' "(new Decimal(\"0.00000008056083325323\")).mul(\"0.000820725600617344\").toString() == \"0.0000000000661183382579908907\" FAILED"); " is 281.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.09307075335419262842"' ((decimal.Parse ("0.00000025804988167158")) - decimal.Parse ("0.0930710114040743")).ToString ()' "(new Decimal(\"0.00000025804988167158\")).sub(\"0.0930710114040743\").toString() == \"-0.09307075335419262842\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.04808529221801801214"' ((decimal.Parse ("0.0480862194896146")) - decimal.Parse ("0.00000092727159658786")).ToString ()' "(new Decimal(\"0.0480862194896146\")).sub(\"0.00000092727159658786\").toString() == \"0.04808529221801801214\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("19.1163499301375422"' ((decimal.Parse ("0.0380818105014422")) + decimal.Parse ("19.0782681196361")).ToString ()' "(new Decimal(\"0.0380818105014422\")).add(\"19.0782681196361\").toString() == \"19.1163499301375422\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0029230064326764054146103005"' ((decimal.Parse ("0.00000030766995358638")) * decimal.Parse ("9500.46112271979")).ToString ()' "(new Decimal(\"0.00000030766995358638\")).mul(\"9500.46112271979\").toString() == \"0.0029230064326764054146103005\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("9220576.9255473874609941571388"' ((decimal.Parse ("8460272.38688444")) * decimal.Parse ("1.08986761937377")).ToString ()' "(new Decimal(\"8460272.38688444\")).mul(\"1.08986761937377\").toString() == \"9220576.9255473874609941571388\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00054848860491686019"' ((decimal.Parse ("0.000548521232115348")) - decimal.Parse ("0.00000003262719848781")).ToString ()' "(new Decimal(\"0.000548521232115348\")).sub(\"0.00000003262719848781\").toString() == \"0.00054848860491686019\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000381173298826073792060"' ((decimal.Parse ("0.701377586322547")) * decimal.Parse ("0.00000005434637579804")).ToString ()' "(new Decimal(\"0.701377586322547\")).mul(\"0.00000005434637579804\").toString() == \"0.0000000381173298826073792060\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("700263936625.28684891174652716"' ((decimal.Parse ("6085116.43301934")) / decimal.Parse ("0.00000868974698646448")).ToString ()' "(new Decimal(\"6085116.43301934\")).div(\"0.00000868974698646448\").toString() == \"700263936625.28684891174652716\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("64.24562633156503374337"' ((decimal.Parse ("64.2456262671601")) + decimal.Parse ("0.00000006440493374337")).ToString ()' "(new Decimal(\"64.2456262671601\")).add(\"0.00000006440493374337\").toString() == \"64.24562633156503374337\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00000074888137376349"' ((decimal.Parse ("0.00000079138978840382")) - decimal.Parse ("0.00000004250841464033")).ToString ()' "(new Decimal(\"0.00000079138978840382\")).sub(\"0.00000004250841464033\").toString() == \"0.00000074888137376349\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0065667784902605879636671644"' ((decimal.Parse ("0.0068165044332")) * decimal.Parse ("0.963364515436517")).ToString ()' "(new Decimal(\"0.0068165044332\")).mul(\"0.963364515436517\").toString() == \"0.0065667784902605879636671644\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("369602.432796381529203"' ((decimal.Parse ("0.259988776529203")) + decimal.Parse ("369602.172807605")).ToString ()' "(new Decimal(\"0.259988776529203\")).add(\"369602.172807605\").toString() == \"369602.432796381529203\" FAILED"); " is 247.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0039988533838646743"' ((decimal.Parse ("0.0000675051699706843")) + decimal.Parse ("0.00393134821389399")).ToString ()' "(new Decimal(\"0.0000675051699706843\")).add(\"0.00393134821389399\").toString() == \"0.0039988533838646743\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.1176639241828982721945349704"' ((decimal.Parse ("8668689.53158552")) * decimal.Parse ("0.00000001357343849427")).ToString ()' "(new Decimal(\"8668689.53158552\")).mul(\"0.00000001357343849427\").toString() == \"0.1176639241828982721945349704\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.3461079909540908953018615851"' ((decimal.Parse ("0.0000312284355197234")) / decimal.Parse ("0.000090227432870412")).ToString ()' "(new Decimal(\"0.0000312284355197234\")).div(\"0.000090227432870412\").toString() == \"0.3461079909540908953018615851\" FAILED"); " is 279.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("245.24585835344678889090583956"' ((decimal.Parse ("233330.174457901")) / decimal.Parse ("951.413312438602")).ToString ()' "(new Decimal(\"233330.174457901\")).div(\"951.413312438602\").toString() == \"245.24585835344678889090583956\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1664628220.3605620253774984042"' ((decimal.Parse ("4790708.12686845")) / decimal.Parse ("0.00287794479768628")).ToString ()' "(new Decimal(\"4790708.12686845\")).div(\"0.00287794479768628\").toString() == \"1664628220.3605620253774984042\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("246613871.78242208656915520057"' ((decimal.Parse ("331493.556188184")) * decimal.Parse ("743.947709325677")).ToString ()' "(new Decimal(\"331493.556188184\")).mul(\"743.947709325677\").toString() == \"246613871.78242208656915520057\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1207.9268535512635351310455273"' ((decimal.Parse ("1259.47609602449")) * decimal.Parse ("0.959070884603574")).ToString ()' "(new Decimal(\"1259.47609602449\")).mul(\"0.959070884603574\").toString() == \"1207.9268535512635351310455273\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.393178837592885421"' ((decimal.Parse ("0.393176919963759")) + decimal.Parse ("0.000001917629126421")).ToString ()' "(new Decimal(\"0.393176919963759\")).add(\"0.000001917629126421\").toString() == \"0.393178837592885421\" FAILED"); " is 251.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("397.1793180554543142"' ((decimal.Parse ("0.0851948050713142")) + decimal.Parse ("397.094123250383")).ToString ()' "(new Decimal(\"0.0851948050713142\")).add(\"397.094123250383\").toString() == \"397.1793180554543142\" FAILED"); " is 245.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0003282039963622138325073925"' ((decimal.Parse ("4.38505906815876")) * decimal.Parse ("0.0000748459692927291")).ToString ()' "(new Decimal(\"4.38505906815876\")).mul(\"0.0000748459692927291\").toString() == \"0.0003282039963622138325073925\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.423324324993102"' ((decimal.Parse ("0.363335922995273")) + decimal.Parse ("0.059988401997829")).ToString ()' "(new Decimal(\"0.363335922995273\")).add(\"0.059988401997829\").toString() == \"0.423324324993102\" FAILED"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("10895.341807538831547999350349"' ((decimal.Parse ("0.00727318812500368")) / decimal.Parse ("0.00000066755024793909")).ToString ()' "(new Decimal(\"0.00727318812500368\")).div(\"0.00000066755024793909\").toString() == \"10895.341807538831547999350349\" FAILED"); " is 279.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3388.3696656205705172969049326"' ((decimal.Parse ("0.00994605123994223")) * decimal.Parse ("340674.865218194")).ToString ()' "(new Decimal(\"0.00994605123994223\")).mul(\"340674.865218194\").toString() == \"3388.3696656205705172969049326\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0141935145051432937033685765"' ((decimal.Parse ("545.87652978761")) / decimal.Parse ("38459.5745887885")).ToString ()' "(new Decimal(\"545.87652978761\")).div(\"38459.5745887885\").toString() == \"0.0141935145051432937033685765\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0779477186180520150647853816"' ((decimal.Parse ("73907.2872204274")) / decimal.Parse ("948164.853708895")).ToString ()' "(new Decimal(\"73907.2872204274\")).div(\"948164.853708895\").toString() == \"0.0779477186180520150647853816\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-561579.6279262661092"' ((decimal.Parse ("21.7019301008908")) - decimal.Parse ("561601.329856367")).ToString ()' "(new Decimal(\"21.7019301008908\")).sub(\"561601.329856367\").toString() == \"-561579.6279262661092\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.000009299200099480762053694"' ((decimal.Parse ("0.00000077988295712503")) / decimal.Parse ("0.0838655958342671")).ToString ()' "(new Decimal(\"0.00000077988295712503\")).div(\"0.0838655958342671\").toString() == \"0.000009299200099480762053694\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0120314006051025781992414906"' ((decimal.Parse ("63.5544158814263")) / decimal.Parse ("5282.37883247546")).ToString ()' "(new Decimal(\"63.5544158814263\")).div(\"5282.37883247546\").toString() == \"0.0120314006051025781992414906\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3.6151189261791396129"' ((decimal.Parse ("3.61511963587958")) - decimal.Parse ("0.0000007097004403871")).ToString ()' "(new Decimal(\"3.61511963587958\")).sub(\"0.0000007097004403871\").toString() == \"3.6151189261791396129\" FAILED"); " is 253.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("94217597633.241379272109185751"' ((decimal.Parse ("466425.827921566")) / decimal.Parse ("0.00000495051709699934")).ToString ()' "(new Decimal(\"466425.827921566\")).div(\"0.00000495051709699934\").toString() == \"94217597633.241379272109185751\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("705.645818421918175"' ((decimal.Parse ("706.5725502123")) - decimal.Parse ("0.926731790381825")).ToString ()' "(new Decimal(\"706.5725502123\")).sub(\"0.926731790381825\").toString() == \"705.645818421918175\" FAILED"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("528.8460503226362118"' ((decimal.Parse ("528.77783893085")) + decimal.Parse ("0.0682113917862118")).ToString ()' "(new Decimal(\"528.77783893085\")).add(\"0.0682113917862118\").toString() == \"528.8460503226362118\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2587.55019575690444875"' ((decimal.Parse ("2587.55753868611")) - decimal.Parse ("0.00734292920555125")).ToString ()' "(new Decimal(\"2587.55753868611\")).sub(\"0.00734292920555125\").toString() == \"2587.55019575690444875\" FAILED"); " is 251.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0007832908360437819528979290"' ((decimal.Parse ("8.61752288817313")) * decimal.Parse ("0.0000908951268488984")).ToString ()' "(new Decimal(\"8.61752288817313\")).mul(\"0.0000908951268488984\").toString() == \"0.0007832908360437819528979290\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("85388.15485564442"' ((decimal.Parse ("91330.5146113646")) - decimal.Parse ("5942.35975572018")).ToString ()' "(new Decimal(\"91330.5146113646\")).sub(\"5942.35975572018\").toString() == \"85388.15485564442\" FAILED"); " is 235.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0006005125566523128396843158"' ((decimal.Parse ("0.00754608521589361")) * decimal.Parse ("0.0795793500168153")).ToString ()' "(new Decimal(\"0.00754608521589361\")).mul(\"0.0795793500168153\").toString() == \"0.0006005125566523128396843158\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1020.1981723776409731715"' ((decimal.Parse ("1020.19813424917")) + decimal.Parse ("0.0000381284709731715")).ToString ()' "(new Decimal(\"1020.19813424917\")).add(\"0.0000381284709731715\").toString() == \"1020.1981723776409731715\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0025578204022461232891799586"' ((decimal.Parse ("874.749045295058")) / decimal.Parse ("341990.017957049")).ToString ()' "(new Decimal(\"874.749045295058\")).div(\"341990.017957049\").toString() == \"0.0025578204022461232891799586\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1191.1626737619095274"' ((decimal.Parse ("0.0945538378295274")) + decimal.Parse ("1191.06811992408")).ToString ()' "(new Decimal(\"0.0945538378295274\")).add(\"1191.06811992408\").toString() == \"1191.1626737619095274\" FAILED"); " is 247.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000012723850728401263936405"' ((decimal.Parse ("0.00174284968606329")) * decimal.Parse ("0.000730060132560348")).ToString ()' "(new Decimal(\"0.00174284968606329\")).mul(\"0.000730060132560348\").toString() == \"0.0000012723850728401263936405\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.3878144949689754244652101063"' ((decimal.Parse ("0.0000886363427101804")) / decimal.Parse ("0.000228553454963748")).ToString ()' "(new Decimal(\"0.0000886363427101804\")).div(\"0.000228553454963748\").toString() == \"0.3878144949689754244652101063\" FAILED"); " is 279.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.6276545818966699448042492771"' ((decimal.Parse ("0.0088596635353098")) / decimal.Parse ("0.0141155084195153")).ToString ()' "(new Decimal(\"0.0088596635353098\")).div(\"0.0141155084195153\").toString() == \"0.6276545818966699448042492771\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("887642.763737621356332488"' ((decimal.Parse ("887642.763968391")) - decimal.Parse ("0.000230769643667512")).ToString ()' "(new Decimal(\"887642.763968391\")).sub(\"0.000230769643667512\").toString() == \"887642.763737621356332488\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("453198251.73558506995962676469"' ((decimal.Parse ("23004.7123148128")) / decimal.Parse ("0.0000507608143383455")).ToString ()' "(new Decimal(\"23004.7123148128\")).div(\"0.0000507608143383455\").toString() == \"453198251.73558506995962676469\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("83.7146957344276093754"' ((decimal.Parse ("83.7147017399383")) - decimal.Parse ("0.0000060055106906246")).ToString ()' "(new Decimal(\"83.7147017399383\")).sub(\"0.0000060055106906246\").toString() == \"83.7146957344276093754\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("87.63923156896568"' ((decimal.Parse ("4.66405350466448")) + decimal.Parse ("82.9751780643012")).ToString ()' "(new Decimal(\"4.66405350466448\")).add(\"82.9751780643012\").toString() == \"87.63923156896568\" FAILED"); " is 235.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1347.836978065024006220719243"' ((decimal.Parse ("6808.9278446552")) / decimal.Parse ("5.05174435444723")).ToString ()' "(new Decimal(\"6808.9278446552\")).div(\"5.05174435444723\").toString() == \"1347.836978065024006220719243\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("7712816.5554913010058030163591"' ((decimal.Parse ("8813.68504316252")) / decimal.Parse ("0.0011427323572071")).ToString ()' "(new Decimal(\"8813.68504316252\")).div(\"0.0011427323572071\").toString() == \"7712816.5554913010058030163591\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0066851887766319767409290909"' ((decimal.Parse ("0.00000007260315151541")) * decimal.Parse ("92078.4929730364")).ToString ()' "(new Decimal(\"0.00000007260315151541\")).mul(\"92078.4929730364\").toString() == \"0.0066851887766319767409290909\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000121301184342453339116"' ((decimal.Parse ("0.00000009849602240068")) / decimal.Parse ("8.11995554162187")).ToString ()' "(new Decimal(\"0.00000009849602240068\")).div(\"8.11995554162187\").toString() == \"0.0000000121301184342453339116\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.3125741895189851492"' ((decimal.Parse ("0.312526527006424")) + decimal.Parse ("0.0000476625125611492")).ToString ()' "(new Decimal(\"0.312526527006424\")).add(\"0.0000476625125611492\").toString() == \"0.3125741895189851492\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.2038677468092889069882980431"' ((decimal.Parse ("18502.905787203")) / decimal.Parse ("90759.3578522836")).ToString ()' "(new Decimal(\"18502.905787203\")).div(\"90759.3578522836\").toString() == \"0.2038677468092889069882980431\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000005559422081028409448"' ((decimal.Parse ("0.00000294573398909799")) / decimal.Parse ("5298.63346614811")).ToString ()' "(new Decimal(\"0.00000294573398909799\")).div(\"5298.63346614811\").toString() == \"0.0000000005559422081028409448\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("46411462.077440048464670213145"' ((decimal.Parse ("3090023.14838116")) / decimal.Parse ("0.066578879657471")).ToString ()' "(new Decimal(\"3090023.14838116\")).div(\"0.066578879657471\").toString() == \"46411462.077440048464670213145\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.000002581837802588014691071"' ((decimal.Parse ("0.00000043088218729519")) / decimal.Parse ("0.166889719742765")).ToString ()' "(new Decimal(\"0.00000043088218729519\")).div(\"0.166889719742765\").toString() == \"0.000002581837802588014691071\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("662563.86998257370710896"' ((decimal.Parse ("662563.871900814")) - decimal.Parse ("0.00191824029289104")).ToString ()' "(new Decimal(\"662563.871900814\")).sub(\"0.00191824029289104\").toString() == \"662563.86998257370710896\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("4.093541112069757865"' ((decimal.Parse ("4.09383642677862")) - decimal.Parse ("0.000295314708862135")).ToString ()' "(new Decimal(\"4.09383642677862\")).sub(\"0.000295314708862135\").toString() == \"4.093541112069757865\" FAILED"); " is 249.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0519240351822827709748263872"' ((decimal.Parse ("17.4083959392311")) * decimal.Parse ("0.00298270072461232")).ToString ()' "(new Decimal(\"17.4083959392311\")).mul(\"0.00298270072461232\").toString() == \"0.0519240351822827709748263872\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("56614111357.238158837814773558"' ((decimal.Parse ("1775.79848178467")) / decimal.Parse ("0.00000003136671121762")).ToString ()' "(new Decimal(\"1775.79848178467\")).div(\"0.00000003136671121762\").toString() == \"56614111357.238158837814773558\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.18047320241517500632"' ((decimal.Parse ("0.00000057644597700632")) + decimal.Parse ("0.180472625969198")).ToString ()' "(new Decimal(\"0.00000057644597700632\")).add(\"0.180472625969198\").toString() == \"0.18047320241517500632\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.00000014875716676412"' ((decimal.Parse ("0.0000002374956338841")) - decimal.Parse ("0.00000038625280064822")).ToString ()' "(new Decimal(\"0.0000002374956338841\")).sub(\"0.00000038625280064822\").toString() == \"-0.00000014875716676412\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("23421549.686072900974999649279"' ((decimal.Parse ("222.322416595333")) / decimal.Parse ("0.00000949221633816707")).ToString ()' "(new Decimal(\"222.322416595333\")).div(\"0.00000949221633816707\").toString() == \"23421549.686072900974999649279\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3.871063458479728538175789638"' ((decimal.Parse ("0.0221267636037091")) / decimal.Parse ("0.00571593926088695")).ToString ()' "(new Decimal(\"0.0221267636037091\")).div(\"0.00571593926088695\").toString() == \"3.871063458479728538175789638\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("16214.400846511121144041207000"' ((decimal.Parse ("7016.24042681243")) * decimal.Parse ("2.31098136040893")).ToString ()' "(new Decimal(\"7016.24042681243\")).mul(\"2.31098136040893\").toString() == \"16214.400846511121144041207000\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0019490762786253018034972934"' ((decimal.Parse ("0.0681883810871227")) * decimal.Parse ("0.0285837007353938")).ToString ()' "(new Decimal(\"0.0681883810871227\")).mul(\"0.0285837007353938\").toString() == \"0.0019490762786253018034972934\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1.157187581135514"' ((decimal.Parse ("0.85837511246017")) + decimal.Parse ("0.298812468675344")).ToString ()' "(new Decimal(\"0.85837511246017\")).add(\"0.298812468675344\").toString() == \"1.157187581135514\" FAILED"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-5115293.869385163952"' ((decimal.Parse ("193.647991956048")) - decimal.Parse ("5115487.51737712")).ToString ()' "(new Decimal(\"193.647991956048\")).sub(\"5115487.51737712\").toString() == \"-5115293.869385163952\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.05504833553420386932"' ((decimal.Parse ("0.0550483308988848")) + decimal.Parse ("0.00000000463531906932")).ToString ()' "(new Decimal(\"0.0550483308988848\")).add(\"0.00000000463531906932\").toString() == \"0.05504833553420386932\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0226105809476949110796916402"' ((decimal.Parse ("0.0000007991035286333")) * decimal.Parse ("28294.9331813934")).ToString ()' "(new Decimal(\"0.0000007991035286333\")).mul(\"28294.9331813934\").toString() == \"0.0226105809476949110796916402\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000430659364069161812657506"' ((decimal.Parse ("0.00000001163869482076")) / decimal.Parse ("0.000270252914293787")).ToString ()' "(new Decimal(\"0.00000001163869482076\")).div(\"0.000270252914293787\").toString() == \"0.0000430659364069161812657506\" FAILED"); " is 281.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("369.899752887384684"' ((decimal.Parse ("0.882389189620684")) + decimal.Parse ("369.017363697764")).ToString ()' "(new Decimal(\"0.882389189620684\")).add(\"369.017363697764\").toString() == \"369.899752887384684\" FAILED"); " is 241.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("820.35799529420065"' ((decimal.Parse ("826.882673346848")) - decimal.Parse ("6.52467805264735")).ToString ()' "(new Decimal(\"826.882673346848\")).sub(\"6.52467805264735\").toString() == \"820.35799529420065\" FAILED"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("8665.241919876656136"' ((decimal.Parse ("0.916831304746136")) + decimal.Parse ("8664.32508857191")).ToString ()' "(new Decimal(\"0.916831304746136\")).add(\"8664.32508857191\").toString() == \"8665.241919876656136\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1113295905.5010739272635131771"' ((decimal.Parse ("3431.67145430654")) * decimal.Parse ("324417.975416602")).ToString ()' "(new Decimal(\"3431.67145430654\")).mul(\"324417.975416602\").toString() == \"1113295905.5010739272635131771\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("8694915.9254769790620115834586"' ((decimal.Parse ("7011684.364179")) / decimal.Parse ("0.80641197962985")).ToString ()' "(new Decimal(\"7011684.364179\")).div(\"0.80641197962985\").toString() == \"8694915.9254769790620115834586\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2.9407816183171732729079339674"' ((decimal.Parse ("0.0000716280695384499")) * decimal.Parse ("41056.2735707761")).ToString ()' "(new Decimal(\"0.0000716280695384499\")).mul(\"41056.2735707761\").toString() == \"2.9407816183171732729079339674\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.1127935794278807392120038243"' ((decimal.Parse ("80.8113612145238")) / decimal.Parse ("716.453557236331")).ToString ()' "(new Decimal(\"80.8113612145238\")).div(\"716.453557236331\").toString() == \"0.1127935794278807392120038243\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("89526454.180026033061583476631"' ((decimal.Parse ("721.107919570575")) / decimal.Parse ("0.0000080546909421937")).ToString ()' "(new Decimal(\"721.107919570575\")).div(\"0.0000080546909421937\").toString() == \"89526454.180026033061583476631\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.00000401257101493542"' ((decimal.Parse ("0.00000087664416240372")) - decimal.Parse ("0.00000488921517733914")).ToString ()' "(new Decimal(\"0.00000087664416240372\")).sub(\"0.00000488921517733914\").toString() == \"-0.00000401257101493542\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1404309.5339384196562537720212"' ((decimal.Parse ("2861249.48079756")) * decimal.Parse ("0.49080289690327")).ToString ()' "(new Decimal(\"2861249.48079756\")).mul(\"0.49080289690327\").toString() == \"1404309.5339384196562537720212\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("11.799501757305484838541059295"' ((decimal.Parse ("0.329140784372175")) * decimal.Parse ("35.8494064471914")).ToString ()' "(new Decimal(\"0.329140784372175\")).mul(\"35.8494064471914\").toString() == \"11.799501757305484838541059295\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("86.579050768902069"' ((decimal.Parse ("0.887126708350669")) + decimal.Parse ("85.6919240605514")).ToString ()' "(new Decimal(\"0.887126708350669\")).add(\"85.6919240605514\").toString() == \"86.579050768902069\" FAILED"); " is 239.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000066113860385206571"' ((decimal.Parse ("0.00000005458257806235")) / decimal.Parse ("8255.84495358907")).ToString ()' "(new Decimal(\"0.00000005458257806235\")).div(\"8255.84495358907\").toString() == \"0.0000000000066113860385206571\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("265.78810758325215556973"' ((decimal.Parse ("265.788107768534")) - decimal.Parse ("0.00000018528184443027")).ToString ()' "(new Decimal(\"265.788107768534\")).sub(\"0.00000018528184443027\").toString() == \"265.78810758325215556973\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("36432462024050.335938886839157"' ((decimal.Parse ("668461.556857667")) / decimal.Parse ("0.00000001834796551538")).ToString ()' "(new Decimal(\"668461.556857667\")).div(\"0.00000001834796551538\").toString() == \"36432462024050.335938886839157\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.6342358100146685424"' ((decimal.Parse ("0.634302762632399")) - decimal.Parse ("0.0000669526177304576")).ToString ()' "(new Decimal(\"0.634302762632399\")).sub(\"0.0000669526177304576\").toString() == \"0.6342358100146685424\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1.926773046574916"' ((decimal.Parse ("1.00043254485374")) + decimal.Parse ("0.926340501721176")).ToString ()' "(new Decimal(\"1.00043254485374\")).add(\"0.926340501721176\").toString() == \"1.926773046574916\" FAILED"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-1041.94303693225454352791"' ((decimal.Parse ("0.00000329803545647209")) - decimal.Parse ("1041.94304023029")).ToString ()' "(new Decimal(\"0.00000329803545647209\")).sub(\"1041.94304023029\").toString() == \"-1041.94303693225454352791\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1.7320645654257663"' ((decimal.Parse ("0.0218895030309863")) + decimal.Parse ("1.71017506239478")).ToString ()' "(new Decimal(\"0.0218895030309863\")).add(\"1.71017506239478\").toString() == \"1.7320645654257663\" FAILED"); " is 241.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("6.2932320008966984549725959605"' ((decimal.Parse ("0.00000850892723934209")) * decimal.Parse ("739603.456919828")).ToString ()' "(new Decimal(\"0.00000850892723934209\")).mul(\"739603.456919828\").toString() == \"6.2932320008966984549725959605\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-41970.90431835076483"' ((decimal.Parse ("5.53383796733517")) - decimal.Parse ("41976.4381563181")).ToString ()' "(new Decimal(\"5.53383796733517\")).sub(\"41976.4381563181\").toString() == \"-41970.90431835076483\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-3233365.007464948276"' ((decimal.Parse ("428.763072671724")) - decimal.Parse ("3233793.77053762")).ToString ()' "(new Decimal(\"428.763072671724\")).sub(\"3233793.77053762\").toString() == \"-3233365.007464948276\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000002451461856604290637149"' ((decimal.Parse ("0.00000003885374662413")) * decimal.Parse ("6.3094606559302")).ToString ()' "(new Decimal(\"0.00000003885374662413\")).mul(\"6.3094606559302\").toString() == \"0.0000002451461856604290637149\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("28932456.422151199951443781242"' ((decimal.Parse ("948527.350532137")) / decimal.Parse ("0.0327841969825254")).ToString ()' "(new Decimal(\"948527.350532137\")).div(\"0.0327841969825254\").toString() == \"28932456.422151199951443781242\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-39125.788708948956168359"' ((decimal.Parse ("0.000126452543831641")) - decimal.Parse ("39125.7888354015")).ToString ()' "(new Decimal(\"0.000126452543831641\")).sub(\"39125.7888354015\").toString() == \"-39125.788708948956168359\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1.3468627933517452321593950195"' ((decimal.Parse ("228915.375763977")) * decimal.Parse ("0.00000588367115514524")).ToString ()' "(new Decimal(\"228915.375763977\")).mul(\"0.00000588367115514524\").toString() == \"1.3468627933517452321593950195\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("39277185.990111339554907687023"' ((decimal.Parse ("49193.1172782523")) * decimal.Parse ("798.428482747836")).ToString ()' "(new Decimal(\"49193.1172782523\")).mul(\"798.428482747836\").toString() == \"39277185.990111339554907687023\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000000581563489873426"' ((decimal.Parse ("0.00000052592187771849")) * decimal.Parse ("0.00000011057982459226")).ToString ()' "(new Decimal(\"0.00000052592187771849\")).mul(\"0.00000011057982459226\").toString() == \"0.0000000000000581563489873426\" FAILED"); " is 285.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("61797.5944984525442125"' ((decimal.Parse ("61797.5818746712")) + decimal.Parse ("0.0126237813442125")).ToString ()' "(new Decimal(\"61797.5818746712\")).add(\"0.0126237813442125\").toString() == \"61797.5944984525442125\" FAILED"); " is 249.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("198024.145522724504"' ((decimal.Parse ("198087.806439999")) - decimal.Parse ("63.660917274496")).ToString ()' "(new Decimal(\"198087.806439999\")).sub(\"63.660917274496\").toString() == \"198024.145522724504\" FAILED"); " is 237.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-3200.88940770525903322953"' ((decimal.Parse ("0.00000982426096677047")) - decimal.Parse ("3200.88941752952")).ToString ()' "(new Decimal(\"0.00000982426096677047\")).sub(\"3200.88941752952\").toString() == \"-3200.88940770525903322953\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("5.676451351339672665"' ((decimal.Parse ("0.000242386010122665")) + decimal.Parse ("5.67620896532955")).ToString ()' "(new Decimal(\"0.000242386010122665\")).add(\"5.67620896532955\").toString() == \"5.676451351339672665\" FAILED"); " is 249.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000776963950158088336964"' ((decimal.Parse ("0.00000055833457250071")) * decimal.Parse ("0.139157413569818")).ToString ()' "(new Decimal(\"0.00000055833457250071\")).mul(\"0.139157413569818\").toString() == \"0.0000000776963950158088336964\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("5854.1561337260278061898964648"' ((decimal.Parse ("0.000561036967933661")) / decimal.Parse ("0.0000000958356687314")).ToString ()' "(new Decimal(\"0.000561036967933661\")).div(\"0.0000000958356687314\").toString() == \"5854.1561337260278061898964648\" FAILED"); " is 279.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000328245876850082616"' ((decimal.Parse ("0.00000084970553864246")) / decimal.Parse ("25886.2516963325")).ToString ()' "(new Decimal(\"0.00000084970553864246\")).div(\"25886.2516963325\").toString() == \"0.0000000000328245876850082616\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("98.5771713864016781651"' ((decimal.Parse ("0.0000315344957781651")) + decimal.Parse ("98.5771398519059")).ToString ()' "(new Decimal(\"0.0000315344957781651\")).add(\"98.5771398519059\").toString() == \"98.5771713864016781651\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3769.4758721824018394019909083"' ((decimal.Parse ("0.355002424845007")) / decimal.Parse ("0.0000941781926407377")).ToString ()' "(new Decimal(\"0.355002424845007\")).div(\"0.0000941781926407377\").toString() == \"3769.4758721824018394019909083\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.34233483194482226"' ((decimal.Parse ("0.347713165147096")) - decimal.Parse ("0.00537833320227374")).ToString ()' "(new Decimal(\"0.347713165147096\")).sub(\"0.00537833320227374\").toString() == \"0.34233483194482226\" FAILED"); " is 247.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("2450696.875882343227315"' ((decimal.Parse ("2450696.35214782")) + decimal.Parse ("0.523734523227315")).ToString ()' "(new Decimal(\"2450696.35214782\")).add(\"0.523734523227315\").toString() == \"2450696.875882343227315\" FAILED"); " is 249.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000078351005114308196"' ((decimal.Parse ("0.00000050161292520427")) / decimal.Parse ("64021.2495643744")).ToString ()' "(new Decimal(\"0.00000050161292520427\")).div(\"64021.2495643744\").toString() == \"0.0000000000078351005114308196\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-6281.22716877027720895884"' ((decimal.Parse ("0.00000091908279104116")) - decimal.Parse ("6281.22716968936")).ToString ()' "(new Decimal(\"0.00000091908279104116\")).sub(\"6281.22716968936\").toString() == \"-6281.22716877027720895884\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0519401725231857052"' ((decimal.Parse ("0.0000851479899069052")) + decimal.Parse ("0.0518550245332788")).ToString ()' "(new Decimal(\"0.0000851479899069052\")).add(\"0.0518550245332788\").toString() == \"0.0519401725231857052\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00009138627400546624"' ((decimal.Parse ("0.00000002975221119344")) + decimal.Parse ("0.0000913565217942728")).ToString ()' "(new Decimal(\"0.00000002975221119344\")).add(\"0.0000913565217942728\").toString() == \"0.00009138627400546624\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0927168588963668332272999205"' ((decimal.Parse ("0.00000086909218266098")) / decimal.Parse ("0.00000937361546762922")).ToString ()' "(new Decimal(\"0.00000086909218266098\")).div(\"0.00000937361546762922\").toString() == \"0.0927168588963668332272999205\" FAILED"); " is 285.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("40553324.964360422490740452752"' ((decimal.Parse ("7678.32436025065")) * decimal.Parse ("5281.53319157731")).ToString ()' "(new Decimal(\"7678.32436025065\")).mul(\"5281.53319157731\").toString() == \"40553324.964360422490740452752\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("8581024.565256312363397899"' ((decimal.Parse ("8581024.56600453")) - decimal.Parse ("0.000748217636602101")).ToString ()' "(new Decimal(\"8581024.56600453\")).sub(\"0.000748217636602101\").toString() == \"8581024.565256312363397899\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0344964205226649308283349310"' ((decimal.Parse ("0.0000244098234104038")) * decimal.Parse ("1413.21876617764")).ToString ()' "(new Decimal(\"0.0000244098234104038\")).mul(\"1413.21876617764\").toString() == \"0.0344964205226649308283349310\" FAILED"); " is 271.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.00144899793000472471"' ((decimal.Parse ("0.00000002482942213529")) - decimal.Parse ("0.00144902275942686")).ToString ()' "(new Decimal(\"0.00000002482942213529\")).sub(\"0.00144902275942686\").toString() == \"-0.00144899793000472471\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0145830863052812570331711621"' ((decimal.Parse ("0.000910689151338623")) / decimal.Parse ("0.0624483139079289")).ToString ()' "(new Decimal(\"0.000910689151338623\")).div(\"0.0624483139079289\").toString() == \"0.0145830863052812570331711621\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("131248.684342948329262"' ((decimal.Parse ("131248.713532113")) - decimal.Parse ("0.029189164670738")).ToString ()' "(new Decimal(\"131248.713532113\")).sub(\"0.029189164670738\").toString() == \"131248.684342948329262\" FAILED"); " is 247.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("5019.003774030302274918"' ((decimal.Parse ("0.000344105692274918")) + decimal.Parse ("5019.00342992461")).ToString ()' "(new Decimal(\"0.000344105692274918\")).add(\"5019.00342992461\").toString() == \"5019.003774030302274918\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000714590274185505401"' ((decimal.Parse ("0.000617910423603798")) / decimal.Parse ("8647058.96407695")).ToString ()' "(new Decimal(\"0.000617910423603798\")).div(\"8647058.96407695\").toString() == \"0.0000000000714590274185505401\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("890433.23457508275525883108"' ((decimal.Parse ("890433.234577269")) - decimal.Parse ("0.00000218624474116892")).ToString ()' "(new Decimal(\"890433.234577269\")).sub(\"0.00000218624474116892\").toString() == \"890433.23457508275525883108\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000043469111168706293851817"' ((decimal.Parse ("7.7632498637602")) / decimal.Parse ("1785923.30393657")).ToString ()' "(new Decimal(\"7.7632498637602\")).div(\"1785923.30393657\").toString() == \"0.0000043469111168706293851817\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0003295105776320145972457301"' ((decimal.Parse ("5613.03226538609")) * decimal.Parse ("0.00000005870455790251")).ToString ()' "(new Decimal(\"5613.03226538609\")).mul(\"0.00000005870455790251\").toString() == \"0.0003295105776320145972457301\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("6769150.5330613094858"' ((decimal.Parse ("6769137.76284509")) + decimal.Parse ("12.7702162194858")).ToString ()' "(new Decimal(\"6769137.76284509\")).add(\"12.7702162194858\").toString() == \"6769150.5330613094858\" FAILED"); " is 243.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3245807.691775637069"' ((decimal.Parse ("987.946705887069")) + decimal.Parse ("3244819.74506975")).ToString ()' "(new Decimal(\"987.946705887069\")).add(\"3244819.74506975\").toString() == \"3245807.691775637069\" FAILED"); " is 241.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("373.6556954120196391427"' ((decimal.Parse ("0.0000970930446391427")) + decimal.Parse ("373.655598318975")).ToString ()' "(new Decimal(\"0.0000970930446391427\")).add(\"373.655598318975\").toString() == \"373.6556954120196391427\" FAILED"); " is 257.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.02061165320041153501"' ((decimal.Parse ("0.00000085500743326499")) - decimal.Parse ("0.0206125082078448")).ToString ()' "(new Decimal(\"0.00000085500743326499\")).sub(\"0.0206125082078448\").toString() == \"-0.02061165320041153501\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000008709359977812961424188"' ((decimal.Parse ("0.00000001982638995155")) * decimal.Parse ("43.9281180239879")).ToString ()' "(new Decimal(\"0.00000001982638995155\")).mul(\"43.9281180239879\").toString() == \"0.0000008709359977812961424188\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("544246.62011017191540368"' ((decimal.Parse ("544246.617026742")) + decimal.Parse ("0.00308342991540368")).ToString ()' "(new Decimal(\"544246.617026742\")).add(\"0.00308342991540368\").toString() == \"544246.62011017191540368\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("51.73313984431529452496"' ((decimal.Parse ("51.7331402989724")) - decimal.Parse ("0.00000045465710547504")).ToString ()' "(new Decimal(\"51.7331402989724\")).sub(\"0.00000045465710547504\").toString() == \"51.73313984431529452496\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.000000000046298846889617716"' ((decimal.Parse ("0.000107662315064884")) / decimal.Parse ("2325377.89378566")).ToString ()' "(new Decimal(\"0.000107662315064884\")).div(\"2325377.89378566\").toString() == \"0.000000000046298846889617716\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("18572.0885521773395175914"' ((decimal.Parse ("18572.0885258969")) + decimal.Parse ("0.0000262804395175914")).ToString ()' "(new Decimal(\"18572.0885258969\")).add(\"0.0000262804395175914\").toString() == \"18572.0885521773395175914\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000027531871725364104883308"' ((decimal.Parse ("5.44742788907486")) * decimal.Parse ("0.00000050541048520497")).ToString ()' "(new Decimal(\"5.44742788907486\")).mul(\"0.00000050541048520497\").toString() == \"0.0000027531871725364104883308\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-12716.27520800453493739"' ((decimal.Parse ("0.00937844566506261")) - decimal.Parse ("12716.2845864502")).ToString ()' "(new Decimal(\"0.00937844566506261\")).sub(\"12716.2845864502\").toString() == \"-12716.27520800453493739\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000003087983018261781959"' ((decimal.Parse ("0.000613210929377568")) * decimal.Parse ("0.00000050357599160801")).ToString ()' "(new Decimal(\"0.000613210929377568\")).mul(\"0.00000050357599160801\").toString() == \"0.0000000003087983018261781959\" FAILED"); " is 281.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("102.32918883824198403740845781"' ((decimal.Parse ("9.79164098845406")) / decimal.Parse ("0.095687663506571")).ToString ()' "(new Decimal(\"9.79164098845406\")).div(\"0.095687663506571\").toString() == \"102.32918883824198403740845781\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("9928.1819875610465252535811176"' ((decimal.Parse ("3509.39318701131")) * decimal.Parse ("2.82903096304696")).ToString ()' "(new Decimal(\"3509.39318701131\")).mul(\"2.82903096304696\").toString() == \"9928.1819875610465252535811176\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.005761883809120339"' ((decimal.Parse ("0.00550658921501906")) + decimal.Parse ("0.000255294594101279")).ToString ()' "(new Decimal(\"0.00550658921501906\")).add(\"0.000255294594101279\").toString() == \"0.005761883809120339\" FAILED"); " is 255.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.00000018726902063344"' ((decimal.Parse ("0.00000003774064715846")) - decimal.Parse ("0.0000002250096677919")).ToString ()' "(new Decimal(\"0.00000003774064715846\")).sub(\"0.0000002250096677919\").toString() == \"-0.00000018726902063344\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000176594645959884060957208"' ((decimal.Parse ("0.000982163002706209")) * decimal.Parse ("0.0179801769638342")).ToString ()' "(new Decimal(\"0.000982163002706209\")).mul(\"0.0179801769638342\").toString() == \"0.0000176594645959884060957208\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.60567620163151359006"' ((decimal.Parse ("0.00000156584160940994")) - decimal.Parse ("0.605677767473123")).ToString ()' "(new Decimal(\"0.00000156584160940994\")).sub(\"0.605677767473123\").toString() == \"-0.60567620163151359006\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-14377.8227241141224"' ((decimal.Parse ("83.8072135037776")) - decimal.Parse ("14461.6299376179")).ToString ()' "(new Decimal(\"83.8072135037776\")).sub(\"14461.6299376179\").toString() == \"-14377.8227241141224\" FAILED"); " is 241.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("82431.57192252187505207205"' ((decimal.Parse ("0.00000005587505207205")) + decimal.Parse ("82431.571922466")).ToString ()' "(new Decimal(\"0.00000005587505207205\")).add(\"82431.571922466\").toString() == \"82431.57192252187505207205\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("7479590.99871805918841"' ((decimal.Parse ("7479600.39762761")) - decimal.Parse ("9.39890955081159")).ToString ()' "(new Decimal(\"7479600.39762761\")).sub(\"9.39890955081159\").toString() == \"7479590.99871805918841\" FAILED"); " is 245.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.85300160231268362844"' ((decimal.Parse ("0.00000060434978762844")) + decimal.Parse ("0.853000997962896")).ToString ()' "(new Decimal(\"0.00000060434978762844\")).add(\"0.853000997962896\").toString() == \"0.85300160231268362844\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("56119.27283704670739007136"' ((decimal.Parse ("56119.2728374709")) - decimal.Parse ("0.00000042419260992864")).ToString ()' "(new Decimal(\"56119.2728374709\")).sub(\"0.00000042419260992864\").toString() == \"56119.27283704670739007136\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000429259949352215200"' ((decimal.Parse ("0.00000008143559702739")) * decimal.Parse ("0.000527115862130707")).ToString ()' "(new Decimal(\"0.00000008143559702739\")).mul(\"0.000527115862130707\").toString() == \"0.0000000000429259949352215200\" FAILED"); " is 281.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0002210184665192469105090427"' ((decimal.Parse ("0.177999768954702")) / decimal.Parse ("805.361523667984")).ToString ()' "(new Decimal(\"0.177999768954702\")).div(\"805.361523667984\").toString() == \"0.0002210184665192469105090427\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("402.38051609824775058238"' ((decimal.Parse ("0.00000008959675058238")) + decimal.Parse ("402.380516008651")).ToString ()' "(new Decimal(\"0.00000008959675058238\")).add(\"402.380516008651\").toString() == \"402.38051609824775058238\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1157.9235974952320582596435131"' ((decimal.Parse ("3201536.39800918")) * decimal.Parse ("0.000361677474045045")).ToString ()' "(new Decimal(\"3201536.39800918\")).mul(\"0.000361677474045045\").toString() == \"1157.9235974952320582596435131\" FAILED"); " is 269.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("596105387691.24201370458414998"' ((decimal.Parse ("9903407.65095475")) * decimal.Parse ("60191.9469238221")).ToString ()' "(new Decimal(\"9903407.65095475\")).mul(\"60191.9469238221\").toString() == \"596105387691.24201370458414998\" FAILED"); " is 261.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("159156.866445745"' ((decimal.Parse ("293261.767501599")) - decimal.Parse ("134104.901055854")).ToString ()' "(new Decimal(\"293261.767501599\")).sub(\"134104.901055854\").toString() == \"159156.866445745\" FAILED"); " is 233.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("25483.063870515866677174995489"' ((decimal.Parse ("0.0000990216107103143")) / decimal.Parse ("0.000000003885781208")).ToString ()' "(new Decimal(\"0.0000990216107103143\")).div(\"0.000000003885781208\").toString() == \"25483.063870515866677174995489\" FAILED"); " is 279.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("273.43581025760547419975195832"' ((decimal.Parse ("0.504111655756883")) * decimal.Parse ("542.411204214399")).ToString ()' "(new Decimal(\"0.504111655756883\")).mul(\"542.411204214399\").toString() == \"273.43581025760547419975195832\" FAILED"); " is 263.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000054983344821540025900927"' ((decimal.Parse ("0.00000002588138930773")) * decimal.Parse ("212.443559995128")).ToString ()' "(new Decimal(\"0.00000002588138930773\")).mul(\"212.443559995128\").toString() == \"0.0000054983344821540025900927\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0401243778893816891004378948"' ((decimal.Parse ("0.00000005520699944124")) / decimal.Parse ("0.00000137589670781786")).ToString ()' "(new Decimal(\"0.00000005520699944124\")).div(\"0.00000137589670781786\").toString() == \"0.0401243778893816891004378948\" FAILED"); " is 285.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00005649102308903403"' ((decimal.Parse ("0.000056398253821022")) + decimal.Parse ("0.00000009276926801203")).ToString ()' "(new Decimal(\"0.000056398253821022\")).add(\"0.00000009276926801203\").toString() == \"0.00005649102308903403\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("1217.5521632644127050450346182"' ((decimal.Parse ("0.0854362290750426")) / decimal.Parse ("0.0000701704876824145")).ToString ()' "(new Decimal(\"0.0854362290750426\")).div(\"0.0000701704876824145\").toString() == \"1217.5521632644127050450346182\" FAILED"); " is 275.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.0000000000022138852190770639"' ((decimal.Parse ("0.00000001968172030509")) / decimal.Parse ("8890.12679405982")).ToString ()' "(new Decimal(\"0.00000001968172030509\")).div(\"8890.12679405982\").toString() == \"0.0000000000022138852190770639\" FAILED"); " is 273.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00004304147600337928"' ((decimal.Parse ("0.00000665923518438788")) + decimal.Parse ("0.0000363822408189914")).ToString ()' "(new Decimal(\"0.00000665923518438788\")).add(\"0.0000363822408189914\").toString() == \"0.00004304147600337928\" FAILED"); " is 267.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.84670431087102625289"' ((decimal.Parse ("0.846703634525977")) + decimal.Parse ("0.00000067634504925289")).ToString ()' "(new Decimal(\"0.846703634525977\")).add(\"0.00000067634504925289\").toString() == \"0.84670431087102625289\" FAILED"); " is 259.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.095390208997479793"' ((decimal.Parse ("0.0963102136721417")) - decimal.Parse ("0.000920004674661907")).ToString ()' "(new Decimal(\"0.0963102136721417\")).sub(\"0.000920004674661907\").toString() == \"0.095390208997479793\" FAILED"); " is 253.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.00981694733288462955"' ((decimal.Parse ("0.00000990941151041045")) - decimal.Parse ("0.00982685674439504")).ToString ()' "(new Decimal(\"0.00000990941151041045\")).sub(\"0.00982685674439504\").toString() == \"-0.00981694733288462955\" FAILED"); " is 265.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-0.00000990941151041045"' (-decimal.Parse ("0.00000990941151041045")).ToString ()' "new Decimal(\"0.00000990941151041045\").neg().toString() == \"-0.00000990941151041045\" FAILED"); " is 199.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0.00000990941151041045"' (-decimal.Parse ("-0.00000990941151041045")).ToString ()' "new Decimal(\"-0.00000990941151041045\").neg().toString() == \"0.00000990941151041045\" FAILED"); " is 199.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-544246.617026742"' (-decimal.Parse ("544246.617026742")).ToString ()' "(new Decimal(\"544246.617026742\")).neg().toString() == \"-544246.617026742\" FAILED"); " is 177.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("544246.617026742"' (-decimal.Parse ("-544246.617026742")).ToString ()' "(new Decimal(\"-544246.617026742\")).neg().toString() == \"544246.617026742\" FAILED"); " is 177.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0"' decimal.Truncate (decimal.Parse (".9")).ToString ()' "(new Decimal(\".9\").trunc() == \"0\" FAILED"); " is 123.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0"' decimal.Truncate (decimal.Parse (".999")).ToString ()' "(new Decimal(\".999\").trunc() == \"0\" FAILED"); " is 127.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0"' decimal.Truncate (decimal.Parse (".999999")).ToString ()' "(new Decimal(\".999999\").trunc() == \"0\" FAILED"); " is 133.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("3"' decimal.Truncate (decimal.Parse ("3.9999999")).ToString ()' "(new Decimal(\"3.9999999\").trunc() == \"3\" FAILED"); " is 137.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("12312312313123123123123123"' decimal.Truncate (decimal.Parse ("12312312313123123123123123.99")).ToString ()' "(new Decimal(\"12312312313123123123123123.99\").trunc() == \"12312312313123123123123123\" FAILED"); " is 227.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0"' decimal.Truncate (decimal.Parse ("-.9")).ToString ()' "(new Decimal(\"-.9\").trunc() == \"0\" FAILED"); " is 125.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0"' decimal.Truncate (decimal.Parse ("-.999")).ToString ()' "(new Decimal(\"-.999\").trunc() == \"0\" FAILED"); " is 129.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("0"' decimal.Truncate (decimal.Parse ("-.999999")).ToString ()' "(new Decimal(\"-.999999\").trunc() == \"0\" FAILED"); " is 135.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-3"' decimal.Truncate (decimal.Parse ("-3.9999999")).ToString ()' "(new Decimal(\"-3.9999999\").trunc() == \"-3\" FAILED"); " is 141.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The length of the statement  "	Assert.AreEqual ("-12312312313123123123123123"' decimal.Truncate (decimal.Parse ("-12312312313123123123123123.99")).ToString ()' "(new Decimal(\"-12312312313123123123123123.99\").trunc() == \"-12312312313123123123123123\" FAILED"); " is 231.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,FormatWorksWithIFormattableAndFormatProvider_SPI_1598,The length of the statement  "	Assert.AreEqual ("Formatted: FMT' StringTests$MyFormatProvider"' string.Format (new MyFormatProvider ()' "{0:FMT}"' new MyFormattable ())); " is 139.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ReplaceRegexWithReplaceCallbackWorks,The length of the statement  "	Assert.AreEqual ("xycxycxyc"' "abcabcabc".Replace (new Bridge.Text.RegularExpressions.Regex ("a|b"' "g")' s => s == "a" ? "x" : "y")); " is 134.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,ToLocaleDateStringWorks_SPI_1624,The length of the statement  "	// #1624 Temp replace `Date.ToLocaleDateString()` -> `Date.ToLocaleDateString(Script.Undefined.As<string>())` as no parameterless method overload " is 145.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcNowWorks,The length of the statement  "	var date = new DateTime (local.GetUtcFullYear ()' local.GetUtcMonth ()' local.GetUtcDate ()' local.GetUtcHours ()' local.GetUtcMinutes ()' local.GetUtcSeconds ()' local.GetUtcMilliseconds ()); " is 192.
Long Statement,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The length of the statement  "	Assert.AreEqual (new TimeSpan (1' 2' 0' 0)' new DateTime (2011' 7' 12' 15' 0' 0).Subtract (new DateTime (2011' 7' 11' 13' 0' 0))); " is 130.
Long Statement,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,TypePropertiesAreCorrect,The length of the statement  "	Assert.AreEqual ("System.Collections.ObjectModel.ReadOnlyCollection$1[[System.Int32' mscorlib]]"' typeof(ReadOnlyCollection<int>).FullName' "FullName should be Array"); " is 168.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,LambdaWorks,The length of the statement  "	Action<LambdaExpression' Type' string[]' Type[]' string> asserter = (expr' returnType' parmNames' parmTypes' title) =>  { " is 121.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,LambdaWorks,The length of the statement  "	Expression<Func<int' string' double>> f4 = Expression.Lambda<Func<int' string' double>> (Expression.Constant (42' typeof(double))' new[] { " is 138.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,LambdaWorks,The length of the statement  "	Expression<Func<int' string' double>> f5 = Expression.Lambda<Func<int' string' double>> (Expression.Constant (42' typeof(double))' new MyEnumerable<ParameterExpression> (new[] { " is 177.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,LambdaWorks,The length of the statement  "	LambdaExpression f7 = Expression.Lambda (Expression.Constant (42' typeof(double))' new MyEnumerable<ParameterExpression> (new[] { " is 129.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BinaryExpressionsWork,The length of the statement  "	Expression e47 = Expression.AndAlso (Expression.Parameter (typeof(bool)' "a")' Expression.Parameter (typeof(bool)' "b")' typeof(bool)); " is 135.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BinaryExpressionsWork,The length of the statement  "	Expression e48 = Expression.OrElse (Expression.Parameter (typeof(bool)' "a")' Expression.Parameter (typeof(bool)' "b")' typeof(bool)); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BinaryExpressionsWork,The length of the statement  "	Assert.False ((object)Expression.Constant (null' typeof(object)) is BinaryExpression' "Constant should not be BinaryExpression"); " is 129.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,UnaryExpressionsWork,The length of the statement  "	Assert.False ((object)Expression.Constant (null' typeof(object)) is UnaryExpression' "Constant should not be UnaryExpression"); " is 127.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayLengthWorks,The length of the statement  "	Assert.True (((UnaryExpression)e1.Body).Operand is ParameterExpression && ((ParameterExpression)((UnaryExpression)e1.Body).Operand).Name == "a"' "e1 operand"); " is 159.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayLengthWorks,The length of the statement  "	Assert.True (((UnaryExpression)e2).Operand is ParameterExpression && ((ParameterExpression)((UnaryExpression)e2).Operand).Name == "a"' "e2 operand"); " is 149.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ConversionsWork,The length of the statement  "	Expression e16 = Expression.Convert (Expression.Parameter (typeof(C)' "a")' typeof(int)' typeof(C).GetMethod ("op_Explicit")); " is 126.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ConversionsWork,The length of the statement  "	Expression e17 = Expression.ConvertChecked (Expression.Parameter (typeof(C)' "a")' typeof(int)' typeof(C).GetMethod ("op_Explicit")); " is 133.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayIndexWorks,The length of the statement  "	Expression e2 = Expression.ArrayIndex (typeof(double)' Expression.Parameter (typeof(double[])' "a")' Expression.Parameter (typeof(int)' "b")); " is 142.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayIndexWorks,The length of the statement  "	Assert.True (((BinaryExpression)e1.Body).Left is ParameterExpression && ((ParameterExpression)((BinaryExpression)e1.Body).Left).Name == "a"' "e1 left"); " is 152.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayIndexWorks,The length of the statement  "	Assert.True (((BinaryExpression)e1.Body).Right is ParameterExpression && ((ParameterExpression)((BinaryExpression)e1.Body).Right).Name == "b"' "e1 right"); " is 155.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayIndexWorks,The length of the statement  "	Assert.True (((BinaryExpression)e1.Body).Left is ParameterExpression && ((ParameterExpression)((BinaryExpression)e1.Body).Left).Name == "a"' "e2 left"); " is 152.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayIndexWorks,The length of the statement  "	Assert.True (((BinaryExpression)e1.Body).Right is ParameterExpression && ((ParameterExpression)((BinaryExpression)e1.Body).Right).Name == "b"' "e2 right"); " is 155.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MultiDimensionalArrayIndexWorks,The length of the statement  "	Expression e2 = Expression.ArrayIndex (typeof(double)' Expression.Parameter (typeof(double['])' "a")' new Expression[] { " is 120.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MultiDimensionalArrayIndexWorks,The length of the statement  "	Expression e3 = Expression.ArrayIndex (typeof(double)' Expression.Parameter (typeof(double['])' "a")' new MyEnumerable<Expression> (new Expression[] { " is 150.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MultiDimensionalArrayIndexWorks,The length of the statement  "		Assert.True (me.Arguments [0] is ParameterExpression && ((ParameterExpression)me.Arguments [0]).Name == "b"' title + " argument 0"); " is 132.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MultiDimensionalArrayIndexWorks,The length of the statement  "		Assert.True (me.Arguments [1] is ParameterExpression && ((ParameterExpression)me.Arguments [1]).Name == "c"' title + " argument 1"); " is 132.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ConditionWorks,The length of the statement  "	Expression e2 = Expression.Condition (Expression.Parameter (typeof(bool)' "a")' Expression.Parameter (typeof(int)' "b")' Expression.Parameter (typeof(int)' "c")' typeof(int)); " is 175.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ConditionWorks,The length of the statement  "	Assert.True (((ConditionalExpression)e1.Body).Test is ParameterExpression && ((ParameterExpression)((ConditionalExpression)e1.Body).Test).Name == "a"' "e1 test"); " is 162.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ConditionWorks,The length of the statement  "	Assert.True (((ConditionalExpression)e1.Body).IfTrue is ParameterExpression && ((ParameterExpression)((ConditionalExpression)e1.Body).IfTrue).Name == "b"' "e1 iftrue"); " is 168.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ConditionWorks,The length of the statement  "	Assert.True (((ConditionalExpression)e1.Body).IfFalse is ParameterExpression && ((ParameterExpression)((ConditionalExpression)e1.Body).IfFalse).Name == "c"' "e1 iffalse"); " is 171.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ConditionWorks,The length of the statement  "	Assert.True (((ConditionalExpression)e2).Test is ParameterExpression && ((ParameterExpression)((ConditionalExpression)e2).Test).Name == "a"' "e2 test"); " is 152.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ConditionWorks,The length of the statement  "	Assert.True (((ConditionalExpression)e2).IfTrue is ParameterExpression && ((ParameterExpression)((ConditionalExpression)e2).IfTrue).Name == "b"' "e2 iftrue"); " is 158.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ConditionWorks,The length of the statement  "	Assert.True (((ConditionalExpression)e2).IfFalse is ParameterExpression && ((ParameterExpression)((ConditionalExpression)e2).IfFalse).Name == "c"' "e2 iffalse"); " is 161.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ConditionWorks,The length of the statement  "	Assert.False ((object)Expression.Constant (null' typeof(object)) is ConditionalExpression' "Constant should not be ConditionalExpression"); " is 139.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,CallWorks,The length of the statement  "		Assert.True (ce.Arguments [0] is ParameterExpression && ((ParameterExpression)ce.Arguments [0]).Name == "a"' title + " argument 0"); " is 132.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,CallWorks,The length of the statement  "		Assert.True (ce.Arguments [1] is ParameterExpression && ((ParameterExpression)ce.Arguments [1]).Name == "b"' title + " argument 1"); " is 132.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,CallWorks,The length of the statement  "	Expression e5 = Expression.Call (Expression.Parameter (typeof(C)' "i")' typeof(C).GetMethod ("M1")' new MyEnumerable<Expression> (new Expression[] { " is 148.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,CallWorks,The length of the statement  "	Assert.False ((object)Expression.Constant (null' typeof(object)) is MethodCallExpression' "Constant should not be MethodCallExpression"); " is 137.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MethodGroupConversionWorks,The length of the statement  "	Assert.True (e3.Arguments [1] is ParameterExpression && ((ParameterExpression)e3.Arguments [1]).Name == "a"' "e3 argument 1"); " is 126.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,InvokeWorks,The length of the statement  "	Expression e2 = Expression.Invoke (typeof(string)' Expression.Parameter (typeof(Func<int' string' string>)' "a")' new Expression[] { " is 132.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,InvokeWorks,The length of the statement  "	Expression e3 = Expression.Invoke (typeof(string)' Expression.Parameter (typeof(Func<int' string' string>)' "a")' new MyEnumerable<Expression> (new Expression[] { " is 162.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,InvokeWorks,The length of the statement  "		Assert.True (ie.Expression is ParameterExpression && ((ParameterExpression)ie.Expression).Name == "a"' title + " expression"); " is 126.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,InvokeWorks,The length of the statement  "		Assert.True (ie.Arguments [0] is ParameterExpression && ((ParameterExpression)ie.Arguments [0]).Name == "b"' title + " argument 0"); " is 132.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,InvokeWorks,The length of the statement  "		Assert.True (ie.Arguments [1] is ParameterExpression && ((ParameterExpression)ie.Arguments [1]).Name == "c"' title + " argument 1"); " is 132.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,InvokeWorks,The length of the statement  "	Assert.False ((object)Expression.Constant (null' typeof(object)) is InvocationExpression' "Constant should not be InvocationExpression"); " is 137.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.True (((NewArrayExpression)e1.Body).Expressions [0] is ParameterExpression && ((ParameterExpression)((NewArrayExpression)e1.Body).Expressions [0]).Name == "a"' "e1 expression 0"); " is 186.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.True (((NewArrayExpression)e2.Body).Expressions [0] is ParameterExpression && ((ParameterExpression)((NewArrayExpression)e2.Body).Expressions [0]).Name == "a"' "e2 expression 0"); " is 186.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.True (((NewArrayExpression)e2.Body).Expressions [1] is ParameterExpression && ((ParameterExpression)((NewArrayExpression)e2.Body).Expressions [1]).Name == "b"' "e2 expression 1"); " is 186.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.True (((NewArrayExpression)e3.Body).Expressions [0] is ParameterExpression && ((ParameterExpression)((NewArrayExpression)e3.Body).Expressions [0]).Name == "a"' "e3 expression 0"); " is 186.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.True (((NewArrayExpression)e3.Body).Expressions [1] is ParameterExpression && ((ParameterExpression)((NewArrayExpression)e3.Body).Expressions [1]).Name == "b"' "e3 expression 1"); " is 186.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.True (((NewArrayExpression)e4).Expressions [0] is ParameterExpression && ((ParameterExpression)((NewArrayExpression)e4).Expressions [0]).Name == "a"' "e4 expression 0"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.True (((NewArrayExpression)e4).Expressions [1] is ParameterExpression && ((ParameterExpression)((NewArrayExpression)e4).Expressions [1]).Name == "b"' "e4 expression 1"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.True (((NewArrayExpression)e5).Expressions [0] is ParameterExpression && ((ParameterExpression)((NewArrayExpression)e5).Expressions [0]).Name == "a"' "e5 expression 0"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.True (((NewArrayExpression)e5).Expressions [1] is ParameterExpression && ((ParameterExpression)((NewArrayExpression)e5).Expressions [1]).Name == "b"' "e5 expression 1"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.True (((NewArrayExpression)e6).Expressions [0] is ParameterExpression && ((ParameterExpression)((NewArrayExpression)e6).Expressions [0]).Name == "a"' "e6 expression 0"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.True (((NewArrayExpression)e6).Expressions [1] is ParameterExpression && ((ParameterExpression)((NewArrayExpression)e6).Expressions [1]).Name == "b"' "e6 expression 1"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.True (((NewArrayExpression)e7).Expressions [0] is ParameterExpression && ((ParameterExpression)((NewArrayExpression)e7).Expressions [0]).Name == "a"' "e7 expression 0"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.True (((NewArrayExpression)e7).Expressions [1] is ParameterExpression && ((ParameterExpression)((NewArrayExpression)e7).Expressions [1]).Name == "b"' "e7 expression 1"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The length of the statement  "	Assert.False ((object)Expression.Constant (null' typeof(object)) is NewArrayExpression' "Constant should not be NewArrayExpression"); " is 133.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The length of the statement  "		Assert.True (me.Expression is ParameterExpression && ((ParameterExpression)me.Expression).Name == "a"' title + " expression"); " is 126.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The length of the statement  "			Assert.True (ReferenceEquals (me.Member' memberName.StartsWith ("F") ? (object)typeof(C).GetField (memberName) : typeof(C).GetProperty (memberName))' title + " member"); " is 169.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The length of the statement  "			Assert.AreEqual (memberName.StartsWith ("F") ? MemberTypes.Field : MemberTypes.Property' me.Member.MemberType' title + " member type"); " is 135.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The length of the statement  "		Assert.AreEqual (result' me.Member is FieldInfo ? ((FieldInfo)me.Member).GetValue (new C ()) : ((PropertyInfo)me.Member).GetMethod.Invoke (new C ())' title + " member result"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The length of the statement  "	Assert.False ((object)Expression.Constant (null' typeof(object)) is MemberExpression' "Constant should not be MemberExpression"); " is 129.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,IndexersWork,The length of the statement  "	Assert.True (ie.Arguments [0] is ParameterExpression && ((ParameterExpression)ie.Arguments [0]).Name == "b"' "argument 0"); " is 123.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,IndexersWork,The length of the statement  "	Assert.True (ie.Arguments [1] is ParameterExpression && ((ParameterExpression)ie.Arguments [1]).Name == "c"' "argument 1"); " is 123.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,IndexExpressionsWork,The length of the statement  "		Assert.True (ie.Arguments [0] is ParameterExpression && ((ParameterExpression)ie.Arguments [0]).Name == "b"' title + " argument 0"); " is 132.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,IndexExpressionsWork,The length of the statement  "		Assert.True (ie.Arguments [1] is ParameterExpression && ((ParameterExpression)ie.Arguments [1]).Name == "c"' title + " argument 1"); " is 132.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,IndexExpressionsWork,The length of the statement  "	Expression e2 = Expression.Property (pa1' typeof(C).GetProperty ("Item")' new MyEnumerable<Expression> (new Expression[] { " is 122.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,IndexExpressionsWork,The length of the statement  "	Assert.False ((object)Expression.Constant (null' typeof(object)) is IndexExpression' "Constant should not be IndexExpression"); " is 127.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ObjectConstructionWorks,The length of the statement  "			Assert.True (ne.Arguments [i] is ParameterExpression && ((ParameterExpression)ne.Arguments [i]).Name == ((char)('a' + i)).ToString ()' title + " argument " + i); " is 161.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ObjectConstructionWorks,The length of the statement  "	Assert.False ((object)Expression.Constant (null' typeof(object)) is NewExpression' "Constant should not be NewExpression"); " is 123.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,AnonymousTypeConstructionWorks,The length of the statement  "	Assert.True (ne.Arguments [0] is ParameterExpression && ((ParameterExpression)ne.Arguments [0]).Name == "a"' "argument 0"); " is 123.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,AnonymousTypeConstructionWorks,The length of the statement  "	Assert.True (ne.Arguments [1] is ParameterExpression && ((ParameterExpression)ne.Arguments [1]).Name == "b"' "argument 1"); " is 123.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TransparentIdentifiersWork,The length of the statement  "	Assert.True (ne.Arguments [0] is ParameterExpression && ((ParameterExpression)ne.Arguments [0]).Name == "a"' "argument 0"); " is 123.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BindWorks,The length of the statement  "	Assert.True (ma1.Expression is ParameterExpression && ((ParameterExpression)ma1.Expression).Name == "a"' "b1 expression"); " is 122.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BindWorks,The length of the statement  "	Assert.True (ma2.Expression is ParameterExpression && ((ParameterExpression)ma2.Expression).Name == "a"' "b2 expression"); " is 122.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BindWorks,The length of the statement  "	Assert.True (ma3.Expression is ParameterExpression && ((ParameterExpression)ma3.Expression).Name == "a"' "b3 expression"); " is 122.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BindWorks,The length of the statement  "	Assert.True (ma4.Expression is ParameterExpression && ((ParameterExpression)ma4.Expression).Name == "a"' "b4 expression"); " is 122.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BindWorks,The length of the statement  "	Assert.False ((object)Expression.ListBind (typeof(C).GetField ("LF")) is MemberAssignment' "ListBinding should not be MemberAssignment"); " is 137.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListBindWorks,The length of the statement  "		Assert.True (mlb.Initializers [0].Arguments [0] is ParameterExpression && ((ParameterExpression)mlb.Initializers [0].Arguments [0]).Name == "a"' title + " initializer 0 argument"); " is 180.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListBindWorks,The length of the statement  "		Assert.True (mlb.Initializers [1].Arguments [0] is ParameterExpression && ((ParameterExpression)mlb.Initializers [1].Arguments [0]).Name == "b"' title + " initializer 1 argument"); " is 180.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListBindWorks,The length of the statement  "	Assert.True (mlb7.Initializers [0].Arguments [0] is ParameterExpression && ((ParameterExpression)mlb7.Initializers [0].Arguments [0]).Name == "a"' "b7 initializer 0 argument"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListBindWorks,The length of the statement  "	Assert.True (mlb7.Initializers [1].Arguments [0] is ParameterExpression && ((ParameterExpression)mlb7.Initializers [1].Arguments [0]).Name == "a"' "b7 initializer 1 argument 0"); " is 178.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListBindWorks,The length of the statement  "	Assert.True (mlb7.Initializers [1].Arguments [1] is ParameterExpression && ((ParameterExpression)mlb7.Initializers [1].Arguments [1]).Name == "b"' "b7 initializer 1 argument 1"); " is 178.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListBindWorks,The length of the statement  "	Assert.False ((object)Expression.Bind (typeof(C).GetField ("F1")' Expression.Parameter (typeof(int)' "a")) is MemberListBinding' "MemberAssignment should not be list binding"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberBindWorks,The length of the statement  "	Assert.True (mb1.Bindings [0] is MemberAssignment && ReferenceEquals (mb1.Bindings [0].Member' typeof(C).GetField ("F1"))' "b1 binding 0"); " is 139.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberBindWorks,The length of the statement  "	Assert.True (mb1.Bindings [1] is MemberAssignment && ReferenceEquals (mb1.Bindings [1].Member' typeof(C).GetProperty ("P1"))' "b1 binding 1"); " is 142.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberBindWorks,The length of the statement  "	Assert.True (mb2.Bindings [0] is MemberAssignment && ReferenceEquals (mb2.Bindings [0].Member' typeof(C).GetField ("F1"))' "b1 binding 0"); " is 139.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberBindWorks,The length of the statement  "	Assert.True (mb2.Bindings [1] is MemberAssignment && ReferenceEquals (mb2.Bindings [1].Member' typeof(C).GetProperty ("P1"))' "b1 binding 1"); " is 142.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberBindWorks,The length of the statement  "	Assert.False ((object)Expression.ListBind (typeof(C).GetField ("LF")) is MemberMemberBinding' "ListBinding should not be MemberMemberBinding"); " is 143.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberInitWorks,The length of the statement  "		Assert.True (ReferenceEquals (mie.NewExpression.Constructor' typeof(C).GetConstructor (new Type[0]))' title + " new expression"); " is 129.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberInitWorks,The length of the statement  "		Assert.True (((MemberAssignment)mie.Bindings [0]).Expression is ParameterExpression && ((ParameterExpression)((MemberAssignment)mie.Bindings [0]).Expression).Name == "a"' title + " binding 0 expression"); " is 204.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberInitWorks,The length of the statement  "		Assert.True (((MemberAssignment)mie.Bindings [1]).Expression is ParameterExpression && ((ParameterExpression)((MemberAssignment)mie.Bindings [1]).Expression).Name == "b"' title + " binding 1 expression"); " is 204.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberInitWorks,The length of the statement  "	Expression e3 = Expression.MemberInit (Expression.New (typeof(C).GetConstructor (new Type[0]))' new MyEnumerable<MemberBinding> (new MemberBinding[] { " is 150.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberInitWorks,The length of the statement  "	Assert.False ((object)Expression.Constant (0' typeof(int)) is MemberInitExpression' "Constant is MemberInitExpression"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListInitWorks,The length of the statement  "		Assert.True (ReferenceEquals (lie.NewExpression.Constructor' typeof(MyList).GetConstructor (new Type[0]))' title + " new expression"); " is 134.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListInitWorks,The length of the statement  "		Assert.True (lie.Initializers [0].Arguments [0] is ParameterExpression && ((ParameterExpression)lie.Initializers [0].Arguments [0]).Name == "a"' title + " initializer 0 argument"); " is 180.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListInitWorks,The length of the statement  "		Assert.True (lie.Initializers [1].Arguments [0] is ParameterExpression && ((ParameterExpression)lie.Initializers [1].Arguments [0]).Name == "b"' title + " initializer 1 argument"); " is 180.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListInitWorks,The length of the statement  "	Expression e5 = Expression.ListInit (Expression.New (typeof(MyList))' add1' new MyEnumerable<Expression> (new Expression[] { " is 124.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListInitWorks,The length of the statement  "	Assert.True (ReferenceEquals (lie6.NewExpression.Constructor' typeof(MyList).GetConstructor (new Type[0]))' "e6 new expression"); " is 129.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListInitWorks,The length of the statement  "	Assert.True (lie6.Initializers [0].Arguments [0] is ParameterExpression && ((ParameterExpression)lie6.Initializers [0].Arguments [0]).Name == "a"' "e6 initializer 0 argument"); " is 176.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListInitWorks,The length of the statement  "	Assert.True (lie6.Initializers [1].Arguments [0] is ParameterExpression && ((ParameterExpression)lie6.Initializers [1].Arguments [0]).Name == "a"' "e6 initializer 1 argument 0"); " is 178.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListInitWorks,The length of the statement  "	Assert.True (lie6.Initializers [1].Arguments [1] is ParameterExpression && ((ParameterExpression)lie6.Initializers [1].Arguments [1]).Name == "b"' "e6 initializer 1 argument 1"); " is 178.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TypeIsAndTypeEqualWork,The length of the statement  "	Assert.True (((TypeBinaryExpression)e1.Body).Expression is ParameterExpression && ((ParameterExpression)((TypeBinaryExpression)e1.Body).Expression).Name == "a"' "e1 expression"); " is 178.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TypeIsAndTypeEqualWork,The length of the statement  "	Assert.True (((TypeBinaryExpression)e2).Expression is ParameterExpression && ((ParameterExpression)((TypeBinaryExpression)e2).Expression).Name == "a"' "e2 expression"); " is 168.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TypeIsAndTypeEqualWork,The length of the statement  "	Assert.True (((TypeBinaryExpression)e3).Expression is ParameterExpression && ((ParameterExpression)((TypeBinaryExpression)e2).Expression).Name == "a"' "e3 expression"); " is 168.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TypeIsAndTypeEqualWork,The length of the statement  "	Assert.False ((object)Expression.Constant (0' typeof(int)) is TypeBinaryExpression' "Constant is TypeBinaryExpression"); " is 120.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,GotoWorks,The length of the statement  "	Action<Expression' Type' GotoExpressionKind' LabelTarget' Expression' string> asserter = (expr' type' kind' target' value' title) =>  { " is 135.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,SwitchWorks,The length of the statement  "	Action<Expression' Type' Expression' Expression' SwitchCase[]' MethodInfo' string> asserter = (expr' type' switchValue' defaultBody' cases' comparison' title) =>  { " is 164.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TryWorks,The length of the statement  "	Action<Expression' Type' Expression' Expression' bool' string> asserter = (expr' type' fault' @finally' hasHandlers' title) =>  { " is 129.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,DynamicWorks,The length of the statement  "	Assert.False ((object)Expression.DynamicInvocation (a) is DynamicMemberExpression' "DynamicInvocation is DynamicMember"); " is 121.
Long Statement,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,DynamicWorks,The length of the statement  "	Assert.False ((object)Expression.DynamicMember (a' "x") is DynamicInvocationExpression' "DynamicIndex is DynamicInvocation"); " is 125.
Empty Catch Block,Bridge.ClientTest.Batch4,TestHelper,C:\repos\bridgedotnet_Bridge\Tests\Batch4\TestHelper.cs,Safe,The method has an empty catch block.
Empty Catch Block,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,UnboxingWorks,The method has an empty catch block.
Empty Catch Block,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,ValueWorks,The method has an empty catch block.
Empty Catch Block,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,GetItemWorks,The method has an empty catch block.
Empty Catch Block,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,GetItemWorks,The method has an empty catch block.
Empty Catch Block,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,GetItemWorks,The method has an empty catch block.
Empty Catch Block,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,AddWorks,The method has an empty catch block.
Empty Catch Block,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,IndexerGetterThrowsForNonExistingItems,The method has an empty catch block.
Empty Catch Block,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,AddThrowsIfItemAlreadyExists,The method has an empty catch block.
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,NonGenericCreateInstanceWithoutArgumentsWorks,The following statement contains a magic number: Assert.AreEqual (42' c.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,NonGenericCreateInstanceWithOneArgumentWorks_SPI_1540,The following statement contains a magic number: Assert.AreEqual (3' c.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,NonGenericCreateInstanceWithOneArgumentWorks_SPI_1540,The following statement contains a magic number: Assert.AreEqual (3' c.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,NonGenericCreateInstanceWithTwoArgumentsWorks_SPI_1541,The following statement contains a magic number: Assert.AreEqual (7' c.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,NonGenericCreateInstanceWithTwoArgumentsWorks_SPI_1541,The following statement contains a magic number: Assert.AreEqual (8' c.j);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,NonGenericCreateInstanceWithTwoArgumentsWorks_SPI_1541,The following statement contains a magic number: Assert.AreEqual (7' c.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,NonGenericCreateInstanceWithTwoArgumentsWorks_SPI_1541,The following statement contains a magic number: Assert.AreEqual (8' c.j);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,GenericCreateInstanceWithoutArgumentsWorks,The following statement contains a magic number: Assert.AreEqual (42' c.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,GenericCreateInstanceWithOneArgumentWorks_SPI_1542,The following statement contains a magic number: Assert.AreEqual (3' c.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,GenericCreateInstanceWithOneArgumentWorks_SPI_1542,The following statement contains a magic number: Assert.AreEqual (3' c.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,GenericCreateInstanceWithTwoArgumentsWorks_SPI_1543,The following statement contains a magic number: Assert.AreEqual (7' c.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,GenericCreateInstanceWithTwoArgumentsWorks_SPI_1543,The following statement contains a magic number: Assert.AreEqual (8' c.j);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,GenericCreateInstanceWithTwoArgumentsWorks_SPI_1543,The following statement contains a magic number: Assert.AreEqual (7' c.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,GenericCreateInstanceWithTwoArgumentsWorks_SPI_1543,The following statement contains a magic number: Assert.AreEqual (8' c.j);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,InstantiatingTypeParameterWithDefaultConstructorConstraintWorks_SPI_1544,The following statement contains a magic number: Assert.AreEqual (42' c.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForClassWithUnnamedDefaultConstructor,The following statement contains a magic number: Assert.AreEqual (42' c1.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForClassWithUnnamedDefaultConstructor,The following statement contains a magic number: Assert.AreEqual (42' c2.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForClassWithUnnamedDefaultConstructor,The following statement contains a magic number: Assert.AreEqual (42' c3.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForClassWithNamedDefaultConstructor,The following statement contains a magic number: Assert.AreEqual (42' c1.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForClassWithNamedDefaultConstructor,The following statement contains a magic number: Assert.AreEqual (42' c2.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForClassWithNamedDefaultConstructor,The following statement contains a magic number: Assert.AreEqual (42' c3.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForClassWithInlineCodeDefaultConstructor_SPI_1545,The following statement contains a magic number: Assert.AreEqual (42' c1.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForClassWithInlineCodeDefaultConstructor_SPI_1545,The following statement contains a magic number: Assert.AreEqual (42' c2.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForClassWithInlineCodeDefaultConstructor_SPI_1545,The following statement contains a magic number: Assert.AreEqual (42' c3.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForClassWithStaticMethodDefaultConstructor,The following statement contains a magic number: Assert.AreEqual (42' c1.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForClassWithStaticMethodDefaultConstructor,The following statement contains a magic number: Assert.AreEqual (42' c2.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForClassWithStaticMethodDefaultConstructor,The following statement contains a magic number: Assert.AreEqual (42' c3.i);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForGenericClassWithNamedDefaultConstructor,The following statement contains a magic number: Assert.AreEqual (42' c1.I);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForGenericClassWithNamedDefaultConstructor,The following statement contains a magic number: Assert.AreEqual (42' c2.I);  
Magic Number,Bridge.ClientTest.Batch4,ActivatorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ActivatorTests.cs,CreateInstanceWithNoArgumentsWorksForGenericClassWithNamedDefaultConstructor,The following statement contains a magic number: Assert.AreEqual (42' c3.I);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToLocalVariables,The following statement contains a magic number: RefTestMethod (ref i' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' i);  	i = 21;  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToLocalVariables,The following statement contains a magic number: RefTestMethod (ref i' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' i);  	i = 21;  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToLocalVariables,The following statement contains a magic number: RefTestMethod (ref i' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' i);  	i = 21;  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToLocalVariables,The following statement contains a magic number: RefTestMethod (ref i' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' i);  	i = 21;  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToLocalVariables,The following statement contains a magic number: RefTestMethod (ref i' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' i);  	i = 21;  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToLocalVariables,The following statement contains a magic number: RefTestMethod (ref i' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' i);  	i = 21;  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToLocalVariables,The following statement contains a magic number: Assert.AreEqual (17' i);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToLocalVariables,The following statement contains a magic number: i = 21;  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToLocalVariables,The following statement contains a magic number: Assert.AreEqual (24' i);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToField,The following statement contains a magic number: RefTestMethod (ref c1.i' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' c1.i);  	c1.i = 21;  	c1 = new C {  		i = 10  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToField,The following statement contains a magic number: RefTestMethod (ref c1.i' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' c1.i);  	c1.i = 21;  	c1 = new C {  		i = 10  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToField,The following statement contains a magic number: RefTestMethod (ref c1.i' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' c1.i);  	c1.i = 21;  	c1 = new C {  		i = 10  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToField,The following statement contains a magic number: RefTestMethod (ref c1.i' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' c1.i);  	c1.i = 21;  	c1 = new C {  		i = 10  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToField,The following statement contains a magic number: RefTestMethod (ref c1.i' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' c1.i);  	c1.i = 21;  	c1 = new C {  		i = 10  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToField,The following statement contains a magic number: RefTestMethod (ref c1.i' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' c1.i);  	c1.i = 21;  	c1 = new C {  		i = 10  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToField,The following statement contains a magic number: RefTestMethod (ref c1.i' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' c1.i);  	c1.i = 21;  	c1 = new C {  		i = 10  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToField,The following statement contains a magic number: Assert.AreEqual (17' c1.i);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToField,The following statement contains a magic number: c1.i = 21;  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToField,The following statement contains a magic number: c1 = new C {  	i = 10  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToField,The following statement contains a magic number: Assert.AreEqual (24' c2.i);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToField,The following statement contains a magic number: Assert.AreEqual (10' c1.i);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2]);  	a1 [2] = 21;  	a1 = new[] {  		8'  		9'  		10'  		11'  		12  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: Assert.AreEqual (17' a1 [2]);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: Assert.AreEqual (17' a1 [2]);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: a1 [2] = 21;  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: a1 [2] = 21;  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: a1 = new[] {  	8'  	9'  	10'  	11'  	12  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: a1 = new[] {  	8'  	9'  	10'  	11'  	12  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: a1 = new[] {  	8'  	9'  	10'  	11'  	12  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: a1 = new[] {  	8'  	9'  	10'  	11'  	12  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: a1 = new[] {  	8'  	9'  	10'  	11'  	12  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: Assert.AreEqual (24' a2 [2]);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: Assert.AreEqual (24' a2 [2]);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: Assert.AreEqual (10' a1 [2]);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToOneDimensionalArray,The following statement contains a magic number: Assert.AreEqual (10' a1 [2]);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: RefTestMethod (ref a1 [2' 1]' 14' 17' 21' 24' () =>  {  	Assert.AreEqual (17' a1 [2' 1]);  	a1 [2' 1] = 21;  	a1 = new['] {  		{  			1'  			2'  			3  		}'  		{  			4'  			5'  			6  		}'  		{  			7'  			8'  			9  		}  	};  });  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: Assert.AreEqual (17' a1 [2' 1]);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: Assert.AreEqual (17' a1 [2' 1]);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: a1 [2' 1] = 21;  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: a1 [2' 1] = 21;  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: a1 = new['] {  	{  		1'  		2'  		3  	}'  	{  		4'  		5'  		6  	}'  	{  		7'  		8'  		9  	}  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: a1 = new['] {  	{  		1'  		2'  		3  	}'  	{  		4'  		5'  		6  	}'  	{  		7'  		8'  		9  	}  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: a1 = new['] {  	{  		1'  		2'  		3  	}'  	{  		4'  		5'  		6  	}'  	{  		7'  		8'  		9  	}  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: a1 = new['] {  	{  		1'  		2'  		3  	}'  	{  		4'  		5'  		6  	}'  	{  		7'  		8'  		9  	}  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: a1 = new['] {  	{  		1'  		2'  		3  	}'  	{  		4'  		5'  		6  	}'  	{  		7'  		8'  		9  	}  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: a1 = new['] {  	{  		1'  		2'  		3  	}'  	{  		4'  		5'  		6  	}'  	{  		7'  		8'  		9  	}  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: a1 = new['] {  	{  		1'  		2'  		3  	}'  	{  		4'  		5'  		6  	}'  	{  		7'  		8'  		9  	}  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: a1 = new['] {  	{  		1'  		2'  		3  	}'  	{  		4'  		5'  		6  	}'  	{  		7'  		8'  		9  	}  };  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: Assert.AreEqual (24' a2 [2' 1]);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: Assert.AreEqual (24' a2 [2' 1]);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: Assert.AreEqual (8' a1 [2' 1]);  
Magic Number,Bridge.ClientTest.Batch4,RefParameterTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RefParameterTests.cs,CanUseReferenceToMultiDimensionalArray,The following statement contains a magic number: Assert.AreEqual (8' a1 [2' 1]);  
Magic Number,Bridge.ClientTest.Batch4,ArgumentsTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArgumentsTests.cs,LengthHelper2,The following statement contains a magic number: Assert.AreEqual (2' Arguments.Length);  
Magic Number,Bridge.ClientTest.Batch4,ArgumentsTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArgumentsTests.cs,LengthWorks,The following statement contains a magic number: LengthHelper1 (4);  
Magic Number,Bridge.ClientTest.Batch4,ArgumentsTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArgumentsTests.cs,LengthWorks,The following statement contains a magic number: LengthHelper2 (6' "x");  
Magic Number,Bridge.ClientTest.Batch4,ArgumentsTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArgumentsTests.cs,GetArgumentWorks,The following statement contains a magic number: Assert.AreEqual ("y"' GetArgumentHelper (2' "x"' "y"));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,TypePropertiesAreCorrect_SPI_1548,The following statement contains a magic number: Assert.AreEqual (6' interfaces.Length' "Interface count should be 6");  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,LengthWorks,The following statement contains a magic number: Assert.AreEqual (2' new[] {  	"x"'  	"y"  }.Length);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,GetLengthWorks,The following statement contains a magic number: Assert.AreEqual (2' new[] {  	"x"'  	"y"  }.GetLength (0));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ContainsUsesEqualsMethod,The following statement contains a magic number: Assert.True (arr.Contains (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ContainsUsesEqualsMethod,The following statement contains a magic number: Assert.False (arr.Contains (new C (4)));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,SliceWithoutEndWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	"c"'  	"d"  }' new[] {  	"a"'  	"b"'  	"c"'  	"d"  }.Slice (2));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,SliceWithEndWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	"b"'  	"c"  }' new[] {  	"a"'  	"b"'  	"c"'  	"d"  }.Slice (1' 3));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,IndexOfWithoutStartIndexUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (1' Array.IndexOf (arr' new C (2)));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,IndexOfWithoutStartIndexUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (-1' Array.IndexOf (arr' new C (4)));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,IndexOfWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (3' new[] {  	"a"'  	"b"'  	"c"'  	"b"  }.IndexOf ("b"' 2));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,IndexOfWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (3' new[] {  	"a"'  	"b"'  	"c"'  	"b"  }.IndexOf ("b"' 2));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,IndexOfWithStartIndexUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (3' Array.IndexOf (arr' new C (2)' 2));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,IndexOfWithStartIndexUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (3' Array.IndexOf (arr' new C (2)' 2));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,IndexOfWithStartIndexUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (3' Array.IndexOf (arr' new C (2)' 2));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ReverseWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	2'  	3'  	1'  	4'  	3'  	1  }' arr);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ReverseWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	2'  	3'  	1'  	4'  	3'  	1  }' arr);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ReverseWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	2'  	3'  	1'  	4'  	3'  	1  }' arr);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ReverseWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	2'  	3'  	1'  	4'  	3'  	1  }' arr);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,SortWithDefaultCompareWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	4'  	6'  	6  }' arr);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,SortWithDefaultCompareWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	4'  	6'  	6  }' arr);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,SortWithDefaultCompareWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	4'  	6'  	6  }' arr);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,SortWithDefaultCompareWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	4'  	6'  	6  }' arr);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,SortWithCompareCallbackWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	6'  	6'  	4'  	2'  	1  }' arr);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,SortWithCompareCallbackWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	6'  	6'  	4'  	2'  	1  }' arr);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,SortWithCompareCallbackWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	6'  	6'  	4'  	2'  	1  }' arr);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,SortWithCompareCallbackWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	6'  	6'  	4'  	2'  	1  }' arr);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ICollectionCountWorks,The following statement contains a magic number: Assert.AreEqual (3' l.Count);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ICollectionContainsUsesEqualsMethod,The following statement contains a magic number: Assert.True (l.Contains (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ICollectionContainsUsesEqualsMethod,The following statement contains a magic number: Assert.False (l.Contains (new C (4)));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,IListIndexOfUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (1' Array.IndexOf (arr' new C (2)));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,IListIndexOfUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (-1' Array.IndexOf (arr' new C (4)));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,RepeatWorks,The following statement contains a magic number: Assert.AreEqual (new int[0]' Array.Repeat (10' 0));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,RepeatWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	42'  	42'  	42  }' Array.Repeat (42' 3));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,RepeatWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	42'  	42'  	42  }' Array.Repeat (42' 3));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,RepeatWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	42'  	42'  	42  }' Array.Repeat (42' 3));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,RepeatWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	42'  	42'  	42  }' Array.Repeat (42' 3));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,RepeatWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	42'  	42'  	42  }' Array.Repeat (42' 3));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,RepeatWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	"X"'  	"X"'  	"X"'  	"X"'  	"X"  }' Array.Repeat ("X"' 5));  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ClearWorks,The following statement contains a magic number: Array.Clear (arr1' 2' 2);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ClearWorks,The following statement contains a magic number: Array.Clear (arr1' 2' 2);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ClearWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	10'  	11'  	0'  	0  }' arr1);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ClearWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	10'  	11'  	0'  	0  }' arr1);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ClearWorks,The following statement contains a magic number: Array.Clear (arr2' 0' 4);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,ClearWorks,The following statement contains a magic number: Array.Clear (arr3' 3' 1);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithDifferentArraysWorks,The following statement contains a magic number: Array.Copy (arr1' arr2' 2);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithDifferentArraysWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	7'  	6  }' arr2);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithDifferentArraysWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	7'  	6  }' arr2);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithDifferentArraysWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	7'  	6  }' arr2);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithDifferentArraysWorks,The following statement contains a magic number: Array.Copy (arr1' 3' arr3' 2' 1);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithDifferentArraysWorks,The following statement contains a magic number: Array.Copy (arr1' 3' arr3' 2' 1);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithDifferentArraysWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	9'  	8'  	4'  	6  }' arr3);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithDifferentArraysWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	9'  	8'  	4'  	6  }' arr3);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithDifferentArraysWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	9'  	8'  	4'  	6  }' arr3);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithDifferentArraysWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	9'  	8'  	4'  	6  }' arr3);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithinArrayWorks,The following statement contains a magic number: Array.Copy (arr1' 0' arr1' 1' 2);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithinArrayWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	1'  	2'  	4  }' arr1);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithinArrayWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	1'  	2'  	4  }' arr1);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithinArrayWorks,The following statement contains a magic number: Array.Copy (arr2' 2' arr2' 1' 2);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithinArrayWorks,The following statement contains a magic number: Array.Copy (arr2' 2' arr2' 1' 2);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithinArrayWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	3'  	4'  	4  }' arr2);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithinArrayWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	3'  	4'  	4  }' arr2);  
Magic Number,Bridge.ClientTest.Batch4,ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ArrayTests.cs,CopyWithinArrayWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	3'  	4'  	4  }' arr2);  
Magic Number,Bridge.ClientTest.Batch4,AppDomainTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\AppDomainTests.cs,GetAssembliesWorks_SPI_1646,The following statement contains a magic number: Assert.AreEqual (2' 0);  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,GetTestArr,The following statement contains a magic number: for (int i = 0; i < 64; i++) {  	result [i * 3] = (byte)(i << 2);  	result [i * 3 + 1] = 0;  	result [i * 3 + 2] = 0;  }  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,GetTestArr,The following statement contains a magic number: for (int i = 0; i < 64; i++) {  	result [i * 3] = (byte)(i << 2);  	result [i * 3 + 1] = 0;  	result [i * 3 + 2] = 0;  }  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,GetTestArr,The following statement contains a magic number: for (int i = 0; i < 64; i++) {  	result [i * 3] = (byte)(i << 2);  	result [i * 3 + 1] = 0;  	result [i * 3 + 2] = 0;  }  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,GetTestArr,The following statement contains a magic number: for (int i = 0; i < 64; i++) {  	result [i * 3] = (byte)(i << 2);  	result [i * 3 + 1] = 0;  	result [i * 3 + 2] = 0;  }  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,GetTestArr,The following statement contains a magic number: for (int i = 0; i < 64; i++) {  	result [i * 3] = (byte)(i << 2);  	result [i * 3 + 1] = 0;  	result [i * 3 + 2] = 0;  }  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,GetTestArr,The following statement contains a magic number: for (int i = 0; i < 64; i++) {  	result [i * 3] = (byte)(i << 2);  	result [i * 3 + 1] = 0;  	result [i * 3 + 2] = 0;  }  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,GetTestArr,The following statement contains a magic number: result [i * 3] = (byte)(i << 2);  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,GetTestArr,The following statement contains a magic number: result [i * 3] = (byte)(i << 2);  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,GetTestArr,The following statement contains a magic number: result [i * 3 + 1] = 0;  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,GetTestArr,The following statement contains a magic number: result [i * 3 + 2] = 0;  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,GetTestArr,The following statement contains a magic number: result [i * 3 + 2] = 0;  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQID"' Convert.ToBase64String (new byte[] {  	1'  	2'  	3  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQID"' Convert.ToBase64String (new byte[] {  	1'  	2'  	3  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQIDBA=="' Convert.ToBase64String (new byte[] {  	1'  	2'  	3'  	4  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQIDBA=="' Convert.ToBase64String (new byte[] {  	1'  	2'  	3'  	4  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQIDBA=="' Convert.ToBase64String (new byte[] {  	1'  	2'  	3'  	4  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQIDBAU="' Convert.ToBase64String (new byte[] {  	1'  	2'  	3'  	4'  	5  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQIDBAU="' Convert.ToBase64String (new byte[] {  	1'  	2'  	3'  	4'  	5  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQIDBAU="' Convert.ToBase64String (new byte[] {  	1'  	2'  	3'  	4'  	5  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQIDBAU="' Convert.ToBase64String (new byte[] {  	1'  	2'  	3'  	4'  	5  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQIDBAUG"' Convert.ToBase64String (new byte[] {  	1'  	2'  	3'  	4'  	5'  	6  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQIDBAUG"' Convert.ToBase64String (new byte[] {  	1'  	2'  	3'  	4'  	5'  	6  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQIDBAUG"' Convert.ToBase64String (new byte[] {  	1'  	2'  	3'  	4'  	5'  	6  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQIDBAUG"' Convert.ToBase64String (new byte[] {  	1'  	2'  	3'  	4'  	5'  	6  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithOnlyArrayWorks,The following statement contains a magic number: Assert.AreEqual ("AQIDBAUG"' Convert.ToBase64String (new byte[] {  	1'  	2'  	3'  	4'  	5'  	6  }));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndOffsetAndLengthWorks,The following statement contains a magic number: Assert.AreEqual ("AACIAACMAACQAACUAACYAACcAACgAACkAACoAACsAACwAAC0AAC4AAC8AADAAADEAADIAADMAADQAADUAADYAADcAADgAADkAADoAADsAADwAAD0AAD4AAD8"' Convert.ToBase64String (arr' 100' 90));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndOffsetAndLengthWorks,The following statement contains a magic number: Assert.AreEqual ("AACIAACMAACQAACUAACYAACcAACgAACkAACoAACsAACwAAC0AAC4AAC8AADAAADEAADIAADMAADQAADUAADYAADcAADgAADkAADoAADsAADwAAD0AAD4AAD8"' Convert.ToBase64String (arr' 100' 90));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndOffsetAndLengthAndFormattingOptionsWorks,The following statement contains a magic number: Assert.AreEqual ("AACIAACMAACQAACUAACYAACcAACgAACkAACoAACsAACwAAC0AAC4AAC8AADAAADEAADIAADMAADQAADUAADYAADcAADgAADkAADoAADsAADwAAD0AAD4AAD8"' Convert.ToBase64String (arr' 100' 90' Base64FormattingOptions.None));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndOffsetAndLengthAndFormattingOptionsWorks,The following statement contains a magic number: Assert.AreEqual ("AACIAACMAACQAACUAACYAACcAACgAACkAACoAACsAACwAAC0AAC4AAC8AADAAADEAADIAADMAADQAADUAADYAADcAADgAADkAADoAADsAADwAAD0AAD4AAD8"' Convert.ToBase64String (arr' 100' 90' Base64FormattingOptions.None));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndOffsetAndLengthAndFormattingOptionsWorks,The following statement contains a magic number: Assert.AreEqual ("AACIAACMAACQAACUAACYAACcAACgAACkAACoAACsAACwAAC0AAC4AAC8AADAAADEAADIAADMAADQ\r\n" + "AADUAADYAADcAADgAADkAADoAADsAADwAAD0AAD4AAD8"' Convert.ToBase64String (arr' 100' 90' Base64FormattingOptions.InsertLineBreaks));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndOffsetAndLengthAndFormattingOptionsWorks,The following statement contains a magic number: Assert.AreEqual ("AACIAACMAACQAACUAACYAACcAACgAACkAACoAACsAACwAAC0AAC4AAC8AADAAADEAADIAADMAADQ\r\n" + "AADUAADYAADcAADgAADkAADoAADsAADwAAD0AAD4AAD8"' Convert.ToBase64String (arr' 100' 90' Base64FormattingOptions.InsertLineBreaks));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndOffsetAndLengthAndFormattingOptionsWorks,The following statement contains a magic number: Assert.AreEqual ("AABgAABkAABoAABsAABwAAB0AAB4AAB8AACAAACEAACIAACMAACQAACUAACYAACcAACgAACkAACo\r\n" + "AACsAACwAAC0AAC4AAC8AADAAADEAADIAADMAADQAADUAADYAADcAADgAADkAADoAADsAADwAAD0"' Convert.ToBase64String (arr' 70' 114' Base64FormattingOptions.InsertLineBreaks));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,ToBase64StringWithArrayAndOffsetAndLengthAndFormattingOptionsWorks,The following statement contains a magic number: Assert.AreEqual ("AABgAABkAABoAABsAABwAAB0AAB4AAB8AACAAACEAACIAACMAACQAACUAACYAACcAACgAACkAACo\r\n" + "AACsAACwAAC0AAC4AAC8AADAAADEAADIAADMAADQAADUAADYAADcAADgAADkAADoAADsAADwAAD0"' Convert.ToBase64String (arr' 70' 114' Base64FormattingOptions.InsertLineBreaks));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3  }' Convert.FromBase64String ("AQID"));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3  }' Convert.FromBase64String ("AQID"));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4  }' Convert.FromBase64String ("AQIDBA=="));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4  }' Convert.FromBase64String ("AQIDBA=="));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4  }' Convert.FromBase64String ("AQIDBA=="));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4'  	5  }' Convert.FromBase64String ("AQIDBAU="));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4'  	5  }' Convert.FromBase64String ("AQIDBAU="));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4'  	5  }' Convert.FromBase64String ("AQIDBAU="));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4'  	5  }' Convert.FromBase64String ("AQIDBAU="));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4'  	5'  	6  }' Convert.FromBase64String ("AQIDBAUG"));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4'  	5'  	6  }' Convert.FromBase64String ("AQIDBAUG"));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4'  	5'  	6  }' Convert.FromBase64String ("AQIDBAUG"));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4'  	5'  	6  }' Convert.FromBase64String ("AQIDBAUG"));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4'  	5'  	6  }' Convert.FromBase64String ("AQIDBAUG"));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4'  	5  }' Convert.FromBase64String ("AQIDBAU="));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4'  	5  }' Convert.FromBase64String ("AQIDBAU="));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4'  	5  }' Convert.FromBase64String ("AQIDBAU="));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3'  	4'  	5  }' Convert.FromBase64String ("AQIDBAU="));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3  }' Convert.FromBase64String ("A Q\nI\tD"));  
Magic Number,Bridge.ClientTest.Batch4,ConvertTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ConvertTests.cs,FromBase64StringWorks,The following statement contains a magic number: Assert.AreEqual (new byte[] {  	1'  	2'  	3  }' Convert.FromBase64String ("A Q\nI\tD"));  
Magic Number,Bridge.ClientTest.Batch4,FormattableStringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\FormattableStringTests.cs,ArgumentCountWorks,The following statement contains a magic number: Assert.AreEqual (2' s2.ArgumentCount' "#2");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedInstance,The following statement contains a magic number: c.P1 = 42;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedInstance,The following statement contains a magic number: Assert.AreEqual (41' c.F1' "F1 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedInstance,The following statement contains a magic number: c.F1 = 15;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedInstance,The following statement contains a magic number: Assert.AreEqual (16' c.P1' "P1 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedInstance,The following statement contains a magic number: c.F2 = 17;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedInstance,The following statement contains a magic number: Assert.AreEqual (18' c.P2' "P2 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedInstance,The following statement contains a magic number: c.P3 = 12;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedInstance,The following statement contains a magic number: Assert.AreEqual (11' c.F3' "F3 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedStatic,The following statement contains a magic number: C1.PS1 = 42;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedStatic,The following statement contains a magic number: Assert.AreEqual (41' C1.FS1' "FS1 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedStatic,The following statement contains a magic number: C1.FS1 = 15;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedStatic,The following statement contains a magic number: Assert.AreEqual (16' C1.PS1' "PS1 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedStatic,The following statement contains a magic number: C1.FS2 = 17;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedStatic,The following statement contains a magic number: Assert.AreEqual (18' C1.PS2' "PS2 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedStatic,The following statement contains a magic number: C1.PS3 = 12;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedStatic,The following statement contains a magic number: Assert.AreEqual (11' C1.FS3' "FS3 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGeneric,The following statement contains a magic number: c.P1 = 42;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGeneric,The following statement contains a magic number: Assert.AreEqual (41' c.F1' "F1 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGeneric,The following statement contains a magic number: c.F1 = 15;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGeneric,The following statement contains a magic number: Assert.AreEqual (16' c.P1' "P1 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGeneric,The following statement contains a magic number: c.F2 = 17;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGeneric,The following statement contains a magic number: Assert.AreEqual (18' c.P2' "P2 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGeneric,The following statement contains a magic number: c.P3 = 12;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGeneric,The following statement contains a magic number: Assert.AreEqual (11' c.F3' "F3 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGenericStatic,The following statement contains a magic number: C2<int>.PS1 = 42;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGenericStatic,The following statement contains a magic number: Assert.AreEqual (41' C2<int>.FS1' "FS1 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGenericStatic,The following statement contains a magic number: C2<int>.FS1 = 15;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGenericStatic,The following statement contains a magic number: Assert.AreEqual (16' C2<int>.PS1' "PS1 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGenericStatic,The following statement contains a magic number: C2<int>.FS2 = 17;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGenericStatic,The following statement contains a magic number: Assert.AreEqual (18' C2<int>.PS2' "PS2 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGenericStatic,The following statement contains a magic number: C2<int>.PS3 = 12;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,AccessorsCanBeInvokedGenericStatic,The following statement contains a magic number: Assert.AreEqual (11' C2<int>.FS3' "FS3 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvoked,The following statement contains a magic number: d.P1 = 42;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvoked,The following statement contains a magic number: Assert.AreEqual (41' d.F1' "F1 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvoked,The following statement contains a magic number: d.F1 = 15;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvoked,The following statement contains a magic number: Assert.AreEqual (16' d.P1' "P1 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvoked,The following statement contains a magic number: d.F2 = 17;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvoked,The following statement contains a magic number: Assert.AreEqual (18' d.P2' "P2 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvoked,The following statement contains a magic number: d.P3 = 12;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvoked,The following statement contains a magic number: Assert.AreEqual (11' d.F3' "F3 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvokedGeneric,The following statement contains a magic number: d.P1 = 42;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvokedGeneric,The following statement contains a magic number: Assert.AreEqual (41' d.F1' "F1 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvokedGeneric,The following statement contains a magic number: d.F1 = 15;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvokedGeneric,The following statement contains a magic number: Assert.AreEqual (16' d.P1' "P1 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvokedGeneric,The following statement contains a magic number: d.F2 = 17;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvokedGeneric,The following statement contains a magic number: Assert.AreEqual (18' d.P2' "P2 value");  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvokedGeneric,The following statement contains a magic number: d.P3 = 12;  
Magic Number,Bridge.ClientTest.Batch4,PropertyAccessorTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\PropertyAccessorTests.cs,BaseAccessorsCanBeInvokedGeneric,The following statement contains a magic number: Assert.AreEqual (11' d.F3' "F3 value");  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,UserDefinedStructCanBeUsed,The following statement contains a magic number: Assert.AreEqual (42' s1.I);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,DefaultValueOfStructWithInlineCodeDefaultConstructorWorks_SPI_1610,The following statement contains a magic number: Assert.AreEqual (42' s1.I' "#1");  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,DefaultValueOfStructWithInlineCodeDefaultConstructorWorks_SPI_1610,The following statement contains a magic number: Assert.AreEqual (42' s2.I' "#2");  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,DefaultValueOfStructWithInlineCodeDefaultConstructorWorksGeneric_SPI_1610,The following statement contains a magic number: Assert.AreEqual (42' s1.I' "#1");  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,DefaultValueOfStructWithInlineCodeDefaultConstructorWorksGeneric_SPI_1610,The following statement contains a magic number: Assert.AreEqual (42' s2.I' "#2");  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,DefaultConstructorOfStructWithInlineCodeDefaultConstructorWorks,The following statement contains a magic number: Assert.AreEqual (42' s1.I);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,DefaultConstructorOfStructWithInlineCodeDefaultConstructorWorksGeneric,The following statement contains a magic number: Assert.AreEqual (42' s1.I);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,DefaultGetHashCodeGeneratesHashCodeBasedOnAllInstanceFields,The following statement contains a magic number: S3.StaticField = 10;  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,DefaultGetHashCodeGeneratesHashCodeBasedOnAllInstanceFields,The following statement contains a magic number: S3.StaticField = 20;  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,CanOverrideGetHashCode,The following statement contains a magic number: Assert.AreEqual (43' s1.GetHashCode ());  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,CanLiftUserDefinedBinaryOperator,The following statement contains a magic number: Assert.AreEqual (74' (a + b).Value.I' "#1");  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,CanLiftUserDefinedUnaryOperator_SPI_1634,The following statement contains a magic number: Assert.AreEqual (-42' -a.Value.I' "#1");  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,CanLiftUserDefinedConversionOperator_SPI_1611,The following statement contains a magic number: Assert.AreEqual (42' d1' "#1");  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,FieldsAreClonedWhenValueTypeIsCopied,The following statement contains a magic number: Assert.AreEqual (42' s2.i);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,FieldsAreClonedWhenValueTypeIsCopied,The following statement contains a magic number: s2.i = 43;  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,FieldsAreClonedWhenValueTypeIsCopied,The following statement contains a magic number: Assert.AreEqual (42' s1.i);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,FieldsAreClonedWhenValueTypeIsCopied,The following statement contains a magic number: Assert.AreEqual (43' s2.i);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,PropertiesWithFieldImplementationAreClonedWhenValueTypeIsCopied,The following statement contains a magic number: Assert.AreEqual (42' s2.P2);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,PropertiesWithFieldImplementationAreClonedWhenValueTypeIsCopied,The following statement contains a magic number: s2.P2 = 43;  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,PropertiesWithFieldImplementationAreClonedWhenValueTypeIsCopied,The following statement contains a magic number: Assert.AreEqual (42' s1.P2);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,PropertiesWithFieldImplementationAreClonedWhenValueTypeIsCopied,The following statement contains a magic number: Assert.AreEqual (43' s2.P2);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,AutoEventBackingFieldsAreClonedWhenValueTypeIsCopied_SPI_1612,The following statement contains a magic number: Assert.AreEqual (3' count);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,NestedStructsAreClonedWhenValueTypeIsCopied_SPI_1613,The following statement contains a magic number: Assert.AreEqual (42' s2.N.i);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,NestedStructsAreClonedWhenValueTypeIsCopied_SPI_1613,The following statement contains a magic number: s2.N.i = 43;  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,NestedStructsAreClonedWhenValueTypeIsCopied_SPI_1613,The following statement contains a magic number: Assert.AreEqual (42' s1.N.i);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,NestedStructsAreClonedWhenValueTypeIsCopied_SPI_1613,The following statement contains a magic number: Assert.AreEqual (43' s2.N.i);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,GenericMutableValueTypeWorks,The following statement contains a magic number: Assert.AreEqual (42' s2.t);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,GenericMutableValueTypeWorks,The following statement contains a magic number: s2.t = 43;  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,GenericMutableValueTypeWorks,The following statement contains a magic number: Assert.AreEqual (42' s1.t);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,GenericMutableValueTypeWorks,The following statement contains a magic number: Assert.AreEqual (43' s2.t);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,CloningValueTypeWithNamedDefaultConstructorWorks,The following statement contains a magic number: s1.i = 10;  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,CloningValueTypeWithNamedDefaultConstructorWorks,The following statement contains a magic number: Assert.AreEqual (42' s2.i);  
Magic Number,Bridge.ClientTest.Batch4,UserDefinedStructTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\UserDefinedStructTests.cs,CloningNullableValueTypesWorks,The following statement contains a magic number: Assert.AreEqual (42' s4.Value.i' "s4.i should be 42");  
Magic Number,Bridge.ClientTest.Batch4,StopwatchTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\StopwatchTests.cs,ConstantsWorks,The following statement contains a magic number: Assert.True (Stopwatch.Frequency > 1000' "Frequency");  
Magic Number,Bridge.ClientTest.Batch4,StopwatchTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\StopwatchTests.cs,ElapsedWorks,The following statement contains a magic number: while ((DateTime.Now - before).Milliseconds < 200) {  	if (watch.ElapsedTicks > 0) {  		hasIncreased = true;  	}  }  
Magic Number,Bridge.ClientTest.Batch4,StopwatchTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\StopwatchTests.cs,ElapsedWorks,The following statement contains a magic number: Assert.True (watch.ElapsedMilliseconds > 150' "ElapsedMilliseconds");  
Magic Number,Bridge.ClientTest.Batch4,StopwatchTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\StopwatchTests.cs,ElapsedWorks,The following statement contains a magic number: Assert.True (value > 0.15 && value < 0.25' "Ticks");  
Magic Number,Bridge.ClientTest.Batch4,StopwatchTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\StopwatchTests.cs,ElapsedWorks,The following statement contains a magic number: Assert.True (value > 0.15 && value < 0.25' "Ticks");  
Magic Number,Bridge.ClientTest.Batch4,StopwatchTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\StopwatchTests.cs,GetTimestampWorks,The following statement contains a magic number: while ((DateTime.Now - before).Milliseconds < 50) {  }  
Magic Number,Bridge.ClientTest.Batch4,NumberFormatInfoTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NumberFormatInfoTests.cs,InvariantWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3  }' format.PercentGroupSizes);  
Magic Number,Bridge.ClientTest.Batch4,NumberFormatInfoTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NumberFormatInfoTests.cs,InvariantWorks,The following statement contains a magic number: Assert.AreEqual (2' format.PercentDecimalDigits);  
Magic Number,Bridge.ClientTest.Batch4,NumberFormatInfoTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NumberFormatInfoTests.cs,InvariantWorks,The following statement contains a magic number: Assert.AreEqual (string.FromCharCode (164)' format.CurrencySymbol);  
Magic Number,Bridge.ClientTest.Batch4,NumberFormatInfoTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NumberFormatInfoTests.cs,InvariantWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3  }' format.CurrencyGroupSizes);  
Magic Number,Bridge.ClientTest.Batch4,NumberFormatInfoTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NumberFormatInfoTests.cs,InvariantWorks,The following statement contains a magic number: Assert.AreEqual (2' format.CurrencyDecimalDigits);  
Magic Number,Bridge.ClientTest.Batch4,NumberFormatInfoTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NumberFormatInfoTests.cs,InvariantWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3  }' format.NumberGroupSizes);  
Magic Number,Bridge.ClientTest.Batch4,NumberFormatInfoTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NumberFormatInfoTests.cs,InvariantWorks,The following statement contains a magic number: Assert.AreEqual (2' format.NumberDecimalDigits);  
Magic Number,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,TypePropertiesAreCorrect,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,NewGuidWorks,The following statement contains a magic number: for (int i = 0; i < 1000; i++) {  	var g = Guid.NewGuid ();  	Assert.True ((object)g is Guid' "Generated Guid should be Guid");  	string s = g.ToString ("N");  	Assert.True (s [16] == '8' || s [16] == '9' || s [16] == 'a' || s [16] == 'b'' "Should be standard guid");  	Assert.True (s [12] == '4'' "Should be type 4 guid");  	d [s] = null;  }  
Magic Number,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,NewGuidWorks,The following statement contains a magic number: for (int i = 0; i < 1000; i++) {  	var g = Guid.NewGuid ();  	Assert.True ((object)g is Guid' "Generated Guid should be Guid");  	string s = g.ToString ("N");  	Assert.True (s [16] == '8' || s [16] == '9' || s [16] == 'a' || s [16] == 'b'' "Should be standard guid");  	Assert.True (s [12] == '4'' "Should be type 4 guid");  	d [s] = null;  }  
Magic Number,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,NewGuidWorks,The following statement contains a magic number: for (int i = 0; i < 1000; i++) {  	var g = Guid.NewGuid ();  	Assert.True ((object)g is Guid' "Generated Guid should be Guid");  	string s = g.ToString ("N");  	Assert.True (s [16] == '8' || s [16] == '9' || s [16] == 'a' || s [16] == 'b'' "Should be standard guid");  	Assert.True (s [12] == '4'' "Should be type 4 guid");  	d [s] = null;  }  
Magic Number,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,NewGuidWorks,The following statement contains a magic number: for (int i = 0; i < 1000; i++) {  	var g = Guid.NewGuid ();  	Assert.True ((object)g is Guid' "Generated Guid should be Guid");  	string s = g.ToString ("N");  	Assert.True (s [16] == '8' || s [16] == '9' || s [16] == 'a' || s [16] == 'b'' "Should be standard guid");  	Assert.True (s [12] == '4'' "Should be type 4 guid");  	d [s] = null;  }  
Magic Number,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,NewGuidWorks,The following statement contains a magic number: for (int i = 0; i < 1000; i++) {  	var g = Guid.NewGuid ();  	Assert.True ((object)g is Guid' "Generated Guid should be Guid");  	string s = g.ToString ("N");  	Assert.True (s [16] == '8' || s [16] == '9' || s [16] == 'a' || s [16] == 'b'' "Should be standard guid");  	Assert.True (s [12] == '4'' "Should be type 4 guid");  	d [s] = null;  }  
Magic Number,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,NewGuidWorks,The following statement contains a magic number: for (int i = 0; i < 1000; i++) {  	var g = Guid.NewGuid ();  	Assert.True ((object)g is Guid' "Generated Guid should be Guid");  	string s = g.ToString ("N");  	Assert.True (s [16] == '8' || s [16] == '9' || s [16] == 'a' || s [16] == 'b'' "Should be standard guid");  	Assert.True (s [12] == '4'' "Should be type 4 guid");  	d [s] = null;  }  
Magic Number,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,NewGuidWorks,The following statement contains a magic number: Assert.True (s [16] == '8' || s [16] == '9' || s [16] == 'a' || s [16] == 'b'' "Should be standard guid");  
Magic Number,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,NewGuidWorks,The following statement contains a magic number: Assert.True (s [16] == '8' || s [16] == '9' || s [16] == 'a' || s [16] == 'b'' "Should be standard guid");  
Magic Number,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,NewGuidWorks,The following statement contains a magic number: Assert.True (s [16] == '8' || s [16] == '9' || s [16] == 'a' || s [16] == 'b'' "Should be standard guid");  
Magic Number,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,NewGuidWorks,The following statement contains a magic number: Assert.True (s [16] == '8' || s [16] == '9' || s [16] == 'a' || s [16] == 'b'' "Should be standard guid");  
Magic Number,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,NewGuidWorks,The following statement contains a magic number: Assert.True (s [12] == '4'' "Should be type 4 guid");  
Magic Number,Bridge.ClientTest.Batch4,GuidTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\GuidTests.cs,NewGuidWorks,The following statement contains a magic number: Assert.AreEqual (1000' d.Count' "No duplicates should have been generated");  
Magic Number,Bridge.ClientTest.Batch4,IComparableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\IComparableTests.cs,CallingMethodThroughIComparableInterfaceInvokesImplementingMethod,The following statement contains a magic number: a.result = 534;  
Magic Number,Bridge.ClientTest.Batch4,IComparableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\IComparableTests.cs,CallingMethodThroughIComparableInterfaceInvokesImplementingMethod,The following statement contains a magic number: Assert.AreEqual (534' ((IComparable<MyComparable>)a).CompareTo (b));  
Magic Number,Bridge.ClientTest.Batch4,IComparableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\IComparableTests.cs,CallingMethodThroughIComparableInterfaceInvokesImplementingMethod,The following statement contains a magic number: a.result = -42;  
Magic Number,Bridge.ClientTest.Batch4,IComparableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\IComparableTests.cs,CallingMethodThroughIComparableInterfaceInvokesImplementingMethod,The following statement contains a magic number: Assert.AreEqual (-42' ((IComparable<MyComparable>)a).CompareTo (null));  
Magic Number,Bridge.ClientTest.Batch4,IComparableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\IComparableTests.cs,CallingMethodThroughIComparableInterfaceInvokesImplementingMethod,The following statement contains a magic number: a.result = -534;  
Magic Number,Bridge.ClientTest.Batch4,IComparableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\IComparableTests.cs,CallingMethodThroughIComparableInterfaceInvokesImplementingMethod,The following statement contains a magic number: Assert.AreEqual (-534' a.CompareTo (b));  
Magic Number,Bridge.ClientTest.Batch4,IComparableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\IComparableTests.cs,CallingMethodThroughIComparableInterfaceInvokesImplementingMethod,The following statement contains a magic number: a.result = 42;  
Magic Number,Bridge.ClientTest.Batch4,IComparableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\IComparableTests.cs,CallingMethodThroughIComparableInterfaceInvokesImplementingMethod,The following statement contains a magic number: Assert.AreEqual (42' a.CompareTo (null));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,LengthWorks,The following statement contains a magic number: Assert.AreEqual (arr.Length' 6);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GettingValueByIndexWorks,The following statement contains a magic number: Assert.AreEqual (2' arr [0' 1]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GettingValueByIndexWorks,The following statement contains a magic number: Assert.AreEqual (3' arr [1' 0]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GettingValueByIndexWorks,The following statement contains a magic number: Assert.AreEqual (4' arr [1' 1]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GettingValueByIndexWorks,The following statement contains a magic number: Assert.AreEqual (5' arr [2' 0]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GettingValueByIndexWorks,The following statement contains a magic number: Assert.AreEqual (5' arr [2' 0]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GettingValueByIndexWorks,The following statement contains a magic number: Assert.AreEqual (6' arr [2' 1]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GettingValueByIndexWorks,The following statement contains a magic number: Assert.AreEqual (6' arr [2' 1]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetValueWorks,The following statement contains a magic number: Assert.AreEqual (2' arr.GetValue (0' 1));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetValueWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.GetValue (1' 0));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetValueWorks,The following statement contains a magic number: Assert.AreEqual (4' arr.GetValue (1' 1));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetValueWorks,The following statement contains a magic number: Assert.AreEqual (5' arr.GetValue (2' 0));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetValueWorks,The following statement contains a magic number: Assert.AreEqual (5' arr.GetValue (2' 0));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetValueWorks,The following statement contains a magic number: Assert.AreEqual (6' arr.GetValue (2' 1));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetValueWorks,The following statement contains a magic number: Assert.AreEqual (6' arr.GetValue (2' 1));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SettingValueByIndexWorks,The following statement contains a magic number: arr [2' 0] = "e";  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SettingValueByIndexWorks,The following statement contains a magic number: arr [2' 1] = "f";  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SettingValueByIndexWorks,The following statement contains a magic number: Assert.AreEqual ("e"' arr [2' 0]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SettingValueByIndexWorks,The following statement contains a magic number: Assert.AreEqual ("f"' arr [2' 1]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SetValueWorks,The following statement contains a magic number: arr.SetValue ("e"' 2' 0);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SetValueWorks,The following statement contains a magic number: arr.SetValue ("f"' 2' 1);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SetValueWorks,The following statement contains a magic number: Assert.AreEqual ("e"' arr [2' 0]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SetValueWorks,The following statement contains a magic number: Assert.AreEqual ("f"' arr [2' 1]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetLengthWorks,The following statement contains a magic number: Assert.AreEqual (4' arr.GetLength (0));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetLengthWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.GetLength (1));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetLengthWorks,The following statement contains a magic number: Assert.AreEqual (2' arr.GetLength (2));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetLengthWorks,The following statement contains a magic number: Assert.AreEqual (2' arr.GetLength (2));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetLowerBoundWorks,The following statement contains a magic number: Assert.AreEqual (0' arr.GetLowerBound (2));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetUpperBoundWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.GetUpperBound (0));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetUpperBoundWorks,The following statement contains a magic number: Assert.AreEqual (2' arr.GetUpperBound (1));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetUpperBoundWorks,The following statement contains a magic number: Assert.AreEqual (1' arr.GetUpperBound (2));  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,ForeachWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	3'  	4'  	5'  	6'  	7'  	8'  	9'  	10'  	11'  	12'  	13'  	14'  	15'  	16'  	17'  	18'  	19'  	20'  	21'  	22'  	23'  	24  }' actual.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,RankWorks,The following statement contains a magic number: Assert.AreEqual (2' new int[0' 0].Rank);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,RankWorks,The following statement contains a magic number: Assert.AreEqual (3' new int[0' 0' 0].Rank);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetValueWithIndexOutOfRangeThrowsAnException,The following statement contains a magic number: Assert.Throws (() => i = arr [2' 2' 1]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetValueWithIndexOutOfRangeThrowsAnException,The following statement contains a magic number: Assert.Throws (() => i = arr [2' 2' 1]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetValueWithIndexOutOfRangeThrowsAnException,The following statement contains a magic number: Assert.Throws (() => i = arr [1' 3' 1]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetValueWithIndexOutOfRangeThrowsAnException,The following statement contains a magic number: Assert.Throws (() => i = arr [1' 2' 4]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,GetValueWithIndexOutOfRangeThrowsAnException,The following statement contains a magic number: Assert.Throws (() => i = arr [1' 2' 4]);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SetValueWithIndexOutOfRangeThrowsAnException,The following statement contains a magic number: arr [1' 2' 3] = 0;  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SetValueWithIndexOutOfRangeThrowsAnException,The following statement contains a magic number: arr [1' 2' 3] = 0;  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SetValueWithIndexOutOfRangeThrowsAnException,The following statement contains a magic number: Assert.Throws (() => arr [2' 2' 1] = 0);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SetValueWithIndexOutOfRangeThrowsAnException,The following statement contains a magic number: Assert.Throws (() => arr [2' 2' 1] = 0);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SetValueWithIndexOutOfRangeThrowsAnException,The following statement contains a magic number: Assert.Throws (() => arr [1' 3' 1] = 0);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SetValueWithIndexOutOfRangeThrowsAnException,The following statement contains a magic number: Assert.Throws (() => arr [1' 2' 4] = 0);  
Magic Number,Bridge.ClientTest.Batch4,MultidimArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MultidimArrayTests.cs,SetValueWithIndexOutOfRangeThrowsAnException,The following statement contains a magic number: Assert.Throws (() => arr [1' 2' 4] = 0);  
Magic Number,Bridge.ClientTest.Batch4,RandomTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RandomTests.cs,NextWorks,The following statement contains a magic number: for (var i = 0; i < 10; i++) {  	int randomNumber = rand.Next ();  	Assert.True (randomNumber >= 0' randomNumber + " is greater or equal to 0");  	Assert.True (randomNumber <= int.MaxValue' randomNumber + " is less than or equal to int.MaxValue");  }  
Magic Number,Bridge.ClientTest.Batch4,RandomTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RandomTests.cs,NextWithMaxWorks,The following statement contains a magic number: for (var i = 0; i < 10; i++) {  	int randomNumber = rand.Next (5);  	Assert.True (randomNumber >= 0' randomNumber + " is greater or equal to 0");  	Assert.True (randomNumber < 5' randomNumber + " is smaller than 5");  }  
Magic Number,Bridge.ClientTest.Batch4,RandomTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RandomTests.cs,NextWithMaxWorks,The following statement contains a magic number: for (var i = 0; i < 10; i++) {  	int randomNumber = rand.Next (5);  	Assert.True (randomNumber >= 0' randomNumber + " is greater or equal to 0");  	Assert.True (randomNumber < 5' randomNumber + " is smaller than 5");  }  
Magic Number,Bridge.ClientTest.Batch4,RandomTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RandomTests.cs,NextWithMaxWorks,The following statement contains a magic number: for (var i = 0; i < 10; i++) {  	int randomNumber = rand.Next (5);  	Assert.True (randomNumber >= 0' randomNumber + " is greater or equal to 0");  	Assert.True (randomNumber < 5' randomNumber + " is smaller than 5");  }  
Magic Number,Bridge.ClientTest.Batch4,RandomTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RandomTests.cs,NextWithMaxWorks,The following statement contains a magic number: Assert.True (randomNumber < 5' randomNumber + " is smaller than 5");  
Magic Number,Bridge.ClientTest.Batch4,RandomTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RandomTests.cs,NextWithMinAndMaxWorks,The following statement contains a magic number: for (var i = 0; i < 10; i++) {  	int randomNumber = rand.Next (5' 10);  	Assert.True (randomNumber >= 5' randomNumber + " is greater or equal to 5");  	Assert.True (randomNumber < 10' randomNumber + " is smaller than 10");  }  
Magic Number,Bridge.ClientTest.Batch4,RandomTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RandomTests.cs,NextWithMinAndMaxWorks,The following statement contains a magic number: for (var i = 0; i < 10; i++) {  	int randomNumber = rand.Next (5' 10);  	Assert.True (randomNumber >= 5' randomNumber + " is greater or equal to 5");  	Assert.True (randomNumber < 10' randomNumber + " is smaller than 10");  }  
Magic Number,Bridge.ClientTest.Batch4,RandomTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RandomTests.cs,NextWithMinAndMaxWorks,The following statement contains a magic number: for (var i = 0; i < 10; i++) {  	int randomNumber = rand.Next (5' 10);  	Assert.True (randomNumber >= 5' randomNumber + " is greater or equal to 5");  	Assert.True (randomNumber < 10' randomNumber + " is smaller than 10");  }  
Magic Number,Bridge.ClientTest.Batch4,RandomTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RandomTests.cs,NextWithMinAndMaxWorks,The following statement contains a magic number: for (var i = 0; i < 10; i++) {  	int randomNumber = rand.Next (5' 10);  	Assert.True (randomNumber >= 5' randomNumber + " is greater or equal to 5");  	Assert.True (randomNumber < 10' randomNumber + " is smaller than 10");  }  
Magic Number,Bridge.ClientTest.Batch4,RandomTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RandomTests.cs,NextWithMinAndMaxWorks,The following statement contains a magic number: for (var i = 0; i < 10; i++) {  	int randomNumber = rand.Next (5' 10);  	Assert.True (randomNumber >= 5' randomNumber + " is greater or equal to 5");  	Assert.True (randomNumber < 10' randomNumber + " is smaller than 10");  }  
Magic Number,Bridge.ClientTest.Batch4,RandomTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RandomTests.cs,NextWithMinAndMaxWorks,The following statement contains a magic number: Assert.True (randomNumber >= 5' randomNumber + " is greater or equal to 5");  
Magic Number,Bridge.ClientTest.Batch4,RandomTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RandomTests.cs,NextWithMinAndMaxWorks,The following statement contains a magic number: Assert.True (randomNumber < 10' randomNumber + " is smaller than 10");  
Magic Number,Bridge.ClientTest.Batch4,RandomTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\RandomTests.cs,NextDoubleWorks,The following statement contains a magic number: for (var i = 0; i < 10; i++) {  	double randomNumber = rand.NextDouble ();  	Assert.True (randomNumber >= 0.0' randomNumber + " is greater or equal to 0.0");  	Assert.True (randomNumber < 1.0' randomNumber + " is smaller than 1.0");  }  
Magic Number,Bridge.ClientTest.Batch4,ScriptTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ScriptTests.cs,EvalWorks,The following statement contains a magic number: Assert.AreEqual (5' Script.Eval<object> ("2 + 3"));  
Magic Number,Bridge.ClientTest.Batch4,ScriptTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ScriptTests.cs,DeleteWorks_SPI_1571,The following statement contains a magic number: Assert.AreEqual (42' i1);  
Magic Number,Bridge.ClientTest.Batch4,ScriptTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ScriptTests.cs,DeleteWorks_SPI_1571,The following statement contains a magic number: TestHelper.Safe (() => c2 = new TestType () {  	i = 43  });  
Magic Number,Bridge.ClientTest.Batch4,ScriptTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ScriptTests.cs,DeleteWorks_SPI_1571,The following statement contains a magic number: Assert.AreEqual (43' i2);  
Magic Number,Bridge.ClientTest.Batch4,ScriptTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ScriptTests.cs,ParseIntWithoutRadixWorks,The following statement contains a magic number: Assert.AreEqual (234' Script.ParseInt ("234"));  
Magic Number,Bridge.ClientTest.Batch4,ScriptTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\ScriptTests.cs,ParseIntWithRadixWorks,The following statement contains a magic number: Assert.AreEqual (0x234' Script.ParseInt ("234"' 16));  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,TypePropertiesAreCorrect_SPI_1567,The following statement contains a magic number: Assert.True (IsOfType<int?> (3)' "IsOfType #1");  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,TypePropertiesAreCorrect_SPI_1567,The following statement contains a magic number: Assert.False (IsOfType<int?> (3.14)' "IsOfType #2");  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,TypePropertiesAreCorrect_SPI_1567,The following statement contains a magic number: Assert.False (IsOfType<TimeSpan?> (3.14)' "IsOfType #4");  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,ConvertingToNullableWorks,The following statement contains a magic number: Assert.AreEqual (3' i1);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,ConvertingToNullableWorks,The following statement contains a magic number: Assert.AreEqual (3' i2);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,UnboxingWorks,The following statement contains a magic number: Assert.AreEqual (3' (int)a);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,ValueWorks,The following statement contains a magic number: Assert.AreEqual (3' a.Value);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,GetValueOrDefaultWithArgWorks,The following statement contains a magic number: Assert.AreEqual (3' a.GetValueOrDefault (1));  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedAdditionWorks,The following statement contains a magic number: Assert.AreStrictEqual (5' a + b);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedModWorks,The following statement contains a magic number: Assert.AreStrictEqual (2' a % b);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedFloatingPointDivisionWorks,The following statement contains a magic number: Assert.AreStrictEqual (5' a / b);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedIntegerDivisionWorks,The following statement contains a magic number: Assert.AreStrictEqual (5' a / b);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedMultiplicationWorks,The following statement contains a magic number: Assert.AreStrictEqual (6' a * b);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedBitwiseAndWorks,The following statement contains a magic number: Assert.AreStrictEqual (2' a & b);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedBitwiseOrWorks,The following statement contains a magic number: Assert.AreStrictEqual (7' a | b);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedBitwiseXorWorks,The following statement contains a magic number: Assert.AreStrictEqual (5' a ^ b);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedLeftShiftWorks,The following statement contains a magic number: Assert.AreStrictEqual (48' a << b);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedSignedRightShiftWorks,The following statement contains a magic number: Assert.AreStrictEqual (6' a >> b);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedUnsignedRightShiftWorks,The following statement contains a magic number: Assert.AreStrictEqual (-6' a >> b);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedAdditionWorksWithUserDefinedOperators,The following statement contains a magic number: Assert.AreStrictEqual (5' a + b);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedNegationWorks,The following statement contains a magic number: Assert.AreStrictEqual (-3' -a);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedUnaryPlusWorks,The following statement contains a magic number: Assert.AreStrictEqual (+3' +a);  
Magic Number,Bridge.ClientTest.Batch4,NullableTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\NullableTests.cs,LiftedOnesComplementWorks,The following statement contains a magic number: Assert.AreStrictEqual (-4' ~a);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AssertAlmostEqual,The following statement contains a magic number: Assert.True (diff < 1e-8);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,ConstantsWork,The following statement contains a magic number: AssertAlmostEqual (Math.E' 2.718281828459045);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,ConstantsWork,The following statement contains a magic number: AssertAlmostEqual (Math.LN2' 0.6931471805599453);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,ConstantsWork,The following statement contains a magic number: AssertAlmostEqual (Math.LN10' 2.302585092994046);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,ConstantsWork,The following statement contains a magic number: AssertAlmostEqual (Math.LOG2E' 1.4426950408889634);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,ConstantsWork,The following statement contains a magic number: AssertAlmostEqual (Math.LOG10E' 0.4342944819032518);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,ConstantsWork,The following statement contains a magic number: AssertAlmostEqual (Math.PI' 3.141592653589793);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,ConstantsWork,The following statement contains a magic number: AssertAlmostEqual (Math.SQRT1_2' 0.7071067811865476);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,ConstantsWork,The following statement contains a magic number: AssertAlmostEqual (Math.SQRT2' 1.4142135623730951);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AbsOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (12.5' Math.Abs (-12.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AbsOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (12.5' Math.Abs (-12.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AbsOfIntWorks,The following statement contains a magic number: Assert.AreEqual (12' Math.Abs (-12));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AbsOfIntWorks,The following statement contains a magic number: Assert.AreEqual (12' Math.Abs (-12));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AbsOfSbyteWorks,The following statement contains a magic number: Assert.AreEqual ((sbyte)15' Math.Abs ((sbyte)-15));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AbsOfSbyteWorks,The following statement contains a magic number: Assert.AreEqual ((sbyte)15' Math.Abs ((sbyte)-15));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AbsOfShortWorks,The following statement contains a magic number: Assert.AreEqual ((short)15' Math.Abs ((short)-15));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AbsOfShortWorks,The following statement contains a magic number: Assert.AreEqual ((short)15' Math.Abs ((short)-15));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AbsOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Abs (10.5m)' 10.5);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AbsOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Abs (-10.5m)' 10.5);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AcosWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Acos (0.5)' 1.0471975511965979);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AcosWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Acos (0.5)' 1.0471975511965979);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AsinWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Asin (0.5)' 0.5235987755982989);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AsinWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Asin (0.5)' 0.5235987755982989);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AtanWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Atan (0.5)' 0.4636476090008061);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,AtanWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Atan (0.5)' 0.4636476090008061);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,Atan2Works,The following statement contains a magic number: AssertAlmostEqual (Math.Atan2 (1' 2)' 0.4636476090008061);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,Atan2Works,The following statement contains a magic number: AssertAlmostEqual (Math.Atan2 (1' 2)' 0.4636476090008061);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,CeilingOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Ceiling (3.2));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,CeilingOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Ceiling (3.2));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,CeilingOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-3.0' Math.Ceiling (-3.2));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,CeilingOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-3.0' Math.Ceiling (-3.2));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,CeilingOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Ceiling (3.1m)' 4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,CeilingOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Ceiling (-3.9m)' -3);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,CeilingOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Ceiling (3m)' 3);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,CosWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Cos (0.5)' 0.8775825618903728);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,CosWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Cos (0.5)' 0.8775825618903728);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,CoshWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Cosh (0.1)' 1.0050041680558035E+000);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,CoshWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Cosh (0.1)' 1.0050041680558035E+000);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,SinhWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Sinh (-0.98343)' -1.1497925156481d);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,TanhWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Tanh (5.4251848)' 0.999961205877d);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,ExpWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Exp (0.5)' 1.6487212707001282);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,ExpWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Exp (0.5)' 1.6487212707001282);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,FloorOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Floor (3.6));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,FloorOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Floor (3.6));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,FloorOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-4.0' Math.Floor (-3.6));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,FloorOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-4.0' Math.Floor (-3.6));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,FloorOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Floor (3.9m)' 3);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,FloorOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Floor (-3.1m)' -4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,FloorOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Floor (3m)' 3);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,LogWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Log (0.5)' -0.6931471805599453);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,LogWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Log (0.5)' -0.6931471805599453);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,LogWithBaseWorks_SPI_1566,The following statement contains a magic number: TestHelper.Safe (() => d1 = Math.Log (16' 2));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,LogWithBaseWorks_SPI_1566,The following statement contains a magic number: TestHelper.Safe (() => d1 = Math.Log (16' 2));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,LogWithBaseWorks_SPI_1566,The following statement contains a magic number: Assert.AreEqual (4.0' d1);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,LogWithBaseWorks_SPI_1566,The following statement contains a magic number: TestHelper.Safe (() => d2 = Math.Log (16' 4));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,LogWithBaseWorks_SPI_1566,The following statement contains a magic number: TestHelper.Safe (() => d2 = Math.Log (16' 4));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,LogWithBaseWorks_SPI_1566,The following statement contains a magic number: Assert.AreEqual (2.0' d2);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfByteWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Max ((byte)1' (byte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfByteWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Max ((byte)1' (byte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfByteWorks,The following statement contains a magic number: Assert.AreEqual (5.0' Math.Max ((byte)5' (byte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfByteWorks,The following statement contains a magic number: Assert.AreEqual (5.0' Math.Max ((byte)5' (byte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfByteWorks,The following statement contains a magic number: Assert.AreEqual (5.0' Math.Max ((byte)5' (byte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Max (-14.5m' 3.0m)' 3.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Max (5.4m' 3.0m)' 5.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Max (1.0' 3.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Max (1.0' 3.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Max (4.0' 3.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Max (4.0' 3.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Max (4.0' 3.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfShortWorks,The following statement contains a magic number: Assert.AreEqual ((short)3' Math.Max ((short)1' (short)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfShortWorks,The following statement contains a magic number: Assert.AreEqual ((short)3' Math.Max ((short)1' (short)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfShortWorks,The following statement contains a magic number: Assert.AreEqual ((short)4' Math.Max ((short)4' (short)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfShortWorks,The following statement contains a magic number: Assert.AreEqual ((short)4' Math.Max ((short)4' (short)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfShortWorks,The following statement contains a magic number: Assert.AreEqual ((short)4' Math.Max ((short)4' (short)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfIntWorks,The following statement contains a magic number: Assert.AreEqual (3' Math.Max (1' 3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfIntWorks,The following statement contains a magic number: Assert.AreEqual (3' Math.Max (1' 3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfIntWorks,The following statement contains a magic number: Assert.AreEqual (4' Math.Max (4' 3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfIntWorks,The following statement contains a magic number: Assert.AreEqual (4' Math.Max (4' 3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfIntWorks,The following statement contains a magic number: Assert.AreEqual (4' Math.Max (4' 3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfSByteWorks,The following statement contains a magic number: Assert.AreEqual ((sbyte)3' Math.Max ((sbyte)-1' (sbyte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfSByteWorks,The following statement contains a magic number: Assert.AreEqual ((sbyte)3' Math.Max ((sbyte)-1' (sbyte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfSByteWorks,The following statement contains a magic number: Assert.AreEqual ((sbyte)5' Math.Max ((sbyte)5' (sbyte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfSByteWorks,The following statement contains a magic number: Assert.AreEqual ((sbyte)5' Math.Max ((sbyte)5' (sbyte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfSByteWorks,The following statement contains a magic number: Assert.AreEqual ((sbyte)5' Math.Max ((sbyte)5' (sbyte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfUShortWorks,The following statement contains a magic number: Assert.AreEqual ((ushort)3' Math.Max ((ushort)1' (ushort)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfUShortWorks,The following statement contains a magic number: Assert.AreEqual ((ushort)3' Math.Max ((ushort)1' (ushort)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfUShortWorks,The following statement contains a magic number: Assert.AreEqual ((ushort)5' Math.Max ((ushort)5' (ushort)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfUShortWorks,The following statement contains a magic number: Assert.AreEqual ((ushort)5' Math.Max ((ushort)5' (ushort)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfUShortWorks,The following statement contains a magic number: Assert.AreEqual ((ushort)5' Math.Max ((ushort)5' (ushort)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfUIntWorks,The following statement contains a magic number: Assert.AreEqual ((uint)3' Math.Max ((uint)1' (uint)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfUIntWorks,The following statement contains a magic number: Assert.AreEqual ((uint)3' Math.Max ((uint)1' (uint)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfUIntWorks,The following statement contains a magic number: Assert.AreEqual ((uint)5' Math.Max ((uint)5' (uint)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfUIntWorks,The following statement contains a magic number: Assert.AreEqual ((uint)5' Math.Max ((uint)5' (uint)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfUIntWorks,The following statement contains a magic number: Assert.AreEqual ((uint)5' Math.Max ((uint)5' (uint)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfULongWorks,The following statement contains a magic number: Assert.AreEqual ((ulong)300' Math.Max ((ulong)100' (ulong)300));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfULongWorks,The following statement contains a magic number: Assert.AreEqual ((ulong)300' Math.Max ((ulong)100' (ulong)300));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfULongWorks,The following statement contains a magic number: Assert.AreEqual ((ulong)300' Math.Max ((ulong)100' (ulong)300));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfULongWorks,The following statement contains a magic number: Assert.AreEqual ((ulong)500' Math.Max ((ulong)500' (ulong)300));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfULongWorks,The following statement contains a magic number: Assert.AreEqual ((ulong)500' Math.Max ((ulong)500' (ulong)300));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MaxOfULongWorks,The following statement contains a magic number: Assert.AreEqual ((ulong)500' Math.Max ((ulong)500' (ulong)300));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfByteWorks,The following statement contains a magic number: Assert.AreEqual (1.0' Math.Min ((byte)1' (byte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfByteWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Min ((byte)5' (byte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfByteWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Min ((byte)5' (byte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfByteWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Min ((byte)5' (byte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Min (-14.5m' 3.0m)' -14.5);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Min (5.4m' 3.0m)' 3.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (1.0' Math.Min (1.0' 3.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Min (4.0' 3.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Min (4.0' 3.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Min (4.0' 3.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfShortWorks,The following statement contains a magic number: Assert.AreEqual ((short)1' Math.Min ((short)1' (short)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfShortWorks,The following statement contains a magic number: Assert.AreEqual ((short)3' Math.Min ((short)4' (short)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfShortWorks,The following statement contains a magic number: Assert.AreEqual ((short)3' Math.Min ((short)4' (short)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfShortWorks,The following statement contains a magic number: Assert.AreEqual ((short)3' Math.Min ((short)4' (short)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfIntWorks,The following statement contains a magic number: Assert.AreEqual (1' Math.Min (1' 3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfIntWorks,The following statement contains a magic number: Assert.AreEqual (3' Math.Min (4' 3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfIntWorks,The following statement contains a magic number: Assert.AreEqual (3' Math.Min (4' 3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfIntWorks,The following statement contains a magic number: Assert.AreEqual (3' Math.Min (4' 3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfSByteWorks,The following statement contains a magic number: Assert.AreEqual ((sbyte)-1' Math.Min ((sbyte)-1' (sbyte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfSByteWorks,The following statement contains a magic number: Assert.AreEqual ((sbyte)3' Math.Min ((sbyte)5' (sbyte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfSByteWorks,The following statement contains a magic number: Assert.AreEqual ((sbyte)3' Math.Min ((sbyte)5' (sbyte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfSByteWorks,The following statement contains a magic number: Assert.AreEqual ((sbyte)3' Math.Min ((sbyte)5' (sbyte)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfUShortWorks,The following statement contains a magic number: Assert.AreEqual ((ushort)1' Math.Min ((ushort)1' (ushort)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfUShortWorks,The following statement contains a magic number: Assert.AreEqual ((ushort)3' Math.Min ((ushort)5' (ushort)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfUShortWorks,The following statement contains a magic number: Assert.AreEqual ((ushort)3' Math.Min ((ushort)5' (ushort)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfUShortWorks,The following statement contains a magic number: Assert.AreEqual ((ushort)3' Math.Min ((ushort)5' (ushort)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfUIntWorks,The following statement contains a magic number: Assert.AreEqual ((uint)1' Math.Min ((uint)1' (uint)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfUIntWorks,The following statement contains a magic number: Assert.AreEqual ((uint)3' Math.Min ((uint)5' (uint)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfUIntWorks,The following statement contains a magic number: Assert.AreEqual ((uint)3' Math.Min ((uint)5' (uint)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfUIntWorks,The following statement contains a magic number: Assert.AreEqual ((uint)3' Math.Min ((uint)5' (uint)3));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfULongWorks,The following statement contains a magic number: Assert.AreEqual ((ulong)100' Math.Min ((ulong)100' (ulong)300));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfULongWorks,The following statement contains a magic number: Assert.AreEqual ((ulong)100' Math.Min ((ulong)100' (ulong)300));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfULongWorks,The following statement contains a magic number: Assert.AreEqual ((ulong)100' Math.Min ((ulong)100' (ulong)300));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfULongWorks,The following statement contains a magic number: Assert.AreEqual ((ulong)300' Math.Min ((ulong)500' (ulong)300));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfULongWorks,The following statement contains a magic number: Assert.AreEqual ((ulong)300' Math.Min ((ulong)500' (ulong)300));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,MinOfULongWorks,The following statement contains a magic number: Assert.AreEqual ((ulong)300' Math.Min ((ulong)500' (ulong)300));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,PowWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Pow (3' 0.5)' 1.7320508075688772);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,PowWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Pow (3' 0.5)' 1.7320508075688772);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,PowWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Pow (3' 0.5)' 1.7320508075688772);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RandomWorks,The following statement contains a magic number: for (int i = 0; i < 5; i++) {  	double d = Math.Random ();  	Assert.True (d >= 0);  	Assert.True (d < 1);  }  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Round (3.432));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Round (3.432));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.6));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.6));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (4.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (4.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-4.0' Math.Round (-3.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-4.0' Math.Round (-3.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-4.0' Math.Round (-4.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-4.0' Math.Round (-4.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.432m)' 3.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.6m)' 4.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.5m)' 4.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (4.5m)' 4.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (-3.5m)' -4.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (-4.5m)' -4.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,JsRoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.JsRound (3.432));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,JsRoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.JsRound (3.432));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,JsRoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.JsRound (3.6));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,JsRoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.JsRound (3.6));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,JsRoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.JsRound (3.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,JsRoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.JsRound (3.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,JsRoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (5.0' Math.JsRound (4.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,JsRoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (5.0' Math.JsRound (4.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,JsRoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-3.0' Math.JsRound (-3.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,JsRoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-3.0' Math.JsRound (-3.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,JsRoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-4.0' Math.JsRound (-4.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,JsRoundOfDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-4.0' Math.JsRound (-4.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsWorks,The following statement contains a magic number: Assert.AreEqual (3.43' Math.Round (3.432' 2));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsWorks,The following statement contains a magic number: Assert.AreEqual (3.43' Math.Round (3.432' 2));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsWorks,The following statement contains a magic number: Assert.AreEqual (3.43' Math.Round (3.432' 2));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.6' 0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.6' 0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsWorks,The following statement contains a magic number: Assert.AreEqual (3.4' Math.Round (3.35' 1));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsWorks,The following statement contains a magic number: Assert.AreEqual (3.4' Math.Round (3.35' 1));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsWorks,The following statement contains a magic number: Assert.AreEqual (3.4' Math.Round (3.45' 1));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsWorks,The following statement contains a magic number: Assert.AreEqual (3.4' Math.Round (3.45' 1));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsWorks,The following statement contains a magic number: Assert.AreEqual (-3.4' Math.Round (-3.35' 1));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsWorks,The following statement contains a magic number: Assert.AreEqual (-3.4' Math.Round (-3.35' 1));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsWorks,The following statement contains a magic number: Assert.AreEqual (-3.4' Math.Round (-3.45' 1));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsWorks,The following statement contains a magic number: Assert.AreEqual (-3.4' Math.Round (-3.45' 1));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.432m' 2)' 3.43);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.432m' 2)' 3.43);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.6m' 0)' 4.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.35m' 1)' 3.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.45m' 1)' 3.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (-3.35m' 1)' -3.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (-3.45m' 1)' -3.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,SignWithDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-1' Math.Sign (-0.5));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,SignWithDoubleWorks,The following statement contains a magic number: Assert.AreEqual (1' Math.Sign (3.35));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,SinWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Sin (0.5)' 0.479425538604203);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,SinWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Sin (0.5)' 0.479425538604203);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,SqrtWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Sqrt (3)' 1.7320508075688772);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,SqrtWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Sqrt (3)' 1.7320508075688772);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,TanWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Tan (0.5)' 0.5463024898437905);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,TanWorks,The following statement contains a magic number: AssertAlmostEqual (Math.Tan (0.5)' 0.5463024898437905);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,TruncateWithDoubleWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Truncate (3.9));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,TruncateWithDoubleWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Truncate (3.9));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,TruncateWithDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-3.0' Math.Truncate (-3.9));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,TruncateWithDoubleWorks,The following statement contains a magic number: Assert.AreEqual (-3.0' Math.Truncate (-3.9));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,TruncateWithDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Truncate (3.9m)' 3.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,TruncateWithDecimalWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Truncate (-3.9m)' -3.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: Assert.AreEqual (-1.0' Math.IEEERemainder (3.0' 2.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: Assert.AreEqual (-1.0' Math.IEEERemainder (3.0' 2.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: Assert.AreEqual (0.0' Math.IEEERemainder (4.0' 2.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: Assert.AreEqual (0.0' Math.IEEERemainder (4.0' 2.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: Assert.AreEqual (1.0' Math.IEEERemainder (10.0' 3.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: Assert.AreEqual (1.0' Math.IEEERemainder (10.0' 3.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: Assert.AreEqual (-1.0' Math.IEEERemainder (11.0' 3.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: Assert.AreEqual (-1.0' Math.IEEERemainder (11.0' 3.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: Assert.AreEqual (-1.0' Math.IEEERemainder (27.0' 4.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: Assert.AreEqual (-1.0' Math.IEEERemainder (27.0' 4.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: Assert.AreEqual (-2.0' Math.IEEERemainder (28.0' 5.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: Assert.AreEqual (-2.0' Math.IEEERemainder (28.0' 5.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: Assert.AreEqual (-2.0' Math.IEEERemainder (28.0' 5.0));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (17.8' 4.0)' 1.8);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (17.8' 4.0)' 1.8);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (17.8' 4.0)' 1.8);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (17.8' 4.1)' 1.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (17.8' 4.1)' 1.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (17.8' 4.1)' 1.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (-16.3' 4.1)' 0.0999999999999979);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (-16.3' 4.1)' 0.0999999999999979);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (-16.3' 4.1)' 0.0999999999999979);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (17.8' -4.1)' 1.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (17.8' -4.1)' 1.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (17.8' -4.1)' 1.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (-17.8' -4.1)' -1.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (-17.8' -4.1)' -1.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,IEEERemainderWorks,The following statement contains a magic number: AssertAlmostEqual (Math.IEEERemainder (-17.8' -4.1)' -1.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Round (3.432' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Round (3.432' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Round (3.432' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Round (3.432' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.5' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.5' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.5' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.5' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.64' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.64' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.64' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.64' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Round (2.5' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Round (2.5' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (2.0' Math.Round (2.5' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (2.0' Math.Round (2.5' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (-3.0' Math.Round (-2.5' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (-3.0' Math.Round (-2.5' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (-2.0' Math.Round (-2.5' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (-2.0' Math.Round (-2.5' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.432m' MidpointRounding.AwayFromZero)' 3.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.432m' MidpointRounding.ToEven)' 3.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.5m' MidpointRounding.AwayFromZero)' 4.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.5m' MidpointRounding.ToEven)' 4.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.64m' MidpointRounding.AwayFromZero)' 4.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.64m' MidpointRounding.ToEven)' 4.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (2.5m' MidpointRounding.AwayFromZero)' 3.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (2.5m' MidpointRounding.ToEven)' 2.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (-2.5m' MidpointRounding.AwayFromZero)' -3.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (-2.5m' MidpointRounding.ToEven)' -2.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.5' Math.Round (3.45' 1' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.5' Math.Round (3.45' 1' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.4' Math.Round (3.45' 1' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.4' Math.Round (3.45' 1' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.5' 0' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.5' 0' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.5' 0' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (4.0' Math.Round (3.5' 0' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.65' Math.Round (3.645' 2' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.65' Math.Round (3.645' 2' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.65' Math.Round (3.645' 2' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.64' Math.Round (3.645' 2' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.64' Math.Round (3.645' 2' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.64' Math.Round (3.645' 2' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Round (2.5' 0' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (3.0' Math.Round (2.5' 0' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (2.0' Math.Round (2.5' 0' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (2.0' Math.Round (2.5' 0' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (-2.5' Math.Round (-2.5' 1' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (-2.5' Math.Round (-2.5' 1' MidpointRounding.AwayFromZero));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (-2.5' Math.Round (-2.5' 1' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDoubleWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: Assert.AreEqual (-2.5' Math.Round (-2.5' 1' MidpointRounding.ToEven));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.45m' 1' MidpointRounding.AwayFromZero)' 3.5);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.45m' 1' MidpointRounding.ToEven)' 3.4);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.5m' 0' MidpointRounding.AwayFromZero)' 4.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.5m' 0' MidpointRounding.ToEven)' 4.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.645m' 2' MidpointRounding.AwayFromZero)' 3.65);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.645m' 2' MidpointRounding.AwayFromZero)' 3.65);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.645m' 2' MidpointRounding.ToEven)' 3.64);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (3.645m' 2' MidpointRounding.ToEven)' 3.64);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (2.5m' 0' MidpointRounding.AwayFromZero)' 3.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (2.5m' 0' MidpointRounding.ToEven)' 2.0);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (-2.5m' 1' MidpointRounding.AwayFromZero)' -2.5);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,RoundOfDecimalWithDigitsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (Math.Round (-2.5m' 1' MidpointRounding.ToEven)' -2.5);  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,DivRemWorks,The following statement contains a magic number: Assert.AreEqual (1073741823' Math.DivRem (2147483647' 2' out result));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,DivRemWorks,The following statement contains a magic number: Assert.AreEqual (1073741823' Math.DivRem (2147483647' 2' out result));  
Magic Number,Bridge.ClientTest.Batch4,MathTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\MathTests.cs,DivRemWorks,The following statement contains a magic number: Assert.AreEqual (1073741823' Math.DivRem (2147483647' 2' out result));  
Magic Number,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,CreatingAndInvokingADelegateWorks,The following statement contains a magic number: Assert.AreEqual (25' d (13));  
Magic Number,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,CreatingAndInvokingADelegateWorks,The following statement contains a magic number: Assert.AreEqual (25' d (13));  
Magic Number,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,CreateWorks,The following statement contains a magic number: Assert.AreEqual (25' d (13));  
Magic Number,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,CreateWorks,The following statement contains a magic number: Assert.AreEqual (25' d (13));  
Magic Number,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,CombineDoesAddsDuplicateDelegates,The following statement contains a magic number: Assert.AreEqual (2' a.GetInvocationList ().Length);  
Magic Number,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,CombineDoesAddsDuplicateDelegates,The following statement contains a magic number: Assert.AreEqual (3' a.GetInvocationList ().Length);  
Magic Number,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,CombineDoesAddsDuplicateDelegates,The following statement contains a magic number: Assert.AreEqual (4' a.GetInvocationList ().Length);  
Magic Number,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,CombineDoesNotAffectOriginal_SPI_1563,The following statement contains a magic number: Assert.AreEqual (2' l2);  
Magic Number,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,RemoveDoesNotAffectOriginal_SPI_1563,The following statement contains a magic number: Assert.AreEqual (2' l2);  
Magic Number,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,CloningDelegateToTheSameTypeCreatesANewClone_SPI_1563,The following statement contains a magic number: Assert.AreEqual (2' x);  
Magic Number,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,GetInvocationListWorksForMulticastDelegate,The following statement contains a magic number: Assert.True (l.Length == 4);  
Magic Number,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,GetInvocationListWorksForMulticastDelegate,The following statement contains a magic number: Assert.True ((Action)l [2] == f12);  
Magic Number,Bridge.ClientTest.Batch4,DelegateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\DelegateTests.cs,GetInvocationListWorksForMulticastDelegate,The following statement contains a magic number: Assert.True ((Action)l [3] == f11_2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,KeyValuePairTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\KeyValuePairTests.cs,TheConstructorWithParametersCanBeUsed,The following statement contains a magic number: Assert.AreEqual (42' v.Value);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,KeyValuePairTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\KeyValuePairTests.cs,TypeTestWorks,The following statement contains a magic number: Assert.True (new KeyValuePair<int' string> (42' "Hello") is KeyValuePair<int' string>' "#1");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,KeyValuePairTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\KeyValuePairTests.cs,TypeTestWorks,The following statement contains a magic number: Assert.False (5 is KeyValuePair<int' string>' "#2");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,KeyValuePairTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\KeyValuePairTests.cs,TypeTestWorksGeneric_SPI_1556,The following statement contains a magic number: Assert.False (RunCheck<KeyValuePair<int' string>> (5)' "#2");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,TypePropertiesAreCorrect,The following statement contains a magic number: Assert.AreEqual (2' interfaces.Length' "Interfaces length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,GetItemWorks,The following statement contains a magic number: Assert.AreEqual ("x"' d [9]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,GetItemWorks,The following statement contains a magic number: Assert.AreEqual ("b"' di [3]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,GetItemWorks,The following statement contains a magic number: Assert.AreEqual ("z"' di2 [6]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,ContainsKeyWorks,The following statement contains a magic number: Assert.True (d.ContainsKey (9));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,ContainsKeyWorks,The following statement contains a magic number: Assert.True (di2.ContainsKey (3));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,ContainsKeyWorks,The following statement contains a magic number: Assert.False (d.ContainsKey (923));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,ContainsKeyWorks,The following statement contains a magic number: Assert.False (di2.ContainsKey (353));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,TryGetValueWorks,The following statement contains a magic number: Assert.True (d.TryGetValue (9' out outVal));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,TryGetValueWorks,The following statement contains a magic number: Assert.True (di2.TryGetValue (3' out outVal));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,TryGetValueWorks,The following statement contains a magic number: Assert.False (d.TryGetValue (923' out outVal));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,TryGetValueWorks,The following statement contains a magic number: Assert.False (di2.TryGetValue (353' out outVal));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,AddWorks,The following statement contains a magic number: d.Add (5' "aa");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual ("aa"' d [5]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,AddWorks,The following statement contains a magic number: di.Add (3' "bb");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual ("bb"' di [3]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual (2' di.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,AddWorks,The following statement contains a magic number: try {  	d.Add (5' "zz");  	Assert.Fail ("Should throw");  }  catch (Exception) {  }  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,AddWorks,The following statement contains a magic number: d.Add (5' "zz");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,ClearWorks,The following statement contains a magic number: Assert.AreEqual (3' d.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,RemoveWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' d.Remove (6));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,RemoveWorks,The following statement contains a magic number: Assert.AreEqual (3' d.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,RemoveWorks,The following statement contains a magic number: Assert.False (d.ContainsKey (6));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,RemoveWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' di.Remove (3));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,RemoveWorks,The following statement contains a magic number: Assert.AreEqual (2' di.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,RemoveWorks,The following statement contains a magic number: Assert.False (di.ContainsKey (3));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,RemoveWorks,The following statement contains a magic number: Assert.True (di.ContainsKey (13));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,SetItemWorks,The following statement contains a magic number: d [3] = "check";  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,SetItemWorks,The following statement contains a magic number: Assert.AreEqual ("check"' d [3]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,SetItemWorks,The following statement contains a magic number: Assert.False (d.ContainsKey (10));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,SetItemWorks,The following statement contains a magic number: di [10] = "stuff";  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,SetItemWorks,The following statement contains a magic number: Assert.AreEqual ("stuff"' di [10]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IDictionaryTests.cs,SetItemWorks,The following statement contains a magic number: Assert.True (di.ContainsKey (10));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,DefaultComparerCanOrderNumbers,The following statement contains a magic number: Assert.AreEqual (-1' Comparer<int>.Default.Compare (3' 8)' "Compare(3' 8) should be -1");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,DefaultComparerCanOrderNumbers,The following statement contains a magic number: Assert.AreEqual (-1' Comparer<int>.Default.Compare (3' 8)' "Compare(3' 8) should be -1");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,DefaultComparerCanOrderNumbers,The following statement contains a magic number: Assert.AreEqual (0' Comparer<int>.Default.Compare (3' 3)' "Compare(3' 3) should be 0");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,DefaultComparerCanOrderNumbers,The following statement contains a magic number: Assert.AreEqual (0' Comparer<int>.Default.Compare (3' 3)' "Compare(3' 3) should be 0");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,DefaultComparerCanOrderNumbers,The following statement contains a magic number: Assert.AreEqual (1' Comparer<int>.Default.Compare (8' 3)' "Compare(8' 3) should be 1");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,DefaultComparerCanOrderNumbers,The following statement contains a magic number: Assert.AreEqual (1' Comparer<int>.Default.Compare (8' 3)' "Compare(8' 3) should be 1");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,DefaultComparerUsesCompareMethodIfClassImplementsIComparable,The following statement contains a magic number: Assert.AreEqual (-1' Comparer<C>.Default.Compare (new C (3)' new C (8))' "Compare(3' 8) should be -1");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,DefaultComparerUsesCompareMethodIfClassImplementsIComparable,The following statement contains a magic number: Assert.AreEqual (-1' Comparer<C>.Default.Compare (new C (3)' new C (8))' "Compare(3' 8) should be -1");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,DefaultComparerUsesCompareMethodIfClassImplementsIComparable,The following statement contains a magic number: Assert.AreEqual (0' Comparer<C>.Default.Compare (new C (3)' new C (3))' "Compare(3' 3) should be 0");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,DefaultComparerUsesCompareMethodIfClassImplementsIComparable,The following statement contains a magic number: Assert.AreEqual (0' Comparer<C>.Default.Compare (new C (3)' new C (3))' "Compare(3' 3) should be 0");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,DefaultComparerUsesCompareMethodIfClassImplementsIComparable,The following statement contains a magic number: Assert.AreEqual (1' Comparer<C>.Default.Compare (new C (8)' new C (3))' "Compare(8' 3) should be 1");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,DefaultComparerUsesCompareMethodIfClassImplementsIComparable,The following statement contains a magic number: Assert.AreEqual (1' Comparer<C>.Default.Compare (new C (8)' new C (3))' "Compare(8' 3) should be 1");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,CreateWorks,The following statement contains a magic number: Assert.AreEqual (8' x' "x should be 8");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,CreateWorks,The following statement contains a magic number: Assert.AreEqual (3' y' "y should be 3");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,CreateWorks,The following statement contains a magic number: return 42;  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,CreateWorks,The following statement contains a magic number: Assert.AreEqual (42' comparer.Compare (8' 3)' "The result should be 42");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,CreateWorks,The following statement contains a magic number: Assert.AreEqual (42' comparer.Compare (8' 3)' "The result should be 42");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ComparerTests.cs,CreateWorks,The following statement contains a magic number: Assert.AreEqual (42' comparer.Compare (8' 3)' "The result should be 42");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IListTests.cs,TypePropertiesAreCorrect,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length' "Interfaces length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IListTests.cs,ArrayCastToIListIndexOfWorks,The following statement contains a magic number: Assert.AreEqual (1' arr.IndexOf (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IListTests.cs,ArrayCastToIListIndexOfWorks,The following statement contains a magic number: Assert.AreEqual (-1' arr.IndexOf (new C (4)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ICollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ICollectionTests.cs,TypePropertiesAreCorrect,The following statement contains a magic number: Assert.AreEqual (2' interfaces.Length' "Interfaces length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ICollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ICollectionTests.cs,ArrayCastToICollectionCountWorks,The following statement contains a magic number: Assert.AreEqual (3' ((ICollection<string>)new[] {  	"x"'  	"y"'  	"z"  }).Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ICollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ICollectionTests.cs,ClassImplementingICollectionCountWorks,The following statement contains a magic number: Assert.AreEqual (2' new MyCollection (new[] {  	"x"'  	"y"  }).Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ICollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ICollectionTests.cs,ClassImplementingICollectionCastToICollectionCountWorks,The following statement contains a magic number: Assert.AreEqual (3' ((ICollection<string>)new MyCollection (new[] {  	"x"'  	"y"'  	"z"  })).Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ICollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ICollectionTests.cs,ClassImplementingICollectionAddWorks,The following statement contains a magic number: Assert.AreEqual (3' c.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ICollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ICollectionTests.cs,ClassImplementingICollectionCastToICollectionAddWorks,The following statement contains a magic number: Assert.AreEqual (3' c.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ICollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ICollectionTests.cs,ArrayCastToICollectionContainsWorks,The following statement contains a magic number: Assert.True (arr.Contains (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ICollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ICollectionTests.cs,ArrayCastToICollectionContainsWorks,The following statement contains a magic number: Assert.False (arr.Contains (new C (4)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,EqualityComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\EqualityComparerTests.cs,DefaultComparerCanGetHashCodeOfNumber,The following statement contains a magic number: Assert.AreEqual (12345.GetHashCode ()' EqualityComparer<object>.Default.GetHashCode (12345));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,EqualityComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\EqualityComparerTests.cs,DefaultComparerCanGetHashCodeOfNumber,The following statement contains a magic number: Assert.AreEqual (12345.GetHashCode ()' EqualityComparer<object>.Default.GetHashCode (12345));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,EqualityComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\EqualityComparerTests.cs,DefaultComparerInvokesOverriddenGetHashCode,The following statement contains a magic number: Assert.AreEqual (42158' EqualityComparer<object>.Default.GetHashCode (new MyClass {  	hashCode = 42158  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,EqualityComparerTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\EqualityComparerTests.cs,DefaultComparerInvokesOverriddenGetHashCode,The following statement contains a magic number: Assert.AreEqual (42158' EqualityComparer<object>.Default.GetHashCode (new MyClass {  	hashCode = 42158  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IteratorBlockTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IteratorBlockTests.cs,PrematureDisposalOfIEnumeratorIteratorExecutesFinallyBlocks_SPI_1555,The following statement contains a magic number: for (int i = 0; i < 2; i++) {  	enm.MoveNext ();  	sb.AppendLine ("got " + enm.Current);  }  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IteratorBlockTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IteratorBlockTests.cs,ExceptionInIEnumeratorIteratorBodyExecutesFinallyBlocks_SPI_1554,The following statement contains a magic number: try {  	for (int i = 0; i < 100; i++) {  		enm.MoveNext ();  		sb.AppendLine ("got " + enm.Current);  	}  	Assert.Fail ("Should have thrown an exception in the loop");  }  catch (Exception) {  	sb.AppendLine ("caught exception");  }  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IteratorBlockTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IteratorBlockTests.cs,ExceptionInIEnumeratorIteratorBodyExecutesFinallyBlocks_SPI_1554,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	enm.MoveNext ();  	sb.AppendLine ("got " + enm.Current);  }  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IteratorBlockTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IteratorBlockTests.cs,PrematureDisposalOfIEnumerableIteratorExecutesFinallyBlocks_SPI_1555,The following statement contains a magic number: foreach (var i in new C (sb).GetEnumerable (5)) {  	sb.AppendLine ("got " + i);  	if (++n == 2)  		break;  }  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IteratorBlockTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IteratorBlockTests.cs,PrematureDisposalOfIEnumerableIteratorExecutesFinallyBlocks_SPI_1555,The following statement contains a magic number: foreach (var i in new C (sb).GetEnumerable (5)) {  	sb.AppendLine ("got " + i);  	if (++n == 2)  		break;  }  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IteratorBlockTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IteratorBlockTests.cs,PrematureDisposalOfIEnumerableIteratorExecutesFinallyBlocks_SPI_1555,The following statement contains a magic number: if (++n == 2)  	break;  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IteratorBlockTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IteratorBlockTests.cs,ExceptionInIEnumerableIteratorBodyExecutesFinallyBlocks_SPI_1554,The following statement contains a magic number: TestHelper.Safe (() => enumerable = new C (sb).GetEnumerableThrows (5));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IteratorBlockTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IteratorBlockTests.cs,ExceptionInIEnumerableIteratorBodyExecutesFinallyBlocks_SPI_1554,The following statement contains a magic number: try {  	var enumerator = enumerable.GetEnumerator ();  	for (int i = 0; i < 100; i++) {  		enumerator.MoveNext ();  		sb.AppendLine ("got " + enumerator.Current);  	}  	Assert.Fail ("Should have thrown");  }  catch (Exception) {  	sb.AppendLine ("caught exception");  }  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,IteratorBlockTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\IteratorBlockTests.cs,ExceptionInIEnumerableIteratorBodyExecutesFinallyBlocks_SPI_1554,The following statement contains a magic number: for (int i = 0; i < 100; i++) {  	enumerator.MoveNext ();  	sb.AppendLine ("got " + enumerator.Current);  }  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,CopyConstructorWorks_SPI_1549,The following statement contains a magic number: orig ["b"] = 2;  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,CopyConstructorWorks_SPI_1549,The following statement contains a magic number: Assert.AreEqual (2' d2.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,CopyConstructorWorks_SPI_1549,The following statement contains a magic number: Assert.AreEqual (2' d2 ["b"]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,ConstructorWithBothDictionaryAndEqualityComparerWorks,The following statement contains a magic number: orig ["b"] = 2;  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,ConstructorWithBothDictionaryAndEqualityComparerWorks,The following statement contains a magic number: Assert.AreEqual (2' d2.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,ConstructorWithBothDictionaryAndEqualityComparerWorks,The following statement contains a magic number: Assert.AreEqual (2' d2 ["b"]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,CountWorks,The following statement contains a magic number: d.Add (2' "2");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,CountWorks,The following statement contains a magic number: Assert.AreEqual (2' d.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,KeysWorks,The following statement contains a magic number: Assert.AreEqual (2' keys.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,KeysWorks,The following statement contains a magic number: Assert.AreEqual (2' count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,ValuesWorks,The following statement contains a magic number: Assert.AreEqual (2' values.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,ValuesWorks,The following statement contains a magic number: Assert.AreEqual (2' count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,IndexerSetterWorks,The following statement contains a magic number: d [2] = "c";  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,IndexerSetterWorks,The following statement contains a magic number: d [3] = "d";  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,IndexerSetterWorks,The following statement contains a magic number: Assert.AreEqual (d.Count' 3);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,IndexerSetterWorks,The following statement contains a magic number: Assert.AreEqual ("c"' d [2]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,IndexerSetterWorks,The following statement contains a magic number: Assert.AreEqual ("d"' d [3]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,IndexerGetterThrowsForNonExistingItems,The following statement contains a magic number: try {  	var x = d [10];  	Assert.True (false);  }  catch (KeyNotFoundException) {  }  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,AddWorks,The following statement contains a magic number: d.Add (3' "c");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual (d.Count' 3);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual ("b"' d [2]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual ("c"' d [3]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,AddThrowsIfItemAlreadyExists,The following statement contains a magic number: try {  	d.Add (2' "b");  	Assert.True (false);  }  catch (ArgumentException) {  }  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,AddThrowsIfItemAlreadyExists,The following statement contains a magic number: d.Add (2' "b");  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,ContainsKeyWorks,The following statement contains a magic number: Assert.False (d.ContainsKey (3));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,EnumeratingWorks,The following statement contains a magic number: Assert.AreEqual (2' count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,RemoveWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' d.Remove (2));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,RemoveWorks,The following statement contains a magic number: Assert.AreStrictEqual (false' d.Remove (3));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,CanUseCustomComparer,The following statement contains a magic number: d ["a2"] = 100;  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,CanUseCustomComparer,The following statement contains a magic number: Assert.AreEqual (100' d ["a3"]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,GenericDictionaryTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\GenericDictionaryTests.cs,CanUseCustomComparer,The following statement contains a magic number: Assert.AreEqual (2' d.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ConstructingFromListWorks,The following statement contains a magic number: arr.Add (4);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ConstructingFromListWorks,The following statement contains a magic number: arr.Add (7);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ConstructingFromListWorks,The following statement contains a magic number: arr.Add (8);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ConstructingFromIEnumerableWorks,The following statement contains a magic number: arr.Add (4);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ConstructingFromIEnumerableWorks,The following statement contains a magic number: arr.Add (7);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ConstructingFromIEnumerableWorks,The following statement contains a magic number: arr.Add (8);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ConstructingFromIEnumerableWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	4'  	7'  	8  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ConstructingFromIEnumerableWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	4'  	7'  	8  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ConstructingFromIEnumerableWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	4'  	7'  	8  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,CountWorks,The following statement contains a magic number: Assert.AreEqual (2' new List<string> {  	"x"'  	"y"  }.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ContainsUsesEqualsMethod,The following statement contains a magic number: Assert.True (l.Contains (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ContainsUsesEqualsMethod,The following statement contains a magic number: Assert.False (l.Contains (new C (4)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SliceWithoutEndWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	"c"'  	"d"  }' new List<string> {  	"a"'  	"b"'  	"c"'  	"d"  }.Slice (2).ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SliceWithEndWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	"b"'  	"c"  }' new List<string> {  	"a"'  	"b"'  	"c"'  	"d"  }.Slice (1' 3).ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,IndexOfWithoutStartIndexUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (1' l.IndexOf (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,IndexOfWithoutStartIndexUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (-1' l.IndexOf (new C (4)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,IndexOfWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (3' new List<string> {  	"a"'  	"b"'  	"c"'  	"b"  }.IndexOf ("b"' 2));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,IndexOfWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (3' new List<string> {  	"a"'  	"b"'  	"c"'  	"b"  }.IndexOf ("b"' 2));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,IndexOfWithStartIndexUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (3' new List<C> {  	new C (1)'  	new C (2)'  	new C (3)'  	new C (2)  }.IndexOf (new C (2)' 2));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,IndexOfWithStartIndexUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (3' new List<C> {  	new C (1)'  	new C (2)'  	new C (3)'  	new C (2)  }.IndexOf (new C (2)' 2));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,IndexOfWithStartIndexUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (3' new List<C> {  	new C (1)'  	new C (2)'  	new C (3)'  	new C (2)  }.IndexOf (new C (2)' 2));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,IndexOfWithStartIndexUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (3' new List<C> {  	new C (1)'  	new C (2)'  	new C (3)'  	new C (2)  }.IndexOf (new C (2)' 2));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,IndexOfWithStartIndexUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (3' new List<C> {  	new C (1)'  	new C (2)'  	new C (3)'  	new C (2)  }.IndexOf (new C (2)' 2));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,IndexOfWithStartIndexUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (3' new List<C> {  	new C (1)'  	new C (2)'  	new C (3)'  	new C (2)  }.IndexOf (new C (2)' 2));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,RemoveUsesEqualsMethod,The following statement contains a magic number: list.Remove (new C (2));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,RemoveUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (2' list.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,RemoveUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (3' list [1].i);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,RemoveRangeWorks,The following statement contains a magic number: list.RemoveRange (1' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ReverseWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	2'  	3'  	1'  	4'  	3'  	1  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ReverseWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	2'  	3'  	1'  	4'  	3'  	1  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ReverseWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	2'  	3'  	1'  	4'  	3'  	1  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ReverseWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	2'  	3'  	1'  	4'  	3'  	1  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SortWithDefaultCompareWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	4'  	6'  	6  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SortWithDefaultCompareWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	4'  	6'  	6  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SortWithDefaultCompareWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	4'  	6'  	6  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SortWithDefaultCompareWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	1'  	2'  	4'  	6'  	6  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SortWithCompareCallbackWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	6'  	6'  	4'  	2'  	1  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SortWithCompareCallbackWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	6'  	6'  	4'  	2'  	1  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SortWithCompareCallbackWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	6'  	6'  	4'  	2'  	1  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SortWithCompareCallbackWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	6'  	6'  	4'  	2'  	1  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SortWithIComparerWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	6'  	6'  	4'  	2'  	1  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SortWithIComparerWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	6'  	6'  	4'  	2'  	1  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SortWithIComparerWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	6'  	6'  	4'  	2'  	1  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,SortWithIComparerWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	6'  	6'  	4'  	2'  	1  }' list.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ICollectionCountWorks,The following statement contains a magic number: Assert.AreEqual (3' l.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ICollectionContainsUsesEqualsMethod,The following statement contains a magic number: Assert.True (l.Contains (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ICollectionContainsUsesEqualsMethod,The following statement contains a magic number: Assert.False (l.Contains (new C (4)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ICollectionRemoveUsesEqualsMethod,The following statement contains a magic number: list.Remove (new C (2));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ICollectionRemoveUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (2' list.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,ICollectionRemoveUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (3' list [1].i);  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,IListIndexOfUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (1' l.IndexOf (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.Generic,ListTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\Generic\ListTests.cs,IListIndexOfUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (-1' l.IndexOf (new C (4)));  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithIEnumerableInnerExceptionsWorks,The following statement contains a magic number: Assert.AreEqual (2' ex3.InnerExceptions.Count' "ex3 InnerExceptions.Length");  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithInnerExceptionArrayWorks,The following statement contains a magic number: Assert.AreEqual (2' ex3.InnerExceptions.Count' "ex3 InnerExceptions.Length");  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithMessageAndIEnumerableInnerExceptionsWorks,The following statement contains a magic number: Assert.AreEqual (2' ex3.InnerExceptions.Count' "ex3 InnerExceptions.Length");  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,ConstructorWithMessageAndInnerExceptionArrayWorks,The following statement contains a magic number: Assert.AreEqual (2' ex3.InnerExceptions.Count' "ex3 InnerExceptions.Length");  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,FlattenWorks,The following statement contains a magic number: Assert.AreEqual (7' actual.InnerExceptions.Count' "Count");  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,FlattenWorks,The following statement contains a magic number: Assert.True (ReferenceEquals (actual.InnerExceptions [2]' ex2)' "2");  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,FlattenWorks,The following statement contains a magic number: Assert.True (ReferenceEquals (actual.InnerExceptions [3]' ex5)' "5");  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,FlattenWorks,The following statement contains a magic number: Assert.True (ReferenceEquals (actual.InnerExceptions [4]' ex6)' "6");  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,FlattenWorks,The following statement contains a magic number: Assert.True (ReferenceEquals (actual.InnerExceptions [5]' ex3)' "3");  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,AggregateExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\AggregateExceptionTests.cs,FlattenWorks,The following statement contains a magic number: Assert.True (ReferenceEquals (actual.InnerExceptions [6]' ex4)' "4");  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,ArgumentOutOfRangeExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\ArgumentOutOfRangeExceptionTests.cs,ConstructorWithParamNameAndActualValueAndMessageWorks,The following statement contains a magic number: Assert.AreEqual (42' ex.ActualValue' "ActualValue");  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,ArgumentOutOfRangeExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\ArgumentOutOfRangeExceptionTests.cs,RangeErrorIsConvertedToArgumentOutOfRangeException,The following statement contains a magic number: try {  	#pragma  	var arr = new int[size];  	#pragma  	Assert.Fail ("Should throw");  }  catch (ArgumentOutOfRangeException ex) {  	Exception inner = ex.InnerException;  	Assert.NotNull (inner' "Inner Exception");  	Assert.True (inner is ErrorException' "Inner is ErrorException");  }  catch (Exception ex) {  	Assert.Fail ("Expected ArgumentOutOfRangeException' got " + ex.GetType ());  }  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,ArgumentOutOfRangeExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\ArgumentOutOfRangeExceptionTests.cs,RangeErrorIsConvertedToArgumentOutOfRangeException,The following statement contains a magic number: try {  	#pragma  	var arr = new int[size];  	#pragma  	Assert.Fail ("Should throw");  }  catch (ArgumentOutOfRangeException ex) {  	Exception inner = ex.InnerException;  	Assert.NotNull (inner' "Inner Exception");  	Assert.True (inner is ErrorException' "Inner is ErrorException");  }  catch (Exception ex) {  	Assert.Fail ("Expected ArgumentOutOfRangeException' got " + ex.GetType ());  }  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,NullReferenceExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\NullReferenceExceptionTests.cs,AccessingAFieldOnANullObjectCausesANullReferenceException,The following statement contains a magic number: try {  	dynamic d = null;  	#pragma  	int x = d.someField;  	#pragma  	Assert.Fail ("A NullReferenceException should have been thrown");  }  catch (NullReferenceException ex) {  	Exception inner = ex.InnerException;  	Assert.NotNull (inner' "Inner Exception");  	Assert.True (inner is ErrorException' "Inner is ErrorException");  }  catch (Exception ex) {  	Assert.Fail ("Expected NullReferenceException' got type " + ex.GetType ());  }  
Magic Number,Bridge.ClientTest.Batch4.Exceptions,NullReferenceExceptionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Exceptions\NullReferenceExceptionTests.cs,AccessingAFieldOnANullObjectCausesANullReferenceException,The following statement contains a magic number: try {  	dynamic d = null;  	#pragma  	int x = d.someField;  	#pragma  	Assert.Fail ("A NullReferenceException should have been thrown");  }  catch (NullReferenceException ex) {  	Exception inner = ex.InnerException;  	Assert.NotNull (inner' "Inner Exception");  	Assert.True (inner is ErrorException' "Inner is ErrorException");  }  catch (Exception ex) {  	Assert.Fail ("Expected NullReferenceException' got type " + ex.GetType ());  }  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,Assume,The following statement contains a magic number: AssertException (() => Contract.Assume (a == 99)' ContractFailureKind.Assume' "Contract 'a === 99' failed"' null' null);  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,AssumeWithUserMessage,The following statement contains a magic number: AssertException (() => Contract.Assume (a == 99' "is 99")' ContractFailureKind.Assume' "Contract 'a === 99' failed: is 99"' "is 99"' null);  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,Assert,The following statement contains a magic number: AssertException (() => Contract.Assert (a == 99)' ContractFailureKind.Assert' "Contract 'a === 99' failed"' null' null);  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,AssertWithUserMessage,The following statement contains a magic number: AssertException (() => Contract.Assert (a == 99' "is 99")' ContractFailureKind.Assert' "Contract 'a === 99' failed: is 99"' "is 99"' null);  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,Requires,The following statement contains a magic number: AssertException (() => Contract.Requires (a == 99)' ContractFailureKind.Precondition' "Contract 'a === 99' failed"' null' null);  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,RequiresWithUserMessage,The following statement contains a magic number: AssertException (() => Contract.Requires (a == 99' "can only be 99")' ContractFailureKind.Precondition' "Contract 'a === 99' failed: can only be 99"' "can only be 99"' null);  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAll,The following statement contains a magic number: Bridge.Test.Assert.Throws<ArgumentNullException> (() => Contract.ForAll (2' 5' null)' "ArgumentNullException");  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAll,The following statement contains a magic number: Bridge.Test.Assert.Throws<ArgumentNullException> (() => Contract.ForAll (2' 5' null)' "ArgumentNullException");  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAll,The following statement contains a magic number: AssertNoExceptions (() => Contract.ForAll (2' 5' s => s != 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAll,The following statement contains a magic number: AssertNoExceptions (() => Contract.ForAll (2' 5' s => s != 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAll,The following statement contains a magic number: AssertNoExceptions (() => Contract.ForAll (2' 5' s => s != 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAll,The following statement contains a magic number: Bridge.Test.Assert.False (Contract.ForAll (2' 5' s => s != 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAll,The following statement contains a magic number: Bridge.Test.Assert.False (Contract.ForAll (2' 5' s => s != 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAll,The following statement contains a magic number: Bridge.Test.Assert.False (Contract.ForAll (2' 5' s => s != 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAll,The following statement contains a magic number: Bridge.Test.Assert.True (Contract.ForAll (2' 5' s => s != 6));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAll,The following statement contains a magic number: Bridge.Test.Assert.True (Contract.ForAll (2' 5' s => s != 6));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAll,The following statement contains a magic number: Bridge.Test.Assert.True (Contract.ForAll (2' 5' s => s != 6));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAllWithCollection,The following statement contains a magic number: Bridge.Test.Assert.Throws<ArgumentNullException> (() => Contract.ForAll (new[] {  	1'  	2'  	3  }' null)' "ArgumentNullException");  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAllWithCollection,The following statement contains a magic number: Bridge.Test.Assert.Throws<ArgumentNullException> (() => Contract.ForAll (new[] {  	1'  	2'  	3  }' null)' "ArgumentNullException");  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAllWithCollection,The following statement contains a magic number: AssertNoExceptions (() => Contract.ForAll (new[] {  	1'  	2'  	3  }' s => s != 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAllWithCollection,The following statement contains a magic number: AssertNoExceptions (() => Contract.ForAll (new[] {  	1'  	2'  	3  }' s => s != 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAllWithCollection,The following statement contains a magic number: AssertNoExceptions (() => Contract.ForAll (new[] {  	1'  	2'  	3  }' s => s != 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAllWithCollection,The following statement contains a magic number: Bridge.Test.Assert.False (Contract.ForAll (new[] {  	1'  	2'  	3  }' s => s != 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAllWithCollection,The following statement contains a magic number: Bridge.Test.Assert.False (Contract.ForAll (new[] {  	1'  	2'  	3  }' s => s != 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAllWithCollection,The following statement contains a magic number: Bridge.Test.Assert.False (Contract.ForAll (new[] {  	1'  	2'  	3  }' s => s != 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAllWithCollection,The following statement contains a magic number: Bridge.Test.Assert.True (Contract.ForAll (new[] {  	1'  	2'  	3  }' s => s != 6));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAllWithCollection,The following statement contains a magic number: Bridge.Test.Assert.True (Contract.ForAll (new[] {  	1'  	2'  	3  }' s => s != 6));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ForAllWithCollection,The following statement contains a magic number: Bridge.Test.Assert.True (Contract.ForAll (new[] {  	1'  	2'  	3  }' s => s != 6));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,Exists,The following statement contains a magic number: Bridge.Test.Assert.Throws<ArgumentNullException> (() => Contract.Exists (1' 5' null)' "ArgumentNullException");  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,Exists,The following statement contains a magic number: AssertNoExceptions (() => Contract.Exists (1' 5' s => s == 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,Exists,The following statement contains a magic number: AssertNoExceptions (() => Contract.Exists (1' 5' s => s == 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,Exists,The following statement contains a magic number: Bridge.Test.Assert.True (Contract.Exists (1' 5' s => s == 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,Exists,The following statement contains a magic number: Bridge.Test.Assert.True (Contract.Exists (1' 5' s => s == 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,Exists,The following statement contains a magic number: Bridge.Test.Assert.False (Contract.Exists (1' 5' s => s == 6));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,Exists,The following statement contains a magic number: Bridge.Test.Assert.False (Contract.Exists (1' 5' s => s == 6));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ExistsWithCollection,The following statement contains a magic number: Bridge.Test.Assert.Throws<ArgumentNullException> (() => Contract.Exists (new[] {  	1'  	2'  	3  }' null)' "ArgumentNullException");  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ExistsWithCollection,The following statement contains a magic number: Bridge.Test.Assert.Throws<ArgumentNullException> (() => Contract.Exists (new[] {  	1'  	2'  	3  }' null)' "ArgumentNullException");  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ExistsWithCollection,The following statement contains a magic number: AssertNoExceptions (() => Contract.Exists (new[] {  	1'  	2'  	3  }' s => s == 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ExistsWithCollection,The following statement contains a magic number: AssertNoExceptions (() => Contract.Exists (new[] {  	1'  	2'  	3  }' s => s == 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ExistsWithCollection,The following statement contains a magic number: AssertNoExceptions (() => Contract.Exists (new[] {  	1'  	2'  	3  }' s => s == 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ExistsWithCollection,The following statement contains a magic number: Bridge.Test.Assert.True (Contract.Exists (new[] {  	1'  	2'  	3  }' s => s == 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ExistsWithCollection,The following statement contains a magic number: Bridge.Test.Assert.True (Contract.Exists (new[] {  	1'  	2'  	3  }' s => s == 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ExistsWithCollection,The following statement contains a magic number: Bridge.Test.Assert.True (Contract.Exists (new[] {  	1'  	2'  	3  }' s => s == 3));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ExistsWithCollection,The following statement contains a magic number: Bridge.Test.Assert.False (Contract.Exists (new[] {  	1'  	2'  	3  }' s => s == 6));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ExistsWithCollection,The following statement contains a magic number: Bridge.Test.Assert.False (Contract.Exists (new[] {  	1'  	2'  	3  }' s => s == 6));  
Magic Number,Bridge.ClientTest.Batch4.Diagnostics.Contracts,ContractTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Diagnostics\Contracts\ContractTests.cs,ExistsWithCollection,The following statement contains a magic number: Bridge.Test.Assert.False (Contract.Exists (new[] {  	1'  	2'  	3  }' s => s == 6));  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWithoutArgumentsWorks,The following statement contains a magic number: cts.Token.Register (() =>  {  	calledHandlers.Add (2);  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWithoutArgumentsWorks,The following statement contains a magic number: calledHandlers.Add (2);  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWithoutArgumentsWorks,The following statement contains a magic number: cts.Token.Register (() =>  {  	calledHandlers.Add (3);  	throw ex2;  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWithoutArgumentsWorks,The following statement contains a magic number: calledHandlers.Add (3);  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWithoutArgumentsWorks,The following statement contains a magic number: cts.Token.Register (() =>  {  	calledHandlers.Add (4);  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWithoutArgumentsWorks,The following statement contains a magic number: calledHandlers.Add (4);  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWithoutArgumentsWorks,The following statement contains a magic number: try {  	cts.Cancel ();  	Assert.Fail ("Should have thrown");  }  catch (AggregateException ex) {  	Assert.AreEqual (2' ex.InnerExceptions.Count' "count");  	Assert.True (ex.InnerExceptions.Contains (ex1)' "ex1");  	Assert.True (ex.InnerExceptions.Contains (ex2)' "ex2");  }  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWithoutArgumentsWorks,The following statement contains a magic number: Assert.AreEqual (2' ex.InnerExceptions.Count' "count");  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWithoutArgumentsWorks,The following statement contains a magic number: Assert.True (calledHandlers.Contains (0) && calledHandlers.Contains (1) && calledHandlers.Contains (2) && calledHandlers.Contains (3) && calledHandlers.Contains (4));  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWithoutArgumentsWorks,The following statement contains a magic number: Assert.True (calledHandlers.Contains (0) && calledHandlers.Contains (1) && calledHandlers.Contains (2) && calledHandlers.Contains (3) && calledHandlers.Contains (4));  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWithoutArgumentsWorks,The following statement contains a magic number: Assert.True (calledHandlers.Contains (0) && calledHandlers.Contains (1) && calledHandlers.Contains (2) && calledHandlers.Contains (3) && calledHandlers.Contains (4));  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsFalse,The following statement contains a magic number: cts.Token.Register (() =>  {  	calledHandlers.Add (2);  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsFalse,The following statement contains a magic number: calledHandlers.Add (2);  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsFalse,The following statement contains a magic number: cts.Token.Register (() =>  {  	calledHandlers.Add (3);  	throw ex2;  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsFalse,The following statement contains a magic number: calledHandlers.Add (3);  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsFalse,The following statement contains a magic number: cts.Token.Register (() =>  {  	calledHandlers.Add (4);  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsFalse,The following statement contains a magic number: calledHandlers.Add (4);  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsFalse,The following statement contains a magic number: try {  	cts.Cancel (false);  	Assert.Fail ("Should have thrown");  }  catch (AggregateException ex) {  	Assert.AreEqual (2' ex.InnerExceptions.Count' "ex count");  	Assert.True (ex.InnerExceptions.Contains (ex1)' "ex1");  	Assert.True (ex.InnerExceptions.Contains (ex2)' "ex2");  }  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsFalse,The following statement contains a magic number: Assert.AreEqual (2' ex.InnerExceptions.Count' "ex count");  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsFalse,The following statement contains a magic number: Assert.AreEqual (5' calledHandlers.Count' "called handler count");  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsFalse,The following statement contains a magic number: Assert.True (calledHandlers.Contains (0) && calledHandlers.Contains (1) && calledHandlers.Contains (2) && calledHandlers.Contains (3) && calledHandlers.Contains (4));  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsFalse,The following statement contains a magic number: Assert.True (calledHandlers.Contains (0) && calledHandlers.Contains (1) && calledHandlers.Contains (2) && calledHandlers.Contains (3) && calledHandlers.Contains (4));  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsFalse,The following statement contains a magic number: Assert.True (calledHandlers.Contains (0) && calledHandlers.Contains (1) && calledHandlers.Contains (2) && calledHandlers.Contains (3) && calledHandlers.Contains (4));  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsTrue,The following statement contains a magic number: cts.Token.Register (() =>  {  	calledHandlers.Add (2);  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsTrue,The following statement contains a magic number: calledHandlers.Add (2);  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsTrue,The following statement contains a magic number: cts.Token.Register (() =>  {  	calledHandlers.Add (3);  	throw ex2;  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsTrue,The following statement contains a magic number: calledHandlers.Add (3);  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsTrue,The following statement contains a magic number: cts.Token.Register (() =>  {  	calledHandlers.Add (4);  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsTrue,The following statement contains a magic number: calledHandlers.Add (4);  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,CancelWorksWhenThrowOnFirstExceptionIsTrue,The following statement contains a magic number: Assert.AreEqual (2' calledHandlers.Count' "called handler count");  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,RegisterOverloadsWithUseSynchronizationContextWork,The following statement contains a magic number: Assert.AreEqual (4' numCalled);  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,RegisterOnCancellationTokenCreatedCancelledInvokesTheActionImmediately,The following statement contains a magic number: ct.Register (c =>  {  	Assert.True (ReferenceEquals (context' c)' "context");  	state = 2;  }' context);  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,RegisterOnCancellationTokenCreatedCancelledInvokesTheActionImmediately,The following statement contains a magic number: state = 2;  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,RegisterOnCancellationTokenCreatedCancelledInvokesTheActionImmediately,The following statement contains a magic number: Assert.AreEqual (2' state' "state 2");  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,RegistrationsCanBeUnregistered,The following statement contains a magic number: cts.Token.Register (() =>  {  	calledHandlers.Add (2);  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,RegistrationsCanBeUnregistered,The following statement contains a magic number: calledHandlers.Add (2);  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,RegistrationsCanBeUnregistered,The following statement contains a magic number: Assert.AreEqual (2' calledHandlers.Count);  
Magic Number,Bridge.ClientTest.Batch4.Threading,CancellationTokenTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\CancellationTokenTests.cs,RegistrationsCanBeUnregistered,The following statement contains a magic number: Assert.True (calledHandlers.Contains (0) && calledHandlers.Contains (2));  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncVoid,The following statement contains a magic number: state = 2;  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncVoid,The following statement contains a magic number: task.ContinueWith (x =>  {  	Assert.AreEqual (2' state' "Async method should finish after the task is finished");  	done ();  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncVoid,The following statement contains a magic number: Assert.AreEqual (2' state' "Async method should finish after the task is finished");  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncTask,The following statement contains a magic number: state = 2;  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncTask,The following statement contains a magic number: asyncTask.ContinueWith (x =>  {  	Assert.AreEqual (TaskStatus.RanToCompletion' asyncTask.Status' "asyncTask should run to completion");  	Assert.True (asyncTask.Exception == null' "asyncTask should not throw an exception");  	Assert.AreEqual (2' state' "Async method should finish after the task is finished");  	done ();  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncTask,The following statement contains a magic number: Assert.AreEqual (2' state' "Async method should finish after the task is finished");  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncTaskBodyThrowsException,The following statement contains a magic number: state = 2;  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncTaskBodyThrowsException,The following statement contains a magic number: asyncTask.ContinueWith (x =>  {  	Assert.AreEqual (TaskStatus.Faulted' asyncTask.Status' "asyncTask should fault");  	Assert.True (asyncTask.Exception != null' "asyncTask should have an exception");  	Assert.True (asyncTask.Exception.InnerExceptions [0] == ex' "asyncTask should throw the correct exception");  	Assert.AreEqual (2' state' "Async method should finish after the task is finished");  	done ();  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncTaskBodyThrowsException,The following statement contains a magic number: Assert.AreEqual (2' state' "Async method should finish after the task is finished");  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AwaitTaskThatFaults,The following statement contains a magic number: state = 2;  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncTaskThatReturnsValue,The following statement contains a magic number: state = 2;  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncTaskThatReturnsValue,The following statement contains a magic number: return 42;  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncTaskThatReturnsValue,The following statement contains a magic number: asyncTask.ContinueWith (x =>  {  	Assert.AreEqual (TaskStatus.RanToCompletion' asyncTask.Status' "asyncTask should run to completion");  	Assert.True (asyncTask.Exception == null' "asyncTask should not throw an exception");  	Assert.AreEqual (2' state' "Async method should finish after the task is finished");  	Assert.AreEqual (42' asyncTask.Result' "Result should be correct");  	done ();  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncTaskThatReturnsValue,The following statement contains a magic number: asyncTask.ContinueWith (x =>  {  	Assert.AreEqual (TaskStatus.RanToCompletion' asyncTask.Status' "asyncTask should run to completion");  	Assert.True (asyncTask.Exception == null' "asyncTask should not throw an exception");  	Assert.AreEqual (2' state' "Async method should finish after the task is finished");  	Assert.AreEqual (42' asyncTask.Result' "Result should be correct");  	done ();  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncTaskThatReturnsValue,The following statement contains a magic number: Assert.AreEqual (2' state' "Async method should finish after the task is finished");  
Magic Number,Bridge.ClientTest.Batch4.Threading,AsyncTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\AsyncTests.cs,AsyncTaskThatReturnsValue,The following statement contains a magic number: Assert.AreEqual (42' asyncTask.Result' "Result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithoutResultFactoryWorksWhenPromiseCompletes,The following statement contains a magic number: promise.Resolve (42' "result 123"' 101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithoutResultFactoryWorksWhenPromiseCompletes,The following statement contains a magic number: promise.Resolve (42' "result 123"' 101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithoutResultFactoryWorksWhenPromiseCompletes,The following statement contains a magic number: task1.ContinueWith (x =>  {  	Assert.AreEqual (TaskStatus.RanToCompletion' task.Status' "Task should be completed after promise");  	Assert.True (continuationRun' "Continuation should have been run after promise was completed.");  	Assert.AreDeepEqual (new object[] {  		42'  		"result 123"'  		101  	}' task.Result' "The result should be correct");  	completeAsync ();  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithoutResultFactoryWorksWhenPromiseCompletes,The following statement contains a magic number: task1.ContinueWith (x =>  {  	Assert.AreEqual (TaskStatus.RanToCompletion' task.Status' "Task should be completed after promise");  	Assert.True (continuationRun' "Continuation should have been run after promise was completed.");  	Assert.AreDeepEqual (new object[] {  		42'  		"result 123"'  		101  	}' task.Result' "The result should be correct");  	completeAsync ();  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithoutResultFactoryWorksWhenPromiseCompletes,The following statement contains a magic number: Assert.AreDeepEqual (new object[] {  	42'  	"result 123"'  	101  }' task.Result' "The result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithoutResultFactoryWorksWhenPromiseCompletes,The following statement contains a magic number: Assert.AreDeepEqual (new object[] {  	42'  	"result 123"'  	101  }' task.Result' "The result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithResultFactoryWorksWhenPromiseCompletes,The following statement contains a magic number: promise.Resolve (42' "result 123"' 101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithResultFactoryWorksWhenPromiseCompletes,The following statement contains a magic number: promise.Resolve (42' "result 123"' 101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithResultFactoryWorksWhenPromiseCompletes,The following statement contains a magic number: task1.ContinueWith (x =>  {  	Assert.AreEqual (TaskStatus.RanToCompletion' task.Status' "Task should be completed after promise");  	Assert.True (continuationRun' "Continuation should have been run after promise was completed.");  	Assert.AreDeepEqual (new TaskResult () {  		I = 42'  		S = "result 123"'  		J = 101  	}' task.Result);  	completeAsync ();  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithResultFactoryWorksWhenPromiseCompletes,The following statement contains a magic number: task1.ContinueWith (x =>  {  	Assert.AreEqual (TaskStatus.RanToCompletion' task.Status' "Task should be completed after promise");  	Assert.True (continuationRun' "Continuation should have been run after promise was completed.");  	Assert.AreDeepEqual (new TaskResult () {  		I = 42'  		S = "result 123"'  		J = 101  	}' task.Result);  	completeAsync ();  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithResultFactoryWorksWhenPromiseCompletes,The following statement contains a magic number: Assert.AreDeepEqual (new TaskResult () {  	I = 42'  	S = "result 123"'  	J = 101  }' task.Result);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithResultFactoryWorksWhenPromiseCompletes,The following statement contains a magic number: Assert.AreDeepEqual (new TaskResult () {  	I = 42'  	S = "result 123"'  	J = 101  }' task.Result);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWorksWhenPromiseFails,The following statement contains a magic number: promise.Reject (42' "result 123"' 101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWorksWhenPromiseFails,The following statement contains a magic number: promise.Reject (42' "result 123"' 101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWorksWhenPromiseFails,The following statement contains a magic number: task1.ContinueWith (x =>  {  	Assert.AreEqual (TaskStatus.Faulted' task.Status' "Task should have faulted after the promise was rejected.");  	Assert.True (continuationRun' "Continuation should have been run after promise was rejected.");  	Assert.True ((object)task.Exception is AggregateException' "Exception should be an AggregateException");  	Assert.AreEqual (1' task.Exception.InnerExceptions.Count' "Exception should have one inner exception");  	Assert.True (task.Exception.InnerExceptions [0] is PromiseException' "Inner exception should be a PromiseException");  	Assert.AreDeepEqual (new object[] {  		42'  		"result 123"'  		101  	}' ((PromiseException)task.Exception.InnerExceptions [0]).Arguments' "The PromiseException arguments should be correct");  	completeAsync ();  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWorksWhenPromiseFails,The following statement contains a magic number: task1.ContinueWith (x =>  {  	Assert.AreEqual (TaskStatus.Faulted' task.Status' "Task should have faulted after the promise was rejected.");  	Assert.True (continuationRun' "Continuation should have been run after promise was rejected.");  	Assert.True ((object)task.Exception is AggregateException' "Exception should be an AggregateException");  	Assert.AreEqual (1' task.Exception.InnerExceptions.Count' "Exception should have one inner exception");  	Assert.True (task.Exception.InnerExceptions [0] is PromiseException' "Inner exception should be a PromiseException");  	Assert.AreDeepEqual (new object[] {  		42'  		"result 123"'  		101  	}' ((PromiseException)task.Exception.InnerExceptions [0]).Arguments' "The PromiseException arguments should be correct");  	completeAsync ();  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWorksWhenPromiseFails,The following statement contains a magic number: Assert.AreDeepEqual (new object[] {  	42'  	"result 123"'  	101  }' ((PromiseException)task.Exception.InnerExceptions [0]).Arguments' "The PromiseException arguments should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWorksWhenPromiseFails,The following statement contains a magic number: Assert.AreDeepEqual (new object[] {  	42'  	"result 123"'  	101  }' ((PromiseException)task.Exception.InnerExceptions [0]).Arguments' "The PromiseException arguments should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,CompletingPromiseCanBeAwaited,The following statement contains a magic number: promise.Resolve (42' "result 123"' 101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,CompletingPromiseCanBeAwaited,The following statement contains a magic number: promise.Resolve (42' "result 123"' 101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,CompletingPromiseCanBeAwaited,The following statement contains a magic number: Assert.AreEqual (new object[] {  	42'  	"result 123"'  	101  }' result' "The result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,CompletingPromiseCanBeAwaited,The following statement contains a magic number: Assert.AreEqual (new object[] {  	42'  	"result 123"'  	101  }' result' "The result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,FailingPromiseCanBeAwaited,The following statement contains a magic number: promise.Reject (42' "result 123"' 101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,FailingPromiseCanBeAwaited,The following statement contains a magic number: promise.Reject (42' "result 123"' 101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,FailingPromiseCanBeAwaited,The following statement contains a magic number: try {  	Assert.False (continuationRun' "Continuation should not be run too early (b).");  	await promise;  	Assert.Fail ("Await should throw");  }  catch (PromiseException ex) {  	continuationRun = true;  	Assert.AreEqual (new object[] {  		42'  		"result 123"'  		101  	}' ex.Arguments' "The PromiseException arguments should be correct");  }  catch (Exception ex) {  	Assert.Fail ("Thrown exception should have been an AggregateException' was " + ex.GetType ().FullName);  }  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,FailingPromiseCanBeAwaited,The following statement contains a magic number: try {  	Assert.False (continuationRun' "Continuation should not be run too early (b).");  	await promise;  	Assert.Fail ("Await should throw");  }  catch (PromiseException ex) {  	continuationRun = true;  	Assert.AreEqual (new object[] {  		42'  		"result 123"'  		101  	}' ex.Arguments' "The PromiseException arguments should be correct");  }  catch (Exception ex) {  	Assert.Fail ("Thrown exception should have been an AggregateException' was " + ex.GetType ().FullName);  }  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,FailingPromiseCanBeAwaited,The following statement contains a magic number: Assert.AreEqual (new object[] {  	42'  	"result 123"'  	101  }' ex.Arguments' "The PromiseException arguments should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,FailingPromiseCanBeAwaited,The following statement contains a magic number: Assert.AreEqual (new object[] {  	42'  	"result 123"'  	101  }' ex.Arguments' "The PromiseException arguments should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithProgressWithoutResultFactoryWorksWhenPromiseProgressesAndCompletes,The following statement contains a magic number: promise.Progress (20);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithProgressWithoutResultFactoryWorksWhenPromiseProgressesAndCompletes,The following statement contains a magic number: Assert.AreEqual (20' PromiseProgress' "Progress 20");  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithProgressWithoutResultFactoryWorksWhenPromiseProgressesAndCompletes,The following statement contains a magic number: promise.Resolve (42' "result 123"' 101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithProgressWithoutResultFactoryWorksWhenPromiseProgressesAndCompletes,The following statement contains a magic number: promise.Resolve (42' "result 123"' 101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithProgressWithoutResultFactoryWorksWhenPromiseProgressesAndCompletes,The following statement contains a magic number: Assert.AreEqual (100' PromiseProgress' "Progress 100");  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithProgressWithoutResultFactoryWorksWhenPromiseProgressesAndCompletes,The following statement contains a magic number: task1.ContinueWith (x =>  {  	Assert.AreEqual (TaskStatus.RanToCompletion' task.Status' "Task should be completed after promise");  	Assert.True (continuationRun' "Continuation should have been run after promise was completed.");  	Assert.AreDeepEqual (new object[] {  		42'  		"result 123"'  		101  	}' task.Result' "The result should be correct");  	completeAsync ();  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithProgressWithoutResultFactoryWorksWhenPromiseProgressesAndCompletes,The following statement contains a magic number: task1.ContinueWith (x =>  {  	Assert.AreEqual (TaskStatus.RanToCompletion' task.Status' "Task should be completed after promise");  	Assert.True (continuationRun' "Continuation should have been run after promise was completed.");  	Assert.AreDeepEqual (new object[] {  		42'  		"result 123"'  		101  	}' task.Result' "The result should be correct");  	completeAsync ();  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithProgressWithoutResultFactoryWorksWhenPromiseProgressesAndCompletes,The following statement contains a magic number: Assert.AreDeepEqual (new object[] {  	42'  	"result 123"'  	101  }' task.Result' "The result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,PromiseTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\PromiseTests.cs,TaskFromPromiseWithProgressWithoutResultFactoryWorksWhenPromiseProgressesAndCompletes,The following statement contains a magic number: Assert.AreDeepEqual (new object[] {  	42'  	"result 123"'  	101  }' task.Result' "The result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,ContinueWithForNonGenericTaskCanReturnAValue,The following statement contains a magic number: continuedTask = task.ContinueWith (t =>  {  	Assert.True (t == task' "argument to task.ContinueWith callback should be correct");  	Assert.AreEqual (TaskStatus.RanToCompletion' task.Status' "task should have run to completion at point 2");  	Assert.AreEqual (null' task.Exception' "task should not have an exception");  	Assert.AreEqual (TaskStatus.Running' continuedTask.Status' "continuedTask should be running at point 2");  	return 42;  });  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,ContinueWithForNonGenericTaskCanReturnAValue,The following statement contains a magic number: return 42;  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,ContinueWithForNonGenericTaskCanReturnAValue,The following statement contains a magic number: Assert.AreEqual (42' t.Result);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,ContinueWithForGenericTaskCanReturnAValue,The following statement contains a magic number: tcs.SetResult (42);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,FromResultWorks,The following statement contains a magic number: Assert.AreEqual (3' t.Result' "Result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,RunWithResultWorks,The following statement contains a magic number: return 42;  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,RunWithResultWorks,The following statement contains a magic number: Assert.AreEqual (42' task.Result);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllParamArrayWithResultWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	101'  	3'  	42  }' t.Result' "Result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllParamArrayWithResultWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	101'  	3'  	42  }' t.Result' "Result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllParamArrayWithResultWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	101'  	3'  	42  }' t.Result' "Result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllParamArrayWithResultWorks,The following statement contains a magic number: tcs2.SetResult (3);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllParamArrayWithResultWorks,The following statement contains a magic number: tcs1.SetResult (101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllParamArrayWithResultWorks,The following statement contains a magic number: tcs3.SetResult (42);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllEnumerableWithResultWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	101'  	3'  	42  }' t.Result' "Result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllEnumerableWithResultWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	101'  	3'  	42  }' t.Result' "Result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllEnumerableWithResultWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	101'  	3'  	42  }' t.Result' "Result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllEnumerableWithResultWorks,The following statement contains a magic number: tcs2.SetResult (3);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllEnumerableWithResultWorks,The following statement contains a magic number: tcs1.SetResult (101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllEnumerableWithResultWorks,The following statement contains a magic number: tcs3.SetResult (42);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllParamArrayWithoutResultWorks,The following statement contains a magic number: tcs2.SetResult (3);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllParamArrayWithoutResultWorks,The following statement contains a magic number: tcs1.SetResult (101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllParamArrayWithoutResultWorks,The following statement contains a magic number: tcs3.SetResult (42);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllEnumerableWithoutResultWorks,The following statement contains a magic number: tcs2.SetResult (3);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllEnumerableWithoutResultWorks,The following statement contains a magic number: tcs1.SetResult (101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllEnumerableWithoutResultWorks,The following statement contains a magic number: tcs3.SetResult (42);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllShouldHaveAnErrorIfAnyIncludedTaskFaulted,The following statement contains a magic number: Assert.AreEqual (2' t.Exception.InnerExceptions.Count' "Should be 2 inner exceptions");  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllShouldHaveAnErrorIfAnyIncludedTaskFaulted,The following statement contains a magic number: tcs1.SetResult (101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllShouldBeCancelledIfNoTaskWasFaultedButSomeWasCancelled,The following statement contains a magic number: tcs2.SetResult (3);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAllShouldBeCancelledIfNoTaskWasFaultedButSomeWasCancelled,The following statement contains a magic number: tcs3.SetResult (42);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyParamArrayWithResultWorks,The following statement contains a magic number: Assert.AreEqual (3' t.Result.Result' "Result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyParamArrayWithResultWorks,The following statement contains a magic number: tcs2.SetResult (3);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyParamArrayWithResultWorks,The following statement contains a magic number: tcs1.SetResult (101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyParamArrayWithResultWorks,The following statement contains a magic number: tcs3.SetResult (42);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyEnumerableWithResultWorks,The following statement contains a magic number: Assert.AreEqual (3' t.Result.Result' "Result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyEnumerableWithResultWorks,The following statement contains a magic number: tcs2.SetResult (3);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyEnumerableWithResultWorks,The following statement contains a magic number: tcs1.SetResult (101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyEnumerableWithResultWorks,The following statement contains a magic number: tcs3.SetResult (42);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyParamArrayWithoutResultWorks,The following statement contains a magic number: tcs2.SetResult (3);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyParamArrayWithoutResultWorks,The following statement contains a magic number: tcs1.SetResult (101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyParamArrayWithoutResultWorks,The following statement contains a magic number: tcs3.SetResult (42);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyEnumerableWithoutResultWorks,The following statement contains a magic number: tcs2.SetResult (3);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyEnumerableWithoutResultWorks,The following statement contains a magic number: tcs1.SetResult (101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyEnumerableWithoutResultWorks,The following statement contains a magic number: tcs3.SetResult (42);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyFaultsIfTheFirstTaskFaulted,The following statement contains a magic number: tcs1.SetResult (101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyFaultsIfTheFirstTaskFaulted,The following statement contains a magic number: tcs3.SetResult (42);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyIsCancelledIfTheFirstTaskWasCancelled,The following statement contains a magic number: tcs1.SetResult (101);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,WhenAnyIsCancelledIfTheFirstTaskWasCancelled,The following statement contains a magic number: tcs3.SetResult (42);  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,ConstructorWithOnlyFunctionWorks,The following statement contains a magic number: return 42;  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,ConstructorWithOnlyFunctionWorks,The following statement contains a magic number: Assert.AreEqual (42' task.Result' "Result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,ConstructorWithFunctionAndStateWorks,The following statement contains a magic number: return 42;  
Magic Number,Bridge.ClientTest.Batch4.Threading,TaskTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Threading\Tasks\TaskTests.cs,ConstructorWithFunctionAndStateWorks,The following statement contains a magic number: Assert.AreEqual (42' task.Result' "Result should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetTypesWithImportedModuleWorks,The following statement contains a magic number: Assert.AreEqual (3' types.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetCustomAttributesWorks,The following statement contains a magic number: foreach (var a in new[] {  	asm.GetCustomAttributes ()'  	asm.GetCustomAttributes (true)'  	asm.GetCustomAttributes (false)  }) {  	Assert.False (a.Some (x => x.GetType ().Name == "A1Attribute"));  	var a2 = a.Filter (x => x is A2Attribute);  	Assert.AreEqual (1' a2.Length);  	Assert.True (((A2Attribute)a2 [0]).X == 64);  	Assert.True (((A2Attribute)a2 [0]).P == 23);  	var a3 = a.Filter (x => x is A3Attribute);  	Assert.AreEqual (1' a3.Length);  	Assert.True (((A3Attribute)a3 [0]).X == 15);  	Assert.True (((A3Attribute)a3 [0]).P == 45);  }  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetCustomAttributesWorks,The following statement contains a magic number: foreach (var a in new[] {  	asm.GetCustomAttributes ()'  	asm.GetCustomAttributes (true)'  	asm.GetCustomAttributes (false)  }) {  	Assert.False (a.Some (x => x.GetType ().Name == "A1Attribute"));  	var a2 = a.Filter (x => x is A2Attribute);  	Assert.AreEqual (1' a2.Length);  	Assert.True (((A2Attribute)a2 [0]).X == 64);  	Assert.True (((A2Attribute)a2 [0]).P == 23);  	var a3 = a.Filter (x => x is A3Attribute);  	Assert.AreEqual (1' a3.Length);  	Assert.True (((A3Attribute)a3 [0]).X == 15);  	Assert.True (((A3Attribute)a3 [0]).P == 45);  }  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetCustomAttributesWorks,The following statement contains a magic number: foreach (var a in new[] {  	asm.GetCustomAttributes ()'  	asm.GetCustomAttributes (true)'  	asm.GetCustomAttributes (false)  }) {  	Assert.False (a.Some (x => x.GetType ().Name == "A1Attribute"));  	var a2 = a.Filter (x => x is A2Attribute);  	Assert.AreEqual (1' a2.Length);  	Assert.True (((A2Attribute)a2 [0]).X == 64);  	Assert.True (((A2Attribute)a2 [0]).P == 23);  	var a3 = a.Filter (x => x is A3Attribute);  	Assert.AreEqual (1' a3.Length);  	Assert.True (((A3Attribute)a3 [0]).X == 15);  	Assert.True (((A3Attribute)a3 [0]).P == 45);  }  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetCustomAttributesWorks,The following statement contains a magic number: foreach (var a in new[] {  	asm.GetCustomAttributes ()'  	asm.GetCustomAttributes (true)'  	asm.GetCustomAttributes (false)  }) {  	Assert.False (a.Some (x => x.GetType ().Name == "A1Attribute"));  	var a2 = a.Filter (x => x is A2Attribute);  	Assert.AreEqual (1' a2.Length);  	Assert.True (((A2Attribute)a2 [0]).X == 64);  	Assert.True (((A2Attribute)a2 [0]).P == 23);  	var a3 = a.Filter (x => x is A3Attribute);  	Assert.AreEqual (1' a3.Length);  	Assert.True (((A3Attribute)a3 [0]).X == 15);  	Assert.True (((A3Attribute)a3 [0]).P == 45);  }  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetCustomAttributesWorks,The following statement contains a magic number: Assert.True (((A2Attribute)a2 [0]).X == 64);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetCustomAttributesWorks,The following statement contains a magic number: Assert.True (((A2Attribute)a2 [0]).P == 23);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetCustomAttributesWorks,The following statement contains a magic number: Assert.True (((A3Attribute)a3 [0]).X == 15);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetCustomAttributesWorks,The following statement contains a magic number: Assert.True (((A3Attribute)a3 [0]).P == 45);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetCustomAttributesWorks,The following statement contains a magic number: foreach (var a in new[] {  	asm.GetCustomAttributes (typeof(A2Attribute))'  	asm.GetCustomAttributes (typeof(A2Attribute)' true)'  	asm.GetCustomAttributes (typeof(A2Attribute)' false)  }) {  	Assert.AreEqual (1' a.Length);  	Assert.True (((A2Attribute)a [0]).X == 64);  	Assert.True (((A2Attribute)a [0]).P == 23);  }  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetCustomAttributesWorks,The following statement contains a magic number: foreach (var a in new[] {  	asm.GetCustomAttributes (typeof(A2Attribute))'  	asm.GetCustomAttributes (typeof(A2Attribute)' true)'  	asm.GetCustomAttributes (typeof(A2Attribute)' false)  }) {  	Assert.AreEqual (1' a.Length);  	Assert.True (((A2Attribute)a [0]).X == 64);  	Assert.True (((A2Attribute)a [0]).P == 23);  }  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetCustomAttributesWorks,The following statement contains a magic number: Assert.True (((A2Attribute)a [0]).X == 64);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AssemblyTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AssemblyTests.cs,GetCustomAttributesWorks,The following statement contains a magic number: Assert.True (((A2Attribute)a [0]).P == 23);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,CanGetCustomTypeAttributesForClassWithAttributes,The following statement contains a magic number: Assert.AreEqual (2' arr.Length' "Should have two attributes");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,CanGetCustomTypeAttributesForClassWithAttributes,The following statement contains a magic number: Assert.AreEqual (2' a2.V);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,CanGetCustomTypeAttributesForInterfaceWithAttributes,The following statement contains a magic number: Assert.AreEqual (2' arr.Length' "Should have two attributes");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,CanGetCustomTypeAttributesForInterfaceWithAttributes,The following statement contains a magic number: Assert.AreEqual (2' a2.V);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,CanGetCustomTypeAttributesForEnumWithAttributes,The following statement contains a magic number: Assert.AreEqual (2' arr.Length' "Should have two attributes");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,CanGetCustomTypeAttributesForEnumWithAttributes,The following statement contains a magic number: Assert.AreEqual (2' a2.V);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,InheritedFlagToGetCustomAttributesWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.Length' "Should have three inherited attributes");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,InheritedFlagToGetCustomAttributesWorks,The following statement contains a magic number: Assert.True (arr [0] is A1Attribute || arr [1] is A1Attribute || arr [2] is A1Attribute' "A1 should exist");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,InheritedFlagToGetCustomAttributesWorks,The following statement contains a magic number: Assert.True (arr [0] is A2Attribute || arr [1] is A2Attribute || arr [2] is A2Attribute' "A2 should exist");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,InheritedFlagToGetCustomAttributesWorks,The following statement contains a magic number: Assert.True (arr [0] is A3Attribute || arr [1] is A3Attribute || arr [2] is A3Attribute' "A3 should exist");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,DeepInheritanceWorks,The following statement contains a magic number: Assert.AreEqual (4' arr.Length' "Should have 4 attributes");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,DeepInheritanceWorks,The following statement contains a magic number: Assert.True (arr [0] is A1Attribute || arr [1] is A1Attribute || arr [2] is A1Attribute || arr [3] is A1Attribute' "A1 should exist");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,DeepInheritanceWorks,The following statement contains a magic number: Assert.True (arr [0] is A1Attribute || arr [1] is A1Attribute || arr [2] is A1Attribute || arr [3] is A1Attribute' "A1 should exist");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,DeepInheritanceWorks,The following statement contains a magic number: Assert.True (arr [0] is A2Attribute || arr [1] is A2Attribute || arr [2] is A2Attribute || arr [3] is A2Attribute' "A2 should exist");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,DeepInheritanceWorks,The following statement contains a magic number: Assert.True (arr [0] is A2Attribute || arr [1] is A2Attribute || arr [2] is A2Attribute || arr [3] is A2Attribute' "A2 should exist");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,DeepInheritanceWorks,The following statement contains a magic number: Assert.True (arr [0] is A3Attribute || arr [1] is A3Attribute || arr [2] is A3Attribute || arr [3] is A3Attribute' "A3 should exist");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,DeepInheritanceWorks,The following statement contains a magic number: Assert.True (arr [0] is A3Attribute || arr [1] is A3Attribute || arr [2] is A3Attribute || arr [3] is A3Attribute' "A3 should exist");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,DeepInheritanceWorks,The following statement contains a magic number: Assert.True (arr [0] is A4Attribute || arr [1] is A4Attribute || arr [2] is A4Attribute || arr [3] is A4Attribute' "A4 should exist");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,DeepInheritanceWorks,The following statement contains a magic number: Assert.True (arr [0] is A4Attribute || arr [1] is A4Attribute || arr [2] is A4Attribute || arr [3] is A4Attribute' "A4 should exist");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,OverridingSingleUseAttributeReplacesTheAttributeOnTheBaseClass,The following statement contains a magic number: Assert.AreEqual (2' arr.Length' "Should have 2 attributes");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,OverridingSingleUseAttributeReplacesTheAttributeOnTheBaseClass,The following statement contains a magic number: Assert.AreEqual (5' a1.V);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,ApplyingNewInstanceOfMultipleUseAttributeAddsTheAttribute,The following statement contains a magic number: Assert.AreEqual (3' arr.Length' "Should have 2 attributes");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,ApplyingNewInstanceOfMultipleUseAttributeAddsTheAttribute,The following statement contains a magic number: Assert.AreEqual (arr.Filter (a => a is A2Attribute).Length' 2' "Should have two A2");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,ApplyingNewInstanceOfMultipleUseAttributeAddsTheAttribute,The following statement contains a magic number: Assert.True (a2 [0].V == 2 || a2 [1].V == 2);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,ApplyingNewInstanceOfMultipleUseAttributeAddsTheAttribute,The following statement contains a magic number: Assert.True (a2 [0].V == 2 || a2 [1].V == 2);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,ApplyingNewInstanceOfMultipleUseAttributeAddsTheAttribute,The following statement contains a magic number: Assert.True (a2 [0].V == 6 || a2 [1].V == 6);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,ApplyingNewInstanceOfMultipleUseAttributeAddsTheAttribute,The following statement contains a magic number: Assert.True (a2 [0].V == 6 || a2 [1].V == 6);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,GetCustomAttributesTypeFilterWorks,The following statement contains a magic number: Assert.AreEqual (2' arr.Length' "Should have 2 A2 attributes");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,GetCustomAttributesTypeFilterWorks,The following statement contains a magic number: Assert.True (((A2Attribute)arr [0]).V == 8 || ((A2Attribute)arr [0]).V == 9' "Attribute members should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,GetCustomAttributesTypeFilterWorks,The following statement contains a magic number: Assert.True (((A2Attribute)arr [0]).V == 8 || ((A2Attribute)arr [0]).V == 9' "Attribute members should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,GetCustomAttributesTypeFilterWorks,The following statement contains a magic number: Assert.True (((A2Attribute)arr [1]).V == 8 || ((A2Attribute)arr [1]).V == 9' "Attribute members should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,GetCustomAttributesTypeFilterWorks,The following statement contains a magic number: Assert.True (((A2Attribute)arr [1]).V == 8 || ((A2Attribute)arr [1]).V == 9' "Attribute members should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,AllSupportedScalarTypesCanBeUsedAsAttributeArguments,The following statement contains a magic number: Assert.AreEqual (43' a6.Y' "Y");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,AllSupportedScalarTypesCanBeUsedAsAttributeArguments,The following statement contains a magic number: Assert.AreEqual (45.5' a6.D' "D");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,AllSupportedScalarTypesCanBeUsedAsAttributeArguments,The following statement contains a magic number: Assert.AreEqual (46.5' a6.F' "F");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,AllSupportedScalarTypesCanBeUsedAsAttributeArguments,The following statement contains a magic number: Assert.AreEqual (47' a6.I' "I");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,AllSupportedScalarTypesCanBeUsedAsAttributeArguments,The following statement contains a magic number: Assert.True (a6.L == 48' "L");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,AllSupportedScalarTypesCanBeUsedAsAttributeArguments,The following statement contains a magic number: Assert.AreEqual (49' a6.H' "H");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,ArraysCanBeUsedAsAttributeArguments,The following statement contains a magic number: Assert.AreEqual (new[] {  	42'  	17'  	31  }' a7.I' "I");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,ArraysCanBeUsedAsAttributeArguments,The following statement contains a magic number: Assert.AreEqual (new[] {  	42'  	17'  	31  }' a7.I' "I");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,ArraysCanBeUsedAsAttributeArguments,The following statement contains a magic number: Assert.AreEqual (new[] {  	42'  	17'  	31  }' a7.I' "I");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,PropertiesWithSetMethodsImplementedAsNormalMethodsCanBeSetInAttributeDeclaration,The following statement contains a magic number: Assert.AreEqual (42' a.P1);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,PropertiesWithSetMethodsImplementedAsInlineCodeCanBeSetInAttributeDeclaration,The following statement contains a magic number: Assert.AreEqual (18' a.P2);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,PropertiesImplementedAsFieldsCanBeAssignedInAttributeDeclaration,The following statement contains a magic number: Assert.AreEqual (43' a.P3);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,FieldsCanBeAssignedInAttributeDeclaration,The following statement contains a magic number: Assert.AreEqual (13' a.F1);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,CreatingAttributeWithNamedConstructorWorks,The following statement contains a magic number: Assert.AreEqual (42' a.i);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,AttributeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\AttributeTests.cs,CreatingAttributeWithInlineCodeConstructorWorks,The following statement contains a magic number: Assert.AreEqual (18' a.i);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers ()' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWorksForInterface,The following statement contains a magic number: AssertEquivalent (typeof(I2).GetMembers ()' new[] {  	511'  	512'  	513'  	514'  	551'  	552'  	553'  	554'  	555'  	556'  	557'  	558'  	559'  	571'  	574'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	131'  	132'  	141'  	142'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	161'  	162'  	163'  	164'  	165'  	166'  	171'  	172'  	173'  	174'  	175'  	176'  	181'  	182'  	183'  	184'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	231'  	232'  	241'  	242'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	261'  	262'  	263'  	264'  	265'  	266'  	271'  	272'  	273'  	274'  	275'  	276'  	281'  	282'  	283'  	284'  	285'  	286'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	331'  	332'  	341'  	342'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	361'  	362'  	363'  	364'  	365'  	366'  	371'  	372'  	373'  	374'  	375'  	376'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	131'  	132'  	151'  	152'  	153'  	154'  	155'  	156'  	157'  	158'  	159'  	171'  	172'  	173'  	174'  	175'  	176'  	211'  	212'  	213'  	214'  	231'  	232'  	251'  	252'  	253'  	254'  	255'  	256'  	257'  	258'  	259'  	271'  	272'  	273'  	274'  	275'  	276'  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	301'  	302'  	303'  	311'  	312'  	313'  	314'  	331'  	332'  	351'  	352'  	353'  	354'  	355'  	356'  	357'  	358'  	359'  	371'  	372'  	373'  	374'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMembers (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	141'  	142'  	161'  	162'  	163'  	164'  	165'  	166'  	181'  	182'  	183'  	184'  	185'  	186'  	221'  	222'  	223'  	224'  	241'  	242'  	261'  	262'  	263'  	264'  	265'  	266'  	281'  	282'  	283'  	284'  	285'  	286'  	321'  	322'  	323'  	324'  	341'  	342'  	361'  	362'  	363'  	364'  	365'  	366'  	381'  	382'  	383'  	384'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("FB")' new[] {  	132  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("MB")' new[] {  	112  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("MD")' new[] {  	312  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("M")' new[] {  	111'  	211'  	311  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("M")' new[] {  	111'  	211'  	311  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("M")' new[] {  	111'  	211'  	311  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("FB"' BindingFlags.Public | BindingFlags.Instance)' new[] {  	132  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("FDS"' BindingFlags.Public | BindingFlags.Static)' new[] {  	342  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("FBS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	142  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("F"' BindingFlags.Public | BindingFlags.Instance)' new[] {  	131'  	231'  	331  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("F"' BindingFlags.Public | BindingFlags.Instance)' new[] {  	131'  	231'  	331  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("F"' BindingFlags.Public | BindingFlags.Instance)' new[] {  	131'  	231'  	331  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("FS"' BindingFlags.Public | BindingFlags.Static)' new[] {  	341  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("FS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	141'  	241'  	341  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("FS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	141'  	241'  	341  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMemberWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D2).GetMember ("FS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	141'  	241'  	341  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetConstructorsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetConstructors ()' new[] {  	301'  	302'  	303  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetConstructorsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetConstructors ()' new[] {  	301'  	302'  	303  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetConstructorsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetConstructors ()' new[] {  	301'  	302'  	303  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetConstructorWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetConstructor (new Type[0])' 301);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetConstructorWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetConstructor (new[] {  	typeof(int)'  	typeof(string)  })' 303);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods ()' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	111'  	112'  	113'  	114'  	121'  	122'  	123'  	124'  	152'  	153'  	155'  	156'  	158'  	159'  	162'  	163'  	165'  	166'  	172'  	173'  	175'  	176'  	182'  	183'  	185'  	186'  	211'  	212'  	213'  	214'  	221'  	222'  	223'  	224'  	252'  	253'  	255'  	256'  	258'  	259'  	262'  	263'  	265'  	266'  	272'  	273'  	275'  	276'  	282'  	283'  	285'  	286'  	311'  	312'  	313'  	314'  	321'  	322'  	323'  	324'  	352'  	353'  	355'  	356'  	358'  	359'  	362'  	363'  	365'  	366'  	372'  	373'  	375'  	376'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance)' new[] {  	111'  	112'  	113'  	114'  	152'  	153'  	155'  	156'  	158'  	159'  	172'  	173'  	175'  	176'  	211'  	212'  	213'  	214'  	252'  	253'  	255'  	256'  	258'  	259'  	272'  	273'  	275'  	276'  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	311'  	312'  	313'  	314'  	352'  	353'  	355'  	356'  	358'  	359'  	372'  	373'  	375'  	376'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static)' new[] {  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetMethods (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	121'  	122'  	123'  	124'  	162'  	163'  	165'  	166'  	182'  	183'  	185'  	186'  	221'  	222'  	223'  	224'  	262'  	263'  	265'  	266'  	282'  	283'  	285'  	286'  	321'  	322'  	323'  	324'  	362'  	363'  	365'  	366'  	382'  	383'  	385'  	386'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("MB")' 112);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("MD")' 312);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M")' 311);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetMethod ("get_PD1")' 352);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetMethod ("set_PD1")' 353);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetMethod ("add_ED1")' 372);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetMethod ("remove_ED1")' 373);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("MB"' BindingFlags.Public | BindingFlags.Instance)' 112);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("MDS"' BindingFlags.Public | BindingFlags.Static)' 322);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("MBS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 122);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M"' BindingFlags.Public | BindingFlags.Instance)' 311);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("MS"' BindingFlags.Public | BindingFlags.Static)' 321);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("MS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 321);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetMethod ("get_PD1"' BindingFlags.Public | BindingFlags.Instance)' 352);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetMethod ("set_PD1"' BindingFlags.Public | BindingFlags.Instance)' 353);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetMethod ("add_ED1"' BindingFlags.Public | BindingFlags.Instance)' 372);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetMethod ("remove_ED1"' BindingFlags.Public | BindingFlags.Instance)' 373);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetMethod ("get_PDS1"' BindingFlags.Public | BindingFlags.Static)' 362);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetMethod ("set_PDS1"' BindingFlags.Public | BindingFlags.Static)' 363);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetMethod ("add_EDS1"' BindingFlags.Public | BindingFlags.Static)' 382);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D1).GetMethod ("remove_EDS1"' BindingFlags.Public | BindingFlags.Static)' 383);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("MD"' new Type[0])' 312);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M2D"' new[] {  	typeof(int)  })' 315);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M2D"' new[] {  	typeof(string)  })' 316);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M3"' new[] {  	typeof(int)  })' 117);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M3"' new[] {  	typeof(string)  })' 217);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M3"' new[] {  	typeof(DateTime)  })' 317);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M3S"' new[] {  	typeof(DateTime)  })' 327);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("MD"' BindingFlags.Public | BindingFlags.Instance' new Type[0])' 312);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M2D"' BindingFlags.Public | BindingFlags.Instance' new[] {  	typeof(int)  })' 315);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M3"' BindingFlags.Public | BindingFlags.Instance' new[] {  	typeof(int)  })' 117);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M3"' BindingFlags.Public | BindingFlags.Instance' new[] {  	typeof(string)  })' 217);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M3"' BindingFlags.Public | BindingFlags.Instance' new[] {  	typeof(DateTime)  })' 317);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M3"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly' new[] {  	typeof(DateTime)  })' 317);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M3S"' BindingFlags.Public | BindingFlags.Static' new[] {  	typeof(DateTime)  })' 327);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M3S"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy' new[] {  	typeof(string)  })' 227);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetMethod ("M3S"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy' new[] {  	typeof(DateTime)  })' 327);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties ()' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties ()' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties ()' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties ()' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties ()' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties ()' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties ()' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties ()' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties ()' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties ()' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties ()' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	151'  	154'  	157'  	161'  	164'  	251'  	254'  	257'  	261'  	264'  	351'  	354'  	357'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Instance)' new[] {  	151'  	154'  	157'  	251'  	254'  	257'  	351'  	354'  	357'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	351'  	354'  	357'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	351'  	354'  	357'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	351'  	354'  	357'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static)' new[] {  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static)' new[] {  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	161'  	164'  	261'  	264'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	161'  	164'  	261'  	264'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	161'  	164'  	261'  	264'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	161'  	164'  	261'  	264'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	161'  	164'  	261'  	264'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertiesWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetProperties (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	161'  	164'  	261'  	264'  	361'  	364'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("PB")' 152);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("PD")' 352);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("P")' 351);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("PB"' BindingFlags.Public | BindingFlags.Instance)' 152);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("PDS"' BindingFlags.Public | BindingFlags.Static)' 362);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("PBS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 162);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("P"' BindingFlags.Public | BindingFlags.Instance)' 351);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("PS"' BindingFlags.Public | BindingFlags.Static)' 361);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("PS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 361);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("PD"' new Type[0])' 352);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("Item"' new[] {  	typeof(string)  })' 154);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("Item"' new[] {  	typeof(double)  })' 254);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("Item"' new[] {  	typeof(DateTime)  })' 354);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("Item"' new[] {  	typeof(int)  })' 353);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("PD"' BindingFlags.Public | BindingFlags.Instance' new Type[0])' 352);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("Item"' BindingFlags.Public | BindingFlags.Instance' new[] {  	typeof(string)  })' 154);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("Item"' BindingFlags.Public | BindingFlags.Instance' new[] {  	typeof(double)  })' 254);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("Item"' BindingFlags.Public | BindingFlags.Instance' new[] {  	typeof(DateTime)  })' 354);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("Item"' BindingFlags.Public | BindingFlags.Instance' new[] {  	typeof(int)  })' 353);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("Item"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly' new[] {  	typeof(DateTime)  })' 354);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetPropertyWithNameAndArgumentTypesAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetProperty ("Item"' BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly' new[] {  	typeof(int)  })' 353);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields ()' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields ()' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields ()' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields ()' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields ()' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields ()' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields ()' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields ()' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	131'  	132'  	141'  	142'  	231'  	232'  	241'  	242'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	131'  	132'  	141'  	142'  	231'  	232'  	241'  	242'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	131'  	132'  	141'  	142'  	231'  	232'  	241'  	242'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	131'  	132'  	141'  	142'  	231'  	232'  	241'  	242'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	131'  	132'  	141'  	142'  	231'  	232'  	241'  	242'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	131'  	132'  	141'  	142'  	231'  	232'  	241'  	242'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	131'  	132'  	141'  	142'  	231'  	232'  	241'  	242'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	131'  	132'  	141'  	142'  	231'  	232'  	241'  	242'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	131'  	132'  	141'  	142'  	231'  	232'  	241'  	242'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	131'  	132'  	141'  	142'  	231'  	232'  	241'  	242'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	131'  	132'  	141'  	142'  	231'  	232'  	241'  	242'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	131'  	132'  	141'  	142'  	231'  	232'  	241'  	242'  	331'  	332'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Instance)' new[] {  	131'  	132'  	231'  	232'  	331'  	332'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	331'  	332'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	331'  	332'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static)' new[] {  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static)' new[] {  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	141'  	142'  	241'  	242'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	141'  	142'  	241'  	242'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	141'  	142'  	241'  	242'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	141'  	142'  	241'  	242'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	141'  	142'  	241'  	242'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetFields (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	141'  	142'  	241'  	242'  	341'  	342'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetField ("FB")' 132);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetField ("FD")' 332);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetField ("F")' 331);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetField ("FB"' BindingFlags.Public | BindingFlags.Instance)' 132);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetField ("FDS"' BindingFlags.Public | BindingFlags.Static)' 342);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetField ("FBS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 142);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetField ("F"' BindingFlags.Public | BindingFlags.Instance)' 331);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetField ("FS"' BindingFlags.Public | BindingFlags.Static)' 341);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetFieldWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetField ("FS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 341);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents ()' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents ()' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents ()' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents ()' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents ()' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents ()' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents ()' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithoutBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents ()' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	171'  	174'  	181'  	184'  	271'  	274'  	281'  	284'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	171'  	174'  	181'  	184'  	271'  	274'  	281'  	284'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	171'  	174'  	181'  	184'  	271'  	274'  	281'  	284'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	171'  	174'  	181'  	184'  	271'  	274'  	281'  	284'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	171'  	174'  	181'  	184'  	271'  	274'  	281'  	284'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	171'  	174'  	181'  	184'  	271'  	274'  	281'  	284'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	171'  	174'  	181'  	184'  	271'  	274'  	281'  	284'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	171'  	174'  	181'  	184'  	271'  	274'  	281'  	284'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	171'  	174'  	181'  	184'  	271'  	274'  	281'  	284'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	171'  	174'  	181'  	184'  	271'  	274'  	281'  	284'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	171'  	174'  	181'  	184'  	271'  	274'  	281'  	284'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.Instance | BindingFlags.FlattenHierarchy)' new[] {  	171'  	174'  	181'  	184'  	271'  	274'  	281'  	284'  	371'  	374'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Instance)' new[] {  	171'  	174'  	271'  	274'  	371'  	374'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	371'  	374'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)' new[] {  	371'  	374'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static)' new[] {  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static)' new[] {  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	181'  	184'  	281'  	284'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	181'  	184'  	281'  	284'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	181'  	184'  	281'  	284'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	181'  	184'  	281'  	284'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	181'  	184'  	281'  	284'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventsWithBindingFlagsWorks,The following statement contains a magic number: AssertEquivalent (typeof(D1).GetEvents (BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' new[] {  	181'  	184'  	281'  	284'  	381'  	384'  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetEvent ("EB")' 172);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetEvent ("ED")' 372);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventWithNameWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetEvent ("E")' 371);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetEvent ("EB"' BindingFlags.Public | BindingFlags.Instance)' 172);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetEvent ("EDS"' BindingFlags.Public | BindingFlags.Static)' 382);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetEvent ("EBS"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 182);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetEvent ("E"' BindingFlags.Public | BindingFlags.Instance)' 371);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetEvent ("ES"' BindingFlags.Public | BindingFlags.Static)' 381);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetEventWithNameAndBindingFlagsWorks,The following statement contains a magic number: AssertEqual (typeof(D2).GetEvent ("ES"' BindingFlags.Public | BindingFlags.Static | BindingFlags.FlattenHierarchy)' 381);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,GetMembersReturnsMethodsWithAnyScriptableAttributeOrReflectableAttribute,The following statement contains a magic number: Assert.AreEqual (2' methods.Length' "Should be two methods");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,StructMemberReflectionWorks,The following statement contains a magic number: Assert.AreEqual (2' methods.Length' "Should be two methods");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,MethodNameIsTheCSharpName,The following statement contains a magic number: Assert.AreEqual (3' members.Filter (m => m.Name == "M").Length' "All methods should have name M");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,IsGenericMethodDefinitionAndTypeParameterCountWork,The following statement contains a magic number: Assert.AreEqual (2' typeof(C6).GetMethod ("M1").TypeParameterCount' "M1 should have 2 type parameters");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,CreateDelegateWorksForGenericInstanceMethods,The following statement contains a magic number: Assert.Throws (() => m.CreateDelegate (c' new Type[3])' "3 type arguments with target should throw");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,CreateDelegateWorksForGenericStaticMethods,The following statement contains a magic number: Assert.Throws (() => m.CreateDelegate ((object)null' new Type[3])' "3 type arguments without target should throw");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForNonGenericInstanceMethodsOnSerializableTypes,The following statement contains a magic number: Assert.AreEqual (27' m.Invoke (new C7 {  	x = 13  }' 14)' "Invoke should work");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForNonGenericInstanceMethodsOnSerializableTypes,The following statement contains a magic number: Assert.AreEqual (27' m.Invoke (new C7 {  	x = 13  }' 14)' "Invoke should work");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForNonGenericInstanceMethodsOnSerializableTypes,The following statement contains a magic number: Assert.AreEqual (27' m.Invoke (new C7 {  	x = 13  }' 14)' "Invoke should work");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForNonGenericInlineCodeMethods,The following statement contains a magic number: Assert.AreEqual (45' typeof(C21).GetMethod ("M1").Invoke (new C21 (14)' 15' 16)' "Instance invoke should work");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForNonGenericInlineCodeMethods,The following statement contains a magic number: Assert.AreEqual (45' typeof(C21).GetMethod ("M1").Invoke (new C21 (14)' 15' 16)' "Instance invoke should work");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForNonGenericInlineCodeMethods,The following statement contains a magic number: Assert.AreEqual (45' typeof(C21).GetMethod ("M1").Invoke (new C21 (14)' 15' 16)' "Instance invoke should work");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForNonGenericInlineCodeMethods,The following statement contains a magic number: Assert.AreEqual (45' typeof(C21).GetMethod ("M1").Invoke (new C21 (14)' 15' 16)' "Instance invoke should work");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForNonGenericInlineCodeMethods,The following statement contains a magic number: Assert.AreEqual (31' typeof(C21).GetMethod ("M2").Invoke (null' 15' 16)' "Static invoke should work");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForNonGenericInlineCodeMethods,The following statement contains a magic number: Assert.AreEqual (31' typeof(C21).GetMethod ("M2").Invoke (null' 15' 16)' "Static invoke should work");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForNonGenericInlineCodeMethods,The following statement contains a magic number: Assert.AreEqual (31' typeof(C21).GetMethod ("M2").Invoke (null' 15' 16)' "Static invoke should work");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForGenericInlineCodeMethods,The following statement contains a magic number: Assert.AreEqual ("42StringWorld"' m.Invoke (new C21 (42)' new[] {  	typeof(string)  }' "World")' "Invoke should work");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForGenericInstanceMethod,The following statement contains a magic number: Assert.Throws (() => m.Invoke (c' new Type[3]' "a")' "3 type arguments with target should throw");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForGenericStaticMethod,The following statement contains a magic number: Assert.Throws (() => m.Invoke (null' new Type[3]' "a")' "3 type arguments without target should throw");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForGenericInstanceMethodsOnSerializableTypes,The following statement contains a magic number: Assert.AreEqual ("13 System.Int32 String Suffix"' m.Invoke (new C7 {  	x = 13  }' new[] {  	typeof(int)'  	typeof(string)  }' "Suffix")' "Invoke should work");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForExpandParamsMethods,The following statement contains a magic number: Assert.AreEqual (new object[] {  	2'  	new[] {  		17'  		31  	}  }' r1);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForExpandParamsMethods,The following statement contains a magic number: Assert.AreEqual (new object[] {  	2'  	new[] {  		17'  		31  	}  }' r1);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForExpandParamsMethods,The following statement contains a magic number: Assert.AreEqual (new object[] {  	2'  	new[] {  		17'  		31  	}  }' r1);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForExpandParamsMethods,The following statement contains a magic number: Assert.AreEqual (new object[] {  	2'  	new[] {  		17'  		32  	}  }' r2);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForExpandParamsMethods,The following statement contains a magic number: Assert.AreEqual (new object[] {  	2'  	new[] {  		17'  		32  	}  }' r2);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForExpandParamsMethods,The following statement contains a magic number: Assert.AreEqual (new object[] {  	2'  	new[] {  		17'  		32  	}  }' r2);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForAllKindsOfConstructors,The following statement contains a magic number: Assert.AreEqual (42' o1.X' "o1.X");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForAllKindsOfConstructors,The following statement contains a magic number: Assert.AreEqual (14' o2.X' "o2.X");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForAllKindsOfConstructors,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 1' 2)' o3.D' "o3.D");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForAllKindsOfConstructors,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 1' 2)' o3.D' "o3.D");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForAllKindsOfConstructors,The following statement contains a magic number: Assert.AreDeepEqual (Script.ToPlainObject (new {  	a = 42'  	b = "Hello"  })' o4);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,InvokeWorksForAllKindsOfConstructors,The following statement contains a magic number: Assert.AreDeepEqual (Script.ToPlainObject (new {  	A = 42'  	B = "Hello"  })' o5);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,GetValueWorksForInstanceField,The following statement contains a magic number: Assert.AreEqual (42' typeof(C12).GetField ("F1").GetValue (c));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,SetValueWorksForInstanceField,The following statement contains a magic number: typeof(C12).GetField ("F1").SetValue (c' 14);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,SetValueWorksForInstanceField,The following statement contains a magic number: Assert.AreEqual (14' c.F1);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForGetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: Assert.AreEqual (78' p1' "m1.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForGetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: C14.P3 = new DateTime (2012' 4' 2);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForGetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: C14.P3 = new DateTime (2012' 4' 2);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForGetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: C14.P3 = new DateTime (2012' 4' 2);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForGetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 4' 2)' p2' "m2.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForGetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 4' 2)' p2' "m2.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForGetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 4' 2)' p2' "m2.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForGetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: c = new C14 () {  	p13Field = 13  };  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForGetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: Assert.AreEqual (13' p3' "m3.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForGetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: C14.p14Field = 124;  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForGetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: Assert.AreEqual (124' p4' "m4.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: m1.Invoke (c' 42);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: Assert.AreEqual (42' c.P1' "m1.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: C14.P3 = new DateTime (2010' 1' 1);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: m2.Invoke (null' new DateTime (2012' 2' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: m2.Invoke (null' new DateTime (2012' 2' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: m2.Invoke (null' new DateTime (2012' 2' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 2' 3)' C14.P3' "m2.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 2' 3)' C14.P3' "m2.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 2' 3)' C14.P3' "m2.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: m3.Invoke (c' 422);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: Assert.AreEqual (422' c.p13Field' "m3.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: C14.p14Field = 11;  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: m4.Invoke (null' 52);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsGetAndSetMethods,The following statement contains a magic number: Assert.AreEqual (52' C14.p14Field' "m4.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForGetMethodAreCorrectForPropertyImplementedAsFields,The following statement contains a magic number: C14.P4 = 3.5;  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForGetMethodAreCorrectForPropertyImplementedAsFields,The following statement contains a magic number: Assert.AreEqual (3.5' p2' "m2.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsFields,The following statement contains a magic number: C14.P4 = 7.5;  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsFields,The following statement contains a magic number: m2.Invoke (null' 2.5);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForPropertyImplementedAsFields,The following statement contains a magic number: Assert.AreEqual (2.5' C14.P4' "m2.Invoke");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForIndexer,The following statement contains a magic number: m1.Invoke (c1' 42' "Hello"' "The_value");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForIndexer,The following statement contains a magic number: Assert.AreEqual (42' c1.x' "m1.Invoke (x)");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForIndexer,The following statement contains a magic number: m2.Invoke (c2' 234' "World"' "Other_value");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertiesForSetMethodAreCorrectForIndexer,The following statement contains a magic number: Assert.AreEqual (234' c2.x' "m2.Invoke (x)");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoGetValueWorks,The following statement contains a magic number: C14.P3 = new DateTime (2013' 3' 5);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoGetValueWorks,The following statement contains a magic number: C14.P3 = new DateTime (2013' 3' 5);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoGetValueWorks,The following statement contains a magic number: C14.P3 = new DateTime (2013' 3' 5);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoGetValueWorks,The following statement contains a magic number: C14.P4 = 7.5;  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoGetValueWorks,The following statement contains a magic number: Assert.AreEqual (42' p1.GetValue (c14)' "P1.GetValue");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoGetValueWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2013' 3' 5)' p3.GetValue (null)' "P3.GetValue");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoGetValueWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2013' 3' 5)' p3.GetValue (null)' "P3.GetValue");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoGetValueWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2013' 3' 5)' p3.GetValue (null)' "P3.GetValue");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoGetValueWorks,The following statement contains a magic number: Assert.AreEqual (7.5' p4.GetValue (null)' "P4.GetValue");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoGetValueWorks,The following statement contains a magic number: Assert.AreEqual ("X 42 Hello"' i.GetValue (c15' new object[] {  	42'  	"Hello"  })' "Item.GetValue");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoSetValueWorks,The following statement contains a magic number: p1.SetValue (c14' 42);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoSetValueWorks,The following statement contains a magic number: p3.SetValue (null' new DateTime (2013' 3' 5));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoSetValueWorks,The following statement contains a magic number: p3.SetValue (null' new DateTime (2013' 3' 5));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoSetValueWorks,The following statement contains a magic number: p3.SetValue (null' new DateTime (2013' 3' 5));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoSetValueWorks,The following statement contains a magic number: p4.SetValue (null' 7.5);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoSetValueWorks,The following statement contains a magic number: Assert.AreEqual (42' c14.P1' "P1.SetValue");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoSetValueWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2013' 3' 5)' C14.P3' "P3.SetValue");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoSetValueWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2013' 3' 5)' C14.P3' "P3.SetValue");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoSetValueWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2013' 3' 5)' C14.P3' "P3.SetValue");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoSetValueWorks,The following statement contains a magic number: Assert.AreEqual (7.5' C14.P4' "P4.SetValue");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoSetValueWorks,The following statement contains a magic number: i.SetValue (c15' "The_value"' new object[] {  	378'  	"X"  });  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,PropertyInfoSetValueWorks,The following statement contains a magic number: Assert.AreEqual (378' c15.x' "Item.SetValue.x");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,TestMemberAttribute,The following statement contains a magic number: Assert.AreEqual (2' all.Length);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,TestMemberAttribute,The following statement contains a magic number: Assert.AreEqual (2' all.Length);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,MemberAttributesWork,The following statement contains a magic number: TestMemberAttribute (typeof(C18).GetMethod ("M")' 2);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,MemberAttributesWork,The following statement contains a magic number: TestMemberAttribute (typeof(C18).GetField ("F")' 3);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,MemberAttributesWork,The following statement contains a magic number: TestMemberAttribute (typeof(C18).GetProperty ("P")' 4);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,MemberAttributesWork,The following statement contains a magic number: TestMemberAttribute (typeof(C18).GetProperty ("P").GetMethod' 5);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,MemberAttributesWork,The following statement contains a magic number: TestMemberAttribute (typeof(C18).GetProperty ("P").SetMethod' 6);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,MemberAttributesWork,The following statement contains a magic number: TestMemberAttribute (typeof(C18).GetEvent ("E")' 7);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,MemberAttributesWork,The following statement contains a magic number: TestMemberAttribute (typeof(C18).GetEvent ("E").AddMethod' 8);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,ReflectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\ReflectionTests.cs,MemberAttributesWork,The following statement contains a magic number: TestMemberAttribute (typeof(C18).GetEvent ("E").RemoveMethod' 9);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemLanguageSupportTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemLanguageSupportTests.cs,CanConvert,The following statement contains a magic number: try {  	#pragma  	/// The variable `x' is assigned but its value is never used  	var x = (T)arg;  	#pragma  	return true;  }  catch {  	return false;  }  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemLanguageSupportTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemLanguageSupportTests.cs,CanConvert,The following statement contains a magic number: try {  	#pragma  	/// The variable `x' is assigned but its value is never used  	var x = (T)arg;  	#pragma  	return true;  }  catch {  	return false;  }  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemLanguageSupportTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemLanguageSupportTests.cs,GetTypeWorksOnObjects,The following statement contains a magic number: Assert.AreEqual ("Array"' new[] {  	1'  	2  }.GetType ().FullName);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,GettingImplementedInterfacesWorks,The following statement contains a magic number: Assert.AreEqual (4' ifs.Length);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,GenericParameterCountReturnsZeroForConstructedTypesAndNonZeroForOpenOnes,The following statement contains a magic number: Assert.AreEqual (2' typeof(G<' >).GenericParameterCount);  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,InvokingBaseMethodWorks,The following statement contains a magic number: Assert.AreEqual (2' new BaseMethodInvocationTypes.D ().DoIt (5' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,InvokingBaseMethodWorks,The following statement contains a magic number: Assert.AreEqual (2' new BaseMethodInvocationTypes.D ().DoIt (5' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,InvokingBaseMethodWorks,The following statement contains a magic number: Assert.AreEqual (2' new BaseMethodInvocationTypes.D ().DoIt (5' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,InvokingGenericBaseMethodWorks,The following statement contains a magic number: Assert.AreEqual (2' new BaseMethodInvocationTypes.D ().DoItGeneric (5' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,InvokingGenericBaseMethodWorks,The following statement contains a magic number: Assert.AreEqual (2' new BaseMethodInvocationTypes.D ().DoItGeneric (5' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,InvokingGenericBaseMethodWorks,The following statement contains a magic number: Assert.AreEqual (2' new BaseMethodInvocationTypes.D ().DoItGeneric (5' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,MethodGroupConversionWorks,The following statement contains a magic number: Assert.AreEqual (12' f (5' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,MethodGroupConversionWorks,The following statement contains a magic number: Assert.AreEqual (12' f (5' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,MethodGroupConversionWorks,The following statement contains a magic number: Assert.AreEqual (12' f (5' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,MethodGroupConversionOnGenericMethodWorks,The following statement contains a magic number: Assert.AreEqual ("12String"' f (5' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,MethodGroupConversionOnGenericMethodWorks,The following statement contains a magic number: Assert.AreEqual ("12String"' f (5' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,MethodGroupConversionOnBaseMethodWorks,The following statement contains a magic number: Assert.AreEqual (12' f (3' 5));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,MethodGroupConversionOnBaseMethodWorks,The following statement contains a magic number: Assert.AreEqual (12' f (3' 5));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,MethodGroupConversionOnBaseMethodWorks,The following statement contains a magic number: Assert.AreEqual (12' f (3' 5));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,MethodGroupConversionOnGenericBaseMethodWorks,The following statement contains a magic number: Assert.AreEqual ("12String"' g (5' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,MethodGroupConversionOnGenericBaseMethodWorks,The following statement contains a magic number: Assert.AreEqual ("12String"' g (5' 3));  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,NonSerializableTypeCanInheritFromSerializableType,The following statement contains a magic number: Assert.AreEqual (42' d.X' "d.X");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,NonSerializableTypeCanInheritFromSerializableType,The following statement contains a magic number: Assert.AreEqual (42' d.GetX ()' "d.GetX");  
Magic Number,Bridge.ClientTest.Batch4.Reflection,TypeSystemTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\TypeSystemTests.cs,InheritingFromRecordWorks,The following statement contains a magic number: Assert.AreEqual (42' c.X);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,ArrayBufferTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\ArrayBufferTests.cs,ConstructorWorks,The following statement contains a magic number: Assert.AreEqual (14' buf.ByteLength' "ByteLength");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,ArrayBufferTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\ArrayBufferTests.cs,ByteLengthPropertyWorks,The following statement contains a magic number: Assert.AreEqual (10' buf.ByteLength' "ByteLength");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,ArrayBufferOnlyConstructorWorks,The following statement contains a magic number: Assert.AreEqual (3' view.GetInt8 (1)' "StartIndex should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,ArrayBufferAndByteOffsetConstructorWorks,The following statement contains a magic number: Assert.AreEqual (5' view.GetInt8 (1)' "StartIndex should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,ArrayBufferAndByteOffsetAndByteLengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (5' view.GetInt8 (1)' "StartIndex should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,ArrayBufferAndByteOffsetAndByteLengthConstructorWorks,The following statement contains a magic number: Assert.Throws (() => view.GetInt8 (4)' "Length should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt8Works,The following statement contains a magic number: Assert.AreEqual (3' b.GetInt8 (0)' "0");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt8Works,The following statement contains a magic number: Assert.AreEqual (-3' b.GetInt8 (1)' "1");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint8Works,The following statement contains a magic number: Assert.AreEqual (3' b.GetUint8 (0)' "0");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (-765' b.GetInt16 (0' true)' "0' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (1027' b.GetInt16 (2' true)' "2' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (1027' b.GetInt16 (2' true)' "2' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (1021' b.GetInt16 (4' true)' "4' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (1021' b.GetInt16 (4' true)' "4' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (1021' b.GetInt16 (0' false)' "0' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (772' b.GetInt16 (2' false)' "2' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (772' b.GetInt16 (2' false)' "2' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (-765' b.GetInt16 (4' false)' "4' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (-765' b.GetInt16 (4' false)' "4' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (1021' b.GetInt16 (0)' "0' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (772' b.GetInt16 (2)' "2' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (772' b.GetInt16 (2)' "2' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (-765' b.GetInt16 (4)' "4' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt16Works,The following statement contains a magic number: Assert.AreEqual (-765' b.GetInt16 (4)' "4' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (64771' b.GetUint16 (0' true)' "0' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (1027' b.GetUint16 (2' true)' "2' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (1027' b.GetUint16 (2' true)' "2' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (1021' b.GetUint16 (4' true)' "4' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (1021' b.GetUint16 (4' true)' "4' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (1021' b.GetUint16 (0' false)' "0' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (772' b.GetUint16 (2' false)' "2' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (772' b.GetUint16 (2' false)' "2' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (64771' b.GetUint16 (4' false)' "4' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (64771' b.GetUint16 (4' false)' "4' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (1021' b.GetUint16 (0)' "0' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (772' b.GetUint16 (2)' "2' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (772' b.GetUint16 (2)' "2' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (64771' b.GetUint16 (4)' "4' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint16Works,The following statement contains a magic number: Assert.AreEqual (64771' b.GetUint16 (4)' "4' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (-50331645' b.GetInt32 (0' true)' "0' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (67108867' b.GetInt32 (4' true)' "4' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (67108867' b.GetInt32 (4' true)' "4' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (50331901' b.GetInt32 (8' true)' "8' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (50331901' b.GetInt32 (8' true)' "8' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (50331901' b.GetInt32 (0' false)' "0' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (50331652' b.GetInt32 (4' false)' "4' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (50331652' b.GetInt32 (4' false)' "4' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (-50331645' b.GetInt32 (8' false)' "8' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (-50331645' b.GetInt32 (8' false)' "8' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (50331901' b.GetInt32 (0)' "0' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (50331652' b.GetInt32 (4)' "4' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (50331652' b.GetInt32 (4)' "4' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (-50331645' b.GetInt32 (8)' "8' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetInt32Works,The following statement contains a magic number: Assert.AreEqual (-50331645' b.GetInt32 (8)' "8' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (4244635651' b.GetUint32 (0' true)' "0' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (67108867' b.GetUint32 (4' true)' "4' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (67108867' b.GetUint32 (4' true)' "4' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (50331901' b.GetUint32 (8' true)' "8' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (50331901' b.GetUint32 (8' true)' "8' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (50331901' b.GetUint32 (0' false)' "0' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (50331652' b.GetUint32 (4' false)' "4' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (50331652' b.GetUint32 (4' false)' "4' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (4244635651' b.GetUint32 (8' false)' "8' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (4244635651' b.GetUint32 (8' false)' "8' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (50331901' b.GetUint32 (0)' "0' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (50331652' b.GetUint32 (4)' "4' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (50331652' b.GetUint32 (4)' "4' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (4244635651' b.GetUint32 (8)' "8' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetUint32Works,The following statement contains a magic number: Assert.AreEqual (4244635651' b.GetUint32 (8)' "8' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetFloat32Works,The following statement contains a magic number: Assert.AreEqual (1.5' b.GetFloat32 (4' true)' "4' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetFloat32Works,The following statement contains a magic number: Assert.AreEqual (1.5' b.GetFloat32 (4' true)' "4' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetFloat32Works,The following statement contains a magic number: Assert.AreEqual (1.5' b.GetFloat32 (8' false)' "8' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetFloat32Works,The following statement contains a magic number: Assert.AreEqual (1.5' b.GetFloat32 (8' false)' "8' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetFloat32Works,The following statement contains a magic number: Assert.AreEqual (1.5' b.GetFloat32 (8)' "8' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetFloat32Works,The following statement contains a magic number: Assert.AreEqual (1.5' b.GetFloat32 (8)' "8' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetFloat64Works,The following statement contains a magic number: Assert.AreEqual (1.5' b.GetFloat64 (8' true)' "8' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetFloat64Works,The following statement contains a magic number: Assert.AreEqual (1.5' b.GetFloat64 (8' true)' "8' true");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetFloat64Works,The following statement contains a magic number: Assert.AreEqual (1.5' b.GetFloat64 (16' false)' "16' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetFloat64Works,The following statement contains a magic number: Assert.AreEqual (1.5' b.GetFloat64 (16' false)' "16' false");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetFloat64Works,The following statement contains a magic number: Assert.AreEqual (1.5' b.GetFloat64 (16)' "16' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,GetFloat64Works,The following statement contains a magic number: Assert.AreEqual (1.5' b.GetFloat64 (16)' "16' default");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt8Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt8 (1' 14);  	v.SetInt8 (2' -14);  }' new byte[] {  	0'  	14'  	242  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt8Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt8 (1' 14);  	v.SetInt8 (2' -14);  }' new byte[] {  	0'  	14'  	242  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt8Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt8 (1' 14);  	v.SetInt8 (2' -14);  }' new byte[] {  	0'  	14'  	242  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt8Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt8 (1' 14);  	v.SetInt8 (2' -14);  }' new byte[] {  	0'  	14'  	242  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt8Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt8 (1' 14);  	v.SetInt8 (2' -14);  }' new byte[] {  	0'  	14'  	242  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt8Works,The following statement contains a magic number: v.SetInt8 (1' 14);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt8Works,The following statement contains a magic number: v.SetInt8 (2' -14);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt8Works,The following statement contains a magic number: v.SetInt8 (2' -14);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint8Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint8 (1' 14);  	v.SetUint8 (2' 242);  }' new byte[] {  	0'  	14'  	242  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint8Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint8 (1' 14);  	v.SetUint8 (2' 242);  }' new byte[] {  	0'  	14'  	242  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint8Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint8 (1' 14);  	v.SetUint8 (2' 242);  }' new byte[] {  	0'  	14'  	242  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint8Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint8 (1' 14);  	v.SetUint8 (2' 242);  }' new byte[] {  	0'  	14'  	242  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint8Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint8 (1' 14);  	v.SetUint8 (2' 242);  }' new byte[] {  	0'  	14'  	242  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint8Works,The following statement contains a magic number: v.SetUint8 (1' 14);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint8Works,The following statement contains a magic number: v.SetUint8 (2' 242);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint8Works,The following statement contains a magic number: v.SetUint8 (2' 242);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt16 (2' -4' false);  	v.SetInt16 (4' -4' true);  	v.SetInt16 (6' -4);  	v.SetInt16 (8' 14' false);  	v.SetInt16 (10' 14' true);  	v.SetInt16 (12' 14);  }' new byte[] {  	0'  	0'  	255'  	252'  	252'  	255'  	255'  	252'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: v.SetInt16 (2' -4' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: v.SetInt16 (2' -4' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: v.SetInt16 (4' -4' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: v.SetInt16 (4' -4' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: v.SetInt16 (6' -4);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: v.SetInt16 (6' -4);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: v.SetInt16 (8' 14' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: v.SetInt16 (8' 14' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: v.SetInt16 (10' 14' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: v.SetInt16 (10' 14' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: v.SetInt16 (12' 14);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt16Works,The following statement contains a magic number: v.SetInt16 (12' 14);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint16 (2' 35875' false);  	v.SetUint16 (4' 35875' true);  	v.SetUint16 (6' 35875);  	v.SetUint16 (8' 14' false);  	v.SetUint16 (10' 14' true);  	v.SetUint16 (12' 14);  }' new byte[] {  	0'  	0'  	140'  	35'  	35'  	140'  	140'  	35'  	0'  	14'  	14'  	0'  	0'  	14'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: v.SetUint16 (2' 35875' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: v.SetUint16 (2' 35875' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: v.SetUint16 (4' 35875' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: v.SetUint16 (4' 35875' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: v.SetUint16 (6' 35875);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: v.SetUint16 (6' 35875);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: v.SetUint16 (8' 14' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: v.SetUint16 (8' 14' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: v.SetUint16 (10' 14' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: v.SetUint16 (10' 14' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: v.SetUint16 (12' 14);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint16Works,The following statement contains a magic number: v.SetUint16 (12' 14);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetInt32 (4' -4' false);  	v.SetInt32 (8' -4' true);  	v.SetInt32 (12' -4);  	v.SetInt32 (16' 14' false);  	v.SetInt32 (20' 14' true);  	v.SetInt32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	255'  	255'  	255'  	252'  	252'  	255'  	255'  	255'  	255'  	255'  	255'  	252'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: v.SetInt32 (4' -4' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: v.SetInt32 (4' -4' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: v.SetInt32 (8' -4' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: v.SetInt32 (8' -4' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: v.SetInt32 (12' -4);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: v.SetInt32 (12' -4);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: v.SetInt32 (16' 14' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: v.SetInt32 (16' 14' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: v.SetInt32 (20' 14' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: v.SetInt32 (20' 14' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: v.SetInt32 (24' 14);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetInt32Works,The following statement contains a magic number: v.SetInt32 (24' 14);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetUint32 (4' 3487568527' false);  	v.SetUint32 (8' 3487568527' true);  	v.SetUint32 (12' 3487568527);  	v.SetUint32 (16' 14' false);  	v.SetUint32 (20' 14' true);  	v.SetUint32 (24' 14);  }' new byte[] {  	0'  	0'  	0'  	0'  	207'  	224'  	18'  	143'  	143'  	18'  	224'  	207'  	207'  	224'  	18'  	143'  	0'  	0'  	0'  	14'  	14'  	0'  	0'  	0'  	0'  	0'  	0'  	14'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: v.SetUint32 (4' 3487568527' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: v.SetUint32 (4' 3487568527' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: v.SetUint32 (8' 3487568527' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: v.SetUint32 (8' 3487568527' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: v.SetUint32 (12' 3487568527);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: v.SetUint32 (12' 3487568527);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: v.SetUint32 (16' 14' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: v.SetUint32 (16' 14' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: v.SetUint32 (20' 14' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: v.SetUint32 (20' 14' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: v.SetUint32 (24' 14);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetUint32Works,The following statement contains a magic number: v.SetUint32 (24' 14);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat32 (4' 1.5f' false);  	v.SetFloat32 (8' 1.5f' true);  	v.SetFloat32 (12' 1.5f);  }' new byte[] {  	0'  	0'  	0'  	0'  	63'  	192'  	0'  	0'  	0'  	0'  	192'  	63'  	63'  	192'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat32 (4' 1.5f' false);  	v.SetFloat32 (8' 1.5f' true);  	v.SetFloat32 (12' 1.5f);  }' new byte[] {  	0'  	0'  	0'  	0'  	63'  	192'  	0'  	0'  	0'  	0'  	192'  	63'  	63'  	192'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat32 (4' 1.5f' false);  	v.SetFloat32 (8' 1.5f' true);  	v.SetFloat32 (12' 1.5f);  }' new byte[] {  	0'  	0'  	0'  	0'  	63'  	192'  	0'  	0'  	0'  	0'  	192'  	63'  	63'  	192'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat32 (4' 1.5f' false);  	v.SetFloat32 (8' 1.5f' true);  	v.SetFloat32 (12' 1.5f);  }' new byte[] {  	0'  	0'  	0'  	0'  	63'  	192'  	0'  	0'  	0'  	0'  	192'  	63'  	63'  	192'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat32 (4' 1.5f' false);  	v.SetFloat32 (8' 1.5f' true);  	v.SetFloat32 (12' 1.5f);  }' new byte[] {  	0'  	0'  	0'  	0'  	63'  	192'  	0'  	0'  	0'  	0'  	192'  	63'  	63'  	192'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat32 (4' 1.5f' false);  	v.SetFloat32 (8' 1.5f' true);  	v.SetFloat32 (12' 1.5f);  }' new byte[] {  	0'  	0'  	0'  	0'  	63'  	192'  	0'  	0'  	0'  	0'  	192'  	63'  	63'  	192'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat32 (4' 1.5f' false);  	v.SetFloat32 (8' 1.5f' true);  	v.SetFloat32 (12' 1.5f);  }' new byte[] {  	0'  	0'  	0'  	0'  	63'  	192'  	0'  	0'  	0'  	0'  	192'  	63'  	63'  	192'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat32 (4' 1.5f' false);  	v.SetFloat32 (8' 1.5f' true);  	v.SetFloat32 (12' 1.5f);  }' new byte[] {  	0'  	0'  	0'  	0'  	63'  	192'  	0'  	0'  	0'  	0'  	192'  	63'  	63'  	192'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat32Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat32 (4' 1.5f' false);  	v.SetFloat32 (8' 1.5f' true);  	v.SetFloat32 (12' 1.5f);  }' new byte[] {  	0'  	0'  	0'  	0'  	63'  	192'  	0'  	0'  	0'  	0'  	192'  	63'  	63'  	192'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat32Works,The following statement contains a magic number: v.SetFloat32 (4' 1.5f' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat32Works,The following statement contains a magic number: v.SetFloat32 (8' 1.5f' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat32Works,The following statement contains a magic number: v.SetFloat32 (12' 1.5f);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat64 (8' 1.5' false);  	v.SetFloat64 (16' 1.5' true);  	v.SetFloat64 (24' 1.5);  }' new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	248'  	63'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat64 (8' 1.5' false);  	v.SetFloat64 (16' 1.5' true);  	v.SetFloat64 (24' 1.5);  }' new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	248'  	63'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat64 (8' 1.5' false);  	v.SetFloat64 (16' 1.5' true);  	v.SetFloat64 (24' 1.5);  }' new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	248'  	63'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat64 (8' 1.5' false);  	v.SetFloat64 (16' 1.5' true);  	v.SetFloat64 (24' 1.5);  }' new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	248'  	63'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat64 (8' 1.5' false);  	v.SetFloat64 (16' 1.5' true);  	v.SetFloat64 (24' 1.5);  }' new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	248'  	63'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat64 (8' 1.5' false);  	v.SetFloat64 (16' 1.5' true);  	v.SetFloat64 (24' 1.5);  }' new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	248'  	63'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat64 (8' 1.5' false);  	v.SetFloat64 (16' 1.5' true);  	v.SetFloat64 (24' 1.5);  }' new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	248'  	63'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat64 (8' 1.5' false);  	v.SetFloat64 (16' 1.5' true);  	v.SetFloat64 (24' 1.5);  }' new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	248'  	63'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat64 (8' 1.5' false);  	v.SetFloat64 (16' 1.5' true);  	v.SetFloat64 (24' 1.5);  }' new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	248'  	63'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat64 (8' 1.5' false);  	v.SetFloat64 (16' 1.5' true);  	v.SetFloat64 (24' 1.5);  }' new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	248'  	63'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat64 (8' 1.5' false);  	v.SetFloat64 (16' 1.5' true);  	v.SetFloat64 (24' 1.5);  }' new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	248'  	63'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: SetTest (v =>  {  	v.SetFloat64 (8' 1.5' false);  	v.SetFloat64 (16' 1.5' true);  	v.SetFloat64 (24' 1.5);  }' new byte[] {  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	0'  	248'  	63'  	63'  	248'  	0'  	0'  	0'  	0'  	0'  	0  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: v.SetFloat64 (8' 1.5' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: v.SetFloat64 (8' 1.5' false);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: v.SetFloat64 (16' 1.5' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: v.SetFloat64 (16' 1.5' true);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: v.SetFloat64 (24' 1.5);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,DataViewTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\DataViewTests.cs,SetFloat64Works,The following statement contains a magic number: v.SetFloat64 (24' 1.5);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,LengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ConstructorFromUint8ArrayWorks_SPI_TODO,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ConstructorFromUint8ArrayWorks_SPI_TODO,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ConstructorFromUint8ArrayWorks_SPI_TODO,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ArrayBufferConstructorWorks,The following statement contains a magic number: Assert.AreEqual (80' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ArrayBufferWithOffsetConstructorWorks,The following statement contains a magic number: Assert.AreEqual (64' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ArrayBufferWithOffsetAndLengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,LengthWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IndexingWorks,The following statement contains a magic number: arr [1] = 42;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IndexingWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	42'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IndexingWorks,The following statement contains a magic number: Assert.AreEqual (42' arr [1]' "[1]");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetUint8ClampedArrayWorks,The following statement contains a magic number: arr.Set (new Uint8ClampedArray (new byte[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetUint8ClampedArrayWorks,The following statement contains a magic number: arr.Set (new Uint8ClampedArray (new byte[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetUint8ClampedArrayWorks,The following statement contains a magic number: arr.Set (new Uint8ClampedArray (new byte[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetUint8ClampedArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetUint8ClampedArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetUint8ClampedArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetUint8ClampedArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint8ClampedArray (new byte[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetUint8ClampedArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint8ClampedArray (new byte[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetUint8ClampedArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint8ClampedArray (new byte[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetUint8ClampedArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint8ClampedArray (new byte[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetUint8ClampedArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetUint8ClampedArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetUint8ClampedArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SubarrayWithBeginWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (4' arr.Length' "Length should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ByteOffsetPropertyWorks,The following statement contains a magic number: Assert.AreEqual (32' arr.ByteOffset' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ByteLengthPropertyWorks,The following statement contains a magic number: Assert.AreEqual (23' arr.ByteLength' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ContainsWorks,The following statement contains a magic number: Assert.True (arr.Contains (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IEnumerableGetEnumeratorWorks_SPI_1560,The following statement contains a magic number: TestHelper.Safe (() =>  {  	var arr = (IEnumerable<byte>)new Uint8ClampedArray (new byte[] {  		3'  		6'  		2'  		9'  		5  	});  	var enm = arr.GetEnumerator ();  	while (enm.MoveNext ()) {  		l.Add (enm.Current);  	}  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IEnumerableGetEnumeratorWorks_SPI_1560,The following statement contains a magic number: TestHelper.Safe (() =>  {  	var arr = (IEnumerable<byte>)new Uint8ClampedArray (new byte[] {  		3'  		6'  		2'  		9'  		5  	});  	var enm = arr.GetEnumerator ();  	while (enm.MoveNext ()) {  		l.Add (enm.Current);  	}  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IEnumerableGetEnumeratorWorks_SPI_1560,The following statement contains a magic number: TestHelper.Safe (() =>  {  	var arr = (IEnumerable<byte>)new Uint8ClampedArray (new byte[] {  		3'  		6'  		2'  		9'  		5  	});  	var enm = arr.GetEnumerator ();  	while (enm.MoveNext ()) {  		l.Add (enm.Current);  	}  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IEnumerableGetEnumeratorWorks_SPI_1560,The following statement contains a magic number: TestHelper.Safe (() =>  {  	var arr = (IEnumerable<byte>)new Uint8ClampedArray (new byte[] {  		3'  		6'  		2'  		9'  		5  	});  	var enm = arr.GetEnumerator ();  	while (enm.MoveNext ()) {  		l.Add (enm.Current);  	}  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IEnumerableGetEnumeratorWorks_SPI_1560,The following statement contains a magic number: TestHelper.Safe (() =>  {  	var arr = (IEnumerable<byte>)new Uint8ClampedArray (new byte[] {  		3'  		6'  		2'  		9'  		5  	});  	var enm = arr.GetEnumerator ();  	while (enm.MoveNext ()) {  		l.Add (enm.Current);  	}  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IEnumerableGetEnumeratorWorks_SPI_1560,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IEnumerableGetEnumeratorWorks_SPI_1560,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IEnumerableGetEnumeratorWorks_SPI_1560,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IEnumerableGetEnumeratorWorks_SPI_1560,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IEnumerableGetEnumeratorWorks_SPI_1560,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ICollectionMethodsWork_SPI_1559_1560,The following statement contains a magic number: Assert.AreEqual (5' coll.Count' "Count");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ICollectionMethodsWork_SPI_1559_1560,The following statement contains a magic number: Assert.True (coll.Contains (6)' "Contains(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ICollectionMethodsWork_SPI_1559_1560,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Add (2)' "Add");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,ICollectionMethodsWork_SPI_1559_1560,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Remove (2)' "Remove");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IListMethodsWork_SPI_1559_1560,The following statement contains a magic number: Assert.AreEqual (1' list.IndexOf (6)' "IndexOf(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IListMethodsWork_SPI_1559_1560,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IListMethodsWork_SPI_1559_1560,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IListMethodsWork_SPI_1559_1560,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IListMethodsWork_SPI_1559_1560,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IListMethodsWork_SPI_1559_1560,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IListMethodsWork_SPI_1559_1560,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IListMethodsWork_SPI_1559_1560,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IListMethodsWork_SPI_1559_1560,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ClampedArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ClampedArrayTests.cs,IListMethodsWork_SPI_1559_1560,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.RemoveAt (2)' "RemoveAt");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,LengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ArrayBufferConstructorWorks,The following statement contains a magic number: Assert.AreEqual (10' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ArrayBufferWithOffsetConstructorWorks,The following statement contains a magic number: Assert.AreEqual (9' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ArrayBufferWithOffsetAndLengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (6' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,StaticBytesPerElementWorks,The following statement contains a magic number: Assert.AreEqual (8' Float64Array.BYTES_PER_ELEMENT);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,LengthWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IndexingWorks,The following statement contains a magic number: arr [1] = 42;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IndexingWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	42'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IndexingWorks,The following statement contains a magic number: Assert.AreEqual (42' arr [1]' "[1]");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetFloat64ArrayWorks,The following statement contains a magic number: arr.Set (new Float64Array (new double[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetFloat64ArrayWorks,The following statement contains a magic number: arr.Set (new Float64Array (new double[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetFloat64ArrayWorks,The following statement contains a magic number: arr.Set (new Float64Array (new double[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetFloat64ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetFloat64ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetFloat64ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetFloat64ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Float64Array (new double[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetFloat64ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Float64Array (new double[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetFloat64ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Float64Array (new double[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetFloat64ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Float64Array (new double[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetFloat64ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetFloat64ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetFloat64ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new double[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new double[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new double[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new double[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new double[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new double[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new double[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SubarrayWithBeginWorks,The following statement contains a magic number: Assert.AreEqual (24' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (24' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (4' arr.Length' "Length should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ByteOffsetPropertyWorks,The following statement contains a magic number: Assert.AreEqual (56' arr.ByteOffset' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ByteLengthPropertyWorks,The following statement contains a magic number: Assert.AreEqual (184' arr.ByteLength' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ContainsWorks,The following statement contains a magic number: Assert.True (arr.Contains (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (5' coll.Count' "Count");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.True (coll.Contains (6)' "Contains(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Add (2)' "Add");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Remove (2)' "Remove");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (1' list.IndexOf (6)' "IndexOf(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float64ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float64ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.RemoveAt (2)' "RemoveAt");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,LengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ArrayBufferConstructorWorks,The following statement contains a magic number: Assert.AreEqual (20' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ArrayBufferWithOffsetConstructorWorks,The following statement contains a magic number: Assert.AreEqual (16' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ArrayBufferWithOffsetAndLengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,StaticBytesPerElementWorks,The following statement contains a magic number: Assert.AreEqual (4' Float32Array.BYTES_PER_ELEMENT);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,LengthWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IndexingWorks,The following statement contains a magic number: arr [1] = 42;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IndexingWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	42'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IndexingWorks,The following statement contains a magic number: Assert.AreEqual (42' arr [1]' "[1]");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetFloat32ArrayWorks,The following statement contains a magic number: arr.Set (new Float32Array (new float[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetFloat32ArrayWorks,The following statement contains a magic number: arr.Set (new Float32Array (new float[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetFloat32ArrayWorks,The following statement contains a magic number: arr.Set (new Float32Array (new float[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetFloat32ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetFloat32ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetFloat32ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetFloat32ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Float32Array (new float[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetFloat32ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Float32Array (new float[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetFloat32ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Float32Array (new float[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetFloat32ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Float32Array (new float[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetFloat32ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetFloat32ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetFloat32ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new float[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new float[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new float[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new float[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new float[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new float[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new float[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SubarrayWithBeginWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (4' arr.Length' "Length should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ByteOffsetPropertyWorks,The following statement contains a magic number: Assert.AreEqual (32' arr.ByteOffset' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ByteLengthPropertyWorks,The following statement contains a magic number: Assert.AreEqual (92' arr.ByteLength' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ContainsWorks,The following statement contains a magic number: Assert.True (arr.Contains (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (5' coll.Count' "Count");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.True (coll.Contains (6)' "Contains(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Add (2)' "Add");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Remove (2)' "Remove");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (1' list.IndexOf (6)' "IndexOf(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Float32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Float32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.RemoveAt (2)' "RemoveAt");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,LengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ArrayBufferConstructorWorks,The following statement contains a magic number: Assert.AreEqual (40' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ArrayBufferWithOffsetConstructorWorks,The following statement contains a magic number: Assert.AreEqual (32' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ArrayBufferWithOffsetAndLengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,StaticBytesPerElementWorks,The following statement contains a magic number: Assert.AreEqual (2' Uint16Array.BYTES_PER_ELEMENT);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,LengthWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IndexingWorks,The following statement contains a magic number: arr [1] = 42;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IndexingWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	42'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IndexingWorks,The following statement contains a magic number: Assert.AreEqual (42' arr [1]' "[1]");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetUint16ArrayWorks,The following statement contains a magic number: arr.Set (new Uint16Array (new ushort[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetUint16ArrayWorks,The following statement contains a magic number: arr.Set (new Uint16Array (new ushort[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetUint16ArrayWorks,The following statement contains a magic number: arr.Set (new Uint16Array (new ushort[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetUint16ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetUint16ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetUint16ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetUint16ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint16Array (new ushort[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetUint16ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint16Array (new ushort[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetUint16ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint16Array (new ushort[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetUint16ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint16Array (new ushort[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetUint16ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetUint16ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetUint16ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new ushort[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new ushort[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new ushort[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new ushort[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new ushort[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new ushort[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new ushort[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SubarrayWithBeginWorks,The following statement contains a magic number: Assert.AreEqual (6' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (6' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (4' arr.Length' "Length should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ByteOffsetPropertyWorks,The following statement contains a magic number: Assert.AreEqual (32' arr.ByteOffset' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ByteLengthPropertyWorks,The following statement contains a magic number: Assert.AreEqual (46' arr.ByteLength' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ContainsWorks,The following statement contains a magic number: Assert.True (arr.Contains (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (5' coll.Count' "Count");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.True (coll.Contains (6)' "Contains(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Add (2)' "Add");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws (() => coll.Remove (2)' "Remove");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (1' list.IndexOf (6)' "IndexOf(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws (() => list.RemoveAt (2)' "RemoveAt");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,LengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ArrayBufferConstructorWorks,The following statement contains a magic number: Assert.AreEqual (20' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ArrayBufferWithOffsetConstructorWorks,The following statement contains a magic number: Assert.AreEqual (16' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ArrayBufferWithOffsetAndLengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,StaticBytesPerElementWorks,The following statement contains a magic number: Assert.AreEqual (4' Uint32Array.BYTES_PER_ELEMENT);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,LengthWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IndexingWorks,The following statement contains a magic number: arr [1] = 42;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IndexingWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	42'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IndexingWorks,The following statement contains a magic number: Assert.AreEqual (42' arr [1]' "[1]");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetUint32ArrayWorks,The following statement contains a magic number: arr.Set (new Uint32Array (new uint[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetUint32ArrayWorks,The following statement contains a magic number: arr.Set (new Uint32Array (new uint[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetUint32ArrayWorks,The following statement contains a magic number: arr.Set (new Uint32Array (new uint[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetUint32ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetUint32ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetUint32ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetUint32ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint32Array (new uint[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetUint32ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint32Array (new uint[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetUint32ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint32Array (new uint[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetUint32ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint32Array (new uint[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetUint32ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetUint32ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetUint32ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new uint[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new uint[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new uint[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new uint[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new uint[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new uint[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new uint[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SubarrayWithBeginWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (4' arr.Length' "Length should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ByteOffsetPropertyWorks,The following statement contains a magic number: Assert.AreEqual (32' arr.ByteOffset' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ByteLengthPropertyWorks,The following statement contains a magic number: Assert.AreEqual (92' arr.ByteLength' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ContainsWorks,The following statement contains a magic number: Assert.True (arr.Contains (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (5' coll.Count' "Count");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.True (coll.Contains (6)' "Contains(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Add (2)' "Add");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Remove (2)' "Remove");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (1' list.IndexOf (6)' "IndexOf(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.RemoveAt (2)' "RemoveAt");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,LengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ArrayBufferConstructorWorks,The following statement contains a magic number: Assert.AreEqual (80' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ArrayBufferWithOffsetConstructorWorks,The following statement contains a magic number: Assert.AreEqual (64' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ArrayBufferWithOffsetAndLengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,LengthWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IndexingWorks,The following statement contains a magic number: arr [1] = 42;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IndexingWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	42'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IndexingWorks,The following statement contains a magic number: Assert.AreEqual (42' arr [1]' "[1]");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetUint8ArrayWorks,The following statement contains a magic number: arr.Set (new Uint8Array (new byte[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetUint8ArrayWorks,The following statement contains a magic number: arr.Set (new Uint8Array (new byte[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetUint8ArrayWorks,The following statement contains a magic number: arr.Set (new Uint8Array (new byte[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetUint8ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetUint8ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetUint8ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetUint8ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint8Array (new byte[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetUint8ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint8Array (new byte[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetUint8ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint8Array (new byte[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetUint8ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Uint8Array (new byte[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetUint8ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetUint8ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetUint8ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new byte[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SubarrayWithBeginWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (4' arr.Length' "Length should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ByteOffsetPropertyWorks,The following statement contains a magic number: Assert.AreEqual (32' arr.ByteOffset' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ByteLengthPropertyWorks,The following statement contains a magic number: Assert.AreEqual (23' arr.ByteLength' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ContainsWorks,The following statement contains a magic number: Assert.True (arr.Contains (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (5' coll.Count' "Count");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.True (coll.Contains (6)' "Contains(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Add (2)' "Add");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws (() => coll.Remove (2)' "Remove");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (1' list.IndexOf (6)' "IndexOf(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Uint8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Uint8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws (() => list.RemoveAt (2)' "RemoveAt");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,LengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ArrayBufferConstructorWorks,The following statement contains a magic number: Assert.AreEqual (40' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ArrayBufferWithOffsetConstructorWorks,The following statement contains a magic number: Assert.AreEqual (32' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ArrayBufferWithOffsetAndLengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,StaticBytesPerElementWorks,The following statement contains a magic number: Assert.AreEqual (2' Int16Array.BYTES_PER_ELEMENT);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,LengthWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IndexingWorks,The following statement contains a magic number: arr [1] = 42;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IndexingWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	42'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IndexingWorks,The following statement contains a magic number: Assert.AreEqual (42' arr [1]' "[1]");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetInt16ArrayWorks,The following statement contains a magic number: arr.Set (new Int16Array (new short[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetInt16ArrayWorks,The following statement contains a magic number: arr.Set (new Int16Array (new short[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetInt16ArrayWorks,The following statement contains a magic number: arr.Set (new Int16Array (new short[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetInt16ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetInt16ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetInt16ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetInt16ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Int16Array (new short[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetInt16ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Int16Array (new short[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetInt16ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Int16Array (new short[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetInt16ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Int16Array (new short[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetInt16ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetInt16ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetInt16ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new short[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new short[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new short[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new short[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new short[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new short[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new short[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SubarrayWithBeginWorks,The following statement contains a magic number: Assert.AreEqual (6' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (6' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (4' arr.Length' "Length should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ByteOffsetPropertyWorks,The following statement contains a magic number: Assert.AreEqual (32' arr.ByteOffset' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ByteLengthPropertyWorks,The following statement contains a magic number: Assert.AreEqual (46' arr.ByteLength' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ContainsWorks,The following statement contains a magic number: Assert.True (arr.Contains (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (5' coll.Count' "Count");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.True (coll.Contains (6)' "Contains(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Add (2)' "Add");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Remove (2)' "Remove");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (1' list.IndexOf (6)' "IndexOf(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int16ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int16ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.RemoveAt (2)' "RemoveAt");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,LengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ArrayBufferConstructorWorks,The following statement contains a magic number: Assert.AreEqual (80' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ArrayBufferWithOffsetConstructorWorks,The following statement contains a magic number: Assert.AreEqual (64' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ArrayBufferWithOffsetAndLengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,LengthWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IndexingWorks,The following statement contains a magic number: arr [1] = 42;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IndexingWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	42'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IndexingWorks,The following statement contains a magic number: Assert.AreEqual (42' arr [1]' "[1]");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetInt8ArrayWorks,The following statement contains a magic number: arr.Set (new Int8Array (new sbyte[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetInt8ArrayWorks,The following statement contains a magic number: arr.Set (new Int8Array (new sbyte[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetInt8ArrayWorks,The following statement contains a magic number: arr.Set (new Int8Array (new sbyte[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetInt8ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetInt8ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetInt8ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetInt8ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Int8Array (new sbyte[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetInt8ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Int8Array (new sbyte[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetInt8ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Int8Array (new sbyte[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetInt8ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Int8Array (new sbyte[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetInt8ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetInt8ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetInt8ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new sbyte[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new sbyte[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new sbyte[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new sbyte[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new sbyte[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new sbyte[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new sbyte[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SubarrayWithBeginWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (4' arr.Length' "Length should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ByteOffsetPropertyWorks,The following statement contains a magic number: Assert.AreEqual (32' arr.ByteOffset' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ByteLengthPropertyWorks,The following statement contains a magic number: Assert.AreEqual (23' arr.ByteLength' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ContainsWorks,The following statement contains a magic number: Assert.True (arr.Contains (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (5' coll.Count' "Count");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.True (coll.Contains (6)' "Contains(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Add (2)' "Add");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Remove (2)' "Remove");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (1' list.IndexOf (6)' "IndexOf(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int8ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int8ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.RemoveAt (2)' "RemoveAt");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,LengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ConstructorFromIntWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,CopyConstructorWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	8'  	4  }' "content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ArrayBufferConstructorWorks,The following statement contains a magic number: Assert.AreEqual (20' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ArrayBufferWithOffsetConstructorWorks,The following statement contains a magic number: Assert.AreEqual (16' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ArrayBufferWithOffsetAndLengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.Length' "length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,StaticBytesPerElementWorks,The following statement contains a magic number: Assert.AreEqual (4' Int32Array.BYTES_PER_ELEMENT);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,LengthWorks,The following statement contains a magic number: Assert.AreEqual (13' arr.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IndexingWorks,The following statement contains a magic number: arr [1] = 42;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IndexingWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	42'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IndexingWorks,The following statement contains a magic number: Assert.AreEqual (42' arr [1]' "[1]");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetInt32ArrayWorks,The following statement contains a magic number: arr.Set (new Int32Array (new[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetInt32ArrayWorks,The following statement contains a magic number: arr.Set (new Int32Array (new[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetInt32ArrayWorks,The following statement contains a magic number: arr.Set (new Int32Array (new[] {  	3'  	6'  	7  }));  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetInt32ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetInt32ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetInt32ArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetInt32ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Int32Array (new[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetInt32ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Int32Array (new[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetInt32ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Int32Array (new[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetInt32ArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new Int32Array (new[] {  	3'  	6'  	7  })' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetInt32ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetInt32ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetInt32ArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: arr.Set (new[] {  	3'  	6'  	7  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetNormalArrayWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: arr.Set (new[] {  	3'  	6'  	7  }' 2);  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SetNormalArrayWithOffsetWorks,The following statement contains a magic number: AssertContent (arr' new[] {  	0'  	0'  	3'  	6'  	7'  	0  }' "Content");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SubarrayWithBeginWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (12' arr.ByteOffset' "ByteOffset should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,SubarrayWithBeginAndEndWorks,The following statement contains a magic number: Assert.AreEqual (4' arr.Length' "Length should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ByteOffsetPropertyWorks,The following statement contains a magic number: Assert.AreEqual (32' arr.ByteOffset' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ByteLengthPropertyWorks,The following statement contains a magic number: Assert.AreEqual (92' arr.ByteLength' "Should be correct");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (3' arr.IndexOf (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ContainsWorks,The following statement contains a magic number: Assert.True (arr.Contains (9)' "9");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ForeachWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,GetEnumeratorWorks_SPI_1401,The following statement contains a magic number: Assert.AreEqual (l.ToArray ()' new[] {  	3'  	6'  	2'  	9'  	5  });  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IEnumerableGetEnumeratorWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	3'  	6'  	2'  	9'  	5  }' l.ToArray ());  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (5' coll.Count' "Count");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.True (coll.Contains (6)' "Contains(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Add (2)' "Add");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,ICollectionMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => coll.Remove (2)' "Remove");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (1' list.IndexOf (6)' "IndexOf(6)");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (9' list [3]' "Get item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: list [3] = 4;  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.AreEqual (4' list [3]' "Set item");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.Insert (2' 2)' "Insert");  
Magic Number,Bridge.ClientTest.Batch4.Collections.TypedArrays,Int32ArrayTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\TypedArrays\Int32ArrayTests.cs,IListMethodsWork_SPI_1559,The following statement contains a magic number: Assert.Throws<NotSupportedException> (() => list.RemoveAt (2)' "RemoveAt");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,TypePropertiesAreInt32_SPI_1603,The following statement contains a magic number: Assert.False ((object)0.5 is char);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,TypePropertiesAreInt32_SPI_1603,The following statement contains a magic number: Assert.False ((object)65536 is char);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,TypePropertiesAreInt32_SPI_1603,The following statement contains a magic number: Assert.AreEqual (5' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (65535' (int)(char)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (int)(char)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (int)(char)i3' "234 unchecked");  	Assert.AreStrictEqual (65535' (int)(char)i4' "65535 unchecked");  	Assert.AreStrictEqual (0' (int)(char)i5' "65536 unchecked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (int?)(char?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (int?)(char?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni4' "nullable 65535 unchecked");  	Assert.AreStrictEqual (0' (int?)(char?)ni5' "nullable 65536 unchecked");  	Assert.AreStrictEqual (null' (int?)(char?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (65535' (int)(char)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (int)(char)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (int)(char)i3' "234 unchecked");  	Assert.AreStrictEqual (65535' (int)(char)i4' "65535 unchecked");  	Assert.AreStrictEqual (0' (int)(char)i5' "65536 unchecked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (int?)(char?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (int?)(char?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni4' "nullable 65535 unchecked");  	Assert.AreStrictEqual (0' (int?)(char?)ni5' "nullable 65536 unchecked");  	Assert.AreStrictEqual (null' (int?)(char?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (65535' (int)(char)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (int)(char)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (int)(char)i3' "234 unchecked");  	Assert.AreStrictEqual (65535' (int)(char)i4' "65535 unchecked");  	Assert.AreStrictEqual (0' (int)(char)i5' "65536 unchecked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (int?)(char?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (int?)(char?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni4' "nullable 65535 unchecked");  	Assert.AreStrictEqual (0' (int?)(char?)ni5' "nullable 65536 unchecked");  	Assert.AreStrictEqual (null' (int?)(char?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (65535' (int)(char)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (int)(char)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (int)(char)i3' "234 unchecked");  	Assert.AreStrictEqual (65535' (int)(char)i4' "65535 unchecked");  	Assert.AreStrictEqual (0' (int)(char)i5' "65536 unchecked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (int?)(char?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (int?)(char?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni4' "nullable 65535 unchecked");  	Assert.AreStrictEqual (0' (int?)(char?)ni5' "nullable 65536 unchecked");  	Assert.AreStrictEqual (null' (int?)(char?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (65535' (int)(char)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (int)(char)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (int)(char)i3' "234 unchecked");  	Assert.AreStrictEqual (65535' (int)(char)i4' "65535 unchecked");  	Assert.AreStrictEqual (0' (int)(char)i5' "65536 unchecked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (int?)(char?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (int?)(char?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni4' "nullable 65535 unchecked");  	Assert.AreStrictEqual (0' (int?)(char?)ni5' "nullable 65536 unchecked");  	Assert.AreStrictEqual (null' (int?)(char?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (65535' (int)(char)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (int)(char)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (int)(char)i3' "234 unchecked");  	Assert.AreStrictEqual (65535' (int)(char)i4' "65535 unchecked");  	Assert.AreStrictEqual (0' (int)(char)i5' "65536 unchecked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (int?)(char?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (int?)(char?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni4' "nullable 65535 unchecked");  	Assert.AreStrictEqual (0' (int?)(char?)ni5' "nullable 65536 unchecked");  	Assert.AreStrictEqual (null' (int?)(char?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (65535' (int)(char)i1' "-1 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (int)(char)i3' "234 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (65535' (int)(char)i4' "65535 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (65535' (int?)(char?)ni1' "nullable -1 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (int?)(char?)ni3' "nullable 234 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (65535' (int?)(char?)ni4' "nullable 65535 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (char)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (int?)(char)i2' "0 checked");  	Assert.AreStrictEqual (234' (int?)(char)i3' "234 checked");  	Assert.AreStrictEqual (65535' (int?)(char)i4' "65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (char)i5;  	}' "65536 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (char?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (int?)(char?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (int?)(char?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni4' "nullable 65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (char?)ni5;  	}' "nullable 65536 checked");  	Assert.AreStrictEqual (null' (int?)(char?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (char)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (int?)(char)i2' "0 checked");  	Assert.AreStrictEqual (234' (int?)(char)i3' "234 checked");  	Assert.AreStrictEqual (65535' (int?)(char)i4' "65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (char)i5;  	}' "65536 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (char?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (int?)(char?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (int?)(char?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni4' "nullable 65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (char?)ni5;  	}' "nullable 65536 checked");  	Assert.AreStrictEqual (null' (int?)(char?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (char)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (int?)(char)i2' "0 checked");  	Assert.AreStrictEqual (234' (int?)(char)i3' "234 checked");  	Assert.AreStrictEqual (65535' (int?)(char)i4' "65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (char)i5;  	}' "65536 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (char?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (int?)(char?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (int?)(char?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni4' "nullable 65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (char?)ni5;  	}' "nullable 65536 checked");  	Assert.AreStrictEqual (null' (int?)(char?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (char)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (int?)(char)i2' "0 checked");  	Assert.AreStrictEqual (234' (int?)(char)i3' "234 checked");  	Assert.AreStrictEqual (65535' (int?)(char)i4' "65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (char)i5;  	}' "65536 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (char?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (int?)(char?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (int?)(char?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (65535' (int?)(char?)ni4' "nullable 65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (char?)ni5;  	}' "nullable 65536 checked");  	Assert.AreStrictEqual (null' (int?)(char?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (int?)(char)i3' "234 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (65535' (int?)(char)i4' "65535 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (int?)(char?)ni3' "nullable 234 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (65535' (int?)(char?)ni4' "nullable 65535 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,ConstantsWork,The following statement contains a magic number: Assert.AreEqual (65535' (int)char.MaxValue);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,IsDigitWithStringAndIndexWorks,The following statement contains a magic number: Assert.True (char.IsDigit ("abc0def"' 3)' "#1");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,IsDigitWithStringAndIndexWorks,The following statement contains a magic number: Assert.True (char.IsDigit ("abcdef5"' 6)' "#3");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,IsDigitWithStringAndIndexWorks,The following statement contains a magic number: Assert.False (char.IsDigit ("012345."' 6)' "#6");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,IsDigitWithStringAndIndexWorks,The following statement contains a magic number: Assert.False (char.IsDigit ("012.345"' 3)' "#7");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,IsWhiteSpaceWithStringAndIndexWorks,The following statement contains a magic number: Assert.True (char.IsWhiteSpace ("abc def"' 3)' "#1");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,IsWhiteSpaceWithStringAndIndexWorks,The following statement contains a magic number: Assert.True (char.IsWhiteSpace ("abcdef\r"' 6)' "#3");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,IsWhiteSpaceWithStringAndIndexWorks,The following statement contains a magic number: Assert.False (char.IsWhiteSpace ("\r\n    ."' 6)' "#6");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,CharTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\CharTests.cs,IsWhiteSpaceWithStringAndIndexWorks,The following statement contains a magic number: Assert.False (char.IsWhiteSpace ("\r  .\n  "' 3)' "#7");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,BooleanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\BooleanTests.cs,TypePropertiesAreCorrect_SPI_1575,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.AreEqual (2' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,ParameterConstructorsWorks,The following statement contains a magic number: time = new TimeSpan (10' 20' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,ParameterConstructorsWorks,The following statement contains a magic number: time = new TimeSpan (10' 20' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,ParameterConstructorsWorks,The following statement contains a magic number: time = new TimeSpan (10' 20' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,ParameterConstructorsWorks,The following statement contains a magic number: time = new TimeSpan (15' 10' 20' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,ParameterConstructorsWorks,The following statement contains a magic number: time = new TimeSpan (15' 10' 20' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,ParameterConstructorsWorks,The following statement contains a magic number: time = new TimeSpan (15' 10' 20' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,ParameterConstructorsWorks,The following statement contains a magic number: time = new TimeSpan (15' 10' 20' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,ParameterConstructorsWorks,The following statement contains a magic number: time = new TimeSpan (15' 10' 20' 5' 14);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,ParameterConstructorsWorks,The following statement contains a magic number: time = new TimeSpan (15' 10' 20' 5' 14);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,ParameterConstructorsWorks,The following statement contains a magic number: time = new TimeSpan (15' 10' 20' 5' 14);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,ParameterConstructorsWorks,The following statement contains a magic number: time = new TimeSpan (15' 10' 20' 5' 14);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,ParameterConstructorsWorks,The following statement contains a magic number: time = new TimeSpan (15' 10' 20' 5' 14);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,FactoryMethodsWork,The following statement contains a magic number: time = TimeSpan.FromHours (3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,FactoryMethodsWork,The following statement contains a magic number: time = TimeSpan.FromMinutes (3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,FactoryMethodsWork,The following statement contains a magic number: time = TimeSpan.FromSeconds (3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,FactoryMethodsWork,The following statement contains a magic number: time = TimeSpan.FromMilliseconds (3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,FactoryMethodsWork,The following statement contains a magic number: time = TimeSpan.FromTicks (3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,PropertiesWork,The following statement contains a magic number: Assert.AreEqual (15' time.Days);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,PropertiesWork,The following statement contains a magic number: Assert.AreEqual (10' time.Hours);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,PropertiesWork,The following statement contains a magic number: Assert.AreEqual (20' time.Minutes);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,PropertiesWork,The following statement contains a magic number: Assert.AreEqual (5' time.Seconds);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,PropertiesWork,The following statement contains a magic number: Assert.AreEqual (14' time.Milliseconds);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,PropertiesWork,The following statement contains a magic number: Assert.AreEqual (15 * TimeSpan.TicksPerDay + 10 * TimeSpan.TicksPerHour + 20 * TimeSpan.TicksPerMinute + 5 * TimeSpan.TicksPerSecond + 14 * TimeSpan.TicksPerMillisecond' time.Ticks);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,PropertiesWork,The following statement contains a magic number: Assert.AreEqual (15 * TimeSpan.TicksPerDay + 10 * TimeSpan.TicksPerHour + 20 * TimeSpan.TicksPerMinute + 5 * TimeSpan.TicksPerSecond + 14 * TimeSpan.TicksPerMillisecond' time.Ticks);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,PropertiesWork,The following statement contains a magic number: Assert.AreEqual (15 * TimeSpan.TicksPerDay + 10 * TimeSpan.TicksPerHour + 20 * TimeSpan.TicksPerMinute + 5 * TimeSpan.TicksPerSecond + 14 * TimeSpan.TicksPerMillisecond' time.Ticks);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,PropertiesWork,The following statement contains a magic number: Assert.AreEqual (15 * TimeSpan.TicksPerDay + 10 * TimeSpan.TicksPerHour + 20 * TimeSpan.TicksPerMinute + 5 * TimeSpan.TicksPerSecond + 14 * TimeSpan.TicksPerMillisecond' time.Ticks);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,PropertiesWork,The following statement contains a magic number: Assert.AreEqual (15 * TimeSpan.TicksPerDay + 10 * TimeSpan.TicksPerHour + 20 * TimeSpan.TicksPerMinute + 5 * TimeSpan.TicksPerSecond + 14 * TimeSpan.TicksPerMillisecond' time.Ticks);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AddWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractWorks,The following statement contains a magic number: Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractWorks,The following statement contains a magic number: Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractWorks,The following statement contains a magic number: Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractWorks,The following statement contains a magic number: Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractWorks,The following statement contains a magic number: Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractWorks,The following statement contains a magic number: Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) + 2) * 60 + 1) * 60) + 5) * 1000 + 4' actual1.TotalMilliseconds' "Negative should be negated");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) + 2) * 60 + 1) * 60) + 5) * 1000 + 4' actual1.TotalMilliseconds' "Negative should be negated");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) + 2) * 60 + 1) * 60) + 5) * 1000 + 4' actual1.TotalMilliseconds' "Negative should be negated");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) + 2) * 60 + 1) * 60) + 5) * 1000 + 4' actual1.TotalMilliseconds' "Negative should be negated");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) + 2) * 60 + 1) * 60) + 5) * 1000 + 4' actual1.TotalMilliseconds' "Negative should be negated");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) + 2) * 60 + 1) * 60) + 5) * 1000 + 4' actual1.TotalMilliseconds' "Negative should be negated");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) + 2) * 60 + 1) * 60) + 5) * 1000 + 4' actual1.TotalMilliseconds' "Negative should be negated");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) + 2) * 60 + 1) * 60) + 5) * 1000 + 4' actual1.TotalMilliseconds' "Negative should be negated");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((2 * 24) + 1) * 60 + 5) * 60) + 4) * 1000 + 3' actual2.TotalMilliseconds' "Positive should be preserved");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((2 * 24) + 1) * 60 + 5) * 60) + 4) * 1000 + 3' actual2.TotalMilliseconds' "Positive should be preserved");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((2 * 24) + 1) * 60 + 5) * 60) + 4) * 1000 + 3' actual2.TotalMilliseconds' "Positive should be preserved");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((2 * 24) + 1) * 60 + 5) * 60) + 4) * 1000 + 3' actual2.TotalMilliseconds' "Positive should be preserved");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((2 * 24) + 1) * 60 + 5) * 60) + 4) * 1000 + 3' actual2.TotalMilliseconds' "Positive should be preserved");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((2 * 24) + 1) * 60 + 5) * 60) + 4) * 1000 + 3' actual2.TotalMilliseconds' "Positive should be preserved");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((2 * 24) + 1) * 60 + 5) * 60) + 4) * 1000 + 3' actual2.TotalMilliseconds' "Positive should be preserved");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,DurationWorks,The following statement contains a magic number: Assert.AreEqual ((((((2 * 24) + 1) * 60 + 5) * 60) + 4) * 1000 + 3' actual2.TotalMilliseconds' "Positive should be preserved");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,NegateWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,NegateWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,NegateWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,NegateWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,NegateWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,NegateWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,NegateWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,NegateWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AssertAlmostEqual,The following statement contains a magic number: Assert.True (diff < 1e-8);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AdditionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AdditionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AdditionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AdditionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AdditionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AdditionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AdditionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AdditionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,AdditionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((5 * 24) + 7) * 60) + 9) * 60) + 11) * 1000 + 13' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,SubtractionOperatorWorks,The following statement contains a magic number: Assert.AreEqual (((((((1 * 24) - 1) * 60) + 2) * 60) - 4) * 1000 - 1' actual.TotalMilliseconds' "TotalMilliseconds should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryPlusWorks,The following statement contains a magic number: Assert.AreEqual ((((((-3 * 24) + 2) * 60 - 1) * 60) + 5) * 1000 - 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryPlusWorks,The following statement contains a magic number: Assert.AreEqual ((((((-3 * 24) + 2) * 60 - 1) * 60) + 5) * 1000 - 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryPlusWorks,The following statement contains a magic number: Assert.AreEqual ((((((-3 * 24) + 2) * 60 - 1) * 60) + 5) * 1000 - 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryPlusWorks,The following statement contains a magic number: Assert.AreEqual ((((((-3 * 24) + 2) * 60 - 1) * 60) + 5) * 1000 - 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryPlusWorks,The following statement contains a magic number: Assert.AreEqual ((((((-3 * 24) + 2) * 60 - 1) * 60) + 5) * 1000 - 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryPlusWorks,The following statement contains a magic number: Assert.AreEqual ((((((-3 * 24) + 2) * 60 - 1) * 60) + 5) * 1000 - 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryPlusWorks,The following statement contains a magic number: Assert.AreEqual ((((((-3 * 24) + 2) * 60 - 1) * 60) + 5) * 1000 - 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryPlusWorks,The following statement contains a magic number: Assert.AreEqual ((((((-3 * 24) + 2) * 60 - 1) * 60) + 5) * 1000 - 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryMinusWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryMinusWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryMinusWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryMinusWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryMinusWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryMinusWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryMinusWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,TimeSpanTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\TimeSpanTests.cs,UnaryMinusWorks,The following statement contains a magic number: Assert.AreEqual ((((((3 * 24) - 2) * 60 + 1) * 60) - 5) * 1000 + 4' actual.TotalMilliseconds' "Ticks should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)0.5 is byte);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)256 is byte);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (255' (byte)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (byte)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (byte)i3' "234 unchecked");  	Assert.AreStrictEqual (255' (byte)i4' "255 unchecked");  	Assert.AreStrictEqual (0' (byte)i5' "256 unchecked");  	Assert.AreStrictEqual (255' (byte?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (byte?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (byte?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (255' (byte?)ni4' "nullable 255 unchecked");  	Assert.AreStrictEqual (0' (byte?)ni5' "nullable 256 unchecked");  	Assert.AreStrictEqual (null' (byte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (255' (byte)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (byte)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (byte)i3' "234 unchecked");  	Assert.AreStrictEqual (255' (byte)i4' "255 unchecked");  	Assert.AreStrictEqual (0' (byte)i5' "256 unchecked");  	Assert.AreStrictEqual (255' (byte?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (byte?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (byte?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (255' (byte?)ni4' "nullable 255 unchecked");  	Assert.AreStrictEqual (0' (byte?)ni5' "nullable 256 unchecked");  	Assert.AreStrictEqual (null' (byte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (255' (byte)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (byte)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (byte)i3' "234 unchecked");  	Assert.AreStrictEqual (255' (byte)i4' "255 unchecked");  	Assert.AreStrictEqual (0' (byte)i5' "256 unchecked");  	Assert.AreStrictEqual (255' (byte?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (byte?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (byte?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (255' (byte?)ni4' "nullable 255 unchecked");  	Assert.AreStrictEqual (0' (byte?)ni5' "nullable 256 unchecked");  	Assert.AreStrictEqual (null' (byte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (255' (byte)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (byte)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (byte)i3' "234 unchecked");  	Assert.AreStrictEqual (255' (byte)i4' "255 unchecked");  	Assert.AreStrictEqual (0' (byte)i5' "256 unchecked");  	Assert.AreStrictEqual (255' (byte?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (byte?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (byte?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (255' (byte?)ni4' "nullable 255 unchecked");  	Assert.AreStrictEqual (0' (byte?)ni5' "nullable 256 unchecked");  	Assert.AreStrictEqual (null' (byte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (255' (byte)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (byte)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (byte)i3' "234 unchecked");  	Assert.AreStrictEqual (255' (byte)i4' "255 unchecked");  	Assert.AreStrictEqual (0' (byte)i5' "256 unchecked");  	Assert.AreStrictEqual (255' (byte?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (byte?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (byte?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (255' (byte?)ni4' "nullable 255 unchecked");  	Assert.AreStrictEqual (0' (byte?)ni5' "nullable 256 unchecked");  	Assert.AreStrictEqual (null' (byte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (255' (byte)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (byte)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (byte)i3' "234 unchecked");  	Assert.AreStrictEqual (255' (byte)i4' "255 unchecked");  	Assert.AreStrictEqual (0' (byte)i5' "256 unchecked");  	Assert.AreStrictEqual (255' (byte?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (byte?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (byte?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (255' (byte?)ni4' "nullable 255 unchecked");  	Assert.AreStrictEqual (0' (byte?)ni5' "nullable 256 unchecked");  	Assert.AreStrictEqual (null' (byte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (255' (byte)i1' "-1 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (byte)i3' "234 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (255' (byte)i4' "255 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (255' (byte?)ni1' "nullable -1 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (byte?)ni3' "nullable 234 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (255' (byte?)ni4' "nullable 255 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (byte)i2' "0 checked");  	Assert.AreStrictEqual (234' (byte)i3' "234 checked");  	Assert.AreStrictEqual (255' (byte)i4' "256 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i5;  	}' "256 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (byte?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (byte?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (255' (byte?)ni4' "nullable 255 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte?)ni5;  	}' "nullable 256 checked");  	Assert.AreStrictEqual (null' (byte?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (byte)i2' "0 checked");  	Assert.AreStrictEqual (234' (byte)i3' "234 checked");  	Assert.AreStrictEqual (255' (byte)i4' "256 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i5;  	}' "256 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (byte?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (byte?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (255' (byte?)ni4' "nullable 255 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte?)ni5;  	}' "nullable 256 checked");  	Assert.AreStrictEqual (null' (byte?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (byte)i2' "0 checked");  	Assert.AreStrictEqual (234' (byte)i3' "234 checked");  	Assert.AreStrictEqual (255' (byte)i4' "256 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i5;  	}' "256 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (byte?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (byte?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (255' (byte?)ni4' "nullable 255 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte?)ni5;  	}' "nullable 256 checked");  	Assert.AreStrictEqual (null' (byte?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (byte)i2' "0 checked");  	Assert.AreStrictEqual (234' (byte)i3' "234 checked");  	Assert.AreStrictEqual (255' (byte)i4' "256 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i5;  	}' "256 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (byte?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (byte?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (255' (byte?)ni4' "nullable 255 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte?)ni5;  	}' "nullable 256 checked");  	Assert.AreStrictEqual (null' (byte?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (byte)i3' "234 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (255' (byte)i4' "256 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (byte?)ni3' "nullable 234 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (255' (byte?)ni4' "nullable 255 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,ConstantsWork,The following statement contains a magic number: Assert.AreEqual (255' byte.MaxValue);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,TryParseWorks_SPI_1592,The following statement contains a magic number: Assert.AreEqual (234' numberResult);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,ParseWorks,The following statement contains a magic number: Assert.AreEqual (234' byte.Parse ("234"));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,ToStringWithoutRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((byte)123).ToString ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((byte)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((byte)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,ByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\ByteTests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("12"' ((byte)0x12).ToString (16));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)0.5 is ushort);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)65536 is ushort);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (65535' (ushort)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (ushort)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (ushort)i3' "234 unchecked");  	Assert.AreStrictEqual (65535' (ushort)i4' "65535 unchecked");  	Assert.AreStrictEqual (0' (ushort)i5' "65536 unchecked");  	Assert.AreStrictEqual (65535' (ushort?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (ushort?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (ushort?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (65535' (ushort?)ni4' "nullable 65535 unchecked");  	Assert.AreStrictEqual (0' (ushort?)ni5' "nullable 65536 unchecked");  	Assert.AreStrictEqual (null' (ushort?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (65535' (ushort)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (ushort)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (ushort)i3' "234 unchecked");  	Assert.AreStrictEqual (65535' (ushort)i4' "65535 unchecked");  	Assert.AreStrictEqual (0' (ushort)i5' "65536 unchecked");  	Assert.AreStrictEqual (65535' (ushort?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (ushort?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (ushort?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (65535' (ushort?)ni4' "nullable 65535 unchecked");  	Assert.AreStrictEqual (0' (ushort?)ni5' "nullable 65536 unchecked");  	Assert.AreStrictEqual (null' (ushort?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (65535' (ushort)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (ushort)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (ushort)i3' "234 unchecked");  	Assert.AreStrictEqual (65535' (ushort)i4' "65535 unchecked");  	Assert.AreStrictEqual (0' (ushort)i5' "65536 unchecked");  	Assert.AreStrictEqual (65535' (ushort?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (ushort?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (ushort?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (65535' (ushort?)ni4' "nullable 65535 unchecked");  	Assert.AreStrictEqual (0' (ushort?)ni5' "nullable 65536 unchecked");  	Assert.AreStrictEqual (null' (ushort?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (65535' (ushort)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (ushort)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (ushort)i3' "234 unchecked");  	Assert.AreStrictEqual (65535' (ushort)i4' "65535 unchecked");  	Assert.AreStrictEqual (0' (ushort)i5' "65536 unchecked");  	Assert.AreStrictEqual (65535' (ushort?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (ushort?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (ushort?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (65535' (ushort?)ni4' "nullable 65535 unchecked");  	Assert.AreStrictEqual (0' (ushort?)ni5' "nullable 65536 unchecked");  	Assert.AreStrictEqual (null' (ushort?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (65535' (ushort)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (ushort)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (ushort)i3' "234 unchecked");  	Assert.AreStrictEqual (65535' (ushort)i4' "65535 unchecked");  	Assert.AreStrictEqual (0' (ushort)i5' "65536 unchecked");  	Assert.AreStrictEqual (65535' (ushort?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (ushort?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (ushort?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (65535' (ushort?)ni4' "nullable 65535 unchecked");  	Assert.AreStrictEqual (0' (ushort?)ni5' "nullable 65536 unchecked");  	Assert.AreStrictEqual (null' (ushort?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (65535' (ushort)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (ushort)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (ushort)i3' "234 unchecked");  	Assert.AreStrictEqual (65535' (ushort)i4' "65535 unchecked");  	Assert.AreStrictEqual (0' (ushort)i5' "65536 unchecked");  	Assert.AreStrictEqual (65535' (ushort?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (ushort?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (ushort?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (65535' (ushort?)ni4' "nullable 65535 unchecked");  	Assert.AreStrictEqual (0' (ushort?)ni5' "nullable 65536 unchecked");  	Assert.AreStrictEqual (null' (ushort?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (65535' (ushort)i1' "-1 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (ushort)i3' "234 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (65535' (ushort)i4' "65535 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (65535' (ushort?)ni1' "nullable -1 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (ushort?)ni3' "nullable 234 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (65535' (ushort?)ni4' "nullable 65535 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (ushort)i2' "0 checked");  	Assert.AreStrictEqual (234' (ushort)i3' "234 checked");  	Assert.AreStrictEqual (65535' (ushort)i4' "65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort)i5;  	}' "65536 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (ushort?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (ushort?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (65535' (ushort?)ni4' "nullable 65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort?)ni5;  	}' "nullable 65536 checked");  	Assert.AreStrictEqual (null' (ushort?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (ushort)i2' "0 checked");  	Assert.AreStrictEqual (234' (ushort)i3' "234 checked");  	Assert.AreStrictEqual (65535' (ushort)i4' "65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort)i5;  	}' "65536 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (ushort?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (ushort?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (65535' (ushort?)ni4' "nullable 65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort?)ni5;  	}' "nullable 65536 checked");  	Assert.AreStrictEqual (null' (ushort?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (ushort)i2' "0 checked");  	Assert.AreStrictEqual (234' (ushort)i3' "234 checked");  	Assert.AreStrictEqual (65535' (ushort)i4' "65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort)i5;  	}' "65536 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (ushort?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (ushort?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (65535' (ushort?)ni4' "nullable 65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort?)ni5;  	}' "nullable 65536 checked");  	Assert.AreStrictEqual (null' (ushort?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (ushort)i2' "0 checked");  	Assert.AreStrictEqual (234' (ushort)i3' "234 checked");  	Assert.AreStrictEqual (65535' (ushort)i4' "65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort)i5;  	}' "65536 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (ushort?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (ushort?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (65535' (ushort?)ni4' "nullable 65535 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (ushort?)ni5;  	}' "nullable 65536 checked");  	Assert.AreStrictEqual (null' (ushort?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (ushort)i3' "234 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (65535' (ushort)i4' "65535 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (ushort?)ni3' "nullable 234 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (65535' (ushort?)ni4' "nullable 65535 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,ConstantsWork,The following statement contains a magic number: Assert.AreEqual (65535' ushort.MaxValue);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,TryParseWorks_SPI_1592,The following statement contains a magic number: Assert.AreEqual (23445' numberResult);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,TryParseWorks_SPI_1592,The following statement contains a magic number: Assert.AreEqual (32768' numberResult);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,ParseWorks,The following statement contains a magic number: Assert.AreEqual (23445' ushort.Parse ("23445"));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,ToStringWithoutRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((ushort)123).ToString ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((ushort)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((ushort)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt16Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((ushort)0x123).ToString (16));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)0.5 is uint);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)4294967296 is uint);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (4294967295' (uint)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (uint)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (uint)i3' "234 unchecked");  	Assert.AreStrictEqual (4294967295' (uint)i4' "4294967295 unchecked");  	Assert.AreStrictEqual (0' (uint)i5' "4294967296 unchecked");  	Assert.AreStrictEqual (4294967295' (uint?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (uint?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (uint?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (4294967295' (uint?)ni4' "nullable 4294967295 unchecked");  	Assert.AreStrictEqual (0' (uint?)ni5' "nullable 4294967296 unchecked");  	Assert.AreStrictEqual (null' (uint?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (4294967295' (uint)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (uint)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (uint)i3' "234 unchecked");  	Assert.AreStrictEqual (4294967295' (uint)i4' "4294967295 unchecked");  	Assert.AreStrictEqual (0' (uint)i5' "4294967296 unchecked");  	Assert.AreStrictEqual (4294967295' (uint?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (uint?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (uint?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (4294967295' (uint?)ni4' "nullable 4294967295 unchecked");  	Assert.AreStrictEqual (0' (uint?)ni5' "nullable 4294967296 unchecked");  	Assert.AreStrictEqual (null' (uint?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (4294967295' (uint)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (uint)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (uint)i3' "234 unchecked");  	Assert.AreStrictEqual (4294967295' (uint)i4' "4294967295 unchecked");  	Assert.AreStrictEqual (0' (uint)i5' "4294967296 unchecked");  	Assert.AreStrictEqual (4294967295' (uint?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (uint?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (uint?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (4294967295' (uint?)ni4' "nullable 4294967295 unchecked");  	Assert.AreStrictEqual (0' (uint?)ni5' "nullable 4294967296 unchecked");  	Assert.AreStrictEqual (null' (uint?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (4294967295' (uint)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (uint)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (uint)i3' "234 unchecked");  	Assert.AreStrictEqual (4294967295' (uint)i4' "4294967295 unchecked");  	Assert.AreStrictEqual (0' (uint)i5' "4294967296 unchecked");  	Assert.AreStrictEqual (4294967295' (uint?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (uint?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (uint?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (4294967295' (uint?)ni4' "nullable 4294967295 unchecked");  	Assert.AreStrictEqual (0' (uint?)ni5' "nullable 4294967296 unchecked");  	Assert.AreStrictEqual (null' (uint?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (4294967295' (uint)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (uint)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (uint)i3' "234 unchecked");  	Assert.AreStrictEqual (4294967295' (uint)i4' "4294967295 unchecked");  	Assert.AreStrictEqual (0' (uint)i5' "4294967296 unchecked");  	Assert.AreStrictEqual (4294967295' (uint?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (uint?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (uint?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (4294967295' (uint?)ni4' "nullable 4294967295 unchecked");  	Assert.AreStrictEqual (0' (uint?)ni5' "nullable 4294967296 unchecked");  	Assert.AreStrictEqual (null' (uint?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (4294967295' (uint)i1' "-1 unchecked");  	Assert.AreStrictEqual (0' (uint)i2' "0 unchecked");  	Assert.AreStrictEqual (234' (uint)i3' "234 unchecked");  	Assert.AreStrictEqual (4294967295' (uint)i4' "4294967295 unchecked");  	Assert.AreStrictEqual (0' (uint)i5' "4294967296 unchecked");  	Assert.AreStrictEqual (4294967295' (uint?)ni1' "nullable -1 unchecked");  	Assert.AreStrictEqual (0' (uint?)ni2' "nullable 0 unchecked");  	Assert.AreStrictEqual (234' (uint?)ni3' "nullable 234 unchecked");  	Assert.AreStrictEqual (4294967295' (uint?)ni4' "nullable 4294967295 unchecked");  	Assert.AreStrictEqual (0' (uint?)ni5' "nullable 4294967296 unchecked");  	Assert.AreStrictEqual (null' (uint?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (4294967295' (uint)i1' "-1 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (uint)i3' "234 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (4294967295' (uint)i4' "4294967295 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (4294967295' (uint?)ni1' "nullable -1 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (uint?)ni3' "nullable 234 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (4294967295' (uint?)ni4' "nullable 4294967295 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (uint)i2' "0 checked");  	Assert.AreStrictEqual (234' (uint)i3' "234 checked");  	Assert.AreStrictEqual (4294967295' (uint)i4' "4294967295 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint)i5;  	}' "4294967296 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (uint?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (uint?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (4294967295' (uint?)ni4' "nullable 4294967295 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint?)ni5;  	}' "nullable 4294967296 checked");  	Assert.AreStrictEqual (null' (uint?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (uint)i2' "0 checked");  	Assert.AreStrictEqual (234' (uint)i3' "234 checked");  	Assert.AreStrictEqual (4294967295' (uint)i4' "4294967295 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint)i5;  	}' "4294967296 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (uint?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (uint?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (4294967295' (uint?)ni4' "nullable 4294967295 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint?)ni5;  	}' "nullable 4294967296 checked");  	Assert.AreStrictEqual (null' (uint?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (uint)i2' "0 checked");  	Assert.AreStrictEqual (234' (uint)i3' "234 checked");  	Assert.AreStrictEqual (4294967295' (uint)i4' "4294967295 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint)i5;  	}' "4294967296 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (uint?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (uint?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (4294967295' (uint?)ni4' "nullable 4294967295 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint?)ni5;  	}' "nullable 4294967296 checked");  	Assert.AreStrictEqual (null' (uint?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint)i1;  	}' "-1 checked");  	Assert.AreStrictEqual (0' (uint)i2' "0 checked");  	Assert.AreStrictEqual (234' (uint)i3' "234 checked");  	Assert.AreStrictEqual (4294967295' (uint)i4' "4294967295 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint)i5;  	}' "4294967296 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint?)ni1;  	}' "nullable -1 checked");  	Assert.AreStrictEqual (0' (uint?)ni2' "nullable 0 checked");  	Assert.AreStrictEqual (234' (uint?)ni3' "nullable 234 checked");  	Assert.AreStrictEqual (4294967295' (uint?)ni4' "nullable 4294967295 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (uint?)ni5;  	}' "nullable 4294967296 checked");  	Assert.AreStrictEqual (null' (uint?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (uint)i3' "234 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (4294967295' (uint)i4' "4294967295 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (234' (uint?)ni3' "nullable 234 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (4294967295' (uint?)ni4' "nullable 4294967295 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,TryParseWorks_SPI_1592,The following statement contains a magic number: Assert.AreEqual (23445' numberResult);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,ParseWorks,The following statement contains a magic number: Assert.AreEqual (23445' uint.Parse ("23445"));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,ToStringWithoutRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((uint)123).ToString ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((uint)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((uint)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt32Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((uint)0x123).ToString (16));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt64Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)0.5 is ulong);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt64Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt64Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.True ((ulong)i1 > 1e18' "-1 unchecked");  	Assert.AreEqual (0UL' (ulong)i2' "0 unchecked");  	Assert.AreEqual (234UL' (ulong)i3' "234 unchecked");  	Assert.AreEqual (9223372036854775000UL' (ulong)i4' "9223372036854775000 unchecked");  	Assert.True ((ulong?)ni1 > 1e18' "nullable -1 unchecked");  	Assert.AreEqual (0UL' (ulong?)ni2' "nullable 0 unchecked");  	Assert.AreEqual (234UL' (ulong?)ni3' "nullable 234 unchecked");  	Assert.AreEqual (9223372036854775000UL' (ulong?)ni4' "nullable 9223372036854775000 unchecked");  	Assert.AreEqual (null' (ulong?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt64Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.True ((ulong)i1 > 1e18' "-1 unchecked");  	Assert.AreEqual (0UL' (ulong)i2' "0 unchecked");  	Assert.AreEqual (234UL' (ulong)i3' "234 unchecked");  	Assert.AreEqual (9223372036854775000UL' (ulong)i4' "9223372036854775000 unchecked");  	Assert.True ((ulong?)ni1 > 1e18' "nullable -1 unchecked");  	Assert.AreEqual (0UL' (ulong?)ni2' "nullable 0 unchecked");  	Assert.AreEqual (234UL' (ulong?)ni3' "nullable 234 unchecked");  	Assert.AreEqual (9223372036854775000UL' (ulong?)ni4' "nullable 9223372036854775000 unchecked");  	Assert.AreEqual (null' (ulong?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt64Tests.cs,CastsWork,The following statement contains a magic number: Assert.True ((ulong)i1 > 1e18' "-1 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt64Tests.cs,CastsWork,The following statement contains a magic number: Assert.True ((ulong?)ni1 > 1e18' "nullable -1 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt64Tests.cs,ToStringWithoutRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((ulong)123).ToString ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt64Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((ulong)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt64Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((ulong)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,UInt64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\UInt64Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((ulong)0x123).ToString (16));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.True ((object)(float)0.5 is float);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ConstantsWork,The following statement contains a magic number: Assert.True ((float)(object)float.MinValue < -3.4e38 && (float)(object)float.MinValue > -3.5e38' "MinValue should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ConstantsWork,The following statement contains a magic number: Assert.True ((float)(object)float.MinValue < -3.4e38 && (float)(object)float.MinValue > -3.5e38' "MinValue should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ConstantsWork,The following statement contains a magic number: Assert.True ((float)(object)float.MaxValue > 3.4e38 && (float)(object)float.MaxValue < 3.5e38' "MaxValue should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ConstantsWork,The following statement contains a magic number: Assert.True ((float)(object)float.MaxValue > 3.4e38 && (float)(object)float.MaxValue < 3.5e38' "MaxValue should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ConstantsWork,The following statement contains a magic number: Assert.AreEqual (1.401298E-45' float.Epsilon' "Epsilon should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,FormatWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((float)291.0).Format ("x"));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ToStringWithFormatWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((float)291.0).ToString ("x"));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ToStringWithFormatAndProviderWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((float)291.0).ToString ("x"' CultureInfo.InvariantCulture));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,IFormattableToStringWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((IFormattable)((float)291.0)).ToString ("x"' CultureInfo.InvariantCulture));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ToStringWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((float)123.0).ToString ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ToExponentialWorks,The following statement contains a magic number: Assert.AreEqual ("1.23e+2"' ((float)123.0).ToExponential ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ToExponentialWithFractionalDigitsWorks,The following statement contains a magic number: Assert.AreEqual ("1.2e+2"' ((float)123.0).ToExponential (1));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ToFixed,The following statement contains a magic number: Assert.AreEqual ("123"' ((float)123.0).ToFixed ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ToFixedWithFractionalDigitsWorks,The following statement contains a magic number: Assert.AreEqual ("123.0"' ((float)123.0).ToFixed (1));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ToPrecisionWorks,The following statement contains a magic number: Assert.AreEqual ("12345"' ((float)12345.0).ToPrecision ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ToPrecisionWithPrecisionWorks,The following statement contains a magic number: Assert.AreEqual ("1.2e+4"' ((float)12345.0).ToPrecision (2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,ToPrecisionWithPrecisionWorks,The following statement contains a magic number: Assert.AreEqual ("1.2e+4"' ((float)12345.0).ToPrecision (2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,GetHashCodeWorks,The following statement contains a magic number: Assert.AreNotEqual (((float)0.5).GetHashCode ()' ((float)0).GetHashCode ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,EqualsWorks,The following statement contains a magic number: Assert.False (((float)0).Equals ((object)(float)0.5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,IEquatableEqualsWorks,The following statement contains a magic number: Assert.False (((float)0).Equals ((float)0.5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,IEquatableEqualsWorks,The following statement contains a magic number: Assert.False (((IEquatable<float>)((float)0)).Equals ((float)0.5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,CompareToWorks,The following statement contains a magic number: Assert.True (((float)0).CompareTo ((float)0.5) < 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SingleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SingleTests.cs,IComparableCompareToWorks,The following statement contains a magic number: Assert.True (((IComparable<float>)((float)0)).CompareTo ((float)0.5) < 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)0.5 is sbyte);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)-129 is sbyte);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)128 is sbyte);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (127' (sbyte)i1' "-129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 unchecked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 unchecked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i5' "128 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni1' "nullable -129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 unchecked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni5' "nullable 128 unchecked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (127' (sbyte)i1' "-129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 unchecked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 unchecked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i5' "128 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni1' "nullable -129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 unchecked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni5' "nullable 128 unchecked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (127' (sbyte)i1' "-129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 unchecked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 unchecked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i5' "128 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni1' "nullable -129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 unchecked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni5' "nullable 128 unchecked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (127' (sbyte)i1' "-129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 unchecked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 unchecked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i5' "128 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni1' "nullable -129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 unchecked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni5' "nullable 128 unchecked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (127' (sbyte)i1' "-129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 unchecked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 unchecked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i5' "128 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni1' "nullable -129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 unchecked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni5' "nullable 128 unchecked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (127' (sbyte)i1' "-129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 unchecked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 unchecked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i5' "128 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni1' "nullable -129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 unchecked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni5' "nullable 128 unchecked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (127' (sbyte)i1' "-129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 unchecked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 unchecked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i5' "128 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni1' "nullable -129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 unchecked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni5' "nullable 128 unchecked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (127' (sbyte)i1' "-129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 unchecked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 unchecked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i5' "128 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni1' "nullable -129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 unchecked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni5' "nullable 128 unchecked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (127' (sbyte)i1' "-129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 unchecked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 unchecked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i5' "128 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni1' "nullable -129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 unchecked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni5' "nullable 128 unchecked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (127' (sbyte)i1' "-129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 unchecked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 unchecked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte)i5' "128 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni1' "nullable -129 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 unchecked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 unchecked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 unchecked");  	Assert.AreStrictEqual (-128' (sbyte?)ni5' "nullable 128 unchecked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (127' (sbyte)i1' "-129 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-128' (sbyte)i2' "-128 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (80' (sbyte)i3' "80 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (127' (sbyte)i4' "127 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-128' (sbyte)i5' "128 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (127' (sbyte?)ni1' "nullable -129 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-128' (sbyte?)ni5' "nullable 128 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i1;  	}' "-129 checked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 checked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 checked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte)i5;  	}' "-128 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte?)ni1;  	}' "nullable -129 checked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 checked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 checked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte?)ni5;  	}' "nullable 128 checked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i1;  	}' "-129 checked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 checked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 checked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte)i5;  	}' "-128 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte?)ni1;  	}' "nullable -129 checked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 checked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 checked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte?)ni5;  	}' "nullable 128 checked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i1;  	}' "-129 checked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 checked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 checked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte)i5;  	}' "-128 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte?)ni1;  	}' "nullable -129 checked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 checked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 checked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte?)ni5;  	}' "nullable 128 checked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i1;  	}' "-129 checked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 checked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 checked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte)i5;  	}' "-128 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte?)ni1;  	}' "nullable -129 checked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 checked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 checked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte?)ni5;  	}' "nullable 128 checked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i1;  	}' "-129 checked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 checked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 checked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte)i5;  	}' "-128 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte?)ni1;  	}' "nullable -129 checked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 checked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 checked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte?)ni5;  	}' "nullable 128 checked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (byte)i1;  	}' "-129 checked");  	Assert.AreStrictEqual (-128' (sbyte)i2' "-128 checked");  	Assert.AreStrictEqual (80' (sbyte)i3' "80 checked");  	Assert.AreStrictEqual (127' (sbyte)i4' "127 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte)i5;  	}' "-128 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte?)ni1;  	}' "nullable -129 checked");  	Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 checked");  	Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 checked");  	Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (sbyte?)ni5;  	}' "nullable 128 checked");  	Assert.AreStrictEqual (null' (sbyte?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-128' (sbyte)i2' "-128 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (80' (sbyte)i3' "80 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (127' (sbyte)i4' "127 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-128' (sbyte?)ni2' "nullable -128 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (80' (sbyte?)ni3' "nullable 80 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (127' (sbyte?)ni4' "nullable 127 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,ConstantsWork,The following statement contains a magic number: Assert.AreEqual (-128' sbyte.MinValue);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,ConstantsWork,The following statement contains a magic number: Assert.AreEqual (127' sbyte.MaxValue);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,TryParseWorks_SPI_1592,The following statement contains a magic number: Assert.AreEqual (124' numberResult);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,TryParseWorks_SPI_1592,The following statement contains a magic number: Assert.AreEqual (-123' numberResult);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,ParseWorks,The following statement contains a magic number: Assert.AreEqual (124' sbyte.Parse ("124"));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,ParseWorks,The following statement contains a magic number: Assert.AreEqual (-123' sbyte.Parse ("-123"));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,ToStringWithoutRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((sbyte)123).ToString ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((sbyte)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((sbyte)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,SByteTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\SByteTests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("12"' ((sbyte)0x12).ToString (16));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int64Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)0.5 is long);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int64Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)1e100 is long);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int64Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int64Tests.cs,ToStringWithoutRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((long)123).ToString ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int64Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((long)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int64Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((long)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int64Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int64Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((long)0x123).ToString (16));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)0.5 is int);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)-2147483649 is int);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)2147483648 is int);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (2147483647' (int)i1' "-2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i5' "2147483648 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni1' "nullable -2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni5' "nullable 2147483648 unchecked");  	Assert.AreStrictEqual (null' (int?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (2147483647' (int)i1' "-2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i5' "2147483648 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni1' "nullable -2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni5' "nullable 2147483648 unchecked");  	Assert.AreStrictEqual (null' (int?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (2147483647' (int)i1' "-2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i5' "2147483648 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni1' "nullable -2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni5' "nullable 2147483648 unchecked");  	Assert.AreStrictEqual (null' (int?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (2147483647' (int)i1' "-2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i5' "2147483648 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni1' "nullable -2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni5' "nullable 2147483648 unchecked");  	Assert.AreStrictEqual (null' (int?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (2147483647' (int)i1' "-2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i5' "2147483648 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni1' "nullable -2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni5' "nullable 2147483648 unchecked");  	Assert.AreStrictEqual (null' (int?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (2147483647' (int)i1' "-2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i5' "2147483648 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni1' "nullable -2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni5' "nullable 2147483648 unchecked");  	Assert.AreStrictEqual (null' (int?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (2147483647' (int)i1' "-2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i5' "2147483648 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni1' "nullable -2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni5' "nullable 2147483648 unchecked");  	Assert.AreStrictEqual (null' (int?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (2147483647' (int)i1' "-2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i5' "2147483648 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni1' "nullable -2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni5' "nullable 2147483648 unchecked");  	Assert.AreStrictEqual (null' (int?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (2147483647' (int)i1' "-2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i5' "2147483648 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni1' "nullable -2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni5' "nullable 2147483648 unchecked");  	Assert.AreStrictEqual (null' (int?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (2147483647' (int)i1' "-2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int)i5' "2147483648 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni1' "nullable -2147483649 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 unchecked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 unchecked");  	Assert.AreStrictEqual (-2147483648' (int?)ni5' "nullable 2147483648 unchecked");  	Assert.AreStrictEqual (null' (int?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (2147483647' (int)i1' "-2147483649 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (5754' (int)i3' "5754 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-2147483648' (int)i5' "2147483648 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (2147483647' (int?)ni1' "nullable -2147483649 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-2147483648' (int?)ni5' "nullable 2147483648 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (int)i1;  	}' "-2147483649 checked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 checked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 checked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int)i5;  	}' "32768 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int?)ni1;  	}' "nullable -2147483649 checked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 checked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 checked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int?)ni5;  	}' "nullable 2147483648 checked");  	Assert.AreStrictEqual (null' (int?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (int)i1;  	}' "-2147483649 checked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 checked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 checked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int)i5;  	}' "32768 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int?)ni1;  	}' "nullable -2147483649 checked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 checked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 checked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int?)ni5;  	}' "nullable 2147483648 checked");  	Assert.AreStrictEqual (null' (int?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (int)i1;  	}' "-2147483649 checked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 checked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 checked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int)i5;  	}' "32768 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int?)ni1;  	}' "nullable -2147483649 checked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 checked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 checked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int?)ni5;  	}' "nullable 2147483648 checked");  	Assert.AreStrictEqual (null' (int?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (int)i1;  	}' "-2147483649 checked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 checked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 checked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int)i5;  	}' "32768 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int?)ni1;  	}' "nullable -2147483649 checked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 checked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 checked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int?)ni5;  	}' "nullable 2147483648 checked");  	Assert.AreStrictEqual (null' (int?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (int)i1;  	}' "-2147483649 checked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 checked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 checked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int)i5;  	}' "32768 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int?)ni1;  	}' "nullable -2147483649 checked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 checked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 checked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int?)ni5;  	}' "nullable 2147483648 checked");  	Assert.AreStrictEqual (null' (int?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (int)i1;  	}' "-2147483649 checked");  	Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 checked");  	Assert.AreStrictEqual (5754' (int)i3' "5754 checked");  	Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int)i5;  	}' "32768 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int?)ni1;  	}' "nullable -2147483649 checked");  	Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 checked");  	Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 checked");  	Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (int?)ni5;  	}' "nullable 2147483648 checked");  	Assert.AreStrictEqual (null' (int?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-2147483648' (int)i2' "-2147483648 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (5754' (int)i3' "5754 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (2147483647' (int)i4' "2147483647 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-2147483648' (int?)ni2' "nullable -2147483648 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (5754' (int?)ni3' "nullable 5754 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (2147483647' (int?)ni4' "nullable 2147483647 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,TypeIsWorksForInt32,The following statement contains a magic number: Assert.False ((object)1.5 is int);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,TypeAsWorksForInt32,The following statement contains a magic number: Assert.False (((object)1.5 as int?) != null);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,ConstantsWork,The following statement contains a magic number: Assert.AreEqual (-2147483648' int.MinValue);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,ConstantsWork,The following statement contains a magic number: Assert.AreEqual (2147483647' int.MaxValue);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,TryParseWorks,The following statement contains a magic number: Assert.AreEqual (57574' numberResult);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,TryParseWorks,The following statement contains a magic number: Assert.AreEqual (-14' numberResult);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,ParseWorks,The following statement contains a magic number: Assert.AreEqual (57574' int.Parse ("57574"));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,ParseWorks,The following statement contains a magic number: Assert.AreEqual (-14' int.Parse ("-14"));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,ToStringWithoutRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((int)123).ToString ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((int)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((int)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((int)0x123).ToString (16));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,IntegerDivisionWorks,The following statement contains a magic number: Assert.AreEqual (4' a / b);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,IntegerDivisionWorks,The following statement contains a magic number: Assert.AreEqual (-4' -a / b);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,IntegerDivisionWorks,The following statement contains a magic number: Assert.AreEqual (-4' a / -b);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,IntegerDivisionWorks,The following statement contains a magic number: Assert.AreEqual (4' -a / -b);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,DoublesAreTruncatedWhenConvertedToIntegers,The following statement contains a magic number: Assert.AreEqual (4' (int)d1);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,DoublesAreTruncatedWhenConvertedToIntegers,The following statement contains a magic number: Assert.AreEqual (-4' (int)-d1);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,DoublesAreTruncatedWhenConvertedToIntegers,The following statement contains a magic number: Assert.AreEqual (8' (int)d3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,DoublesAreTruncatedWhenConvertedToIntegers,The following statement contains a magic number: Assert.AreEqual (-8' (int)-d3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,DoublesAreTruncatedWhenConvertedToIntegers,The following statement contains a magic number: Assert.AreEqual (8' (int?)d3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int32Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int32Tests.cs,DoublesAreTruncatedWhenConvertedToIntegers,The following statement contains a magic number: Assert.AreEqual (-8' (int?)-d3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)0.5 is short);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)-32769 is short);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.False ((object)32768 is short);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (32767' (short)i1' "-32769 unchecked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 unchecked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 unchecked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 unchecked");  	Assert.AreStrictEqual (-32768' (short)i5' "32768 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni1' "nullable -32769 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 unchecked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni5' "nullable 32768 unchecked");  	Assert.AreStrictEqual (null' (short?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (32767' (short)i1' "-32769 unchecked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 unchecked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 unchecked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 unchecked");  	Assert.AreStrictEqual (-32768' (short)i5' "32768 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni1' "nullable -32769 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 unchecked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni5' "nullable 32768 unchecked");  	Assert.AreStrictEqual (null' (short?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (32767' (short)i1' "-32769 unchecked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 unchecked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 unchecked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 unchecked");  	Assert.AreStrictEqual (-32768' (short)i5' "32768 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni1' "nullable -32769 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 unchecked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni5' "nullable 32768 unchecked");  	Assert.AreStrictEqual (null' (short?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (32767' (short)i1' "-32769 unchecked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 unchecked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 unchecked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 unchecked");  	Assert.AreStrictEqual (-32768' (short)i5' "32768 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni1' "nullable -32769 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 unchecked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni5' "nullable 32768 unchecked");  	Assert.AreStrictEqual (null' (short?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (32767' (short)i1' "-32769 unchecked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 unchecked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 unchecked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 unchecked");  	Assert.AreStrictEqual (-32768' (short)i5' "32768 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni1' "nullable -32769 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 unchecked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni5' "nullable 32768 unchecked");  	Assert.AreStrictEqual (null' (short?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (32767' (short)i1' "-32769 unchecked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 unchecked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 unchecked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 unchecked");  	Assert.AreStrictEqual (-32768' (short)i5' "32768 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni1' "nullable -32769 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 unchecked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni5' "nullable 32768 unchecked");  	Assert.AreStrictEqual (null' (short?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (32767' (short)i1' "-32769 unchecked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 unchecked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 unchecked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 unchecked");  	Assert.AreStrictEqual (-32768' (short)i5' "32768 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni1' "nullable -32769 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 unchecked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni5' "nullable 32768 unchecked");  	Assert.AreStrictEqual (null' (short?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (32767' (short)i1' "-32769 unchecked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 unchecked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 unchecked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 unchecked");  	Assert.AreStrictEqual (-32768' (short)i5' "32768 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni1' "nullable -32769 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 unchecked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni5' "nullable 32768 unchecked");  	Assert.AreStrictEqual (null' (short?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (32767' (short)i1' "-32769 unchecked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 unchecked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 unchecked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 unchecked");  	Assert.AreStrictEqual (-32768' (short)i5' "32768 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni1' "nullable -32769 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 unchecked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni5' "nullable 32768 unchecked");  	Assert.AreStrictEqual (null' (short?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: unchecked {  	Assert.AreStrictEqual (32767' (short)i1' "-32769 unchecked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 unchecked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 unchecked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 unchecked");  	Assert.AreStrictEqual (-32768' (short)i5' "32768 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni1' "nullable -32769 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 unchecked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 unchecked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 unchecked");  	Assert.AreStrictEqual (-32768' (short?)ni5' "nullable 32768 unchecked");  	Assert.AreStrictEqual (null' (short?)ni6' "null unchecked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (32767' (short)i1' "-32769 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-32768' (short)i2' "-32768 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (5754' (short)i3' "5754 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (32767' (short)i4' "32767 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-32768' (short)i5' "32768 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (32767' (short?)ni1' "nullable -32769 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-32768' (short?)ni5' "nullable 32768 unchecked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (short)i1;  	}' "-32769 checked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 checked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 checked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short)i5;  	}' "32768 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short?)ni1;  	}' "nullable -32769 checked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 checked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 checked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short?)ni5;  	}' "nullable 32768 checked");  	Assert.AreStrictEqual (null' (short?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (short)i1;  	}' "-32769 checked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 checked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 checked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short)i5;  	}' "32768 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short?)ni1;  	}' "nullable -32769 checked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 checked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 checked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short?)ni5;  	}' "nullable 32768 checked");  	Assert.AreStrictEqual (null' (short?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (short)i1;  	}' "-32769 checked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 checked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 checked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short)i5;  	}' "32768 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short?)ni1;  	}' "nullable -32769 checked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 checked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 checked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short?)ni5;  	}' "nullable 32768 checked");  	Assert.AreStrictEqual (null' (short?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (short)i1;  	}' "-32769 checked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 checked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 checked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short)i5;  	}' "32768 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short?)ni1;  	}' "nullable -32769 checked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 checked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 checked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short?)ni5;  	}' "nullable 32768 checked");  	Assert.AreStrictEqual (null' (short?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (short)i1;  	}' "-32769 checked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 checked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 checked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short)i5;  	}' "32768 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short?)ni1;  	}' "nullable -32769 checked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 checked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 checked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short?)ni5;  	}' "nullable 32768 checked");  	Assert.AreStrictEqual (null' (short?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: checked {  	Assert.Throws<OverflowException> (() =>  {  		var x = (short)i1;  	}' "-32769 checked");  	Assert.AreStrictEqual (-32768' (short)i2' "-32768 checked");  	Assert.AreStrictEqual (5754' (short)i3' "5754 checked");  	Assert.AreStrictEqual (32767' (short)i4' "32767 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short)i5;  	}' "32768 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short?)ni1;  	}' "nullable -32769 checked");  	Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 checked");  	Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 checked");  	Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 checked");  	Assert.Throws<OverflowException> (() =>  {  		var x = (short?)ni5;  	}' "nullable 32768 checked");  	Assert.AreStrictEqual (null' (short?)ni6' "null checked");  }  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-32768' (short)i2' "-32768 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (5754' (short)i3' "5754 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (32767' (short)i4' "32767 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (-32768' (short?)ni2' "nullable -32768 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (5754' (short?)ni3' "nullable 5754 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,CastsWork,The following statement contains a magic number: Assert.AreStrictEqual (32767' (short?)ni4' "nullable 32767 checked");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,ConstantsWork,The following statement contains a magic number: Assert.AreEqual (-32768' short.MinValue);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,ConstantsWork,The following statement contains a magic number: Assert.AreEqual (32767' short.MaxValue);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,TryParseWorks_SPI_1592,The following statement contains a magic number: Assert.AreEqual (234' numberResult);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,ParseWorks,The following statement contains a magic number: Assert.AreEqual (234' short.Parse ("234"));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,ToStringWithoutRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((short)123).ToString ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((short)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((short)123).ToString (10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,Int16Tests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\Int16Tests.cs,ToStringWithRadixWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((short)0x123).ToString (16));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,EnumTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\EnumTests.cs,ConversionsToEnumAreTreatedAsConversionsToTheUnderlyingType_SPI_1596,The following statement contains a magic number: Assert.Throws<InvalidCastException> (() =>  {  	var _ = (TestEnum)(object)0.5;  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,EnumTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\EnumTests.cs,GetValuesWorks,The following statement contains a magic number: Assert.AreEqual (3' values.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,EnumTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\EnumTests.cs,GetValuesWorks,The following statement contains a magic number: Assert.AreEqual (TestEnum.ThirdValue' values.GetValue (2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,EnumTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\EnumTests.cs,GetValuesWorks,The following statement contains a magic number: Assert.AreEqual (4' values.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,EnumTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\EnumTests.cs,GetValuesWorks,The following statement contains a magic number: Assert.AreEqual (FlagsEnum.SecondValue' values.GetValue (2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,EnumTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\EnumTests.cs,GetValuesWorks,The following statement contains a magic number: Assert.AreEqual (FlagsEnum.ThirdValue' values.GetValue (3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.True ((object)(double)0.5 is double);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,ConstantsWork,The following statement contains a magic number: Assert.True (double.MinValue < (double)(object)-1.7e+308' "MinValue should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,ConstantsWork,The following statement contains a magic number: Assert.True (double.MaxValue > (double)(object)1.7e+308' "MaxValue should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,ConstantsWork,The following statement contains a magic number: Assert.AreEqual (4.94065645841247E-324' double.Epsilon' "MinValue should be correct");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,FormatWorks,The following statement contains a magic number: Assert.AreEqual ("123"' (291.0).Format ("x"));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,ToStringWithFormatWorks,The following statement contains a magic number: Assert.AreEqual ("123"' (291.0).ToString ("x"));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,ToStringWithFormatAndProviderWorks,The following statement contains a magic number: Assert.AreEqual ("123"' (291.0).ToString ("x"' CultureInfo.InvariantCulture));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,IFormattableToStringWorks,The following statement contains a magic number: Assert.AreEqual ("123"' ((IFormattable)(291.0)).ToString ("x"' CultureInfo.InvariantCulture));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,ToStringWorks,The following statement contains a magic number: Assert.AreEqual ("123"' (123.0).ToString ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,ToExponentialWorks,The following statement contains a magic number: Assert.AreEqual ("1.23e+2"' (123.0).ToExponential ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,ToExponentialWithFractionalDigitsWorks,The following statement contains a magic number: Assert.AreEqual ("1.2e+2"' (123.0).ToExponential (1));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,ToFixed,The following statement contains a magic number: Assert.AreEqual ("123"' (123.0).ToFixed ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,ToFixedWithFractionalDigitsWorks,The following statement contains a magic number: Assert.AreEqual ("123.0"' (123.0).ToFixed (1));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,ToPrecisionWorks,The following statement contains a magic number: Assert.AreEqual ("12345"' (12345.0).ToPrecision ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,ToPrecisionWithPrecisionWorks,The following statement contains a magic number: Assert.AreEqual ("1.2e+4"' (12345.0).ToPrecision (2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,ToPrecisionWithPrecisionWorks,The following statement contains a magic number: Assert.AreEqual ("1.2e+4"' (12345.0).ToPrecision (2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,GetHashCodeWorks,The following statement contains a magic number: Assert.AreNotEqual (((double)0.5).GetHashCode ()' ((double)0).GetHashCode ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,EqualsWorks,The following statement contains a magic number: Assert.False (((double)0).Equals ((object)(double)0.5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,IEquatableEqualsWorks,The following statement contains a magic number: Assert.False (((double)0).Equals ((double)0.5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,IEquatableEqualsWorks,The following statement contains a magic number: Assert.False (((IEquatable<double>)((double)0)).Equals ((double)0.5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,CompareToWorks,The following statement contains a magic number: Assert.True (((double)0).CompareTo ((double)0.5) < 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DoubleTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DoubleTests.cs,IComparableCompareToWorks,The following statement contains a magic number: Assert.True (((IComparable<double>)((double)0)).CompareTo ((double)0.5) < 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.True ((object)(decimal)0.5 is decimal);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,TypePropertiesAreCorrect_SPI_1717,The following statement contains a magic number: Assert.AreEqual (3' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConvertingConstructorsWork,The following statement contains a magic number: AssertIsDecimalAndEqualTo (new decimal ((double)0.5)' 0.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConvertingConstructorsWork,The following statement contains a magic number: AssertIsDecimalAndEqualTo (new decimal ((double)0.5)' 0.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConvertingConstructorsWork,The following statement contains a magic number: AssertIsDecimalAndEqualTo (new decimal ((float)1.5)' 1.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConvertingConstructorsWork,The following statement contains a magic number: AssertIsDecimalAndEqualTo (new decimal ((float)1.5)' 1.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConvertingConstructorsWork,The following statement contains a magic number: AssertIsDecimalAndEqualTo (new decimal ((int)2)' 2);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConvertingConstructorsWork,The following statement contains a magic number: AssertIsDecimalAndEqualTo (new decimal ((int)2)' 2);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConvertingConstructorsWork,The following statement contains a magic number: AssertIsDecimalAndEqualTo (new decimal ((long)3)' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConvertingConstructorsWork,The following statement contains a magic number: AssertIsDecimalAndEqualTo (new decimal ((long)3)' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConvertingConstructorsWork,The following statement contains a magic number: AssertIsDecimalAndEqualTo (new decimal ((uint)4)' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConvertingConstructorsWork,The following statement contains a magic number: AssertIsDecimalAndEqualTo (new decimal ((uint)4)' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConvertingConstructorsWork,The following statement contains a magic number: AssertIsDecimalAndEqualTo (new decimal ((ulong)5)' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConvertingConstructorsWork,The following statement contains a magic number: AssertIsDecimalAndEqualTo (new decimal ((ulong)5)' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(byte)(x + 2)' 2);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(byte)(x + 2)' 2);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(short)(x + 3)' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(short)(x + 3)' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(ushort)(x + 4)' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(ushort)(x + 4)' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(char)(x + '\x5')' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(int)(x + 6)' 6);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(int)(x + 6)' 6);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(uint)(x + 7)' 7);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(uint)(x + 7)' 7);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(long)(x + 8)' 8);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(long)(x + 8)' 8);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(ulong)(x + 9)' 9);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(ulong)(x + 9)' 9);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(float)(x + 10.5)' 10.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(float)(x + 10.5)' 10.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(double)(x + 11.5)' 11.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal)(double)(x + 11.5)' 11.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (decimal)(x + 79228162514264337593543950336.0);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ConversionsToDecimalWork_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (decimal)(x - 79228162514264337593543950336.0);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(byte?)(x1 + 2)' 2);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(byte?)(x1 + 2)' 2);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(short?)(x1 + 3)' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(short?)(x1 + 3)' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(ushort?)(x1 + 4)' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(ushort?)(x1 + 4)' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(char?)(x1 + '\x5')' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(int?)(x1 + 6)' 6);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(int?)(x1 + 6)' 6);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(uint?)(x1 + 7)' 7);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(uint?)(x1 + 7)' 7);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(long?)(x1 + 8)' 8);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(long?)(x1 + 8)' 8);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(ulong?)(x1 + 9)' 9);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(ulong?)(x1 + 9)' 9);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(float?)(x1 + 10.5)' 10.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(float?)(x1 + 10.5)' 10.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(double?)(x1 + 11.5)' 11.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: AssertIsDecimalAndEqualTo ((decimal?)(double?)(x1 + 11.5)' 11.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (decimal?)(x1 + 79228162514264337593543950336.0);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableConversionsToDecimalWork_SPI_1580_1581_1587,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (decimal?)(x1 - 79228162514264337593543950336.0);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToSByte_SPI_1580,The following statement contains a magic number: Assert.AreEqual (-128' (sbyte)(x - 128.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToSByte_SPI_1580,The following statement contains a magic number: Assert.AreEqual (127' (sbyte)(x + 127.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToSByte_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (sbyte)(x - 129);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToSByte_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (sbyte)(x + 128);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToSByte_SPI_1580,The following statement contains a magic number: Assert.AreEqual (-128' decimal.ToSByte (x - 128.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToSByte_SPI_1580,The following statement contains a magic number: Assert.AreEqual (127' decimal.ToSByte (x + 127.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToSByte_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = decimal.ToSByte (x - 129);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToSByte_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = decimal.ToSByte (x + 128);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToByte_SPI_1580,The following statement contains a magic number: Assert.AreEqual (255' (byte)(x + 255.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToByte_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (byte)(x + 256);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToByte_SPI_1580,The following statement contains a magic number: Assert.AreEqual (255' decimal.ToByte (x + 255.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToByte_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = decimal.ToByte (x + 256);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToShort_SPI_1580,The following statement contains a magic number: Assert.AreEqual (-32768' (short)(x - 32768.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToShort_SPI_1580,The following statement contains a magic number: Assert.AreEqual (32767' (short)(x + 32767.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToShort_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (short)(x - 32769);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToShort_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (short)(x + 32768);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToShort_SPI_1580,The following statement contains a magic number: Assert.AreEqual (-32768' decimal.ToInt16 (x - 32768.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToShort_SPI_1580,The following statement contains a magic number: Assert.AreEqual (32767' decimal.ToInt16 (x + 32767.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToShort_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = decimal.ToInt16 (x - 32769);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToShort_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = decimal.ToInt16 (x + 32768);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToUShort_SPI_1580,The following statement contains a magic number: Assert.AreEqual (65535' (ushort)(x + 65535.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToUShort_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (ushort)(x + 65536);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToUShort_SPI_1580,The following statement contains a magic number: Assert.AreEqual (65535' decimal.ToUInt16 (x + 65535.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToUShort_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = decimal.ToUInt16 (x + 65536);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToChar,The following statement contains a magic number: Assert.AreEqual (65535' (int)(char)(x + 65535.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToChar,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (char)(x + 65536);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToInt_SPI_1580,The following statement contains a magic number: Assert.AreEqual (-2147483648' (int)(x - 2147483648.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToInt_SPI_1580,The following statement contains a magic number: Assert.AreEqual (2147483647' (int)(x + 2147483647.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToInt_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (int)(x - 2147483649);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToInt_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (int)(x + 2147483648);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToInt_SPI_1580,The following statement contains a magic number: Assert.AreEqual (-2147483648' decimal.ToInt32 (x - 2147483648.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToInt_SPI_1580,The following statement contains a magic number: Assert.AreEqual (2147483647' decimal.ToInt32 (x + 2147483647.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToInt_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = decimal.ToInt32 (x - 2147483649);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToInt_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = decimal.ToInt32 (x + 2147483648);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToUInt_SPI_1580,The following statement contains a magic number: Assert.AreEqual (4294967295' (uint)(x + 4294967295.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToUInt_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (uint)(x + 4294967296);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToUInt_SPI_1580,The following statement contains a magic number: Assert.AreEqual (4294967295' decimal.ToUInt32 (x + 4294967295.9m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToUInt_SPI_1580,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = decimal.ToUInt32 (x + 4294967296);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToFloat,The following statement contains a magic number: Assert.AreEqual (10.5' (float)(x + 10.5m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToFloat,The following statement contains a magic number: Assert.AreEqual (10.5' decimal.ToSingle (x + 10.5m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToDouble,The following statement contains a magic number: Assert.AreEqual (10.5' (double)(x + 10.5m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DecimalToDouble,The following statement contains a magic number: Assert.AreEqual (10.5' decimal.ToDouble (x + 10.5m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToSByte,The following statement contains a magic number: Assert.AreEqual (-128' (sbyte?)(x1 - 128));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToSByte,The following statement contains a magic number: Assert.AreEqual (-128' (sbyte?)(x1 - 128));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToSByte,The following statement contains a magic number: Assert.AreEqual (127' (sbyte?)(x1 + 127));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToSByte,The following statement contains a magic number: Assert.AreEqual (127' (sbyte?)(x1 + 127));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToSByte,The following statement contains a magic number: Assert.AreEqual (-128' (sbyte)(x1 - 128));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToSByte,The following statement contains a magic number: Assert.AreEqual (-128' (sbyte)(x1 - 128));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToSByte,The following statement contains a magic number: Assert.AreEqual (127' (sbyte)(x1 + 127));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToSByte,The following statement contains a magic number: Assert.AreEqual (127' (sbyte)(x1 + 127));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToSByte,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (sbyte?)(x1 - 129);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToSByte,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (sbyte?)(x1 + 128);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToSByte,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (sbyte)(x1 - 129);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToSByte,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (sbyte)(x1 + 128);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToByte,The following statement contains a magic number: Assert.AreEqual (255' (byte?)(x1 + 255));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToByte,The following statement contains a magic number: Assert.AreEqual (255' (byte?)(x1 + 255));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToByte,The following statement contains a magic number: Assert.AreEqual (255' (byte)(x1 + 255));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToByte,The following statement contains a magic number: Assert.AreEqual (255' (byte)(x1 + 255));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToByte,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (byte?)(x1 + 256);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToByte,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (byte)(x1 + 256);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToShort,The following statement contains a magic number: Assert.AreEqual (-32768' (short?)(x1 - 32768));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToShort,The following statement contains a magic number: Assert.AreEqual (-32768' (short?)(x1 - 32768));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToShort,The following statement contains a magic number: Assert.AreEqual (32767' (short?)(x1 + 32767));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToShort,The following statement contains a magic number: Assert.AreEqual (32767' (short?)(x1 + 32767));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToShort,The following statement contains a magic number: Assert.AreEqual (-32768' (short)(x1 - 32768));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToShort,The following statement contains a magic number: Assert.AreEqual (-32768' (short)(x1 - 32768));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToShort,The following statement contains a magic number: Assert.AreEqual (32767' (short)(x1 + 32767));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToShort,The following statement contains a magic number: Assert.AreEqual (32767' (short)(x1 + 32767));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToShort,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (short?)(x1 - 32769);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToShort,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (short?)(x1 + 32768);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToShort,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (short)(x1 - 32769);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToShort,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (short)(x1 + 32768);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToUShort,The following statement contains a magic number: Assert.AreEqual (65535' (ushort?)(x1 + 65535));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToUShort,The following statement contains a magic number: Assert.AreEqual (65535' (ushort?)(x1 + 65535));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToUShort,The following statement contains a magic number: Assert.AreEqual (65535' (ushort)(x1 + 65535));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToUShort,The following statement contains a magic number: Assert.AreEqual (65535' (ushort)(x1 + 65535));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToUShort,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (ushort?)(x1 + 65536);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToUShort,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (ushort)(x1 + 65536);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToChar,The following statement contains a magic number: Assert.AreEqual (65535' (int?)(char?)(x1 + 65535));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToChar,The following statement contains a magic number: Assert.AreEqual (65535' (int?)(char?)(x1 + 65535));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToChar,The following statement contains a magic number: Assert.AreEqual (65535' (int)(char)(x1 + 65535));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToChar,The following statement contains a magic number: Assert.AreEqual (65535' (int)(char)(x1 + 65535));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToChar,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (char?)(x1 + 65536);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToChar,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (char)(x1 + 65536);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToInt,The following statement contains a magic number: Assert.AreEqual (-2147483648' (int?)(x1 - 2147483648));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToInt,The following statement contains a magic number: Assert.AreEqual (-2147483648' (int?)(x1 - 2147483648));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToInt,The following statement contains a magic number: Assert.AreEqual (2147483647' (int?)(x1 + 2147483647));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToInt,The following statement contains a magic number: Assert.AreEqual (2147483647' (int?)(x1 + 2147483647));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToInt,The following statement contains a magic number: Assert.AreEqual (-2147483648' (int)(x1 - 2147483648));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToInt,The following statement contains a magic number: Assert.AreEqual (-2147483648' (int)(x1 - 2147483648));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToInt,The following statement contains a magic number: Assert.AreEqual (2147483647' (int)(x1 + 2147483647));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToInt,The following statement contains a magic number: Assert.AreEqual (2147483647' (int)(x1 + 2147483647));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToInt,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (int?)(x1 - 2147483649);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToInt,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (int?)(x1 + 2147483648);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToInt,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (int)(x1 - 2147483649);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToInt,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (int)(x1 + 2147483648);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToUInt,The following statement contains a magic number: Assert.AreEqual (4294967295' (uint?)(x1 + 4294967295));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToUInt,The following statement contains a magic number: Assert.AreEqual (4294967295' (uint?)(x1 + 4294967295));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToUInt,The following statement contains a magic number: Assert.AreEqual (4294967295' (uint)(x1 + 4294967295));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToUInt,The following statement contains a magic number: Assert.AreEqual (4294967295' (uint)(x1 + 4294967295));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToUInt,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (uint?)(x1 + 4294967296);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToUInt,The following statement contains a magic number: Assert.Throws<OverflowException> (() =>  {  	var _ = (uint)(x1 + 4294967296);  });  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToLong_SPI_1582,The following statement contains a magic number: Assert.AreEqual (-21474836480L' (long?)(x1 - 21474836480));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToLong_SPI_1582,The following statement contains a magic number: Assert.AreEqual (21474836470L' (long?)(x1 + 21474836470));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToLong_SPI_1582,The following statement contains a magic number: Assert.AreEqual (-21474836480L' (long)(x1 - 21474836480));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToLong_SPI_1582,The following statement contains a magic number: Assert.AreEqual (21474836470L' (long)(x1 + 21474836470));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToULong_SPI_1582,The following statement contains a magic number: Assert.AreEqual (42949672950UL' (ulong?)(x1 + 42949672950));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToULong_SPI_1582,The following statement contains a magic number: Assert.AreEqual (42949672950UL' (ulong)(x1 + 42949672950));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToFloat_SPI_1579,The following statement contains a magic number: Assert.AreEqual (10.5' f1);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToFloat_SPI_1579,The following statement contains a magic number: Assert.AreEqual (10.5' f2);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToDouble_SPI_1579,The following statement contains a magic number: Assert.AreEqual (10.5' (double?)(x1 + 10.5m));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NullableDecimalToDouble_SPI_1579,The following statement contains a magic number: Assert.AreEqual (10.5' d1);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (+x' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (-x' -3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x + 4m' 7);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x++' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (++x' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x--' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (--x' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x * 3m' 9);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x / 2m' 1.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,OperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (14m % x' 2);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (+x1' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (-x1' -3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x1 + 4m' 7);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x1++' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x1' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (++x1' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x1' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x1--' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x1' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (--x1' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x1' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x1 * 3m' 9);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (x1 / 2m' 1.5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,LiftedOperatorsWork_SPI_1583,The following statement contains a magic number: AssertIsDecimalAndEqualTo (14m % x1' 2);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,AddWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Add (3m' 4m)' 7);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,CeilingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Ceiling (3.1m)' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,CeilingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Ceiling (-3.9m)' -3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,CeilingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Ceiling (3m)' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,DivideWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Divide (3m' 4m)' 0.75);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,FloorWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Floor (3.9m)' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,FloorWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Floor (-3.1m)' -4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,FloorWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Floor (3m)' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RemainderWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Remainder (14m' 3m)' 2);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,MultiplyWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Multiply (3m' 2m)' 6);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,NegateWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Negate (3m)' -3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Parse ("123")' 123);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Parse ("0.123")' .123);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Parse (".123")' .123);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Parse ("123.456")' 123.456);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Parse ("-123.456")' -123.456);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (d1' 123.456);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (d2' 123.456);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,TryParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (d' 123);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,TryParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (d' .123);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,TryParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (d' .123);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,TryParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (d' 123.456);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,TryParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (d' -123.456);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,TryParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (d' 123.456);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,TryParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (d' 123.456);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,TryParseWorks_SPI_1586,The following statement contains a magic number: AssertIsDecimalAndEqualTo (d' 12);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (3.2m)' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (4.5m)' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (3.2209m' 2)' 3.22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (3.2209m' 2)' 3.22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (.2209m' 2)' .22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (.2209m' 2)' .22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (3.225m' 2)' 3.22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (3.225m' 2)' 3.22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (4.5m' MidpointRounding.AwayFromZero)' 5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (-4.5m' MidpointRounding.AwayFromZero)' -5);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (4.5m' MidpointRounding.ToEven)' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (-4.5m' MidpointRounding.ToEven)' -4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (4.225m' 2' MidpointRounding.AwayFromZero)' 4.23);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (4.225m' 2' MidpointRounding.AwayFromZero)' 4.23);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (-4.225m' 2' MidpointRounding.AwayFromZero)' -4.23);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (-4.225m' 2' MidpointRounding.AwayFromZero)' -4.23);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (4.2249m' 2' MidpointRounding.AwayFromZero)' 4.22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (4.2249m' 2' MidpointRounding.AwayFromZero)' 4.22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (-4.2249m' 2' MidpointRounding.AwayFromZero)' -4.22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (-4.2249m' 2' MidpointRounding.AwayFromZero)' -4.22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (4.225m' 2' MidpointRounding.ToEven)' 4.22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (4.225m' 2' MidpointRounding.ToEven)' 4.22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (-4.225m' 2' MidpointRounding.ToEven)' -4.22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (-4.225m' 2' MidpointRounding.ToEven)' -4.22);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (4.2251m' 2' MidpointRounding.ToEven)' 4.23);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (4.2251m' 2' MidpointRounding.ToEven)' 4.23);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (-4.2251m' 2' MidpointRounding.ToEven)' -4.23);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,RoundWithDecimalsAndMidpointRoundingWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Round (-4.2251m' 2' MidpointRounding.ToEven)' -4.23);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,TruncateWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Truncate (3.9m)' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,TruncateWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Truncate (-3.9m)' -3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,TruncateWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Truncate (3m)' 3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,SubtractWorks,The following statement contains a magic number: AssertIsDecimalAndEqualTo (decimal.Subtract (7m' 3m)' 4);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,GetHashCodeWorks,The following statement contains a magic number: Assert.AreNotEqual (((decimal)0.5).GetHashCode ()' ((decimal)0).GetHashCode ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,EqualsWorks,The following statement contains a magic number: Assert.False (((decimal)0).Equals ((object)(decimal)0.5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,StaticEqualsWorks,The following statement contains a magic number: Assert.False (decimal.Equals (0' 0.5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,IEquatableEqualsWorks,The following statement contains a magic number: Assert.False (((decimal)0).Equals ((decimal)0.5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,IEquatableEqualsWorks,The following statement contains a magic number: Assert.False (((IEquatable<decimal>)((decimal)0)).Equals ((decimal)0.5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,CompareToWorks,The following statement contains a magic number: Assert.True (((decimal)0).CompareTo ((decimal)0.5) < 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,IComparableCompareToWorks,The following statement contains a magic number: Assert.True (((IComparable<decimal>)((decimal)0)).CompareTo ((decimal)0.5) < 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The following statement contains a magic number: Assert.AreEqual ("0"' (decimal.Round (new Decimal (0)' 8' MidpointRounding.ToEven)).ToString ()' "(Decimal.round(new Decimal(0)' 8' Decimal.MidpointRounding.ToEven)).ToString() == \"0\" FAILED");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The following statement contains a magic number: Assert.AreEqual ("0"' ((decimal.Parse ("0.3")) - (decimal.Parse ("0.1")) * 3).ToString ()' "(new Decimal(\"0.3\")).sub((new Decimal(\"0.1\")).mul(3)).toString() == \"0\" FAILED");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The following statement contains a magic number: Assert.AreEqual ("0.000000000000000000000000002"' (decimal.Round (decimal.Parse ("0.0000000000000000000000000015")' 27' MidpointRounding.ToEven)).ToString ()' "(Decimal.round(new Decimal(\"0.0000000000000000000000000015\")' 27' Decimal.MidpointRounding.ToEven)).toString() == \"0.000000000000000000000000002\" FAILED");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The following statement contains a magic number: Assert.AreEqual ("0.000000000000000000002"' (decimal.Round (decimal.Parse ("0.0000000000000000000015")' 21' MidpointRounding.ToEven)).ToString ()' "(Decimal.round(new Decimal(\"0.0000000000000000000015\")' 21' Decimal.MidpointRounding.ToEven)).toString() == \"0.000000000000000000002\" FAILED");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The following statement contains a magic number: d = 2;  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The following statement contains a magic number: d = -2;  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The following statement contains a magic number: d = 2;  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DecimalTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DecimalTests.cs,ImplementationTests_SPI_1588_1590_1650,The following statement contains a magic number: d = -2;  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,TypePropertiesAreCorrect_SPI_1597,The following statement contains a magic number: Assert.AreEqual (6' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,CharAndCountConstructorWorks,The following statement contains a magic number: Assert.AreEqual ("xxxxx"' new string ('x'' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,CharArrayWithStartIndexAndLengthConstructorWorks,The following statement contains a magic number: Assert.AreEqual ("bc"' new string (new[] {  	'a''  	'b''  	'c''  	'D'  }' 1' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LengthPropertyWorks,The following statement contains a magic number: Assert.AreEqual (4' "abcd".Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,CharAtWorks,The following statement contains a magic number: Assert.AreEqual ("c"' "abcd".CharAt (2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,CharCodeAtWorks,The following statement contains a magic number: Assert.AreEqual ((int)'c'' (int)"abcd".CharCodeAt (2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("12"' string.Concat (1' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123"' string.Concat (1' 2' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123"' string.Concat (1' 2' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("1234"' string.Concat (1' 2' 3' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("1234"' string.Concat (1' 2' 3' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("1234"' string.Concat (1' 2' 3' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("12345"' string.Concat (1' 2' 3' 4' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("12345"' string.Concat (1' 2' 3' 4' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("12345"' string.Concat (1' 2' 3' 4' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("12345"' string.Concat (1' 2' 3' 4' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123456"' string.Concat (1' 2' 3' 4' 5' 6));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123456"' string.Concat (1' 2' 3' 4' 5' 6));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123456"' string.Concat (1' 2' 3' 4' 5' 6));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123456"' string.Concat (1' 2' 3' 4' 5' 6));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123456"' string.Concat (1' 2' 3' 4' 5' 6));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("1234567"' string.Concat (1' 2' 3' 4' 5' 6' 7));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("1234567"' string.Concat (1' 2' 3' 4' 5' 6' 7));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("1234567"' string.Concat (1' 2' 3' 4' 5' 6' 7));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("1234567"' string.Concat (1' 2' 3' 4' 5' 6' 7));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("1234567"' string.Concat (1' 2' 3' 4' 5' 6' 7));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("1234567"' string.Concat (1' 2' 3' 4' 5' 6' 7));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("12345678"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("12345678"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("12345678"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("12345678"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("12345678"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("12345678"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("12345678"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123456789"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8' 9));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123456789"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8' 9));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123456789"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8' 9));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123456789"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8' 9));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123456789"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8' 9));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123456789"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8' 9));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123456789"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8' 9));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,ConcatWithObjectsWorks,The following statement contains a magic number: Assert.AreEqual ("123456789"' string.Concat (1' 2' 3' 4' 5' 6' 7' 8' 9));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,FormatWorksWithIFormattable_SPI_1598,The following statement contains a magic number: Assert.AreEqual ("3.14"' string.Format ("{0:F2}"' 22.0 / 7.0));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,FormatWorksWithIFormattable_SPI_1598,The following statement contains a magic number: Assert.AreEqual ("3.14"' string.Format ("{0:F2}"' 22.0 / 7.0));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,FormatWorksWithIFormattableAndFormatProvider_SPI_1598,The following statement contains a magic number: Assert.AreEqual ("3.14"' string.Format (new MyFormatProvider ()' "{0:F2}"' 22.0 / 7.0));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,FormatWorksWithIFormattableAndFormatProvider_SPI_1598,The following statement contains a magic number: Assert.AreEqual ("3.14"' string.Format (new MyFormatProvider ()' "{0:F2}"' 22.0 / 7.0));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfCharWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (4' "abcabc".IndexOf ('b'' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfCharWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (4' "abcabc".IndexOf ('b'' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfCharWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcabc".IndexOf ('d'' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (7' "xxxxxabcxxx".IndexOf ('c'' 3' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (7' "xxxxxabcxxx".IndexOf ('c'' 3' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (7' "xxxxxabcxxx".IndexOf ('c'' 3' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (7' "xxxxxabcxxx".IndexOf ('c'' 3' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (7' "xxxxxabcxxx".IndexOf ('c'' 3' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (7' "xxxxxabcxxx".IndexOf ('c'' 3' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "xxxxxabcxxx".IndexOf ('c'' 3' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "xxxxxabcxxx".IndexOf ('c'' 3' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfStringWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (4' "abcabc".IndexOf ("bc"' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfStringWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (4' "abcabc".IndexOf ("bc"' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfStringWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcabc".IndexOf ("bd"' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "xxxxxabcxxx".IndexOf ("abc"' 3' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "xxxxxabcxxx".IndexOf ("abc"' 3' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "xxxxxabcxxx".IndexOf ("abc"' 3' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "xxxxxabcxxx".IndexOf ("abc"' 3' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "xxxxxabcxxx".IndexOf ("abc"' 3' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "xxxxxabcxxx".IndexOf ("abc"' 3' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "xxxxxabcxxx".IndexOf ("abc"' 3' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "xxxxxabcxxx".IndexOf ("abc"' 3' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b'  }' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b'  }' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b''  	'x'  }' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b''  	'x'  }' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b''  	'x''  	'y'  }' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b''  	'x''  	'y'  }' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcdabcd".IndexOfAny (new[] {  	'x''  	'y'  }' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b''  	'x'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b''  	'x'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b''  	'x'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b''  	'x''  	'y'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b''  	'x''  	'y'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (5' "abcdabcd".IndexOfAny (new[] {  	'b''  	'x''  	'y'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcdabcd".IndexOfAny (new[] {  	'x''  	'y'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcdabcd".IndexOfAny (new[] {  	'x''  	'y'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcdabcd".IndexOfAny (new[] {  	'c'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,IndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcdabcd".IndexOfAny (new[] {  	'c'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,InsertWorks,The following statement contains a magic number: Assert.AreEqual ("abxyzcd"' "abcd".Insert (2' "xyz"));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfCharWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (1' "abcabc".LastIndexOf ('b'' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfCharWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcabc".LastIndexOf ('d'' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfStringWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (1' "abcabc".LastIndexOf ("bc"' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfStringWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcabc".LastIndexOf ("bd"' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (1' "abcabc".LastIndexOf ('b'' 3' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (1' "abcabc".LastIndexOf ('b'' 3' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcabc".LastIndexOf ('b'' 3' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcabc".LastIndexOf ('b'' 3' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcabc".LastIndexOf ('d'' 3' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfCharWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcabc".LastIndexOf ('d'' 3' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (1' "xbcxxxbc".LastIndexOf ("bc"' 3' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (1' "xbcxxxbc".LastIndexOf ("bc"' 3' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "xbcxxxbc".LastIndexOf ("bc"' 3' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "xbcxxxbc".LastIndexOf ("bc"' 3' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "xbcxxxbc".LastIndexOf ("bd"' 3' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfStringWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "xbcxxxbc".LastIndexOf ("bd"' 3' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (1' "abcdabcd".LastIndexOfAny (new[] {  	'b'  }' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (1' "abcdabcd".LastIndexOfAny (new[] {  	'b''  	'x'  }' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (1' "abcdabcd".LastIndexOfAny (new[] {  	'b''  	'x''  	'y'  }' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcdabcd".LastIndexOfAny (new[] {  	'x''  	'y'  }' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (1' "abcdabcd".LastIndexOfAny (new[] {  	'b'  }' 4' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (1' "abcdabcd".LastIndexOfAny (new[] {  	'b'  }' 4' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (1' "abcdabcd".LastIndexOfAny (new[] {  	'b''  	'x'  }' 4' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (1' "abcdabcd".LastIndexOfAny (new[] {  	'b''  	'x'  }' 4' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (1' "abcdabcd".LastIndexOfAny (new[] {  	'b''  	'x''  	'y'  }' 4' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (1' "abcdabcd".LastIndexOfAny (new[] {  	'b''  	'x''  	'y'  }' 4' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcdabcd".LastIndexOfAny (new[] {  	'x''  	'y'  }' 4' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcdabcd".LastIndexOfAny (new[] {  	'x''  	'y'  }' 4' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcdabcd".LastIndexOfAny (new[] {  	'b'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,LastIndexOfAnyWithStartIndexAndCountWorks,The following statement contains a magic number: Assert.AreEqual (-1' "abcdabcd".LastIndexOfAny (new[] {  	'b'  }' 4' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,PadLeftWorks,The following statement contains a magic number: Assert.AreEqual ("  abc"' "abc".PadLeft (5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,PadLeftWithCharWorks,The following statement contains a magic number: Assert.AreEqual ("00abc"' "abc".PadLeft (5' '0'));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,PadRightWorks,The following statement contains a magic number: Assert.AreEqual ("abc  "' "abc".PadRight (5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,PadRightWithCharWorks,The following statement contains a magic number: Assert.AreEqual ("abc00"' "abc".PadRight (5' '0'));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,RemoveWorks,The following statement contains a magic number: Assert.AreEqual ("ab"' "abcde".Remove (2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,RemoveWithCountWorks,The following statement contains a magic number: Assert.AreEqual ("abe"' "abcde".Remove (2' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,RemoveWithCountWorks,The following statement contains a magic number: Assert.AreEqual ("abe"' "abcde".Remove (2' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SearchWorks,The following statement contains a magic number: Assert.AreEqual (2' "abcabcabc".Search (new Bridge.Text.RegularExpressions.Regex ("ca")));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SplitWithCharsAndLimitWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	"a"'  	"cabcabc"  }' "abcabcabc".Split (new[] {  	'b'  }' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SplitWithCharsAndStringSplitOptionsAndLimitWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	"a"'  	"cabcabc"  }' "abxcabcabc".Split (new[] {  	'b''  	'x'  }' 2' StringSplitOptions.RemoveEmptyEntries));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The following statement contains a magic number: Assert.AreEqual (new[] {  	"a"'  	"bc"'  	"de"  }' "axybcxzde".Split (new[] {  	"xy"'  	"xz"  }' 100' StringSplitOptions.None));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The following statement contains a magic number: Assert.AreEqual (new[] {  	"a"'  	"bc"'  	"de"'  	""  }' "axybcxzdexz".Split (new[] {  	"xy"'  	"xz"  }' 100' StringSplitOptions.None));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The following statement contains a magic number: Assert.AreEqual (new[] {  	""'  	"a"'  	"bc"'  	"de"'  	""  }' "xzaxybcxzdexz".Split (new[] {  	"xy"'  	"xz"  }' 100' StringSplitOptions.None));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The following statement contains a magic number: Assert.AreEqual (new[] {  	""'  	"a"'  	""'  	"bc"'  	"de"'  	""  }' "xzaxyxzbcxzdexz".Split (new[] {  	"xy"'  	"xz"  }' 100' StringSplitOptions.None));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The following statement contains a magic number: Assert.AreEqual (new[] {  	""'  	"a"'  	""'  	""'  	"bc"'  	"de"'  	""  }' "xzaxyxzxybcxzdexz".Split (new[] {  	"xy"'  	"xz"  }' 100' StringSplitOptions.None));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The following statement contains a magic number: Assert.AreEqual (new[] {  	"a"'  	"bcxzde"  }' "axybcxzde".Split (new[] {  	"xy"'  	"xz"  }' 2' StringSplitOptions.None));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The following statement contains a magic number: Assert.AreEqual (new[] {  	"a"'  	"bcxzdexz"  }' "axybcxzdexz".Split (new[] {  	"xy"'  	"xz"  }' 2' StringSplitOptions.None));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The following statement contains a magic number: Assert.AreEqual (new[] {  	"a"'  	"xzbcxzdexz"  }' "axyxzbcxzdexz".Split (new[] {  	"xy"'  	"xz"  }' 2' StringSplitOptions.None));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The following statement contains a magic number: Assert.AreEqual (new[] {  	""'  	"axybcxzdexz"  }' "xzaxybcxzdexz".Split (new[] {  	"xy"'  	"xz"  }' 2' StringSplitOptions.None));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The following statement contains a magic number: Assert.AreEqual (new[] {  	"a"'  	"bcxzde"  }' "axybcxzde".Split (new[] {  	"xy"'  	"xz"  }' 2' StringSplitOptions.RemoveEmptyEntries));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The following statement contains a magic number: Assert.AreEqual (new[] {  	"a"'  	"bcxzdexz"  }' "axybcxzdexz".Split (new[] {  	"xy"'  	"xz"  }' 2' StringSplitOptions.RemoveEmptyEntries));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The following statement contains a magic number: Assert.AreEqual (new[] {  	"a"'  	"bcxzdexz"  }' "axyxzbcxzdexz".Split (new[] {  	"xy"'  	"xz"  }' 2' StringSplitOptions.RemoveEmptyEntries));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SomeNetSplitTests,The following statement contains a magic number: Assert.AreEqual (new[] {  	"a"'  	"bcxzdexz"  }' "xzaxyxzbcxzdexz".Split (new[] {  	"xy"'  	"xz"  }' 2' StringSplitOptions.RemoveEmptyEntries));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SplitWithStringsAndLimitWorks,The following statement contains a magic number: Assert.AreEqual (new[] {  	"a"'  	"abcabc"  }' "abcbcabcabc".Split (new[] {  	"bc"  }' 2' StringSplitOptions.RemoveEmptyEntries));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SubstrWorks,The following statement contains a magic number: Assert.AreEqual ("cde"' "abcde".Substr (2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SubstrWithLengthWorks,The following statement contains a magic number: Assert.AreEqual ("cd"' "abcde".Substr (2' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SubstrWithLengthWorks,The following statement contains a magic number: Assert.AreEqual ("cd"' "abcde".Substr (2' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SubstringWorks,The following statement contains a magic number: Assert.AreEqual ("cde"' "abcde".Substring (2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SubstringWithLengthWorks,The following statement contains a magic number: Assert.AreEqual ("cd"' "abcde".Substring (2' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,SubstringWithLengthWorks,The following statement contains a magic number: Assert.AreEqual ("cd"' "abcde".Substring (2' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,JsSubstringWithEndIndexWorks,The following statement contains a magic number: Assert.AreEqual ("cd"' "abcde".JsSubstring (2' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,JsSubstringWithEndIndexWorks,The following statement contains a magic number: Assert.AreEqual ("cd"' "abcde".JsSubstring (2' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,StringIndexingWorks,The following statement contains a magic number: Assert.AreEqual ((int)'c'' (int)s [2]);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,StringIndexingWorks,The following statement contains a magic number: Assert.AreEqual ((int)'d'' (int)s [3]);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,StringTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\StringTests.cs,JoinWorks_SPI_1599,The following statement contains a magic number: Assert.AreEqual ("ab' abc"' string.Join ("' "' new[] {  	"a"'  	"ab"'  	"abc"'  	"abcd"  }' 1' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,TypePropertiesAreCorrect_SPI_1608_1609,The following statement contains a magic number: Assert.AreEqual (4' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DefaultConstructorReturnsTodaysDate,The following statement contains a magic number: Assert.True (dt.GetFullYear () > 2011);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,CreatingInstanceReturnsTodaysDate_SPI_1604,The following statement contains a magic number: Assert.True (fullYear > 2011' fullYear + " > 2011");  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,MillisecondSinceEpochConstructorWorks,The following statement contains a magic number: Assert.AreEqual (1971' dt.GetFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,StringConstructorWorks,The following statement contains a magic number: Assert.AreEqual (2012' dt.GetFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,StringConstructorWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.GetMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,StringConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.GetDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDConstructorWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.GetFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDConstructorWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.GetMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.GetDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHConstructorWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.GetFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHConstructorWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.GetMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.GetDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.GetHours ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNConstructorWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.GetFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNConstructorWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.GetMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.GetDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.GetHours ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNConstructorWorks,The following statement contains a magic number: Assert.AreEqual (42' dt.GetMinutes ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNSConstructorWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.GetFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNSConstructorWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.GetMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNSConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.GetDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNSConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.GetHours ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNSConstructorWorks,The following statement contains a magic number: Assert.AreEqual (42' dt.GetMinutes ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNSConstructorWorks,The following statement contains a magic number: Assert.AreEqual (56' dt.GetSeconds ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.GetFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.GetMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.GetDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.GetHours ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (42' dt.GetMinutes ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (56' dt.GetSeconds ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (345' dt.GetMilliseconds ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetFullYearWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.GetFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetMonthWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.GetMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetDateWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.GetDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetHoursWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.GetHours ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetMinutesWorks,The following statement contains a magic number: Assert.AreEqual (42' dt.GetMinutes ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetSecondsWorks,The following statement contains a magic number: Assert.AreEqual (56' dt.GetSeconds ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (345' dt.GetMilliseconds ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetDayWorks,The following statement contains a magic number: Assert.AreEqual (5' dt.GetDay ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetTimeWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' dt.GetTime ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetTimeWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' dt.GetTime ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetTimeWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' dt.GetTime ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,ValueOfWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' dt.ValueOf ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,ValueOfWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' dt.ValueOf ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,ValueOfWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' dt.ValueOf ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetTimezoneOffsetWorks,The following statement contains a magic number: Assert.AreEqual ((double)(new Date (1970' 0' 1).ValueOf ()) / 60000' dt.GetTimezoneOffset ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetTimezoneOffsetWorks,The following statement contains a magic number: Assert.AreEqual ((double)(new Date (1970' 0' 1).ValueOf ()) / 60000' dt.GetTimezoneOffset ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetUtcFullYearWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.GetUTCFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetUtcMonthWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.GetUTCMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetUtcDateWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.GetUTCDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetUtcHoursWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.GetUTCHours ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetUtcMinutesWorks,The following statement contains a magic number: Assert.AreEqual (42' dt.GetUTCMinutes ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetUtcSecondsWorks,The following statement contains a magic number: Assert.AreEqual (56' dt.GetUTCSeconds ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetUtcMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (345' dt.GetUTCMilliseconds ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetUtcDayWorks,The following statement contains a magic number: Assert.AreEqual (5' dt.GetUTCDay ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' new Date (2011' 7' 12) - new Date (2011' 7' 11));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' new Date (2011' 7' 12) - new Date (2011' 7' 11));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' new Date (2011' 7' 12) - new Date (2011' 7' 11));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' new Date (2011' 7' 12) - new Date (2011' 7' 11));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' new Date (2011' 7' 12) - new Date (2011' 7' 11));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' new Date (2011' 7' 12) - new Date (2011' 7' 11));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' new Date (2011' 7' 12) - new Date (2011' 7' 11));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' new Date (2011' 7' 12) - new Date (2011' 7' 11));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' new Date (2011' 7' 12) - new Date (2011' 7' 11));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) == new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) == new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) == new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) == new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) == new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) == new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) == new Date (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) == new Date (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) == new Date (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) == new Date (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) == new Date (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) == new Date (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.AreStrictEqual (false' new Date (2011' 7' 12) == (Date)null);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.AreStrictEqual (false' new Date (2011' 7' 12) == (Date)null);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.AreStrictEqual (false' new Date (2011' 7' 12) == (Date)null);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.AreStrictEqual (false' (Date)null == new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.AreStrictEqual (false' (Date)null == new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.AreStrictEqual (false' (Date)null == new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) != new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) != new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) != new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) != new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) != new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) != new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) != new Date (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) != new Date (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) != new Date (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) != new Date (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) != new Date (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) != new Date (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' new Date (2011' 7' 12) != (Date)null);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' new Date (2011' 7' 12) != (Date)null);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' new Date (2011' 7' 12) != (Date)null);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' (Date)null != new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' (Date)null != new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' (Date)null != new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 11) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 11) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 11) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 11) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 11) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 11) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 13) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 13) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 13) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 13) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 13) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 13) < new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 11) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 11) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 11) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 11) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 11) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 11) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 13) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 13) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 13) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 13) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 13) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 13) <= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 11) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 11) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 11) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 11) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 11) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 11) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 12) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 13) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 13) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 13) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 13) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 13) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 13) > new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 11) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 11) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 11) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 11) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 11) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.False (new Date (2011' 7' 11) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 12) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 13) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 13) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 13) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 13) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 13) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new Date (2011' 7' 13) >= new Date (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetFullYearWithOneParameterWorks,The following statement contains a magic number: dt.SetFullYear (2021);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetFullYearWithOneParameterWorks,The following statement contains a magic number: Assert.AreEqual (2021' dt.GetFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetFullYearWithTwoParametersWorks,The following statement contains a magic number: dt.SetFullYear (2021' 7);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetFullYearWithTwoParametersWorks,The following statement contains a magic number: dt.SetFullYear (2021' 7);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetFullYearWithTwoParametersWorks,The following statement contains a magic number: Assert.AreEqual (2021' dt.GetFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetFullYearWithTwoParametersWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.GetMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetFullYearWithThreeParametersWorks,The following statement contains a magic number: dt.SetFullYear (2021' 7' 13);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetFullYearWithThreeParametersWorks,The following statement contains a magic number: dt.SetFullYear (2021' 7' 13);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetFullYearWithThreeParametersWorks,The following statement contains a magic number: dt.SetFullYear (2021' 7' 13);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetFullYearWithThreeParametersWorks,The following statement contains a magic number: Assert.AreEqual (2021' dt.GetFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetFullYearWithThreeParametersWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.GetMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetFullYearWithThreeParametersWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.GetDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetMonthWorks,The following statement contains a magic number: dt.SetMonth (3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetMonthWorks,The following statement contains a magic number: Assert.AreEqual (3' dt.GetMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetDateWorks,The following statement contains a magic number: dt.SetDate (12);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetDateWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.GetDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetHoursWorks,The following statement contains a magic number: dt.SetHours (11);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetHoursWorks,The following statement contains a magic number: Assert.AreEqual (11' dt.GetHours ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetMinutesWorks,The following statement contains a magic number: dt.SetMinutes (34);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetMinutesWorks,The following statement contains a magic number: Assert.AreEqual (34' dt.GetMinutes ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetSecondsWorks,The following statement contains a magic number: dt.SetSeconds (23);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetSecondsWorks,The following statement contains a magic number: Assert.AreEqual (23' dt.GetSeconds ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetMillisecondsWorks,The following statement contains a magic number: dt.SetMilliseconds (435);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (435' dt.GetMilliseconds ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcFullYearWithOneParameterWorks,The following statement contains a magic number: dt.SetUTCFullYear (2021);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcFullYearWithOneParameterWorks,The following statement contains a magic number: Assert.AreEqual (2021' dt.GetUTCFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcFullYearWithTwoParametersWorks,The following statement contains a magic number: dt.SetUTCFullYear (2021' 7);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcFullYearWithTwoParametersWorks,The following statement contains a magic number: dt.SetUTCFullYear (2021' 7);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcFullYearWithTwoParametersWorks,The following statement contains a magic number: Assert.AreEqual (2021' dt.GetUTCFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcFullYearWithTwoParametersWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.GetUTCMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcFullYearWithThreeParametersWorks,The following statement contains a magic number: dt.SetUTCFullYear (2021' 7' 13);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcFullYearWithThreeParametersWorks,The following statement contains a magic number: dt.SetUTCFullYear (2021' 7' 13);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcFullYearWithThreeParametersWorks,The following statement contains a magic number: dt.SetUTCFullYear (2021' 7' 13);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcFullYearWithThreeParametersWorks,The following statement contains a magic number: Assert.AreEqual (2021' dt.GetUTCFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcFullYearWithThreeParametersWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.GetUTCMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcFullYearWithThreeParametersWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.GetUTCDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcMonthWorks,The following statement contains a magic number: dt.SetUTCMonth (3);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcMonthWorks,The following statement contains a magic number: Assert.AreEqual (3' dt.GetUTCMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcDateWorks,The following statement contains a magic number: dt.SetUTCDate (12);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcDateWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.GetUTCDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcHoursWorks,The following statement contains a magic number: dt.SetUTCHours (11);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcHoursWorks,The following statement contains a magic number: Assert.AreEqual (11' dt.GetUTCHours ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcMinutesWorks,The following statement contains a magic number: dt.SetUTCMinutes (34);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcMinutesWorks,The following statement contains a magic number: Assert.AreEqual (34' dt.GetUTCMinutes ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcSecondsWorks,The following statement contains a magic number: dt.SetUTCSeconds (23);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcSecondsWorks,The following statement contains a magic number: Assert.AreEqual (23' dt.GetUTCSeconds ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcMillisecondsWorks,The following statement contains a magic number: dt.SetUTCMilliseconds (435);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,SetUtcMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (435' dt.GetUTCMilliseconds ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,GetHashCodeWorks,The following statement contains a magic number: Assert.True ((long)new Date (3000' 1' 1).GetHashCode () < 0xffffffffL);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\JsDateTests.cs,AddTimezoneMinutesOffset,The following statement contains a magic number: return new Date (dt.GetTime () - dt.GetTimezoneOffset () * 60000);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,TypePropertiesAreCorrect_SPI_1607_1608_1609,The following statement contains a magic number: Assert.AreEqual (4' interfaces.Length);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,MillisecondSinceEpochConstructorWorks,The following statement contains a magic number: Assert.AreEqual (1970' dt.AddDays (1).Year);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,StringConstructorWorks,The following statement contains a magic number: Assert.AreEqual (2012' dt.Year);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,StringConstructorWorks,The following statement contains a magic number: Assert.AreEqual (8' dt.Month);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,StringConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.Day);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDConstructorWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.Year);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDConstructorWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.Month);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.Day);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHConstructorWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.Year);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHConstructorWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.Month);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.Day);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.Hour);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNConstructorWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.Year);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNConstructorWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.Month);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.Day);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.Hour);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNConstructorWorks,The following statement contains a magic number: Assert.AreEqual (42' dt.Minute);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNSConstructorWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.Year);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNSConstructorWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.Month);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNSConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.Day);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNSConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.Hour);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNSConstructorWorks,The following statement contains a magic number: Assert.AreEqual (42' dt.Minute);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNSConstructorWorks,The following statement contains a magic number: Assert.AreEqual (56' dt.Second);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.Year);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.Month);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.Day);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.Hour);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (42' dt.Minute);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (56' dt.Second);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YMDHNSUConstructorWorks,The following statement contains a magic number: Assert.AreEqual (345' dt.Millisecond);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,NowWorks,The following statement contains a magic number: Assert.True (dt.Year > 2011);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcNowWorks,The following statement contains a magic number: Assert.True (Math.Abs (diff.Seconds) < 1000);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,TodayWorks,The following statement contains a magic number: Assert.True (dt.Year > 2011);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetFullYearWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.Year);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetMonthWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.Month);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetDateWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.Day);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetHoursWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.Hour);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetMinutesWorks,The following statement contains a magic number: Assert.AreEqual (42' dt.Minute);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetSecondsWorks,The following statement contains a magic number: Assert.AreEqual (56' dt.Second);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (345' dt.Millisecond);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetDayWorks,The following statement contains a magic number: Assert.AreEqual (5' dt.DayOfWeek);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetTimeWorks,The following statement contains a magic number: Assert.AreEqual (1440L * 60 * 1000' dt.GetTime ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetTimeWorks,The following statement contains a magic number: Assert.AreEqual (1440L * 60 * 1000' dt.GetTime ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ValueOfWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' dt.ValueOf ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ValueOfWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' dt.ValueOf ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ValueOfWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' dt.ValueOf ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetUtcFullYearWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.GetUtcFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetUtcMonthWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.GetUtcMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetUtcDateWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.GetUtcDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetUtcHoursWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.GetUtcHours ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetUtcMinutesWorks,The following statement contains a magic number: Assert.AreEqual (42' dt.GetUtcMinutes ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetUtcSecondsWorks,The following statement contains a magic number: Assert.AreEqual (56' dt.GetUtcSeconds ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetUtcMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (345' dt.GetUtcMilliseconds ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetUtcDayWorks,The following statement contains a magic number: Assert.AreEqual (5' dt.GetUtcDay ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseWorks,The following statement contains a magic number: Assert.AreEqual (2012' dt.Year);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseWorks,The following statement contains a magic number: Assert.AreEqual (8' dt.Month);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.Day);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseExactWorks,The following statement contains a magic number: Assert.AreEqual (2012' dt.Year);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseExactWorks,The following statement contains a magic number: Assert.AreEqual (8' dt.Month);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseExactWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.Day);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseExactWithCultureWorks,The following statement contains a magic number: Assert.AreEqual (2012' dt.Year);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseExactWithCultureWorks,The following statement contains a magic number: Assert.AreEqual (8' dt.Month);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseExactWithCultureWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.Day);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseExactUtcWorks,The following statement contains a magic number: Assert.AreEqual (2012' dt.GetUtcFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseExactUtcWorks,The following statement contains a magic number: Assert.AreEqual (8' dt.GetUtcMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseExactUtcWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.GetUtcDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseExactUtcWithCultureWorks,The following statement contains a magic number: Assert.AreEqual (2012' dt.GetUtcFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseExactUtcWithCultureWorks,The following statement contains a magic number: Assert.AreEqual (8' dt.GetUtcMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ParseExactUtcWithCultureWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.GetUtcDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12))' 2011' 7' 12' 0' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12))' 2011' 7' 12' 0' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12))' 2011' 7' 12' 0' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12))' 2011' 7' 12' 0' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12))' 2011' 7' 12' 0' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12))' 2011' 7' 12' 0' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13))' 2011' 7' 12' 13' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13))' 2011' 7' 12' 13' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13))' 2011' 7' 12' 13' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13))' 2011' 7' 12' 13' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13))' 2011' 7' 12' 13' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13))' 2011' 7' 12' 13' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13))' 2011' 7' 12' 13' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13))' 2011' 7' 12' 13' 0' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42))' 2011' 7' 12' 13' 42' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42))' 2011' 7' 12' 13' 42' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42))' 2011' 7' 12' 13' 42' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42))' 2011' 7' 12' 13' 42' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42))' 2011' 7' 12' 13' 42' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42))' 2011' 7' 12' 13' 42' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42))' 2011' 7' 12' 13' 42' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42))' 2011' 7' 12' 13' 42' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42))' 2011' 7' 12' 13' 42' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42))' 2011' 7' 12' 13' 42' 0' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56))' 2011' 7' 12' 13' 42' 56' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56))' 2011' 7' 12' 13' 42' 56' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56))' 2011' 7' 12' 13' 42' 56' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56))' 2011' 7' 12' 13' 42' 56' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56))' 2011' 7' 12' 13' 42' 56' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56))' 2011' 7' 12' 13' 42' 56' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56))' 2011' 7' 12' 13' 42' 56' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56))' 2011' 7' 12' 13' 42' 56' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56))' 2011' 7' 12' 13' 42' 56' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56))' 2011' 7' 12' 13' 42' 56' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56))' 2011' 7' 12' 13' 42' 56' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56))' 2011' 7' 12' 13' 42' 56' 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,UtcYMDHNSUWorks,The following statement contains a magic number: AssertDateUtc (new DateTime (DateTime.Utc (2011' 7' 12' 13' 42' 56' 345))' 2011' 7' 12' 13' 42' 56' 345);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' (new DateTime (2011' 7' 12) - new DateTime (2011' 7' 11)).TotalMilliseconds);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' (new DateTime (2011' 7' 12) - new DateTime (2011' 7' 11)).TotalMilliseconds);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' (new DateTime (2011' 7' 12) - new DateTime (2011' 7' 11)).TotalMilliseconds);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' (new DateTime (2011' 7' 12) - new DateTime (2011' 7' 11)).TotalMilliseconds);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' (new DateTime (2011' 7' 12) - new DateTime (2011' 7' 11)).TotalMilliseconds);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' (new DateTime (2011' 7' 12) - new DateTime (2011' 7' 11)).TotalMilliseconds);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' (new DateTime (2011' 7' 12) - new DateTime (2011' 7' 11)).TotalMilliseconds);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' (new DateTime (2011' 7' 12) - new DateTime (2011' 7' 11)).TotalMilliseconds);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractingDatesWorks,The following statement contains a magic number: Assert.AreEqual (1440 * 60 * 1000' (new DateTime (2011' 7' 12) - new DateTime (2011' 7' 11)).TotalMilliseconds);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 0' 0' 0)' new DateTime (2011' 7' 12).Subtract (new DateTime (2011' 7' 11)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 0' 0' 0)' new DateTime (2011' 7' 12).Subtract (new DateTime (2011' 7' 11)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 0' 0' 0)' new DateTime (2011' 7' 12).Subtract (new DateTime (2011' 7' 11)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 0' 0' 0)' new DateTime (2011' 7' 12).Subtract (new DateTime (2011' 7' 11)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 0' 0' 0)' new DateTime (2011' 7' 12).Subtract (new DateTime (2011' 7' 11)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 0' 0' 0)' new DateTime (2011' 7' 12).Subtract (new DateTime (2011' 7' 11)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 2' 0' 0)' new DateTime (2011' 7' 12' 15' 0' 0).Subtract (new DateTime (2011' 7' 11' 13' 0' 0)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 2' 0' 0)' new DateTime (2011' 7' 12' 15' 0' 0).Subtract (new DateTime (2011' 7' 11' 13' 0' 0)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 2' 0' 0)' new DateTime (2011' 7' 12' 15' 0' 0).Subtract (new DateTime (2011' 7' 11' 13' 0' 0)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 2' 0' 0)' new DateTime (2011' 7' 12' 15' 0' 0).Subtract (new DateTime (2011' 7' 11' 13' 0' 0)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 2' 0' 0)' new DateTime (2011' 7' 12' 15' 0' 0).Subtract (new DateTime (2011' 7' 11' 13' 0' 0)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 2' 0' 0)' new DateTime (2011' 7' 12' 15' 0' 0).Subtract (new DateTime (2011' 7' 11' 13' 0' 0)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 2' 0' 0)' new DateTime (2011' 7' 12' 15' 0' 0).Subtract (new DateTime (2011' 7' 11' 13' 0' 0)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 2' 0' 0)' new DateTime (2011' 7' 12' 15' 0' 0).Subtract (new DateTime (2011' 7' 11' 13' 0' 0)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SubtractMethodReturningTimeSpanWorks,The following statement contains a magic number: Assert.AreEqual (new TimeSpan (1' 2' 0' 0)' new DateTime (2011' 7' 12' 15' 0' 0).Subtract (new DateTime (2011' 7' 11' 13' 0' 0)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) == new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) == new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) == new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) == new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) == new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) == new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) == new DateTime (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) == new DateTime (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) == new DateTime (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) == new DateTime (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) == new DateTime (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) == new DateTime (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.AreStrictEqual (false' new DateTime (2011' 7' 12) == (DateTime?)null);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.AreStrictEqual (false' new DateTime (2011' 7' 12) == (DateTime?)null);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.AreStrictEqual (false' new DateTime (2011' 7' 12) == (DateTime?)null);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.AreStrictEqual (false' (DateTime?)null == new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.AreStrictEqual (false' (DateTime?)null == new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateEqualityWorks,The following statement contains a magic number: Assert.AreStrictEqual (false' (DateTime?)null == new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) != new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) != new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) != new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) != new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) != new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) != new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) != new DateTime (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) != new DateTime (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) != new DateTime (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) != new DateTime (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) != new DateTime (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) != new DateTime (2011' 7' 13));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' new DateTime (2011' 7' 12) != (DateTime?)null);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' new DateTime (2011' 7' 12) != (DateTime?)null);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' new DateTime (2011' 7' 12) != (DateTime?)null);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' (DateTime?)null != new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' (DateTime?)null != new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateInequalityWorks,The following statement contains a magic number: Assert.AreStrictEqual (true' (DateTime?)null != new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 11) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 11) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 11) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 11) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 11) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 11) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 13) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 13) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 13) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 13) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 13) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 13) < new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 11) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 11) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 11) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 11) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 11) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 11) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 13) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 13) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 13) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 13) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 13) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateLessEqualWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 13) <= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 11) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 11) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 11) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 11) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 11) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 11) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 12) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 13) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 13) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 13) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 13) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 13) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterThanWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 13) > new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 11) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 11) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 11) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 11) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 11) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.False (new DateTime (2011' 7' 11) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 12) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 13) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 13) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 13) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 13) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 13) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DateGreaterEqualWorks,The following statement contains a magic number: Assert.True (new DateTime (2011' 7' 13) >= new DateTime (2011' 7' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ConvertingDateToMutableDateReturnsANewButEqualInstance,The following statement contains a magic number: Assert.AreEqual (2011' mdt.GetFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ConvertingDateToMutableDateReturnsANewButEqualInstance,The following statement contains a magic number: Assert.AreEqual (6' mdt.GetMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ConvertingDateToMutableDateReturnsANewButEqualInstance,The following statement contains a magic number: Assert.AreEqual (12' mdt.GetDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ConvertingMutableDateToDateReturnsANewButEqualInstance,The following statement contains a magic number: Assert.AreEqual (2011' mdt.GetFullYear ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ConvertingMutableDateToDateReturnsANewButEqualInstance,The following statement contains a magic number: Assert.AreEqual (7' mdt.GetMonth ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,ConvertingMutableDateToDateReturnsANewButEqualInstance,The following statement contains a magic number: Assert.AreEqual (12' mdt.GetDate ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetHashCodeWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (10000).GetHashCode ()' new DateTime (10000).GetHashCode ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetHashCodeWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (10000).GetHashCode ()' new DateTime (10000).GetHashCode ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetHashCodeWorks,The following statement contains a magic number: Assert.AreNotEqual (new DateTime (10000).GetHashCode ()' new DateTime (0).GetHashCode ());  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,GetHashCodeWorks,The following statement contains a magic number: Assert.True ((long)new DateTime (3000' 1' 1).GetHashCode () < 0xffffffffL);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,EqualsWorks,The following statement contains a magic number: Assert.False (new DateTime (10000).Equals ((object)new DateTime (0)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,EqualsWorks,The following statement contains a magic number: Assert.False (new DateTime (0).Equals ((object)new DateTime (10000)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,EqualsWorks,The following statement contains a magic number: Assert.True (new DateTime (10000).Equals ((object)new DateTime (10000)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,EqualsWorks,The following statement contains a magic number: Assert.True (new DateTime (10000).Equals ((object)new DateTime (10000)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,IEquatableEqualsWorks_SPI_1608,The following statement contains a magic number: Assert.False (new DateTime (10000).Equals (new DateTime (0)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,IEquatableEqualsWorks_SPI_1608,The following statement contains a magic number: Assert.False (new DateTime (0).Equals (new DateTime (10000)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,IEquatableEqualsWorks_SPI_1608,The following statement contains a magic number: Assert.True (new DateTime (10000).Equals (new DateTime (10000)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,IEquatableEqualsWorks_SPI_1608,The following statement contains a magic number: Assert.True (new DateTime (10000).Equals (new DateTime (10000)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,IEquatableEqualsWorks_SPI_1608,The following statement contains a magic number: Assert.False (((IEquatable<DateTime>)new DateTime (10000)).Equals (new DateTime (0)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,IEquatableEqualsWorks_SPI_1608,The following statement contains a magic number: Assert.False (((IEquatable<DateTime>)new DateTime (0)).Equals (new DateTime (10000)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,IEquatableEqualsWorks_SPI_1608,The following statement contains a magic number: Assert.True (((IEquatable<DateTime>)new DateTime (10000)).Equals (new DateTime (10000)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,IEquatableEqualsWorks_SPI_1608,The following statement contains a magic number: Assert.True (((IEquatable<DateTime>)new DateTime (10000)).Equals (new DateTime (10000)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,StaticEqualsWorks,The following statement contains a magic number: Assert.False (DateTime.Equals (new DateTime (10000)' new DateTime (0)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,StaticEqualsWorks,The following statement contains a magic number: Assert.False (DateTime.Equals (new DateTime (0)' new DateTime (10000)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,StaticEqualsWorks,The following statement contains a magic number: Assert.True (DateTime.Equals (new DateTime (10000)' new DateTime (10000)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,StaticEqualsWorks,The following statement contains a magic number: Assert.True (DateTime.Equals (new DateTime (10000)' new DateTime (10000)));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,CompareToWorks,The following statement contains a magic number: Assert.True (new DateTime (10000).CompareTo (new DateTime (0)) > 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,CompareToWorks,The following statement contains a magic number: Assert.True (new DateTime (0).CompareTo (new DateTime (10000)) < 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,StaticCompareWorks,The following statement contains a magic number: Assert.True (DateTime.Compare (new DateTime (10000)' new DateTime (0)) > 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,StaticCompareWorks,The following statement contains a magic number: Assert.True (DateTime.Compare (new DateTime (0)' new DateTime (10000)) < 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,IComparableCompareToWorks_SPI_1609,The following statement contains a magic number: Assert.True (((IComparable<DateTime>)new DateTime (10000)).CompareTo (new DateTime (0)) > 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,IComparableCompareToWorks_SPI_1609,The following statement contains a magic number: Assert.True (((IComparable<DateTime>)new DateTime (0)).CompareTo (new DateTime (10000)) < 0);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DatePropertyWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 8' 12)' dt.Date);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DatePropertyWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 8' 12)' dt.Date);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DatePropertyWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 8' 12)' dt.Date);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DayPropertyWorks,The following statement contains a magic number: Assert.AreEqual (12' dt.Day);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DayOfYearPropertyWorks,The following statement contains a magic number: Assert.AreEqual (193' dt.DayOfYear);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,HourPropertyWorks,The following statement contains a magic number: Assert.AreEqual (13' dt.Hour);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,MillisecondPropertyWorks,The following statement contains a magic number: Assert.AreEqual (345' dt.Millisecond);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,MinutePropertyWorks,The following statement contains a magic number: Assert.AreEqual (42' dt.Minute);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,MonthPropertyWorks,The following statement contains a magic number: Assert.AreEqual (7' dt.Month);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,SecondPropertyWorks,The following statement contains a magic number: Assert.AreEqual (56' dt.Second);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,YearPropertyWorks,The following statement contains a magic number: Assert.AreEqual (2011' dt.Year);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 14' 14' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 14' 14' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 14' 14' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 14' 14' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 14' 14' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 14' 14' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 14' 14' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddDaysWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 5' 12' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 5' 12' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 5' 12' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 5' 12' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 5' 12' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 5' 12' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 5' 12' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddHoursWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 595)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 595)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 595)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 595)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 595)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 595)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 595)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMillisecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 45' 26' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 45' 26' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 45' 26' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 45' 26' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 45' 26' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 45' 26' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 45' 26' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMinutesWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMonthsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 1' 12' 2' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMonthsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 1' 12' 2' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMonthsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 1' 12' 2' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMonthsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 1' 12' 2' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMonthsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 1' 12' 2' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMonthsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2012' 1' 12' 2' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMonthsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMonthsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMonthsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMonthsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMonthsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMonthsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddMonthsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 58' 845)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 58' 845)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 58' 845)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 58' 845)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 58' 845)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 58' 845)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 58' 845)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddSecondsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2014' 7' 12' 2' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2014' 7' 12' 2' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2014' 7' 12' 2' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2014' 7' 12' 2' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2014' 7' 12' 2' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2014' 7' 12' 2' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2014' 7' 12' 2' 42' 56' 345)' actual);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,AddYearsWorks,The following statement contains a magic number: Assert.AreEqual (new DateTime (2011' 7' 12' 2' 42' 56' 345)' dt);  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 1));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 1));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (28' DateTime.DaysInMonth (2013' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (28' DateTime.DaysInMonth (2013' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (28' DateTime.DaysInMonth (2013' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 3));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (30' DateTime.DaysInMonth (2013' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (30' DateTime.DaysInMonth (2013' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (30' DateTime.DaysInMonth (2013' 4));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 5));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (30' DateTime.DaysInMonth (2013' 6));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (30' DateTime.DaysInMonth (2013' 6));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (30' DateTime.DaysInMonth (2013' 6));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 7));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 7));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 7));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 8));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (30' DateTime.DaysInMonth (2013' 9));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (30' DateTime.DaysInMonth (2013' 9));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (30' DateTime.DaysInMonth (2013' 9));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 10));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (30' DateTime.DaysInMonth (2013' 11));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (30' DateTime.DaysInMonth (2013' 11));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (30' DateTime.DaysInMonth (2013' 11));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (31' DateTime.DaysInMonth (2013' 12));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (28' DateTime.DaysInMonth (2003' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (28' DateTime.DaysInMonth (2003' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (28' DateTime.DaysInMonth (2003' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (29' DateTime.DaysInMonth (2004' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (29' DateTime.DaysInMonth (2004' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,DaysInMonthWorks,The following statement contains a magic number: Assert.AreEqual (29' DateTime.DaysInMonth (2004' 2));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,IsLeapYearWorks,The following statement contains a magic number: Assert.True (DateTime.IsLeapYear (2004));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,IsLeapYearWorks,The following statement contains a magic number: Assert.True (DateTime.IsLeapYear (2000));  
Magic Number,Bridge.ClientTest.Batch4.SimpleTypes,DateTimeTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\SimpleTypes\DateTimeTests.cs,IsLeapYearWorks,The following statement contains a magic number: Assert.False (DateTime.IsLeapYear (2003));  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,ConstructorWorks,The following statement contains a magic number: Assert.AreEqual (3' l.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,ConstructorWorks,The following statement contains a magic number: Assert.AreEqual (41' l [0]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,ConstructorWorks,The following statement contains a magic number: Assert.AreEqual (42' l [1]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,ConstructorWorks,The following statement contains a magic number: Assert.AreEqual (43' l [2]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,ConstructorWorks,The following statement contains a magic number: Assert.AreEqual (43' l [2]);  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,CountWorks,The following statement contains a magic number: Assert.AreEqual (2' new ReadOnlyCollection<string> (new string[2]).Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,CountWorks,The following statement contains a magic number: Assert.AreEqual (2' new ReadOnlyCollection<string> (new string[2]).Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,ContainsUsesEqualsMethod,The following statement contains a magic number: Assert.True (l.Contains (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,ContainsUsesEqualsMethod,The following statement contains a magic number: Assert.False (l.Contains (new C (4)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (1' new ReadOnlyCollection<C> (new[] {  	new C (1)'  	new C (2)'  	new C (3)'  	new C (2)  }).IndexOf (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (1' new ReadOnlyCollection<C> (new[] {  	new C (1)'  	new C (2)'  	new C (3)'  	new C (2)  }).IndexOf (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (1' new ReadOnlyCollection<C> (new[] {  	new C (1)'  	new C (2)'  	new C (3)'  	new C (2)  }).IndexOf (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,IndexOfWorks,The following statement contains a magic number: Assert.AreEqual (1' new ReadOnlyCollection<C> (new[] {  	new C (1)'  	new C (2)'  	new C (3)'  	new C (2)  }).IndexOf (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,ICollectionCountWorks,The following statement contains a magic number: Assert.AreEqual (3' l.Count);  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,ICollectionContainsUsesEqualsMethod,The following statement contains a magic number: Assert.True (l.Contains (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,ICollectionContainsUsesEqualsMethod,The following statement contains a magic number: Assert.False (l.Contains (new C (4)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,IListIndexOfUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (1' l.IndexOf (new C (2)));  
Magic Number,Bridge.ClientTest.Batch4.Collections.ObjectModel,ReadOnlyCollectionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Collections\ObjectModel\ReadOnlyCollectionTests.cs,IListIndexOfUsesEqualsMethod,The following statement contains a magic number: Assert.AreEqual (-1' l.IndexOf (new C (4)));  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ExpressionProtectedConstructorWorks,The following statement contains a magic number: Assert.AreEqual (9999' expr.NodeType' "NodeType");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,SimpleExpressionTreeWorks,The following statement contains a magic number: Assert.AreEqual (42' ((ConstantExpression)f.Body).Value);  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ConstantWorks,The following statement contains a magic number: Assert.AreEqual (42' c1.Value' "c1.Value");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ConstantWorks,The following statement contains a magic number: Assert.AreEqual (17' c3.Value' "c3.Value");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MultiDimensionalArrayIndexWorks,The following statement contains a magic number: arr [1' 2] = 2.5;  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MultiDimensionalArrayIndexWorks,The following statement contains a magic number: arr [1' 2] = 2.5;  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MultiDimensionalArrayIndexWorks,The following statement contains a magic number: Assert.AreEqual (2' me.Arguments.Count' title + " argument count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MultiDimensionalArrayIndexWorks,The following statement contains a magic number: Assert.AreEqual (2.5' me.Method.Invoke (arr' 1' 2)' title + " method invoke result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MultiDimensionalArrayIndexWorks,The following statement contains a magic number: Assert.AreEqual (2.5' me.Method.Invoke (arr' 1' 2)' title + " method invoke result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,CallWorks,The following statement contains a magic number: Assert.AreEqual (2' ce.Arguments.Count' title + " argument count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,CallWorks,The following statement contains a magic number: Assert.AreEqual (73' ((MethodCallExpression)e10.Body).Method.Invoke (new C ()' 39)' "e10 member result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,CallWorks,The following statement contains a magic number: Assert.AreEqual (73' ((MethodCallExpression)e10.Body).Method.Invoke (new C ()' 39)' "e10 member result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MethodGroupConversionWorks,The following statement contains a magic number: Assert.AreEqual (2' e3.Arguments.Count' "e3 arguments");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,InvokeWorks,The following statement contains a magic number: Assert.AreEqual (2' ie.Arguments.Count' title + " argument count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The following statement contains a magic number: Assert.AreEqual (2' ((NewArrayExpression)e2.Body).Expressions.Count' "e2 expression count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The following statement contains a magic number: Assert.AreEqual (2' ((NewArrayExpression)e3.Body).Expressions.Count' "e3 expression count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The following statement contains a magic number: Assert.AreEqual (2' ((NewArrayExpression)e4).Expressions.Count' "e4 expression count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The following statement contains a magic number: Assert.AreEqual (2' ((NewArrayExpression)e5).Expressions.Count' "e5 expression count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The following statement contains a magic number: Assert.AreEqual (2' ((NewArrayExpression)e6).Expressions.Count' "e6 expression count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ArrayCreationWorks,The following statement contains a magic number: Assert.AreEqual (2' ((NewArrayExpression)e7).Expressions.Count' "e7 expression count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e1.Body' "F1"' 234' "e1");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e2.Body' "F2"' 24' "e2");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e3.Body' "P1"' 42' "e3");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e4.Body' "P2"' 17' "e4");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e5' "F1"' 234' "e5");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e6' "P1"' 42' "e6");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e7' "F1"' 234' "e7");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e8' "P1"' 42' "e8");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e9' "F1"' 234' "e9");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e10' "P1"' 42' "e10");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e11' "F1"' 234' "e11");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e12' "P1"' 42' "e12");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e13' "F1"' 234' "e11");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,PropertiesAndFieldsWork,The following statement contains a magic number: asserter (e14' "P1"' 42' "e12");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,IndexersWork,The following statement contains a magic number: Assert.AreEqual (2' ie.Arguments.Count' "argument count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,IndexExpressionsWork,The following statement contains a magic number: Assert.AreEqual (2' ie.Arguments.Count' title + " argument count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,AnonymousTypeConstructionWorks,The following statement contains a magic number: Assert.AreEqual (2' ne.Arguments.Count' "argument count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,AnonymousTypeConstructionWorks,The following statement contains a magic number: Assert.AreEqual (2' ne.Members.Count' "member count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,AnonymousTypeConstructionWorks,The following statement contains a magic number: Assert.AreEqual (42' ((PropertyInfo)propA).GetMethod.Invoke (new {  	A = 42'  	B = 17  })' "A getter result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,AnonymousTypeConstructionWorks,The following statement contains a magic number: Assert.AreEqual (42' ((PropertyInfo)propA).GetMethod.Invoke (new {  	A = 42'  	B = 17  })' "A getter result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,AnonymousTypeConstructionWorks,The following statement contains a magic number: Assert.AreEqual (42' ((PropertyInfo)propA).GetMethod.Invoke (new {  	A = 42'  	B = 17  })' "A getter result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,AnonymousTypeConstructionWorks,The following statement contains a magic number: Assert.AreEqual (17' ((PropertyInfo)propB).GetMethod.Invoke (new {  	A = 42'  	B = 17  })' "B getter result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,AnonymousTypeConstructionWorks,The following statement contains a magic number: Assert.AreEqual (17' ((PropertyInfo)propB).GetMethod.Invoke (new {  	A = 42'  	B = 17  })' "B getter result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,AnonymousTypeConstructionWorks,The following statement contains a magic number: Assert.AreEqual (17' ((PropertyInfo)propB).GetMethod.Invoke (new {  	A = 42'  	B = 17  })' "B getter result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,AnonymousTypeConstructionWorks,The following statement contains a magic number: Assert.AreEqual (42' ((dynamic)instance).a' "Constructor invocation result A");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,AnonymousTypeConstructionWorks,The following statement contains a magic number: Assert.AreEqual (17' ((dynamic)instance).b' "Constructor invocation result B");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TransparentIdentifiersWork,The following statement contains a magic number: Assert.AreEqual (2' ne.Arguments.Count' "argument count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TransparentIdentifiersWork,The following statement contains a magic number: Assert.AreEqual (2' ne.Members.Count' "member count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TransparentIdentifiersWork,The following statement contains a magic number: Assert.AreEqual (42' ((PropertyInfo)propA).GetMethod.Invoke (new {  	a = 42'  	b = 17  })' "a getter result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TransparentIdentifiersWork,The following statement contains a magic number: Assert.AreEqual (42' ((PropertyInfo)propA).GetMethod.Invoke (new {  	a = 42'  	b = 17  })' "a getter result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TransparentIdentifiersWork,The following statement contains a magic number: Assert.AreEqual (42' ((PropertyInfo)propA).GetMethod.Invoke (new {  	a = 42'  	b = 17  })' "a getter result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TransparentIdentifiersWork,The following statement contains a magic number: Assert.AreEqual (17' ((PropertyInfo)propB).GetMethod.Invoke (new {  	a = 42'  	b = 17  })' "b getter result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TransparentIdentifiersWork,The following statement contains a magic number: Assert.AreEqual (17' ((PropertyInfo)propB).GetMethod.Invoke (new {  	a = 42'  	b = 17  })' "b getter result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TransparentIdentifiersWork,The following statement contains a magic number: Assert.AreEqual (17' ((PropertyInfo)propB).GetMethod.Invoke (new {  	a = 42'  	b = 17  })' "b getter result");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TransparentIdentifiersWork,The following statement contains a magic number: Assert.AreEqual (42' ((dynamic)instance).a' "Constructor invocation result a");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TransparentIdentifiersWork,The following statement contains a magic number: Assert.AreEqual (17' ((dynamic)instance).b' "Constructor invocation result b");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,NewExpressionWithMembersWork,The following statement contains a magic number: Assert.AreEqual (2' ne.Arguments.Count' title + " argument count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,NewExpressionWithMembersWork,The following statement contains a magic number: Assert.AreEqual (2' ne.Members.Count' title + " member count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ElementInitWorks,The following statement contains a magic number: Assert.AreEqual (2' i3.Arguments.Count' "i3 argument count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ElementInitWorks,The following statement contains a magic number: Assert.AreEqual (2' i4.Arguments.Count' "i4 argument count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListBindWorks,The following statement contains a magic number: Assert.AreEqual (2' mlb.Initializers.Count' title + " initializer count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListBindWorks,The following statement contains a magic number: Assert.AreEqual (2' mlb7.Initializers.Count' "b7 initializer count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListBindWorks,The following statement contains a magic number: Assert.AreEqual (2' mlb7.Initializers [1].Arguments.Count' "b7 initializer 1 argument count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberBindWorks,The following statement contains a magic number: Assert.AreEqual (2' mb1.Bindings.Count' "b1 binding count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberBindWorks,The following statement contains a magic number: Assert.AreEqual (2' mb2.Bindings.Count' "b2 binding count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberBindWorks,The following statement contains a magic number: Assert.AreEqual (2' mb3.Bindings.Count' "b3 binding count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberBindWorks,The following statement contains a magic number: Assert.AreEqual (2' mb4.Bindings.Count' "b4 binding count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,MemberInitWorks,The following statement contains a magic number: Assert.AreEqual (2' mie.Bindings.Count' title + " binding count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListInitWorks,The following statement contains a magic number: Assert.AreEqual (2' lie.Initializers.Count' title + " initializer count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListInitWorks,The following statement contains a magic number: Assert.AreEqual (2' lie6.Initializers.Count' "e6 initializer count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,ListInitWorks,The following statement contains a magic number: Assert.AreEqual (2' lie6.Initializers [1].Arguments.Count' "e6 initializer 1 argument count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,LocalVariableReferenceWorks,The following statement contains a magic number: Assert.AreEqual (42' prop.GetValue (expr.Value)' "property get");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,LocalVariableReferenceWorks,The following statement contains a magic number: prop.SetValue (expr.Value' 120);  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,LocalVariableReferenceWorks,The following statement contains a magic number: Assert.AreEqual (120' a' "property set");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BlockWorks,The following statement contains a magic number: Assert.AreEqual (2' be.Expressions.Count' title + " expression count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BlockWorks,The following statement contains a magic number: if (hasVariables) {  	Assert.AreEqual (2' be.Variables.Count' title + " variable count");  	Assert.True (ReferenceEquals (be.Variables [0]' v1)' title + " variable 0");  	Assert.True (ReferenceEquals (be.Variables [1]' v2)' title + " variable 1");  }  else {  	Assert.AreEqual (0' be.Variables.Count' title + " variable count");  }  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,BlockWorks,The following statement contains a magic number: Assert.AreEqual (2' be.Variables.Count' title + " variable count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,SwitchCaseWorks,The following statement contains a magic number: Assert.AreEqual (2' sc1.TestValues.Count' "sc1 test values count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,SwitchCaseWorks,The following statement contains a magic number: Assert.AreEqual (2' sc2.TestValues.Count' "sc2 test values count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TryWorks,The following statement contains a magic number: if (hasHandlers) {  	Assert.AreEqual (2' te.Handlers.Count' title + " handler count");  	Assert.True (ReferenceEquals (te.Handlers [0]' cs [0])' title + " handler 0");  	Assert.True (ReferenceEquals (te.Handlers [1]' cs [1])' title + " handler 1");  }  else {  	Assert.AreEqual (0' te.Handlers.Count' title + " handler count");  }  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,TryWorks,The following statement contains a magic number: Assert.AreEqual (2' te.Handlers.Count' title + " handler count");  
Magic Number,Bridge.ClientTest.Batch4.Linq.Expressions,ExpressionTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Linq\Expressions\ExpressionTests.cs,DynamicWorks,The following statement contains a magic number: Assert.AreEqual (2' dme.Arguments.Count' title + " argument count");  
Magic Number,Bridge.ClientTest.Batch4.Runtime.CompilerServices,RuntimeHelpersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Runtime\CompilerServices\RuntimeHelpersTests.cs,GetHashCodeCallsGetHashCodeNonVirtually_SPI_1570,The following statement contains a magic number: for (int i = 0; i < 3; i++) {  	// Since we might be unlucky and roll a 0 hash code' try 3 times.  	var c = new C ();  	if (RuntimeHelpers.GetHashCode (c) != 0) {  		isOK = true;  		break;  	}  }  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,NonGenericParseWorks_SPI_1574,The following statement contains a magic number: Assert.AreEqual (3' i);  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,GenericParseWorks,The following statement contains a magic number: Assert.AreEqual (3' o.i);  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,NonGenericParseWithCallbackWorks_SPI_1574,The following statement contains a magic number: TestHelper.Safe (() => o = (TestClass2)JSON.Parse ("{ \"i\": 3' \"s\": \"test\" }"' (s' x) =>  {  	((TestClass2)x).i = 100;  	return x;  }));  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,NonGenericParseWithCallbackWorks_SPI_1574,The following statement contains a magic number: ((TestClass2)x).i = 100;  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,NonGenericParseWithCallbackWorks_SPI_1574,The following statement contains a magic number: Assert.AreEqual (100' i);  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,GenericParseWithCallbackWorks_SPI_1574,The following statement contains a magic number: TestHelper.Safe (() => o = JSON.Parse<TestClass2> ("{ \"i\": 3' \"s\": \"test\" }"' (s' x) =>  {  	((TestClass2)x).i = 100;  	return x;  }));  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,GenericParseWithCallbackWorks_SPI_1574,The following statement contains a magic number: ((TestClass2)x).i = 100;  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,GenericParseWithCallbackWorks_SPI_1574,The following statement contains a magic number: Assert.AreEqual (100' i);  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,StringifyWorks,The following statement contains a magic number: Assert.AreEqual ("{\"i\":3}"' JSON.Stringify (new TestClass1 {  	i = 3  }));  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,StringifyWithSerializableMembersArrayWorks,The following statement contains a magic number: Assert.AreEqual ("{\"i\":3}"' JSON.Stringify (new TestClass2 {  	i = 3'  	s = "test"  }' new[] {  	"i"  }));  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,StringifyWithSerializableMembersArrayAndIntentCountWorks,The following statement contains a magic number: Assert.AreEqual ("{\n    \"i\": 3\n}"' JSON.Stringify (new TestClass2 {  	i = 3'  	s = "test"  }' new[] {  	"i"  }' 4));  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,StringifyWithSerializableMembersArrayAndIntentCountWorks,The following statement contains a magic number: Assert.AreEqual ("{\n    \"i\": 3\n}"' JSON.Stringify (new TestClass2 {  	i = 3'  	s = "test"  }' new[] {  	"i"  }' 4));  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,StringifyWithSerializableMembersArrayAndIntentTextWorks,The following statement contains a magic number: Assert.AreEqual ("{\n    \"i\": 3\n}"' JSON.Stringify (new TestClass2 {  	i = 3'  	s = "test"  }' new[] {  	"i"  }' "    "));  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,StringifyWithCallbackWorks,The following statement contains a magic number: Assert.AreEqual ("{\"i\":3}"' JSON.Stringify (new TestClass2 {  	i = 3'  	s = "test"  }' (key' value) => key == "s" ? Script.Undefined : value));  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,StringifyWithCallbackAndIndentCountWorks,The following statement contains a magic number: Assert.AreEqual ("{\n    \"i\": 3\n}"' JSON.Stringify (new TestClass2 {  	i = 3'  	s = "test"  }' (key' value) => key == "s" ? Script.Undefined : value' 4));  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,StringifyWithCallbackAndIndentCountWorks,The following statement contains a magic number: Assert.AreEqual ("{\n    \"i\": 3\n}"' JSON.Stringify (new TestClass2 {  	i = 3'  	s = "test"  }' (key' value) => key == "s" ? Script.Undefined : value' 4));  
Magic Number,Bridge.ClientTest.Batch4.Serialization,JsonTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Serialization\JsonTests.cs,StringifyWithCallbackAndIndentTextWorks,The following statement contains a magic number: Assert.AreEqual ("{\n    \"i\": 3\n}"' JSON.Stringify (new TestClass2 {  	i = 3'  	s = "test"  }' (key' value) => key == "s" ? Script.Undefined : value' "    "));  
Magic Number,Bridge.ClientTest.Batch4.Text.RegularExpressions,RegexTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\RegularExpressions\RegexTests.cs,LastIndexWorks,The following statement contains a magic number: Assert.AreEqual (2' re.LastIndex);  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,InitialTextConstructorWorks,The following statement contains a magic number: Assert.AreEqual (9' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,InitialTextConstructorWithCapacityWorks,The following statement contains a magic number: Assert.AreEqual (9' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendBoolWorks,The following statement contains a magic number: Assert.AreEqual (5' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendCharWorks,The following statement contains a magic number: Assert.AreEqual (2' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendIntWorks,The following statement contains a magic number: Assert.True (sb.Append (123) == sb);  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendIntWorks,The following statement contains a magic number: Assert.AreEqual (4' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendDoubleWorks,The following statement contains a magic number: Assert.True (sb.Append (123.0) == sb);  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendDoubleWorks,The following statement contains a magic number: Assert.AreEqual (4' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendObjectWorks,The following statement contains a magic number: Assert.AreEqual (10' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendStringWorks,The following statement contains a magic number: Assert.AreEqual (10' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendLineWorks,The following statement contains a magic number: Assert.AreEqual (3' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendLineBoolWorks,The following statement contains a magic number: Assert.AreEqual (7' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendLineCharWorks,The following statement contains a magic number: Assert.AreEqual (4' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendLineIntWorks,The following statement contains a magic number: Assert.True (sb.AppendLine (123.ToString ()) == sb);  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendLineIntWorks,The following statement contains a magic number: Assert.AreEqual (6' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendLineDoubleWorks,The following statement contains a magic number: Assert.True (sb.AppendLine ((123.0).ToString ()) == sb);  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendLineDoubleWorks,The following statement contains a magic number: Assert.AreEqual (6' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendLineObjectWorks,The following statement contains a magic number: Assert.AreEqual (12' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,AppendLineStringWorks,The following statement contains a magic number: Assert.AreEqual (12' sb.Length' "Length");  
Magic Number,Bridge.ClientTest.Batch4.Text,StringBuilderTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Text\StringBuilderTests.cs,LengthPropertyWorks,The following statement contains a magic number: Assert.AreEqual (9' sb.Length);  
Duplicate Code,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The method contains a code clone-set at the following line numbers (starting from the method definition): ((4' 52)' (212' 260))
Duplicate Code,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The method contains a code clone-set at the following line numbers (starting from the method definition): ((46' 88)' (168' 210))
Duplicate Code,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMembersWithBindingFlagsWorks,The method contains a code clone-set at the following line numbers (starting from the method definition): ((254' 278)' (280' 304))
Duplicate Code,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The method contains a code clone-set at the following line numbers (starting from the method definition): ((4' 35)' (140' 171))
Duplicate Code,Bridge.ClientTest.Batch4.Reflection,GetMembersTests,C:\repos\bridgedotnet_Bridge\Tests\Batch4\Reflection\GetMembersTests.cs,GetMethodsWithBindingFlagsWorks,The method contains a code clone-set at the following line numbers (starting from the method definition): ((32' 58)' (112' 138))
