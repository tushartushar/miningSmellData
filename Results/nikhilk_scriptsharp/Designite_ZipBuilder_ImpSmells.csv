Implementation smell,Namespace,Class,File,Method,Description
Magic Number,MSBuild.Community.Tasks,Zip,C:\repos\nikhilk_scriptsharp\tools\ZipBuilder\Zip.cs,Zip,The following statement contains a magic number: _zipLevel = 6;
Magic Number,MSBuild.Community.Tasks,Zip,C:\repos\nikhilk_scriptsharp\tools\ZipBuilder\Zip.cs,ZipFiles,The following statement contains a magic number: try {                  string zipFileName = Path.GetFullPath(_zipFileName);                  string outputDirectory = Path.GetDirectoryName(zipFileName);                    string baseDirectory = null;                  if (String.IsNullOrEmpty(_workingDirectory) == false) {                      baseDirectory = Path.GetFullPath(_workingDirectory);                  }                    if (Directory.Exists(outputDirectory) == false) {                      Directory.CreateDirectory(outputDirectory);                  }                    Log.LogMessage("Creating zip file \"{0}\"."' zipFileName);                    using (zs = new ZipOutputStream(File.Create(zipFileName))) {                      // make sure level in range                      _zipLevel = Math.Max(0' _zipLevel);                      _zipLevel = Math.Min(9' _zipLevel);                        zs.SetLevel(_zipLevel);                      if (!String.IsNullOrEmpty(_comment)) {                          zs.SetComment(_comment);                      }                        byte[] buffer = new byte[32768];                        // add files to zip                      foreach (ITaskItem fileItem in _files) {                          string name = Path.GetFullPath(fileItem.ItemSpec);                            FileInfo file = new FileInfo(name);                          if (!file.Exists) {                              Log.LogWarning("File Not Found: {0}."' file.FullName);                              continue;                          }                            // clean up name                          if (_flatten) {                              name = file.Name;                          }                          else if (!String.IsNullOrEmpty(baseDirectory) &&                                   name.StartsWith(baseDirectory' StringComparison.OrdinalIgnoreCase)) {                              name = name.Substring(baseDirectory.Length);                          }                          name = ZipEntry.CleanName(name' true);                            ZipEntry entry = new ZipEntry(name);                          entry.DateTime = file.LastWriteTime;                          entry.Size = file.Length;                            using (FileStream fs = file.OpenRead()) {                              crc.Reset();                              long len = fs.Length;                              while (len > 0) {                                  int readSoFar = fs.Read(buffer' 0' buffer.Length);                                  crc.Update(buffer' 0' readSoFar);                                  len -= readSoFar;                              }                              entry.Crc = crc.Value;                              zs.PutNextEntry(entry);                                len = fs.Length;                              fs.Seek(0' SeekOrigin.Begin);                              while (len > 0) {                                  int readSoFar = fs.Read(buffer' 0' buffer.Length);                                  zs.Write(buffer' 0' readSoFar);                                  len -= readSoFar;                              }                          }                          Log.LogMessage("  added \"{0}\"."' name);                      }                      zs.Finish();                  }                  Log.LogMessage("Created zip file \"{0}\" successfully."' _zipFileName);                  return true;              }              catch (Exception exc) {                  Log.LogErrorFromException(exc);                  return false;              }              finally {                  if (zs != null) {                      zs.Close();                  }              }
Magic Number,MSBuild.Community.Tasks,Zip,C:\repos\nikhilk_scriptsharp\tools\ZipBuilder\Zip.cs,ZipFiles,The following statement contains a magic number: try {                  string zipFileName = Path.GetFullPath(_zipFileName);                  string outputDirectory = Path.GetDirectoryName(zipFileName);                    string baseDirectory = null;                  if (String.IsNullOrEmpty(_workingDirectory) == false) {                      baseDirectory = Path.GetFullPath(_workingDirectory);                  }                    if (Directory.Exists(outputDirectory) == false) {                      Directory.CreateDirectory(outputDirectory);                  }                    Log.LogMessage("Creating zip file \"{0}\"."' zipFileName);                    using (zs = new ZipOutputStream(File.Create(zipFileName))) {                      // make sure level in range                      _zipLevel = Math.Max(0' _zipLevel);                      _zipLevel = Math.Min(9' _zipLevel);                        zs.SetLevel(_zipLevel);                      if (!String.IsNullOrEmpty(_comment)) {                          zs.SetComment(_comment);                      }                        byte[] buffer = new byte[32768];                        // add files to zip                      foreach (ITaskItem fileItem in _files) {                          string name = Path.GetFullPath(fileItem.ItemSpec);                            FileInfo file = new FileInfo(name);                          if (!file.Exists) {                              Log.LogWarning("File Not Found: {0}."' file.FullName);                              continue;                          }                            // clean up name                          if (_flatten) {                              name = file.Name;                          }                          else if (!String.IsNullOrEmpty(baseDirectory) &&                                   name.StartsWith(baseDirectory' StringComparison.OrdinalIgnoreCase)) {                              name = name.Substring(baseDirectory.Length);                          }                          name = ZipEntry.CleanName(name' true);                            ZipEntry entry = new ZipEntry(name);                          entry.DateTime = file.LastWriteTime;                          entry.Size = file.Length;                            using (FileStream fs = file.OpenRead()) {                              crc.Reset();                              long len = fs.Length;                              while (len > 0) {                                  int readSoFar = fs.Read(buffer' 0' buffer.Length);                                  crc.Update(buffer' 0' readSoFar);                                  len -= readSoFar;                              }                              entry.Crc = crc.Value;                              zs.PutNextEntry(entry);                                len = fs.Length;                              fs.Seek(0' SeekOrigin.Begin);                              while (len > 0) {                                  int readSoFar = fs.Read(buffer' 0' buffer.Length);                                  zs.Write(buffer' 0' readSoFar);                                  len -= readSoFar;                              }                          }                          Log.LogMessage("  added \"{0}\"."' name);                      }                      zs.Finish();                  }                  Log.LogMessage("Created zip file \"{0}\" successfully."' _zipFileName);                  return true;              }              catch (Exception exc) {                  Log.LogErrorFromException(exc);                  return false;              }              finally {                  if (zs != null) {                      zs.Close();                  }              }
