Implementation smell,Namespace,Class,File,Method,Description
Long Method,RMUD,ParserCommandHandler,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\ParserCommandHandler.cs,HandleCommand,The method has 109 lines of code.
Long Method,RMUD,ReverseLineReader,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\ReverseLineReader.cs,GetEnumeratorImpl,The method has 121 lines of code.
Complex Method,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,ProcessThreadedCommands,Cyclomatic complexity of the method is 11
Complex Method,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,FormatMessage,Cyclomatic complexity of the method is 16
Complex Method,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,IntegrateModule,Cyclomatic complexity of the method is 8
Complex Method,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,EnumerateRuleSets,Cyclomatic complexity of the method is 9
Complex Method,RMUD,DisambigCommandHandler,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\DisambigCommandHandler.cs,DisambigCommandHandler,Cyclomatic complexity of the method is 9
Complex Method,RMUD,ObjectMatcher,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\Matchers\ObjectMatcher.cs,Match,Cyclomatic complexity of the method is 11
Complex Method,RMUD,ParserCommandHandler,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\ParserCommandHandler.cs,HandleCommand,Cyclomatic complexity of the method is 15
Complex Method,RMUD,PersistAttribute,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Serialization\PersistAttribute.cs,_ReadValue,Cyclomatic complexity of the method is 8
Complex Method,RMUD,GithubDatabase,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\GithubDatabase\Compile.cs,CompileCode,Cyclomatic complexity of the method is 8
Complex Method,RMUD,GithubDatabase,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\GithubDatabase\Compile.cs,InitialBulkCompile,Cyclomatic complexity of the method is 12
Complex Method,RMUD,ReverseLineReader,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\ReverseLineReader.cs,GetEnumeratorImpl,Cyclomatic complexity of the method is 15
Complex Method,RMUD,Link,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\WorldModel\Directions.cs,GetAsVector,Cyclomatic complexity of the method is 10
Complex Method,RMUD,Link,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\WorldModel\Directions.cs,Opposite,Cyclomatic complexity of the method is 18
Complex Method,RMUD,Link,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\WorldModel\Directions.cs,FromMessage,Cyclomatic complexity of the method is 18
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,EnqueuActorCommand,The length of the statement  "            PendingCommands.AddLast(new PendingCommand { Actor = Actor' RawCommand = RawCommand' ProcessingCompleteCallback = ProcessingCompleteCallback });" is 144.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,ProcessThreadedCommands,The length of the statement  "                                //else return (DateTime.Now - pc.Actor.ConnectedClient.TimeOfLastCommand).TotalMilliseconds > SettingsObject.AllowedCommandRate;" is 128.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,ProcessThreadedCommands,The length of the statement  "                                    LogError(String.Format("Command timeout. {0} - {1}"' PendingCommand.Actor.ConnectedClient.ConnectionDescription' PendingCommand.RawCommand));" is 141.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,FormatMessage,The length of the statement  "                            formattedMessage.Append(GlobalRules.ConsiderValueRule<String>("printed name"' Recipient' Objects[index]' (Objects[index] as MudObject).Article));" is 145.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,FormatList,The length of the statement  "                if (x == list.Count - 2 && !String.IsNullOrEmpty(CoordinatingConjunction)) FormattedMessage.Append(CoordinatingConjunction + " ");" is 130.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,IntegrateModule,The length of the statement  "            if (Module.Assembly == null) throw new InvalidOperationException("Tried to load invalid module assembly - " + Module.FileName);" is 127.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,IntegrateModule,The length of the statement  "            if (Module.Info == null) throw new InvalidOperationException("Tried to load invalid module assembly - " + Module.FileName);" is 123.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,Start,The length of the statement  "                GlobalRules.DeclarePerformRuleBook<MudObject>("singleplayer game started"' "Considered when a single player game is begun");" is 124.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,Start,The length of the statement  "                IntegratedModules.Add(new ModuleAssembly(Assembly.GetExecutingAssembly()' new ModuleInfo { Author = "Blecki"' Description = "RMUD Core"' BaseNameSpace = "RMUD" }' "Core.dll"));" is 176.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,Start,The length of the statement  "                    foreach (var file in System.IO.Directory.EnumerateFiles(System.IO.Directory.GetCurrentDirectory()).Where(p => System.IO.Path.GetExtension(p) == ".dll"))" is 152.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,StandardMessage,The length of the statement  "            if (MessageDefinitions.ContainsKey(Name) && MessageDefinitions[Name].Priority == MessageDefinitionPriority.Override) return;" is 124.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,StandardMessage,The length of the statement  "            MessageDefinitions.Upsert(Name' new MessageDefinition { Message = Contents' Priority = MessageDefinitionPriority.Standard });" is 125.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,OverrideMessage,The length of the statement  "            MessageDefinitions.Upsert(Name' new MessageDefinition { Message = Contents' Priority = MessageDefinitionPriority.Override });" is 125.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,DeserializeObject,The length of the statement  "            var persistentProperties = new List<Tuple<System.Reflection.PropertyInfo' PersistAttribute>>(EnumeratePersistentProperties(Object));" is 132.
Long Statement,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,EnumeratePersistentProperties,The length of the statement  "                .Select(pi => Tuple.Create(pi' pi.GetCustomAttributes(true).FirstOrDefault(a => a is PersistAttribute) as PersistAttribute));" is 125.
Long Statement,RMUD,MudObject,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\FindLocale.cs,SendMessage,The length of the statement  "                Core.PendingMessages.Add(new PendingMessage(Actor.ConnectedClient' Core.FormatMessage(Actor' Message' MentionedObjects)));" is 122.
Long Statement,RMUD,MudObject,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\FindLocale.cs,SendLocaleMessage,The length of the statement  "                    Core.PendingMessages.Add(new PendingMessage(actor.ConnectedClient' Core.FormatMessage(actor' Message' MentionedObjects)));" is 122.
Long Statement,RMUD,MudObject,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\FindLocale.cs,SendExternalMessage,The length of the statement  "            foreach (var other in location.EnumerateObjects<Actor>().Where(a => !Object.ReferenceEquals(a' Actor) && (a.ConnectedClient != null)))" is 134.
Long Statement,RMUD,MudObject,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\FindLocale.cs,SendExternalMessage,The length of the statement  "                Core.PendingMessages.Add(new PendingMessage(other.ConnectedClient' Core.FormatMessage(other' Message' MentionedObjects)));" is 122.
Long Statement,RMUD,RuleBook,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleBook.cs,LogRule,The length of the statement  "                Owner.GlobalRules.LogTo.ConnectedClient.Send(Name + "<" + String.Join("' "' Rule.GetArgumentTypes().Select(t => t.Name)) + "> -> " + ResultType.Name + " : " + (String.IsNullOrEmpty(Rule.DescriptiveName) ? "NONAME" : Rule.DescriptiveName) + "\r\n");" is 248.
Long Statement,RMUD,RuleBuilder<T0;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleBuilderGen.cs,ThisOnly,The length of the statement  "			if (AssociatedObject == null) throw new InvalidOperationException("ThisOnly is only valid for rules created by a MudObject factory function.");" is 143.
Long Statement,RMUD,RuleBuilder<T0;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleBuilderGen.cs,ThisOnly,The length of the statement  "			if (AssociatedObject == null) throw new InvalidOperationException("ThisOnly is only valid for rules created by a MudObject factory function.");" is 143.
Long Statement,RMUD,RuleBuilder<T0;T1;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleBuilderGen.cs,ThisOnly,The length of the statement  "			if (AssociatedObject == null) throw new InvalidOperationException("ThisOnly is only valid for rules created by a MudObject factory function.");" is 143.
Long Statement,RMUD,RuleBuilder<T0;T1;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleBuilderGen.cs,ThisOnly,The length of the statement  "			if (AssociatedObject == null) throw new InvalidOperationException("ThisOnly is only valid for rules created by a MudObject factory function.");" is 143.
Long Statement,RMUD,RuleBuilder<T0;T1;T2;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleBuilderGen.cs,ThisOnly,The length of the statement  "			if (AssociatedObject == null) throw new InvalidOperationException("ThisOnly is only valid for rules created by a MudObject factory function.");" is 143.
Long Statement,RMUD,RuleBuilder<T0;T1;T2;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleBuilderGen.cs,ThisOnly,The length of the statement  "			if (AssociatedObject == null) throw new InvalidOperationException("ThisOnly is only valid for rules created by a MudObject factory function.");" is 143.
Long Statement,RMUD,RuleBuilder<T0;T1;T2;T3;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleBuilderGen.cs,ThisOnly,The length of the statement  "			if (AssociatedObject == null) throw new InvalidOperationException("ThisOnly is only valid for rules created by a MudObject factory function.");" is 143.
Long Statement,RMUD,RuleBuilder<T0;T1;T2;T3;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleBuilderGen.cs,ThisOnly,The length of the statement  "			if (AssociatedObject == null) throw new InvalidOperationException("ThisOnly is only valid for rules created by a MudObject factory function.");" is 143.
Long Statement,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,TypesAgreeWithDeclaredGlobalRuleBook,The length of the statement  "            if (Rules == null) return true; // This means that rules were declared before global rulebooks were discovered. Queueing prevents this from happening." is 150.
Long Statement,RMUD,UpdateRules,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\MarkForUpdate.cs,AtStartup,The length of the statement  "            GlobalRules.DeclarePerformRuleBook<MudObject>("update"' "[Thing] : Considered for all things that have been marked for update."' "item");" is 137.
Long Statement,RMUD,PlayerAttendanceRules,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\MudCore.cs,AtStartup,The length of the statement  "            GlobalRules.DeclarePerformRuleBook<Actor>("player joined"' "[Player] : Considered when a player enters the game."' "actor");" is 124.
Long Statement,RMUD,PlayerAttendanceRules,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\MudCore.cs,AtStartup,The length of the statement  "            GlobalRules.DeclarePerformRuleBook<Actor>("player left"' "[Player] : Considered when a player leaves the game."' "actor");" is 122.
Long Statement,RMUD,StandardProceduralRules,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\CommandEntry.cs,AtStartup,The length of the statement  "            GlobalRules.DeclarePerformRuleBook<PossibleMatch' Actor>("before acting"' "[Match' Actor] : Considered before performing in world actions.");" is 141.
Long Statement,RMUD,StandardProceduralRules,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\CommandEntry.cs,AtStartup,The length of the statement  "            GlobalRules.DeclarePerformRuleBook<PossibleMatch' Actor>("after acting"' "[Match' Actor] : Considered after performing in world actions.");" is 139.
Long Statement,RMUD,CommandEntry,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\CommandEntry.cs,Check,The length of the statement  "            GeneratedManual.AppendLine("Consider the check rulebook '" + RuleName + "' with arguments " + String.Join("' "' RuleArguments));" is 128.
Long Statement,RMUD,CommandEntry,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\CommandEntry.cs,Check,The length of the statement  "                    if (Core.GlobalRules.ConsiderCheckRule(RuleName' RuleArguments.Select(a => match.ValueOrDefault(a)).ToArray()) == CheckResult.Allow)" is 132.
Long Statement,RMUD,CommandEntry,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\CommandEntry.cs,Perform,The length of the statement  "            GeneratedManual.AppendLine("Consider the perform rulebook '" + RuleName + "' with arguments " + String.Join("' "' RuleArguments) + " and discard the result.");" is 159.
Long Statement,RMUD,CommandEntry,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\CommandEntry.cs,AbideBy,The length of the statement  "            GeneratedManual.AppendLine("Consider the perform rulebook '" + RuleName + "' with arguments " + String.Join("' "' RuleArguments) + " and abide by the result.");" is 160.
Long Statement,RMUD,CommandEntry,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\CommandEntry.cs,BeforeActing,The length of the statement  "                BodyClause = RuleDelegateWrapper<PerformResult>.MakeWrapper<PossibleMatch' Actor>((match' actor) => Core.GlobalRules.ConsiderMatchBasedPerformRule("before acting"' match' actor))'" is 179.
Long Statement,RMUD,CommandParser,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\CommandParser.cs,ParseCommand,The length of the statement  "            var tokens = new LinkedList<String>(Command.RawCommand.Split(new char[] { ' '' '\t' }' StringSplitOptions.RemoveEmptyEntries));" is 127.
Long Statement,RMUD,DisambigCommandHandler,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\DisambigCommandHandler.cs,HandleCommand,The length of the statement  "                    var choosenMatches = MatchedCommand.Matches.Where(m => Object.ReferenceEquals(m[DisambigArgument]' DisambigObjects[ordinal]));" is 126.
Long Statement,RMUD,ObjectMatcher,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\Matchers\ObjectMatcher.cs,Match,The length of the statement  "				while (possibleMatch.Next != null && matchableMudObject.Nouns.Match(possibleMatch.Next.Value.ToUpper()' Context.ExecutingActor))" is 128.
Long Statement,RMUD,ParserCommandHandler,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\ParserCommandHandler.cs,HandleCommand,The length of the statement  "                MudObject.SendMessage(Command.Actor' String.Format("Command completed in {0} milliseconds."' (endTime - startTime).TotalMilliseconds));" is 135.
Long Statement,RMUD,BeforeAndAfterCommandRules,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\ExecuteCommand.cs,AtStartup,The length of the statement  "            GlobalRules.DeclarePerformRuleBook<PossibleMatch' Actor>("before command"' "[Match' Actor] : Considered before every command's procedural rules are run."' "match"' "actor");" is 173.
Long Statement,RMUD,BeforeAndAfterCommandRules,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\ExecuteCommand.cs,AtStartup,The length of the statement  "            GlobalRules.DeclarePerformRuleBook<PossibleMatch' Actor>("after command"' "[Match' Actor] : Considered after every command's procedural rules are run' unless the before command rules stopped the command."' "match"' "actor");" is 224.
Long Statement,RMUD,BeforeAndAfterCommandRules,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\ExecuteCommand.cs,AtStartup,The length of the statement  "            GlobalRules.DeclarePerformRuleBook<Actor>("after every command"' "[Actor] : Considered after every command' even if earlier rules stopped the command."' "actor");" is 162.
Long Statement,RMUD,PersistAttribute,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Serialization\PersistAttribute.cs,_ReadValue,The length of the statement  "                    if (Reader.TokenType != JsonToken.PropertyName || Reader.Value.ToString() != "$type") throw new InvalidOperationException();" is 124.
Long Statement,RMUD,GithubDatabase,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\GithubDatabase\Compile.cs,EnumerateGithubDatabase,The length of the statement  "                    fileList.AddRange(codeResult.Items.Where(i => i.Path.StartsWith("static/")).Select(i => i.Path.Substring("static/".Length' i.Path.Length - "static/".Length - 3)));" is 163.
Long Statement,RMUD,GithubDatabase,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\GithubDatabase\Compile.cs,InitialBulkCompile,The length of the statement  "                throw new InvalidOperationException("Bulk compilation must happen before any other objects are loaded or bad things happen.");" is 126.
Long Statement,RMUD,GithubDatabase,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\GithubDatabase\Compile.cs,InitialBulkCompile,The length of the statement  "                    var qualifiedName = String.Format("database.{0}.{1}"' PathToNamespace(s)' System.IO.Path.GetFileNameWithoutExtension(s));" is 121.
Long Statement,RMUD,GithubDatabase,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\GithubDatabase\Compile.cs,Initialize,The length of the statement  "            if (errorReported) Console.WriteLine("Bulk compilation of one or more database objects failed. Using ad-hoc compilation as fallback.");" is 135.
Long Statement,RMUD,MudObjectRules,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\WorldModel\MudObjectRules.cs,AtStartup,The length of the statement  "            GlobalRules.DeclareValueRuleBook<MudObject' MudObject' String' String>("printed name"' "[Viewer' Object' Article -> String] : Find the name that should be displayed for an object."' "actor"' "item"' "article");" is 210.
Long Statement,RMUD,Portal,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\WorldModel\Portal.cs,FindOppositeSide,The length of the statement  "                p.GetBooleanProperty("portal?") && p.GetPropertyOrDefault<Direction>("link direction"' Direction.NOWHERE) == oppositeDirection);" is 128.
Long Statement,RMUD,Room,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\WorldModel\Room.cs,OpenLink,The length of the statement  "            if (RemoveAll(thing => thing.GetPropertyOrDefault<Direction>("link direction"' RMUD.Direction.NOWHERE) == Direction && thing.GetPropertyOrDefault<bool>("portal?"' false)) > 0)" is 175.
Long Statement,RMUD,RoomLightingRules,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\WorldModel\RoomLightingRules.cs,AtStartup,The length of the statement  "            GlobalRules.DeclareValueRuleBook<MudObject' LightingLevel>("light level"' "[item] -> LightingLevel' How much light does the item emit?"' "item");" is 145.
Long Statement,RMUD.SinglePlayer,Driver,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\SinglePlayer\Driver.cs,Start,The length of the statement  "            assemblies.Add(new ModuleAssembly(assembly' new ModuleInfo { BaseNameSpace = gameInfo.DatabaseNameSpace }' AssemblyFile));" is 122.
Complex Conditional,RMUD,MudObject,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\FindLocale.cs,MudObject,The conditional expression  "firstChar == 'a' || firstChar == 'e' || firstChar == 'i' || firstChar == 'o' || firstChar == 'u'"  is complex.
Empty Catch Block,RMUD,GithubDatabase,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\GithubDatabase\Compile.cs,LoadSourceFile,The method has an empty catch block.
Empty Catch Block,RMUD.SinglePlayer,Driver,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\SinglePlayer\Driver.cs,DetectAndAssignDriver,The method has an empty catch block.
Magic Number,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,ProcessThreadedCommands,The following statement contains a magic number: System.Threading.Thread.Sleep(10);
Magic Number,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,FormatList,The following statement contains a magic number: x == list.Count - 2 && !String.IsNullOrEmpty(CoordinatingConjunction)
Magic Number,RMUD,Core,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\CommandQueue.cs,AddPlayer,The following statement contains a magic number: Actor.Rank = 500;
Magic Number,RMUD,RuleBuilder<T0;T1;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleBuilderGen.cs,ThisOnly,The following statement contains a magic number: N < 0 || N >= 2
Magic Number,RMUD,RuleBuilder<T0;T1;T2;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleBuilderGen.cs,ThisOnly,The following statement contains a magic number: N < 0 || N >= 3
Magic Number,RMUD,RuleBuilder<T0;T1;T2;T3;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleBuilderGen.cs,ThisOnly,The following statement contains a magic number: N < 0 || N >= 4
Magic Number,RMUD,RuleDelegateWrapperImpl<T0;T1;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleDelegatesGen.cs,AreArgumentsCompatible,The following statement contains a magic number: Arguments.Length != 2
Magic Number,RMUD,RuleDelegateWrapperImpl<T0;T1;T2;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleDelegatesGen.cs,AreArgumentsCompatible,The following statement contains a magic number: Arguments.Length != 3
Magic Number,RMUD,RuleDelegateWrapperImpl<T0;T1;T2;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleDelegatesGen.cs,AreArgumentsCompatible,The following statement contains a magic number: Arguments[2] != null && !typeof(T2).IsAssignableFrom(Arguments[2].GetType())
Magic Number,RMUD,RuleDelegateWrapperImpl<T0;T1;T2;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleDelegatesGen.cs,AreArgumentsCompatible,The following statement contains a magic number: Arguments[2] != null && !typeof(T2).IsAssignableFrom(Arguments[2].GetType())
Magic Number,RMUD,RuleDelegateWrapperImpl<T0;T1;T2;T3;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleDelegatesGen.cs,AreArgumentsCompatible,The following statement contains a magic number: Arguments.Length != 4
Magic Number,RMUD,RuleDelegateWrapperImpl<T0;T1;T2;T3;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleDelegatesGen.cs,AreArgumentsCompatible,The following statement contains a magic number: Arguments[2] != null && !typeof(T2).IsAssignableFrom(Arguments[2].GetType())
Magic Number,RMUD,RuleDelegateWrapperImpl<T0;T1;T2;T3;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleDelegatesGen.cs,AreArgumentsCompatible,The following statement contains a magic number: Arguments[2] != null && !typeof(T2).IsAssignableFrom(Arguments[2].GetType())
Magic Number,RMUD,RuleDelegateWrapperImpl<T0;T1;T2;T3;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleDelegatesGen.cs,AreArgumentsCompatible,The following statement contains a magic number: Arguments[3] != null && !typeof(T3).IsAssignableFrom(Arguments[3].GetType())
Magic Number,RMUD,RuleDelegateWrapperImpl<T0;T1;T2;T3;TR>,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleDelegatesGen.cs,AreArgumentsCompatible,The following statement contains a magic number: Arguments[3] != null && !typeof(T3).IsAssignableFrom(Arguments[3].GetType())
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,DeclarePerformRuleBook,The following statement contains a magic number: Rules.FindOrCreateRuleBook<PerformResult>(Name' 2).Description = Description;
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,DeclareValueRuleBook,The following statement contains a magic number: Rules.FindOrCreateRuleBook<RT>(Name' 2).Description = Description;
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,DeclareCheckRuleBook,The following statement contains a magic number: Rules.FindOrCreateRuleBook<CheckResult>(Name' 2).Description = Description;
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,Perform,The following statement contains a magic number: CreateNewRule(() => { Rules.FindOrCreateRuleBook<PerformResult>(Name' 2).AddRule(rule); });
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,Value,The following statement contains a magic number: CreateNewRule(() => { Rules.FindOrCreateRuleBook<RT>(Name' 2).AddRule(rule); });
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,Check,The following statement contains a magic number: CreateNewRule(() => { Rules.FindOrCreateRuleBook<CheckResult>(Name' 2).AddRule(rule); });
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,DeclarePerformRuleBook,The following statement contains a magic number: Rules.FindOrCreateRuleBook<PerformResult>(Name' 3).Description = Description;
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,DeclareValueRuleBook,The following statement contains a magic number: Rules.FindOrCreateRuleBook<RT>(Name' 3).Description = Description;
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,DeclareCheckRuleBook,The following statement contains a magic number: Rules.FindOrCreateRuleBook<CheckResult>(Name' 3).Description = Description;
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,Perform,The following statement contains a magic number: CreateNewRule(() => { Rules.FindOrCreateRuleBook<PerformResult>(Name' 3).AddRule(rule); });
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,Value,The following statement contains a magic number: CreateNewRule(() => { Rules.FindOrCreateRuleBook<RT>(Name' 3).AddRule(rule); });
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,Check,The following statement contains a magic number: CreateNewRule(() => { Rules.FindOrCreateRuleBook<CheckResult>(Name' 3).AddRule(rule); });
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,DeclarePerformRuleBook,The following statement contains a magic number: Rules.FindOrCreateRuleBook<PerformResult>(Name' 4).Description = Description;
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,DeclareValueRuleBook,The following statement contains a magic number: Rules.FindOrCreateRuleBook<RT>(Name' 4).Description = Description;
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,DeclareCheckRuleBook,The following statement contains a magic number: Rules.FindOrCreateRuleBook<CheckResult>(Name' 4).Description = Description;
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,Perform,The following statement contains a magic number: CreateNewRule(() => { Rules.FindOrCreateRuleBook<PerformResult>(Name' 4).AddRule(rule); });
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,Value,The following statement contains a magic number: CreateNewRule(() => { Rules.FindOrCreateRuleBook<RT>(Name' 4).AddRule(rule); });
Magic Number,RMUD,RuleEngine,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleEngineAddRuleGen.cs,Check,The following statement contains a magic number: CreateNewRule(() => { Rules.FindOrCreateRuleBook<CheckResult>(Name' 4).AddRule(rule); });
Magic Number,RMUD,RuleSet,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleSet.cs,AddRule,The following statement contains a magic number: FindOrCreateRuleBook<RT>(Name' 2).AddRule(rule);
Magic Number,RMUD,RuleSet,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleSet.cs,AddRule,The following statement contains a magic number: FindOrCreateRuleBook<RT>(Name' 3).AddRule(rule);
Magic Number,RMUD,RuleSet,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Rules\RuleSet.cs,AddRule,The following statement contains a magic number: FindOrCreateRuleBook<RT>(Name' 4).AddRule(rule);
Magic Number,RMUD,CommandEntry,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Parser\CommandEntry.cs,CommandEntry,The following statement contains a magic number: ProceduralRules = new PerformRuleBook(Core.GlobalRules.Rules)             {                 ArgumentCount = 2                 /*ArgumentTypes = new List<Type>(new Type[] { typeof(PossibleMatch)' typeof(Actor) })'*/             };
Magic Number,RMUD,ContainerSerializer,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Serialization\ContainerSerializer.cs,RelativeLocationToString,The following statement contains a magic number: parts.Length > 2
Magic Number,RMUD,GithubDatabase,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\GithubDatabase\Compile.cs,EnumerateLocalDatabase,The following statement contains a magic number: r.Add(file.Substring(StaticPath.Length' file.Length - StaticPath.Length - 3).Replace("\\"' "/"));
Magic Number,RMUD,GithubDatabase,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\GithubDatabase\Compile.cs,EnumerateGithubDatabase,The following statement contains a magic number: fileList.AddRange(codeResult.Items.Where(i => i.Path.StartsWith("static/")).Select(i => i.Path.Substring("static/".Length' i.Path.Length - "static/".Length - 3)));
Magic Number,RMUD,GithubDatabase,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\GithubDatabase\Compile.cs,InitialBulkCompile,The following statement contains a magic number: int lineCount = 5;
Magic Number,RMUD,GithubDatabase,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\GithubDatabase\Compile.cs,InitialBulkCompile,The following statement contains a magic number: lineCount += 4;
Magic Number,RMUD,ReverseLineReader,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\ReverseLineReader.cs,GetEnumeratorImpl,The following statement contains a magic number: byte[] buffer = new byte[bufferSize + 2];
Magic Number,RMUD,ReverseLineReader,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\ReverseLineReader.cs,GetEnumeratorImpl,The following statement contains a magic number: firstCharPosition == 3 || firstCharPosition == bytesToRead
Magic Number,RMUD,Link,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\WorldModel\Directions.cs,ToCardinal,The following statement contains a magic number: return (Direction)(Names.IndexOf(_str.ToUpper()) / 2);
Magic Number,RMUD,Settings,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\WorldModel\Settings.cs,Settings,The following statement contains a magic number: RankNames.Add(500' "deus");
Magic Number,RMUD,Settings,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\WorldModel\Settings.cs,Settings,The following statement contains a magic number: RankNames.Add(400' "imperator");
Magic Number,RMUD,Settings,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\WorldModel\Settings.cs,Settings,The following statement contains a magic number: RankNames.Add(300' "patrician");
Magic Number,RMUD,Settings,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\WorldModel\Settings.cs,Settings,The following statement contains a magic number: RankNames.Add(200' "senator");
Magic Number,RMUD,Settings,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\WorldModel\Settings.cs,Settings,The following statement contains a magic number: RankNames.Add(100' "equester");
Magic Number,RMUD.Modules.Meta,Man,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Meta\Man.cs,Create,The following statement contains a magic number: Parser.AddCommand(                 Sequence(                     Or(                         KeyWord("HELP")'                         KeyWord("MAN")'                         KeyWord("?"))'                     Optional(Rest("TOPIC"))))                 .Manual("This is the command you typed to get this message.")                 .ProceduralRule((match' actor) =>                 {                     if (!match.ContainsKey("TOPIC"))                     {                         MudObject.SendMessage(actor' "@help topics");                         var line = "";                         foreach (var manPage in ManPages.Pages.Select(p => p.Name).Distinct().OrderBy(s => s))                         {                             line += manPage;                             if (line.Length < 20) line += new String(' '' 20 - line.Length);                             else if (line.Length < 40) line += new String(' '' 40 - line.Length);                             else                             {                                 MudObject.SendMessage(actor' line);                                 line = "";                             }                         }                     }                     else                     {                         var manPageName = match["TOPIC"].ToString().ToUpper();                         var pages = new List<ManPage>(ManPages.Pages.Where(p => p.Name == manPageName));                         if (pages.Count > 0)                             foreach (var manPage in pages)                                 manPage.SendManPage(actor);                         else                             MudObject.SendMessage(actor' "@no help topic");                      }                     return PerformResult.Continue;                 });
Magic Number,RMUD.Modules.Meta,Man,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Meta\Man.cs,Create,The following statement contains a magic number: Parser.AddCommand(                 Sequence(                     Or(                         KeyWord("HELP")'                         KeyWord("MAN")'                         KeyWord("?"))'                     Optional(Rest("TOPIC"))))                 .Manual("This is the command you typed to get this message.")                 .ProceduralRule((match' actor) =>                 {                     if (!match.ContainsKey("TOPIC"))                     {                         MudObject.SendMessage(actor' "@help topics");                         var line = "";                         foreach (var manPage in ManPages.Pages.Select(p => p.Name).Distinct().OrderBy(s => s))                         {                             line += manPage;                             if (line.Length < 20) line += new String(' '' 20 - line.Length);                             else if (line.Length < 40) line += new String(' '' 40 - line.Length);                             else                             {                                 MudObject.SendMessage(actor' line);                                 line = "";                             }                         }                     }                     else                     {                         var manPageName = match["TOPIC"].ToString().ToUpper();                         var pages = new List<ManPage>(ManPages.Pages.Where(p => p.Name == manPageName));                         if (pages.Count > 0)                             foreach (var manPage in pages)                                 manPage.SendManPage(actor);                         else                             MudObject.SendMessage(actor' "@no help topic");                      }                     return PerformResult.Continue;                 });
Magic Number,RMUD.Modules.Meta,Man,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Meta\Man.cs,Create,The following statement contains a magic number: Parser.AddCommand(                 Sequence(                     Or(                         KeyWord("HELP")'                         KeyWord("MAN")'                         KeyWord("?"))'                     Optional(Rest("TOPIC"))))                 .Manual("This is the command you typed to get this message.")                 .ProceduralRule((match' actor) =>                 {                     if (!match.ContainsKey("TOPIC"))                     {                         MudObject.SendMessage(actor' "@help topics");                         var line = "";                         foreach (var manPage in ManPages.Pages.Select(p => p.Name).Distinct().OrderBy(s => s))                         {                             line += manPage;                             if (line.Length < 20) line += new String(' '' 20 - line.Length);                             else if (line.Length < 40) line += new String(' '' 40 - line.Length);                             else                             {                                 MudObject.SendMessage(actor' line);                                 line = "";                             }                         }                     }                     else                     {                         var manPageName = match["TOPIC"].ToString().ToUpper();                         var pages = new List<ManPage>(ManPages.Pages.Where(p => p.Name == manPageName));                         if (pages.Count > 0)                             foreach (var manPage in pages)                                 manPage.SendManPage(actor);                         else                             MudObject.SendMessage(actor' "@no help topic");                      }                     return PerformResult.Continue;                 });
Magic Number,RMUD.Modules.Meta,Man,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\Core\Meta\Man.cs,Create,The following statement contains a magic number: Parser.AddCommand(                 Sequence(                     Or(                         KeyWord("HELP")'                         KeyWord("MAN")'                         KeyWord("?"))'                     Optional(Rest("TOPIC"))))                 .Manual("This is the command you typed to get this message.")                 .ProceduralRule((match' actor) =>                 {                     if (!match.ContainsKey("TOPIC"))                     {                         MudObject.SendMessage(actor' "@help topics");                         var line = "";                         foreach (var manPage in ManPages.Pages.Select(p => p.Name).Distinct().OrderBy(s => s))                         {                             line += manPage;                             if (line.Length < 20) line += new String(' '' 20 - line.Length);                             else if (line.Length < 40) line += new String(' '' 40 - line.Length);                             else                             {                                 MudObject.SendMessage(actor' line);                                 line = "";                             }                         }                     }                     else                     {                         var manPageName = match["TOPIC"].ToString().ToUpper();                         var pages = new List<ManPage>(ManPages.Pages.Where(p => p.Name == manPageName));                         if (pages.Count > 0)                             foreach (var manPage in pages)                                 manPage.SendManPage(actor);                         else                             MudObject.SendMessage(actor' "@no help topic");                      }                     return PerformResult.Continue;                 });
Magic Number,RMUD.SinglePlayer,Driver,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\SinglePlayer\Driver.cs,SwitchPlayerCharacter,The following statement contains a magic number: NewCharacter.Rank = 500;
Magic Number,RMUD.SinglePlayer,Driver,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\SinglePlayer\Driver.cs,Start,The following statement contains a magic number: Player.Rank = 500;
Magic Number,RMUD.SinglePlayer,Driver,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\Core\SinglePlayer\Driver.cs,Start,The following statement contains a magic number: Player.Rank = 500;
