Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NetworkModule.Telnet,TelnetClientSource,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Telnet\TelnetClientSource.cs,OnData,Cyclomatic complexity of the method is 12
Long Statement,NetworkModule,AFK,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Afk.cs,Create,The length of the statement  "                .Manual("Sets your afk message. This message is displayed after 5 minutes of inactivity on the WHO list' and to any player who attempts to whisper to you.")" is 156.
Long Statement,NetworkModule,Clients,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Clients.cs,ClientConnected,The length of the statement  "                Core.LogError("Rejected connection from " + Client.IPString + ". Matched ban " + ban.SourceBan.Glob + " Reason: " + ban.SourceBan.Reason);" is 138.
Long Statement,NetworkModule,ConnectedPlayersObjectSource,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\ConnectedPlayersObjectSource.cs,GetObjects,The length of the statement  "            return new List<MudObject>(Clients.ConnectedClients.Where(c => c is NetworkClient && (c as NetworkClient).IsLoggedOn).Select(c => c.Player));" is 141.
Long Statement,NetworkModule,Kick,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Kick.cs,Create,The length of the statement  "                        var maskRegex = new System.Text.RegularExpressions.Regex(ProscriptionList.ConvertGlobToRegex(mask)' System.Text.RegularExpressions.RegexOptions.IgnoreCase);" is 156.
Long Statement,NetworkModule,LoginCommandHandler,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\LoginCommandHandler.cs,LogPlayerIn,The length of the statement  "                    Account.LoggedInCharacter.ConnectedClient.Send("You are being disconnected because you have logged into this account from another connection.\r\n");" is 148.
Long Statement,NetworkModule,Stats,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Stats.cs,AtStartup,The length of the statement  "                            MudObject.SendMessage(actor' (client as NetworkClient).ConnectionDescription + (client.Player == null ? "" : (" - " + client.Player.Short)));" is 141.
Long Statement,NetworkModule,Whisper,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Whisper.cs,Create,The length of the statement  "                    MudObject.SendMessage(player' "[privately " + DateTime.Now + "] ^<the0> : \"" + match["SPEECH"].ToString() + "\""' actor);" is 122.
Long Statement,NetworkModule,Whisper,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Whisper.cs,Create,The length of the statement  "                        MudObject.SendMessage(actor' "^<the0> is afk : " + player.ConnectedClient.Player.GetProperty<Account>("account").AFKMessage' player);" is 133.
Virtual Method Call from Constructor,NetworkModule,LoginCommandHandler,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\LoginCommandHandler.cs,LoginCommandHandler,The constructor "LoginCommandHandler" calls a virtual method "Create".
Virtual Method Call from Constructor,NetworkModule,LoginCommandHandler,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\LoginCommandHandler.cs,LoginCommandHandler,The constructor "LoginCommandHandler" calls a virtual method "Create".
Virtual Method Call from Constructor,NetworkModule,LoginCommandHandler,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\LoginCommandHandler.cs,LoginCommandHandler,The constructor "LoginCommandHandler" calls a virtual method "Create".
Magic Number,NetworkModule,Accounts,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Accounts.cs,GenerateRandomSalt,The following statement contains a magic number: var bytes = new Byte[64];
Magic Number,NetworkModule,Ban,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Ban.cs,Create,The following statement contains a magic number: Parser.AddCommand(                 Sequence(                     RequiredRank(500)'                     KeyWord("BAN")'                     MustMatch("You must supply an ip mask."' SingleWord("GLOB"))'                     MustMatch("You must supply a reason."' Rest("REASON"))))                 .Manual("Ban every player who's ip matches the mask.")                 .ProceduralRule((match' actor) =>                 {                     Clients.ProscriptionList.Ban(match["GLOB"].ToString()' match["REASON"].ToString());                     Clients.SendGlobalMessage("^<the0> has banned " + match["GLOB"].ToString()' actor);                     return PerformResult.Continue;                 });
Magic Number,NetworkModule,Ban,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Ban.cs,Create,The following statement contains a magic number: Parser.AddCommand(                 Sequence(                     RequiredRank(500)'                     KeyWord("UNBAN")'                     MustMatch("You must supply an ip mask."' SingleWord("GLOB"))))                 .Manual("Remove an existing ban.")                 .ProceduralRule((match' actor) =>                 {                     Clients.ProscriptionList.RemoveBan(match["GLOB"].ToString());                     Clients.SendGlobalMessage("^<the0> removes the ban on " + match["GLOB"].ToString()' actor);                     return PerformResult.Continue;                 });
Magic Number,NetworkModule,Kick,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Kick.cs,Create,The following statement contains a magic number: Parser.AddCommand(                 Sequence(                     RequiredRank(500)'                     KeyWord("KICK")'                     Or(                         Object("PLAYER"' new ConnectedPlayersObjectSource()' ObjectMatcherSettings.None)'                         SingleWord("MASK"))))                 .Manual("Makes bad people go away.")                 .ProceduralRule((match' actor) =>                 {                     if (match.ContainsKey("PLAYER"))                         KickPlayer(match["PLAYER"] as Actor' actor);                     else                     {                         var mask = match["MASK"].ToString();                         var maskRegex = new System.Text.RegularExpressions.Regex(ProscriptionList.ConvertGlobToRegex(mask)' System.Text.RegularExpressions.RegexOptions.IgnoreCase);                          //Iterate over local copy because kicking modifies ConnectedClients.                         foreach (var client in new List<Client>(Clients.ConnectedClients))                         {                             var netClient = client as NetworkClient;                             if (netClient != null && netClient.IsLoggedOn && maskRegex.Matches(netClient.IPString).Count > 0)                             {                                 Core.MarkLocaleForUpdate(client.Player);                                 KickPlayer(client.Player' actor);                             }                         }                     }                      return PerformResult.Continue;                 });
Magic Number,NetworkModule.Telnet,TelnetClientSource,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Telnet\TelnetClientSource.cs,Listen,The following statement contains a magic number: ListenSocket.Listen(16);
Magic Number,NetworkModule.Telnet,TelnetClientSource,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Telnet\TelnetClientSource.cs,SetKeepAlive,The following statement contains a magic number: byte[] inValue = new byte[3 * BytesPerLong];
Magic Number,NetworkModule.Telnet,TelnetClientSource,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Telnet\TelnetClientSource.cs,SetKeepAlive,The following statement contains a magic number: inValue[i * BytesPerLong + 3] = (byte)(input[i] >> ((BytesPerLong - 1) * BitsPerByte) & 0xff);
Magic Number,NetworkModule.Telnet,TelnetClientSource,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Telnet\TelnetClientSource.cs,SetKeepAlive,The following statement contains a magic number: inValue[i * BytesPerLong + 2] = (byte)(input[i] >> ((BytesPerLong - 2) * BitsPerByte) & 0xff);
Magic Number,NetworkModule.Telnet,TelnetClientSource,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Telnet\TelnetClientSource.cs,SetKeepAlive,The following statement contains a magic number: inValue[i * BytesPerLong + 2] = (byte)(input[i] >> ((BytesPerLong - 2) * BitsPerByte) & 0xff);
Magic Number,NetworkModule.Telnet,TelnetClientSource,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Telnet\TelnetClientSource.cs,SetKeepAlive,The following statement contains a magic number: inValue[i * BytesPerLong + 1] = (byte)(input[i] >> ((BytesPerLong - 3) * BitsPerByte) & 0xff);
Magic Number,NetworkModule.Telnet,TelnetClientSource,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Telnet\TelnetClientSource.cs,SetKeepAlive,The following statement contains a magic number: inValue[i * BytesPerLong + 0] = (byte)(input[i] >> ((BytesPerLong - 4) * BitsPerByte) & 0xff);
Magic Number,NetworkModule.Telnet,TelnetClientSource,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Telnet\TelnetClientSource.cs,OnNewClient,The following statement contains a magic number: SetKeepAlive(ClientSocket' 1000 * 60' 1000);
Magic Number,NetworkModule.Telnet,TelnetClientSource,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Telnet\TelnetClientSource.cs,OnNewClient,The following statement contains a magic number: SetKeepAlive(ClientSocket' 1000 * 60' 1000);
Magic Number,NetworkModule.Telnet,TelnetClientSource,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\NetworkModule\Telnet\TelnetClientSource.cs,OnNewClient,The following statement contains a magic number: SetKeepAlive(ClientSocket' 1000 * 60' 1000);
