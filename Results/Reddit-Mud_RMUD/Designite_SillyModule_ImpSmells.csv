Implementation smell,Namespace,Class,File,Method,Description
Long Method,SillyModule,Silly,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\SillyModule\Silly.cs,AtStartup,The method has 104 lines of code.
Long Statement,SillyModule,Silly,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\SillyModule\Silly.cs,Create,The length of the statement  "                 .Manual("Applies the silly status effect to the target of your choice. Being silly will make it safe for your victim to dance. Sillification is meant as a demonstration of the concepts involved with rule books and status effects' and not as an actual component of the game world.")" is 281.
Long Statement,SillyModule,Silly,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\SillyModule\Silly.cs,AtStartup,The length of the statement  "            GlobalRules.DeclareValueRuleBook<MudObject' bool>("silly?"' "[Thing -> bool] : Determine if an object is silly."' "item");" is 122.
Long Statement,SillyModule,Silly,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\SillyModule\Silly.cs,AtStartup,The length of the statement  "            GlobalRules.DeclareCheckRuleBook<MudObject' MudObject>("can silly?"' "[Actor' Target] : Can the actor make the target silly?"' "actor"' "item");" is 144.
Long Statement,SillyModule,Silly,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\SillyModule\Silly.cs,AtStartup,The length of the statement  "            GlobalRules.DeclarePerformRuleBook<MudObject' MudObject>("silly"' "[Actor' Target] : Apply silly status to the target."' "actor"' "item");" is 138.
Magic Number,SillyModule,Silly,C:\research\architectureSmells\repos\Reddit-Mud_RMUD\SillyModule\Silly.cs,AtStartup,The following statement contains a magic number: GlobalRules.Perform<MudObject' MudObject>("silly")                 .Do((actor' target) =>                 {                     MudObject.SendExternalMessage(actor' "^<the0> applies extra silly to <the1>."' actor' target);                     MudObject.SendMessage(actor' "You apply extra silly to <the0>."' target);                      var ruleID = Guid.NewGuid();                     var counter = 100;                      target.Nouns.Add("silly");                      target.Value<MudObject' bool>("silly?").Do((thing) => true).ID(ruleID.ToString())                         .Name("Silly things are silly rule.");                      target.Value<MudObject' MudObject' String' String>("printed name")                         .Do((viewer' thing' article) =>                         {                             return "silly " + thing.Short;                         })                         .Name("Silly things have silly names rule.")                         .ID(ruleID.ToString());                      GlobalRules.Perform("heartbeat")                         .Do(() =>                         {                             counter -= 1;                             if (counter <= 0)                             {                                 MudObject.SendExternalMessage(target' "^<the0> is serious now."' target);                                 target.Nouns.Remove("silly");                                 target.Rules.DeleteAll(ruleID.ToString());                                 GlobalRules.DeleteRule("heartbeat"' ruleID.ToString());                             }                             return PerformResult.Continue;                         })                         .ID(ruleID.ToString())                         .Name("Countdown to seriousness rule.");                      return PerformResult.Continue;                 })                 .Name("Apply sillyness rule.");
