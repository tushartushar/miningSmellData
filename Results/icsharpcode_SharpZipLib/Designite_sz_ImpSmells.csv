Implementation smell,Namespace,Class,File,Method,Description
Long Method,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,SetArgs,The method has 262 lines of code.
Complex Method,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,InterpretExternalAttributes,Cyclomatic complexity of the method is 17
Complex Method,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,SetArgs,Cyclomatic complexity of the method is 54
Complex Method,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,ListZip,Cyclomatic complexity of the method is 9
Complex Method,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,ListZipViaZipFile,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,Create,Cyclomatic complexity of the method is 10
Complex Method,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,ExtractFile,Cyclomatic complexity of the method is 8
Complex Method,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,Execute,Cyclomatic complexity of the method is 10
Long Statement,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,SetArgs,The length of the statement  "                                    overwriteFiles = (optionIndex < option.Length) ? (option[optionIndex] == '+') ? Overwrite.Always : Overwrite.Never : Overwrite.Never; " is 133.
Long Statement,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,ShowEnvironment,The length of the statement  "            Console.WriteLine( "Current culture LCID 0x{0:X}' {1}"' CultureInfo.CurrentCulture.LCID' CultureInfo.CurrentCulture.EnglishName); " is 129.
Long Statement,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,ShowEnvironment,The length of the statement  "            Console.WriteLine( "Current thread OEM codepage {0}"' System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.OEMCodePage); " is 129.
Long Statement,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,ShowEnvironment,The length of the statement  "            Console.WriteLine( "Current thread Mac codepage {0}"' System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.MacCodePage); " is 129.
Long Statement,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,ShowEnvironment,The length of the statement  "            Console.WriteLine( "Current thread Ansi codepage {0}"' System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ANSICodePage); " is 131.
Long Statement,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,ListZip,The length of the statement  "                                entryCount + " entries"' totalSize' GetCompressionRatio(fileInfo.Length' totalSize)' fileInfo.Length' fileInfo.LastWriteTime); " is 126.
Long Statement,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,ListZipViaZipFile,The length of the statement  "                        entryCount + " entries"' totalSize' GetCompressionRatio(fileInfo.Length' totalSize)' fileInfo.Length' fileInfo.LastWriteTime); " is 126.
Complex Conditional,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,SetArgs,The conditional expression  "checkPath.IndexOfAny(Path.GetInvalidPathChars()) >= 0  #endif                      || checkPath.IndexOf('*') >= 0 || checkPath.IndexOf('?') >= 0                      || (deviceCheck >= 0 && deviceCheck != 1)"  is complex.
Magic Number,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,InterpretExternalAttributes,The following statement contains a magic number: operatingSystem == 10
Magic Number,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,InterpretExternalAttributes,The following statement contains a magic number: (operatingSystem == 0) || (operatingSystem == 10)
Magic Number,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,GetCompressionRatio,The following statement contains a magic number: result = (int) Math.Round((1.0 - ((double)packedSize / (double)unpackedSize)) * 100.0);
Magic Number,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,ListZip,The following statement contains a magic number: theEntry.Name.Length > 15
Magic Number,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,ExtractFile,The following statement contains a magic number: byte[] data = new byte[4096];
Missing Default,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,SetArgs,The following switch statement is missing a default case: switch ( optArg ) {                                                      case "on":                                                          useZip64_ = UseZip64.On;                                                          break;  														                                                      case "off":                                                          useZip64_ = UseZip64.Off;                                                          break;  														                                                      case "auto":                                                          useZip64_ = UseZip64.Dynamic;                                                          break;                                                  }
Missing Default,ICSharpCode.SharpZipLib.Samples.SZ,SharpZipArchiver,D:\research\architectureSmells\repos\icsharpcode_SharpZipLib\samples\ICSharpCode.SharpZipLib.Samples\cs\sz\sz.cs,Execute,The following switch statement is missing a default case: switch (operation) {                          case Operation.List:                              List(fileSpecs);                              break;  						                          case Operation.Create:                              Create(fileSpecs);                              break;  						                          case Operation.Extract:                              Extract(fileSpecs);                              break;                            case Operation.Delete:                              Delete(fileSpecs);                              break;                            case Operation.Add:                              Add(fileSpecs);                              break;                            case Operation.Test:                              Test(fileSpecs);                              break;                      }
