Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Band8Ball,MainActivity,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\MicrosoftBand\BandEightBall\Band8Ball\MainActivity.cs,AddTileAsync,The length of the statement  "				//BandIcon badgeIcon = mCheckboxBadging.Checked ? BandIcon.ToBandIcon(BitmapFactory.DecodeResource(Resources' Resource.Raw.badge' options)) : null; " is 147.
Magic Number,Band8Ball,MainActivity,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\MicrosoftBand\BandEightBall\Band8Ball\MainActivity.cs,EnsureSensorsCreated,The following statement contains a magic number: accelerometerSensor.ReadingChanged += async (sender' e) =>  				{  					var accelerometerEvent = e.SensorReading;    					//if(Math.Abs(accelerometerEvent.AccelerationX) > 3) xCount++;  					if(Math.Abs(accelerometerEvent.AccelerationY) > 3) yCount++;  					if(Math.Abs(accelerometerEvent.AccelerationZ) > 3) zCount++;    					// rudimentary shake detection  					//if (xCount > 2  					if (yCount > 2  						&& zCount > 2) {    						// wait 20 seconds below allowing a new answer  						if (DateTime.Now.Subtract(lastAnswered).TotalSeconds > 20) {  							xCount = yCount = zCount = 0;  							lastAnswered = DateTime.Now;  							lastAnswer = Get8BallPrediction();    							await Model.Instance.Client.NotificationManager.SendMessageTaskAsync(  								uuid'   								"8Ball says..."'   								lastAnswer'   								DateTime.Now'  								MessageFlags.ShowDialog);  						}  					}  					this.RunOnUiThread(() =>  						{  //							accelX.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationX);  //							accelY.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationY);  //							accelZ.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationZ);    							accelZ.Text = xCount + " " + yCount + " " + zCount + " (x'y'x) only (y'z) count";    							resultText.Text = lastAnswer;  						});  				};
Magic Number,Band8Ball,MainActivity,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\MicrosoftBand\BandEightBall\Band8Ball\MainActivity.cs,EnsureSensorsCreated,The following statement contains a magic number: accelerometerSensor.ReadingChanged += async (sender' e) =>  				{  					var accelerometerEvent = e.SensorReading;    					//if(Math.Abs(accelerometerEvent.AccelerationX) > 3) xCount++;  					if(Math.Abs(accelerometerEvent.AccelerationY) > 3) yCount++;  					if(Math.Abs(accelerometerEvent.AccelerationZ) > 3) zCount++;    					// rudimentary shake detection  					//if (xCount > 2  					if (yCount > 2  						&& zCount > 2) {    						// wait 20 seconds below allowing a new answer  						if (DateTime.Now.Subtract(lastAnswered).TotalSeconds > 20) {  							xCount = yCount = zCount = 0;  							lastAnswered = DateTime.Now;  							lastAnswer = Get8BallPrediction();    							await Model.Instance.Client.NotificationManager.SendMessageTaskAsync(  								uuid'   								"8Ball says..."'   								lastAnswer'   								DateTime.Now'  								MessageFlags.ShowDialog);  						}  					}  					this.RunOnUiThread(() =>  						{  //							accelX.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationX);  //							accelY.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationY);  //							accelZ.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationZ);    							accelZ.Text = xCount + " " + yCount + " " + zCount + " (x'y'x) only (y'z) count";    							resultText.Text = lastAnswer;  						});  				};
Magic Number,Band8Ball,MainActivity,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\MicrosoftBand\BandEightBall\Band8Ball\MainActivity.cs,EnsureSensorsCreated,The following statement contains a magic number: accelerometerSensor.ReadingChanged += async (sender' e) =>  				{  					var accelerometerEvent = e.SensorReading;    					//if(Math.Abs(accelerometerEvent.AccelerationX) > 3) xCount++;  					if(Math.Abs(accelerometerEvent.AccelerationY) > 3) yCount++;  					if(Math.Abs(accelerometerEvent.AccelerationZ) > 3) zCount++;    					// rudimentary shake detection  					//if (xCount > 2  					if (yCount > 2  						&& zCount > 2) {    						// wait 20 seconds below allowing a new answer  						if (DateTime.Now.Subtract(lastAnswered).TotalSeconds > 20) {  							xCount = yCount = zCount = 0;  							lastAnswered = DateTime.Now;  							lastAnswer = Get8BallPrediction();    							await Model.Instance.Client.NotificationManager.SendMessageTaskAsync(  								uuid'   								"8Ball says..."'   								lastAnswer'   								DateTime.Now'  								MessageFlags.ShowDialog);  						}  					}  					this.RunOnUiThread(() =>  						{  //							accelX.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationX);  //							accelY.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationY);  //							accelZ.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationZ);    							accelZ.Text = xCount + " " + yCount + " " + zCount + " (x'y'x) only (y'z) count";    							resultText.Text = lastAnswer;  						});  				};
Magic Number,Band8Ball,MainActivity,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\MicrosoftBand\BandEightBall\Band8Ball\MainActivity.cs,EnsureSensorsCreated,The following statement contains a magic number: accelerometerSensor.ReadingChanged += async (sender' e) =>  				{  					var accelerometerEvent = e.SensorReading;    					//if(Math.Abs(accelerometerEvent.AccelerationX) > 3) xCount++;  					if(Math.Abs(accelerometerEvent.AccelerationY) > 3) yCount++;  					if(Math.Abs(accelerometerEvent.AccelerationZ) > 3) zCount++;    					// rudimentary shake detection  					//if (xCount > 2  					if (yCount > 2  						&& zCount > 2) {    						// wait 20 seconds below allowing a new answer  						if (DateTime.Now.Subtract(lastAnswered).TotalSeconds > 20) {  							xCount = yCount = zCount = 0;  							lastAnswered = DateTime.Now;  							lastAnswer = Get8BallPrediction();    							await Model.Instance.Client.NotificationManager.SendMessageTaskAsync(  								uuid'   								"8Ball says..."'   								lastAnswer'   								DateTime.Now'  								MessageFlags.ShowDialog);  						}  					}  					this.RunOnUiThread(() =>  						{  //							accelX.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationX);  //							accelY.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationY);  //							accelZ.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationZ);    							accelZ.Text = xCount + " " + yCount + " " + zCount + " (x'y'x) only (y'z) count";    							resultText.Text = lastAnswer;  						});  				};
Magic Number,Band8Ball,MainActivity,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\MicrosoftBand\BandEightBall\Band8Ball\MainActivity.cs,EnsureSensorsCreated,The following statement contains a magic number: accelerometerSensor.ReadingChanged += async (sender' e) =>  				{  					var accelerometerEvent = e.SensorReading;    					//if(Math.Abs(accelerometerEvent.AccelerationX) > 3) xCount++;  					if(Math.Abs(accelerometerEvent.AccelerationY) > 3) yCount++;  					if(Math.Abs(accelerometerEvent.AccelerationZ) > 3) zCount++;    					// rudimentary shake detection  					//if (xCount > 2  					if (yCount > 2  						&& zCount > 2) {    						// wait 20 seconds below allowing a new answer  						if (DateTime.Now.Subtract(lastAnswered).TotalSeconds > 20) {  							xCount = yCount = zCount = 0;  							lastAnswered = DateTime.Now;  							lastAnswer = Get8BallPrediction();    							await Model.Instance.Client.NotificationManager.SendMessageTaskAsync(  								uuid'   								"8Ball says..."'   								lastAnswer'   								DateTime.Now'  								MessageFlags.ShowDialog);  						}  					}  					this.RunOnUiThread(() =>  						{  //							accelX.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationX);  //							accelY.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationY);  //							accelZ.Text = string.Format("{0:F3}"' accelerometerEvent.AccelerationZ);    							accelZ.Text = xCount + " " + yCount + " " + zCount + " (x'y'x) only (y'z) count";    							resultText.Text = lastAnswer;  						});  				};
