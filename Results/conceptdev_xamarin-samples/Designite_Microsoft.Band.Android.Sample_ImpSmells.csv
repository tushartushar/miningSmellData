Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Band.Sample,SensorsFragment,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\SensorsFragment.cs,EnsureSensorsCreated,The method has 110 lines of code.
Long Method,Microsoft.Band.Sample,SensorsFragment,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\SensorsFragment.cs,OnToggleSensorSection,The method has 162 lines of code.
Long Method,Microsoft.Band.Sample,TilesFragment,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\TilesFragment.cs,OnCreateView,The method has 120 lines of code.
Complex Method,Microsoft.Band.Sample,SensorsFragment,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\SensorsFragment.cs,EnsureSensorsCreated,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Band.Sample,SensorsFragment,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\SensorsFragment.cs,OnToggleSensorSection,Cyclomatic complexity of the method is 27
Long Parameter List,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,OnLayout,The method has 5 parameters. Parameters: changed' left' top' right' bottom
Long Parameter List,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,OnLayout,The method has 5 parameters. Parameters: changed' left' top' right' bottom
Long Statement,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The length of the statement  "                colors[0] = Color.Rgb(255 - (255 - baseRed) * x / 255' 255 - (255 - baseGreen) * x / 255' 255 - (255 - baseBlue) * x / 255); " is 124.
Long Statement,Microsoft.Band.Sample,TilesFragment,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\TilesFragment.cs,OnCreateView,The length of the statement  "                    BandIcon badgeIcon = mCheckboxBadging.Checked ? BandIcon.ToBandIcon(BitmapFactory.DecodeResource(Resources' Resource.Raw.badge' options)) : null; " is 145.
Long Statement,Microsoft.Band.Sample,TilesFragment,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\TilesFragment.cs,OnCreateView,The length of the statement  "                    await Model.Instance.Client.NotificationManager.ShowDialogTaskAsync(mSelectedTile.TileId' mEditTitle.Text' mEditBody.Text); " is 123.
Long Statement,Microsoft.Band.Sample,TilesFragment,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\TilesFragment.cs,RefreshControls,The length of the statement  "            mButtonSendDialog.Enabled = connected && mSelectedTile != null && (mEditTitle.Text.Length > 0 || mEditBody.Text.Length > 0); " is 124.
Long Statement,Microsoft.Band.Sample,TilesFragment,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\TilesFragment.cs,RefreshControls,The length of the statement  "            mButtonSendMessage.Enabled = connected && mSelectedTile != null && (mEditTitle.Text.Length > 0 || mEditBody.Text.Length > 0); " is 125.
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,Init,The following statement contains a magic number: mColorsBitmap = Bitmap.CreateBitmap(256' 256' Bitmap.Config.Argb8888);
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,Init,The following statement contains a magic number: mColorsBitmap = Bitmap.CreateBitmap(256' 256' Bitmap.Config.Argb8888);
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The following statement contains a magic number: int[] colors = new int[2];
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The following statement contains a magic number: colors[0] = Color.Rgb(255 - (255 - baseRed) * x / 255' 255 - (255 - baseGreen) * x / 255' 255 - (255 - baseBlue) * x / 255);
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The following statement contains a magic number: colors[0] = Color.Rgb(255 - (255 - baseRed) * x / 255' 255 - (255 - baseGreen) * x / 255' 255 - (255 - baseBlue) * x / 255);
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The following statement contains a magic number: colors[0] = Color.Rgb(255 - (255 - baseRed) * x / 255' 255 - (255 - baseGreen) * x / 255' 255 - (255 - baseBlue) * x / 255);
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The following statement contains a magic number: colors[0] = Color.Rgb(255 - (255 - baseRed) * x / 255' 255 - (255 - baseGreen) * x / 255' 255 - (255 - baseBlue) * x / 255);
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The following statement contains a magic number: colors[0] = Color.Rgb(255 - (255 - baseRed) * x / 255' 255 - (255 - baseGreen) * x / 255' 255 - (255 - baseBlue) * x / 255);
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The following statement contains a magic number: colors[0] = Color.Rgb(255 - (255 - baseRed) * x / 255' 255 - (255 - baseGreen) * x / 255' 255 - (255 - baseBlue) * x / 255);
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The following statement contains a magic number: colors[0] = Color.Rgb(255 - (255 - baseRed) * x / 255' 255 - (255 - baseGreen) * x / 255' 255 - (255 - baseBlue) * x / 255);
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The following statement contains a magic number: colors[0] = Color.Rgb(255 - (255 - baseRed) * x / 255' 255 - (255 - baseGreen) * x / 255' 255 - (255 - baseBlue) * x / 255);
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The following statement contains a magic number: colors[0] = Color.Rgb(255 - (255 - baseRed) * x / 255' 255 - (255 - baseGreen) * x / 255' 255 - (255 - baseBlue) * x / 255);
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The following statement contains a magic number: Shader gradientShader = new LinearGradient(0' 0' 0' 256' colors' null' Shader.TileMode.Clamp);
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The following statement contains a magic number: mPreRenderingCanvas.DrawLine(x' 0' x' 256' mGradientsPaint);
Magic Number,Microsoft.Band.Sample.ColorPicker,ColorAreaPicker,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\ColorAreaPicker.cs,UpdateMainColors,The following statement contains a magic number: x < 256
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: float hueIncrement = 255f / (NUMBER_OF_HUES / NUMBER_OF_HUE_SETS);
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: hueBarColors[index] = Color.Rgb(255' (int) i' 0);
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: i < 256
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: hueBarColors[index] = Color.Rgb(255 - (int) i' 255' 0);
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: hueBarColors[index] = Color.Rgb(255 - (int) i' 255' 0);
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: i < 256
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: hueBarColors[index] = Color.Rgb(0' 255' (int) i);
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: i < 256
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: hueBarColors[index] = Color.Rgb(0' 255 - (int) i' 255);
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: hueBarColors[index] = Color.Rgb(0' 255 - (int) i' 255);
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: i < 256
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: hueBarColors[index] = Color.Rgb((int) i' 0' 255);
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: i < 256
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: hueBarColors[index] = Color.Rgb(255' 0' 255 - (int) i);
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: hueBarColors[index] = Color.Rgb(255' 0' 255 - (int) i);
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,PreRenderHueBar,The following statement contains a magic number: i < 256
Magic Number,Microsoft.Band.Sample.ColorPicker,HueBarSlider,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\watch-and-wear\Microsoft.Band.Android.Sample\Microsoft.Band.Android.Sample\ColorPicker\HueBarSlider.cs,GetHueFromColor,The following statement contains a magic number: float[] hsv = new float[3];
