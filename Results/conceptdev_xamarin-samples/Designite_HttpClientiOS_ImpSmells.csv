Implementation smell,Namespace,Class,File,Method,Description
Magic Number,HttpClient,AppDelegate,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\HttpClientPortable\HttpClientiOS\MainWindow.xib.designer.cs,Button1TouchDown,The following statement contains a magic number: switch (stack.SelectedRow ()){  			case 0:                  new DotNet(r).HttpSample("https://gmail.com");  				break;  			  			case 1:                  new DotNet(r).HttpSecureSample(Application.WisdomUrl);  				break;  				  			case 2:                  var nh = new NetHttp(r);  				await nh.HttpSample (Application.WisdomUrl);  				break;                case 3:                  var nhs = new NetHttp(r);                  await nhs.HttpSample(Application.SecureUrl);                  break;              //case 3:              //    //				new Cocoa (this).HttpSample ();              //    break;  			}
Magic Number,HttpClient,AppDelegate,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\HttpClientPortable\HttpClientiOS\MainWindow.xib.designer.cs,Button1TouchDown,The following statement contains a magic number: switch (stack.SelectedRow ()){  			case 0:                  new DotNet(r).HttpSample("https://gmail.com");  				break;  			  			case 1:                  new DotNet(r).HttpSecureSample(Application.WisdomUrl);  				break;  				  			case 2:                  var nh = new NetHttp(r);  				await nh.HttpSample (Application.WisdomUrl);  				break;                case 3:                  var nhs = new NetHttp(r);                  await nhs.HttpSample(Application.SecureUrl);                  break;              //case 3:              //    //				new Cocoa (this).HttpSample ();              //    break;  			}
Magic Number,HttpClient,Renderer,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\HttpClientPortable\HttpClientiOS\Renderer.cs,RenderStream,The following statement contains a magic number: ad.InvokeOnMainThread(delegate              {                  var view = new UIViewController();                  var label = new UILabel(new RectangleF(20' 20' 300' 80))                  {                      Text = "The HTML returned by the server:"                  };                  var tv = new UITextView(new RectangleF(20' 100' 300' 400))                  {                      Text = reader.ReadToEnd()                  };                  view.Add(label);                  view.Add(tv);                    Console.WriteLine(tv.Text);                    if (UIDevice.CurrentDevice.CheckSystemVersion(7' 0))                  {                      view.EdgesForExtendedLayout = UIRectEdge.None;                  }                    ad.NavigationController.PushViewController(view' true);              });
Magic Number,HttpClient,Renderer,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\HttpClientPortable\HttpClientiOS\Renderer.cs,RenderStream,The following statement contains a magic number: ad.InvokeOnMainThread(delegate              {                  var view = new UIViewController();                  var label = new UILabel(new RectangleF(20' 20' 300' 80))                  {                      Text = "The HTML returned by the server:"                  };                  var tv = new UITextView(new RectangleF(20' 100' 300' 400))                  {                      Text = reader.ReadToEnd()                  };                  view.Add(label);                  view.Add(tv);                    Console.WriteLine(tv.Text);                    if (UIDevice.CurrentDevice.CheckSystemVersion(7' 0))                  {                      view.EdgesForExtendedLayout = UIRectEdge.None;                  }                    ad.NavigationController.PushViewController(view' true);              });
Magic Number,HttpClient,Renderer,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\HttpClientPortable\HttpClientiOS\Renderer.cs,RenderStream,The following statement contains a magic number: ad.InvokeOnMainThread(delegate              {                  var view = new UIViewController();                  var label = new UILabel(new RectangleF(20' 20' 300' 80))                  {                      Text = "The HTML returned by the server:"                  };                  var tv = new UITextView(new RectangleF(20' 100' 300' 400))                  {                      Text = reader.ReadToEnd()                  };                  view.Add(label);                  view.Add(tv);                    Console.WriteLine(tv.Text);                    if (UIDevice.CurrentDevice.CheckSystemVersion(7' 0))                  {                      view.EdgesForExtendedLayout = UIRectEdge.None;                  }                    ad.NavigationController.PushViewController(view' true);              });
Magic Number,HttpClient,Renderer,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\HttpClientPortable\HttpClientiOS\Renderer.cs,RenderStream,The following statement contains a magic number: ad.InvokeOnMainThread(delegate              {                  var view = new UIViewController();                  var label = new UILabel(new RectangleF(20' 20' 300' 80))                  {                      Text = "The HTML returned by the server:"                  };                  var tv = new UITextView(new RectangleF(20' 100' 300' 400))                  {                      Text = reader.ReadToEnd()                  };                  view.Add(label);                  view.Add(tv);                    Console.WriteLine(tv.Text);                    if (UIDevice.CurrentDevice.CheckSystemVersion(7' 0))                  {                      view.EdgesForExtendedLayout = UIRectEdge.None;                  }                    ad.NavigationController.PushViewController(view' true);              });
Magic Number,HttpClient,Renderer,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\HttpClientPortable\HttpClientiOS\Renderer.cs,RenderStream,The following statement contains a magic number: ad.InvokeOnMainThread(delegate              {                  var view = new UIViewController();                  var label = new UILabel(new RectangleF(20' 20' 300' 80))                  {                      Text = "The HTML returned by the server:"                  };                  var tv = new UITextView(new RectangleF(20' 100' 300' 400))                  {                      Text = reader.ReadToEnd()                  };                  view.Add(label);                  view.Add(tv);                    Console.WriteLine(tv.Text);                    if (UIDevice.CurrentDevice.CheckSystemVersion(7' 0))                  {                      view.EdgesForExtendedLayout = UIRectEdge.None;                  }                    ad.NavigationController.PushViewController(view' true);              });
Magic Number,HttpClient,Renderer,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\HttpClientPortable\HttpClientiOS\Renderer.cs,RenderStream,The following statement contains a magic number: ad.InvokeOnMainThread(delegate              {                  var view = new UIViewController();                  var label = new UILabel(new RectangleF(20' 20' 300' 80))                  {                      Text = "The HTML returned by the server:"                  };                  var tv = new UITextView(new RectangleF(20' 100' 300' 400))                  {                      Text = reader.ReadToEnd()                  };                  view.Add(label);                  view.Add(tv);                    Console.WriteLine(tv.Text);                    if (UIDevice.CurrentDevice.CheckSystemVersion(7' 0))                  {                      view.EdgesForExtendedLayout = UIRectEdge.None;                  }                    ad.NavigationController.PushViewController(view' true);              });
Magic Number,HttpClient,Renderer,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\HttpClientPortable\HttpClientiOS\Renderer.cs,RenderStream,The following statement contains a magic number: ad.InvokeOnMainThread(delegate              {                  var view = new UIViewController();                  var label = new UILabel(new RectangleF(20' 20' 300' 80))                  {                      Text = "The HTML returned by the server:"                  };                  var tv = new UITextView(new RectangleF(20' 100' 300' 400))                  {                      Text = reader.ReadToEnd()                  };                  view.Add(label);                  view.Add(tv);                    Console.WriteLine(tv.Text);                    if (UIDevice.CurrentDevice.CheckSystemVersion(7' 0))                  {                      view.EdgesForExtendedLayout = UIRectEdge.None;                  }                    ad.NavigationController.PushViewController(view' true);              });
Magic Number,HttpClient,Renderer,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\HttpClientPortable\HttpClientiOS\Renderer.cs,RenderStream,The following statement contains a magic number: ad.InvokeOnMainThread(delegate              {                  var view = new UIViewController();                  var label = new UILabel(new RectangleF(20' 20' 300' 80))                  {                      Text = "The HTML returned by the server:"                  };                  var tv = new UITextView(new RectangleF(20' 100' 300' 400))                  {                      Text = reader.ReadToEnd()                  };                  view.Add(label);                  view.Add(tv);                    Console.WriteLine(tv.Text);                    if (UIDevice.CurrentDevice.CheckSystemVersion(7' 0))                  {                      view.EdgesForExtendedLayout = UIRectEdge.None;                  }                    ad.NavigationController.PushViewController(view' true);              });
Magic Number,HttpClient,Renderer,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\HttpClientPortable\HttpClientiOS\Renderer.cs,RenderStream,The following statement contains a magic number: ad.InvokeOnMainThread(delegate              {                  var view = new UIViewController();                  var label = new UILabel(new RectangleF(20' 20' 300' 80))                  {                      Text = "The HTML returned by the server:"                  };                  var tv = new UITextView(new RectangleF(20' 100' 300' 400))                  {                      Text = reader.ReadToEnd()                  };                  view.Add(label);                  view.Add(tv);                    Console.WriteLine(tv.Text);                    if (UIDevice.CurrentDevice.CheckSystemVersion(7' 0))                  {                      view.EdgesForExtendedLayout = UIRectEdge.None;                  }                    ad.NavigationController.PushViewController(view' true);              });
Magic Number,HttpClient,StringDataSource,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\HttpClientPortable\HttpClientiOS\TableViewRocks.cs,GetCell,The following statement contains a magic number: cell.IndentationWidth = 30f;
Missing Default,HttpClient,AppDelegate,D:\research\architectureSmells\repos\conceptdev_xamarin-samples\HttpClientPortable\HttpClientiOS\MainWindow.xib.designer.cs,Button1TouchDown,The following switch statement is missing a default case: switch (stack.SelectedRow ()){  			case 0:                  new DotNet(r).HttpSample("https://gmail.com");  				break;  			  			case 1:                  new DotNet(r).HttpSecureSample(Application.WisdomUrl);  				break;  				  			case 2:                  var nh = new NetHttp(r);  				await nh.HttpSample (Application.WisdomUrl);  				break;                case 3:                  var nhs = new NetHttp(r);                  await nhs.HttpSample(Application.SecureUrl);                  break;              //case 3:              //    //				new Cocoa (this).HttpSample ();              //    break;  			}
