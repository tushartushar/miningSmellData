Implementation smell,Namespace,Class,File,Method,Description
Long Method,StackExchange.Exceptional,StackTrace,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ExceptionalUtils.StackTrace.cs,HtmlPrettify,The method has 166 lines of code.
Long Method,StackExchange.Exceptional,StackTraceExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ExceptionalUtils.StackTrace.cs,AppendGenerics,The method has 102 lines of code.
Long Method,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The method has 130 lines of code.
Long Method,StackExchange.Exceptional.Pages,ErrorDetailPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorDetailPage.cs,RenderInnerHtml,The method has 154 lines of code.
Long Method,StackExchange.Exceptional.Pages,ErrorListPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorListPage.cs,RenderInnerHtml,The method has 112 lines of code.
Complex Method,StackExchange.Exceptional,StackTrace,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ExceptionalUtils.StackTrace.cs,HtmlPrettify,Cyclomatic complexity of the method is 16
Complex Method,StackExchange.Exceptional,StackTraceExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ExceptionalUtils.StackTrace.cs,AppendGenerics,Cyclomatic complexity of the method is 8
Complex Method,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,Cyclomatic complexity of the method is 8
Complex Method,StackExchange.Exceptional.Pages,ErrorDetailPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorDetailPage.cs,RenderInnerHtml,Cyclomatic complexity of the method is 11
Complex Method,StackExchange.Exceptional.Pages,ErrorListPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorListPage.cs,RenderInnerHtml,Cyclomatic complexity of the method is 9
Long Parameter List,StackExchange.Exceptional,Error,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Error.cs,Error,The method has 6 parameters. Parameters: e' settings' category' applicationName' rollupPerServer' initialCustomData
Long Parameter List,StackExchange.Exceptional,Extensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Extensions.cs,LogNoContext,The method has 5 parameters. Parameters: ex' category' rollupPerServer' customData' applicationName
Long Parameter List,StackExchange.Exceptional.Internal,InternalExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\InternalExtensions.cs,GetErrorIfNotIgnored,The method has 6 parameters. Parameters: ex' settings' category' applicationName' rollupPerServer' customData
Long Parameter List,StackExchange.Exceptional.Pages,ErrorDetailPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorDetailPage.cs,ErrorDetailPage,The method has 5 parameters. Parameters: error' settings' store' baseURL' guid
Long Parameter List,StackExchange.Exceptional.Pages,WebPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\WebPage.cs,WebPage,The method has 5 parameters. Parameters: error' settings' store' baseURL' pageTitle
Long Statement,StackExchange.Exceptional,Error,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Error.cs,AddCustomData,The length of the statement  "                    // if there was an error getting custom errors' log it so we can display such in the view...and not fail to log the original error " is 130.
Long Statement,StackExchange.Exceptional,ExceptionalSettingsExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ExceptionalSettingsExtensions.cs,Bind,The length of the statement  "                settings.DataIncludeRegex = new Regex(dataIncludePattern' RegexOptions.Compiled | RegexOptions.IgnoreCase | RegexOptions.Singleline); " is 133.
Long Statement,StackExchange.Exceptional,ExceptionalSettingsExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ExceptionalSettingsExtensions.cs,Bind,The length of the statement  "                    settings.Ignore.Regexes.Add(new Regex(ir.Value' RegexOptions.Compiled | RegexOptions.IgnoreCase | RegexOptions.Singleline)); " is 124.
Long Statement,StackExchange.Exceptional,Test,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ExceptionalUtils.Test.cs,GetRedisException,The length of the statement  "                var ex = new RedisException("GetInt: Timeout performing GET prod-throttle-11.22.33.44-reqs' inst: 1' queue: 8' qu: 0' qs: 8' qc: 0' wr: 0' wq: 0' in: 0' ar: 0' clientName: API v2' serverEndpoint: Unspecified/redis01.servers.stackexchange.com:6379' keyHashSlot: 2576' IOCP: (Busy=0'Free=1000'Min=48'Max=1000)' WORKER: (Busy=3'Free=32764'Min=48'Max=32767) (Please take a look at this article for some common client-side issues that can cause timeouts: http://stackexchange.github.io/StackExchange.Redis/Timeouts) with keys: throttle-11.22.33.44-reqs"); " is 550.
Long Statement,StackExchange.Exceptional,StackTraceSettings,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\StackTraceSettings.cs,AddReplacement,The length of the statement  "            LinkReplacements[new Regex(matchPattern' RegexOptions.Compiled | RegexOptions.Multiline | RegexOptions.CultureInvariant)] = repalcementPattern; " is 143.
Long Statement,StackExchange.Exceptional.Internal,CaseInsensitiveDictionaryConverter<T>,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\CaseInsensitiveDictionaryConverter.cs,ReadJson,The length of the statement  "            return originalDictionary == null ? null : new Dictionary<string' T>(originalDictionary' StringComparer.OrdinalIgnoreCase); " is 123.
Long Statement,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The length of the statement  "                var keys = vars.AllKeys.Where(key => !HiddenHttpKeys.Contains(key) && key != Constants.CollectionErrorKey).OrderBy(k => k); " is 123.
Long Statement,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The length of the statement  "                sb.AppendFormat("    <h3 style=\"color: #224C00; font-family: Verdana' Tahoma' Arial' 'Helvetica Neue'' Helvetica' sans-serif; font-size: 14px; margin: 10px 0 5px 0;\">{0}{1}</h3>"' title' errored ? " - Error while gathering data" : "").AppendLine(); " is 250.
Long Statement,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The length of the statement  "                    sb.AppendFormat("    <table style=\"font-family: Verdana' Tahoma' Arial' 'Helvetica Neue'' Helvetica' sans-serif; font-size: 12px; width: 100%; border-collapse: collapse; border: 0;\">").AppendLine(); " is 200.
Long Statement,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The length of the statement  "                        sb.AppendFormat("      <tr{2}><td style=\"padding: 0.4em; width: 200px;\">{0}</td><td style=\"padding: 0.4em;\">{1}</td></tr>"' k' Linkify(vars[k])' getBackground()).AppendLine(); " is 179.
Long Statement,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The length of the statement  "                            sb.AppendFormat("        <tr{1}><td style=\"padding: 0.4em; width: 200px;\">Method</td><td style=\"padding: 0.4em;\">{0}</td></tr>"' method' getBackground()).AppendLine(); " is 171.
Long Statement,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The length of the statement  "                                sb.AppendFormat("      <tr{1}><td style=\"padding: 0.4em; width: 200px;\">URL and Query</td><td style=\"padding: 0.4em;\">{0}</td></tr>"' method == "GET" ? Linkify(fullUrl) : fullUrl.HtmlEncode()' getBackground()).AppendLine(); " is 227.
Long Statement,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The length of the statement  "                    sb.AppendFormat("    <pre  style=\"background-color: #EEE; font-family: Consolas' Monaco' monospace; padding: 8px;\">{0}</pre>"' fetchError.HtmlEncode()).AppendLine(); " is 167.
Long Statement,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The length of the statement  "                  .Append("  <pre style=\"background-color: #FFFFCC; font-family: Consolas' Monaco' monospace; font-size: 12px; margin: 2px 0; padding: 12px;\">") " is 144.
Long Statement,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The length of the statement  "                //    sb.Append("  <h3 style=\"color: #224C00; font-family: Verdana' Tahoma' Arial' \'Helvetica Neue\'' Helvetica' sans-serif; font-size: 14px; margin: 10px 0 5px 0;\">SQL</h3>") " is 178.
Long Statement,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The length of the statement  "                //      .Append("  <pre style=\"background-color: #EEE; font-family: Consolas' Monaco' monospace; padding: 8px 8px 8px 8px; margin: 2px 0;\">") " is 143.
Long Statement,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The length of the statement  "                        sb.AppendLine("    <h3 style=\"color: maroon; font-family: Verdana' Tahoma' Arial' \'Helvetica Neue\'' Helvetica' sans-serif; font-size: 14px; margin: 10px 0 5px 0;\">Custom - Error while gathering custom data</h3>"); " is 217.
Long Statement,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The length of the statement  "                        sb.AppendLine("    <h3 style=\"color: #224C00; font-family: Verdana' Tahoma' Arial' \'Helvetica Neue\'' Helvetica' sans-serif; font-size: 14px; margin: 10px 0 5px 0;\">Custom</h3>\r\n"); " is 186.
Long Statement,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The length of the statement  "                        sb.AppendLine("     <table style=\"font-family: Verdana' Tahoma' Arial' \'Helvetica Neue\'' Helvetica' sans-serif; font-size: 12px; width: 100%; border-collapse: collapse; border: 0;\">\r\n"); " is 192.
Long Statement,StackExchange.Exceptional.Internal,InternalExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\InternalExtensions.cs,QueryStringReplace,The length of the statement  "            var regex = _regexCache.GetOrAdd(key' k => new Regex("(?<=[?&]" + Regex.Escape(k) + "=)[^&]*"' RegexOptions.IgnoreCase | RegexOptions.Compiled)); " is 145.
Long Statement,StackExchange.Exceptional.Internal,IPNet,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,GetBitLength,The length of the statement  "                default: throw new ArgumentOutOfRangeException(nameof(family)' "You're probably from the future' they added another more IPs' fix me."); " is 136.
Long Statement,StackExchange.Exceptional.Pages,ErrorDetailPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorDetailPage.cs,RenderInnerHtml,The length of the statement  "                var keys = vars.AllKeys.Where(key => !HiddenHttpKeys.Contains(key) && key != Constants.CollectionErrorKey).OrderBy(k => k); " is 123.
Long Statement,StackExchange.Exceptional.Pages,ErrorDetailPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorDetailPage.cs,RenderInnerHtml,The length of the statement  "                            // If this is a hidden row' buffer it up' since CSS has no clean mechanism for :visible:nth-row(odd) type styling behavior " is 122.
Long Statement,StackExchange.Exceptional.Pages,ErrorDetailPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorDetailPage.cs,RenderInnerHtml,The length of the statement  "                            (DefaultHttpKeys.Contains(k) ? hiddenRows : sb).AppendFormat("        <tr><td>{0}</td><td>{1}</td></tr>"' k' Linkify(vars[k])).AppendLine(); " is 140.
Long Statement,StackExchange.Exceptional.Pages,ErrorDetailPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorDetailPage.cs,RenderInnerHtml,The length of the statement  "                                sb.AppendFormat("        <tr><td>URL and Query</td><td>{0}</td></tr>"' method == "GET" ? Linkify(fullUrl) : fullUrl.HtmlEncode()).AppendLine(); " is 143.
Long Statement,StackExchange.Exceptional.Pages,ErrorDetailPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorDetailPage.cs,RenderInnerHtml,The length of the statement  "                  .Append("  <pre class=\"stack dark\"><code class=\"nohighlight\">").AppendLine(ExceptionalUtils.StackTrace.HtmlPrettify(Error.Detail' Settings.StackTrace)).AppendLine("</code></pre>") " is 183.
Long Statement,StackExchange.Exceptional.Pages,ErrorDetailPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorDetailPage.cs,RenderInnerHtml,The length of the statement  "                  .AppendHtmlEncode(Error.CreationDate.ToLongDateString()).Append(" at ").AppendHtmlEncode(Error.CreationDate.ToLongTimeString()) " is 127.
Long Statement,StackExchange.Exceptional.Pages,ErrorDetailPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorDetailPage.cs,RenderInnerHtml,The length of the statement  "                          .AppendLine("    <pre class=\"stack\"><code>").Append(Error.CustomData[Constants.CustomDataErrorKey]).AppendLine("</code></pre>"); " is 130.
Long Statement,StackExchange.Exceptional.Pages,ErrorListPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorListPage.cs,RenderInnerHtml,The length of the statement  "                  .Append("<svg viewBox=\"0 0 1792 1792\"><path d=\"M1024 1375v-190q0-14-9.5-23.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 23.5v190q0 14 9.5 23.5t22.5 9.5h192q13 0 22.5-9.5t9.5-23.5zm-2-374l18-459q0-12-10-19-13-11-24-11h-220q-11 0-24 11-10 7-10 21l17 457q0 10 10 16.5t24 6.5h185q14 0 23.5-6.5t10.5-16.5zm-14-934l768 1408q35 63-2 126-17 29-46.5 46t-63.5 17h-1536q-34 0-63.5-17t-46.5-46q-37-63-2-126l768-1408q17-31 47-49t65-18 65 18 47 49z\"/></svg>") " is 441.
Long Statement,StackExchange.Exceptional.Pages,ErrorListPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorListPage.cs,RenderInnerHtml,The length of the statement  "                    sb.Append("<div>Last Logging Exception: ").AppendHtmlEncode(le.Message).AppendLine(" (<a href=\"#\" class=\"js-show-details\">view details</a>)</div>") " is 151.
Long Statement,StackExchange.Exceptional.Pages,ErrorListPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorListPage.cs,RenderInnerHtml,The length of the statement  "                    sb.Append("            <tr data-id=\"").Append(e.GUID.ToString()).Append("\" class=\"error").Append(e.IsProtected ? " js-protected" : "").AppendLine("\">") " is 155.
Long Statement,StackExchange.Exceptional.Pages,ErrorListPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorListPage.cs,RenderInnerHtml,The length of the statement  "                      .Append("              <td class=\"wrap\"><a href=\"").Append(Url(KnownRoutes.Info)).Append("?guid=").Append(e.GUID.ToString()) " is 127.
Long Statement,StackExchange.Exceptional.Pages,ErrorListPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\ErrorListPage.cs,RenderInnerHtml,The length of the statement  "                      .Append("\">").Append(e.Message.HasValue() ? e.Message.EncodeTruncateWithEllipsis(250) : "(no message)").Append("</a>"); " is 120.
Long Statement,StackExchange.Exceptional.Pages,WebPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\WebPage.cs,RenderHtml,The length of the statement  "                sb.AppendFormat("    <link rel=\"stylesheet\" type=\"text/css\" href=\"{0}?v={1}\" integrity=\"sha512-{1}\" crossorigin=\"anonymous\"/>"' Url(KnownRoutes.Css)' Resources.BundleCss.Sha512).AppendLine(); " is 201.
Long Statement,StackExchange.Exceptional.Pages,WebPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\WebPage.cs,RenderHtml,The length of the statement  "                sb.AppendFormat("    <script src=\"{0}?v={1}\" integrity=\"sha512-{1}\" crossorigin=\"anonymous\"></script>"' Url(KnownRoutes.Js)' Resources.BundleJs.Sha512).AppendLine(); " is 171.
Long Statement,StackExchange.Exceptional.Pages,WebPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\WebPage.cs,RenderHtml,The length of the statement  "              .AppendFormat("      <header{0}>{1}</header>"' Store.InFailureMode ? " class=\"failure\"" : ""' HeaderTitle).AppendLine() " is 121.
Long Statement,StackExchange.Exceptional.Pages,WebPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\WebPage.cs,RenderHtml,The length of the statement  "              .Append("      <div class=\"version-info\">Exceptional ").Append(typeof(Error).Assembly.GetCustomAttribute<AssemblyInformationalVersionAttribute>().InformationalVersion) " is 169.
Long Statement,StackExchange.Exceptional.Pages,WebPage,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Pages\WebPage.cs,RenderHtml,The length of the statement  "              .Append("      <div class=\"server-time\">Server time is ").Append(DateTime.UtcNow.ToString("yyyy-MM-ddTHH:mm:ssZ")).AppendLine("</div>") " is 137.
Long Statement,StackExchange.Exceptional.Stores,JSONErrorStore,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Stores\JSONErrorStore.cs,TryFindOriginalError,The length of the statement  "                        var match = Regex.Match(filename' @"error[-\d]+Z-(?<hashCode>((?<!\d)-|\d)+)-(?<guid>.+)\.json"' RegexOptions.IgnoreCase); " is 122.
Long Statement,StackExchange.Exceptional.Stores,SQLErrorStore,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Stores\SQLErrorStore.cs,DeleteAllErrorsAsync,The length of the statement  "                return await c.ExecuteAsync(SqlDeleteAllErrors' new { ApplicationName = applicationName ?? ApplicationName }).ConfigureAwait(false) > 0; " is 136.
Long Statement,StackExchange.Exceptional.Stores,SQLErrorStore,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Stores\SQLErrorStore.cs,GetAllErrorsAsync,The length of the statement  "                return (await c.QueryAsync<Error>(SqlGetAllErrors' new { max = _displayCount' ApplicationName = applicationName ?? ApplicationName }).ConfigureAwait(false)).AsList(); " is 166.
Complex Conditional,StackExchange.Exceptional,StackTrace,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ExceptionalUtils.StackTrace.cs,HtmlPrettify,The conditional expression  "(nextEndStack > -1 && nextEndStack < m.Index + m.Length + 3) || (!isAsync && nextIsAsync)"  is complex.
Empty Catch Block,StackExchange.Exceptional,ErrorStore,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ErrorStore.cs,GetErrorStores,The method has an empty catch block.
Magic Number,StackExchange.Exceptional,EmailSettings,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\EmailSettings.cs,GetHashCode,The following statement contains a magic number: var hashCode = 1406920336;
Magic Number,StackExchange.Exceptional,EmailSettings,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\EmailSettings.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<string>.Default.GetHashCode(_fromAddress);
Magic Number,StackExchange.Exceptional,EmailSettings,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\EmailSettings.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<string>.Default.GetHashCode(_fromDisplayName);
Magic Number,StackExchange.Exceptional,EmailSettings,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\EmailSettings.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<string>.Default.GetHashCode(_SMTPUserName);
Magic Number,StackExchange.Exceptional,EmailSettings,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\EmailSettings.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<string>.Default.GetHashCode(_SMTPPassword);
Magic Number,StackExchange.Exceptional,EmailSettings,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\EmailSettings.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<string>.Default.GetHashCode(ToAddress);
Magic Number,StackExchange.Exceptional,EmailSettings,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\EmailSettings.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<string>.Default.GetHashCode(FromAddress);
Magic Number,StackExchange.Exceptional,EmailSettings,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\EmailSettings.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<string>.Default.GetHashCode(FromDisplayName);
Magic Number,StackExchange.Exceptional,EmailSettings,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\EmailSettings.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<string>.Default.GetHashCode(SMTPHost);
Magic Number,StackExchange.Exceptional,EmailSettings,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\EmailSettings.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + EqualityComparer<int?>.Default.GetHashCode(SMTPPort);
Magic Number,StackExchange.Exceptional,EmailSettings,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\EmailSettings.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + SMTPEnableSSL.GetHashCode();
Magic Number,StackExchange.Exceptional,EmailSettings,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\EmailSettings.cs,GetHashCode,The following statement contains a magic number: hashCode = (hashCode * -1521134295) + PreventDuplicates.GetHashCode();
Magic Number,StackExchange.Exceptional,Error,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Error.cs,Error,The following statement contains a magic number: Detail += "\n\nFull Trace:\n\n" + new StackTrace(3' true);
Magic Number,StackExchange.Exceptional,Error,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Error.cs,GetHash,The following statement contains a magic number: result = (result * 397) ^ MachineName.GetHashCode();
Magic Number,StackExchange.Exceptional,StackTrace,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ExceptionalUtils.StackTrace.cs,HtmlPrettify,The following statement contains a magic number: (nextEndStack > -1 && nextEndStack < m.Index + m.Length + 3) || (!isAsync && nextIsAsync)
Magic Number,StackExchange.Exceptional,StackTraceExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ExceptionalUtils.StackTrace.cs,AppendGenerics,The following statement contains a magic number: sb.Append("<span class=\"stack generic-type\">").Append(tArgs[0]).Append("</span>")                        .Append("'")                        .Append("<span class=\"stack generic-type\">").Append(tArgs[1]).Append("</span>")                        .Append("'")                        .Append("<span class=\"stack generic-type\">").Append(tArgs[2]).Append("</span>")                        .Append("…")                        .Append("<span class=\"stack generic-type\">").Append(tArgs[tArgs.Length - 1]).Append("</span>");
Magic Number,StackExchange.Exceptional,StackTraceExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ExceptionalUtils.StackTrace.cs,AppendGenerics,The following statement contains a magic number: tArgs.Length > 5
Magic Number,StackExchange.Exceptional.Internal,ErrorEmail,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\ErrorEmail.cs,RenderHtml,The following statement contains a magic number: string getBackground() => i++ % 2 == 1 ? " style=\"background-color: #F2F2F2;\"" : "";
Magic Number,StackExchange.Exceptional.Internal,InternalExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\InternalExtensions.cs,ToRelativeTimePast,The following statement contains a magic number: delta < 60
Magic Number,StackExchange.Exceptional.Internal,InternalExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\InternalExtensions.cs,ToRelativeTimePast,The following statement contains a magic number: delta < 3600
Magic Number,StackExchange.Exceptional.Internal,InternalExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\InternalExtensions.cs,ToRelativeTimePast,The following statement contains a magic number: delta < 86400
Magic Number,StackExchange.Exceptional.Internal,InternalExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\InternalExtensions.cs,ToRelativeTimePast,The following statement contains a magic number: days <= 2
Magic Number,StackExchange.Exceptional.Internal,InternalExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\InternalExtensions.cs,ToRelativeTimePast,The following statement contains a magic number: days <= 330
Magic Number,StackExchange.Exceptional.Internal,InternalExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\InternalExtensions.cs,ToRelativeTimeFuture,The following statement contains a magic number: delta < 60
Magic Number,StackExchange.Exceptional.Internal,InternalExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\InternalExtensions.cs,ToRelativeTimeFuture,The following statement contains a magic number: delta < 3600
Magic Number,StackExchange.Exceptional.Internal,InternalExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\InternalExtensions.cs,ToRelativeTimeFuture,The following statement contains a magic number: delta < 86400
Magic Number,StackExchange.Exceptional.Internal,InternalExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\InternalExtensions.cs,ToRelativeTimeFuture,The following statement contains a magic number: days <= 10
Magic Number,StackExchange.Exceptional.Internal,InternalExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\InternalExtensions.cs,ToRelativeTimeFuture,The following statement contains a magic number: days <= 330
Magic Number,StackExchange.Exceptional.Internal,InternalExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\InternalExtensions.cs,ResolvePath,The following statement contains a magic number: return AppDomain.CurrentDomain.GetData("APPBASE") + path.Substring(2);
Magic Number,StackExchange.Exceptional.Internal,IPNet,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,Parse,The following statement contains a magic number: parts.Length == 2
Magic Number,StackExchange.Exceptional.Internal,IPNet,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,GetBitLength,The following statement contains a magic number: switch (family)              {                  case AddressFamily.InterNetwork: return 32;                  case AddressFamily.InterNetworkV6: return 128;                  default: throw new ArgumentOutOfRangeException(nameof(family)' "You're probably from the future' they added another more IPs' fix me.");              }
Magic Number,StackExchange.Exceptional.Internal,IPNet,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,GetBitLength,The following statement contains a magic number: switch (family)              {                  case AddressFamily.InterNetwork: return 32;                  case AddressFamily.InterNetworkV6: return 128;                  default: throw new ArgumentOutOfRangeException(nameof(family)' "You're probably from the future' they added another more IPs' fix me.");              }
Magic Number,StackExchange.Exceptional.Internal,IPNet,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,IPAddressFromCIDR,The following statement contains a magic number: var ipByteArray = new byte[bitLength / 8];
Magic Number,StackExchange.Exceptional.Internal,IPNet,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,IPAddressFromCIDR,The following statement contains a magic number: int fullBytes = cidr / 8' lastBits = cidr % 8;
Magic Number,StackExchange.Exceptional.Internal,IPNet,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,IPAddressFromCIDR,The following statement contains a magic number: int fullBytes = cidr / 8' lastBits = cidr % 8;
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(IPv4Address.Value >> 24)'                      (byte)(IPv4Address.Value >> 16)'                      (byte)(IPv4Address.Value >> 8)'                      (byte)(IPv4Address.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(IPv4Address.Value >> 24)'                      (byte)(IPv4Address.Value >> 16)'                      (byte)(IPv4Address.Value >> 8)'                      (byte)(IPv4Address.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(IPv4Address.Value >> 24)'                      (byte)(IPv4Address.Value >> 16)'                      (byte)(IPv4Address.Value >> 8)'                      (byte)(IPv4Address.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,ToIPAddress,The following statement contains a magic number: return new IPAddress(new[] {                      (byte)(FirstV6Leg.Value >> 56)'                      (byte)(FirstV6Leg.Value >> 48)'                      (byte)(FirstV6Leg.Value >> 40)'                      (byte)(FirstV6Leg.Value >> 32)'                      (byte)(FirstV6Leg.Value >> 24)'                      (byte)(FirstV6Leg.Value >> 16)'                      (byte)(FirstV6Leg.Value >> 8)'                      (byte)(FirstV6Leg.Value)'                      (byte)(LastV6Leg.Value >> 56)'                      (byte)(LastV6Leg.Value >> 48)'                      (byte)(LastV6Leg.Value >> 40)'                      (byte)(LastV6Leg.Value >> 32)'                      (byte)(LastV6Leg.Value >> 24)'                      (byte)(LastV6Leg.Value >> 16)'                      (byte)(LastV6Leg.Value >> 8)'                      (byte)(LastV6Leg.Value)                  });
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromIPAddress,The following statement contains a magic number: return new TinyIPAddress(((uint)source[0] << 24)                                               | ((uint)source[1] << 16)                                               | ((uint)source[2] << 8)                                               | ((uint)source[3]));
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromIPAddress,The following statement contains a magic number: return new TinyIPAddress(((uint)source[0] << 24)                                               | ((uint)source[1] << 16)                                               | ((uint)source[2] << 8)                                               | ((uint)source[3]));
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromIPAddress,The following statement contains a magic number: return new TinyIPAddress(((uint)source[0] << 24)                                               | ((uint)source[1] << 16)                                               | ((uint)source[2] << 8)                                               | ((uint)source[3]));
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromIPAddress,The following statement contains a magic number: return new TinyIPAddress(((uint)source[0] << 24)                                               | ((uint)source[1] << 16)                                               | ((uint)source[2] << 8)                                               | ((uint)source[3]));
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromIPAddress,The following statement contains a magic number: return new TinyIPAddress(((uint)source[0] << 24)                                               | ((uint)source[1] << 16)                                               | ((uint)source[2] << 8)                                               | ((uint)source[3]));
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromIPAddress,The following statement contains a magic number: source.Length == 4
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromIPAddress,The following statement contains a magic number: return new TinyIPAddress(FromBytes(source' 0)' FromBytes(source' 8));
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromIPAddress,The following statement contains a magic number: source.Length == 16
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromBytes,The following statement contains a magic number: return ((ulong)source[start++] << 56)                        | ((ulong)source[start++] << 48)                        | ((ulong)source[start++] << 40)                        | ((ulong)source[start++] << 32)                        | ((ulong)source[start++] << 24)                        | ((ulong)source[start++] << 16)                        | ((ulong)source[start++] << 8)                        | ((ulong)source[start]);
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromBytes,The following statement contains a magic number: return ((ulong)source[start++] << 56)                        | ((ulong)source[start++] << 48)                        | ((ulong)source[start++] << 40)                        | ((ulong)source[start++] << 32)                        | ((ulong)source[start++] << 24)                        | ((ulong)source[start++] << 16)                        | ((ulong)source[start++] << 8)                        | ((ulong)source[start]);
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromBytes,The following statement contains a magic number: return ((ulong)source[start++] << 56)                        | ((ulong)source[start++] << 48)                        | ((ulong)source[start++] << 40)                        | ((ulong)source[start++] << 32)                        | ((ulong)source[start++] << 24)                        | ((ulong)source[start++] << 16)                        | ((ulong)source[start++] << 8)                        | ((ulong)source[start]);
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromBytes,The following statement contains a magic number: return ((ulong)source[start++] << 56)                        | ((ulong)source[start++] << 48)                        | ((ulong)source[start++] << 40)                        | ((ulong)source[start++] << 32)                        | ((ulong)source[start++] << 24)                        | ((ulong)source[start++] << 16)                        | ((ulong)source[start++] << 8)                        | ((ulong)source[start]);
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromBytes,The following statement contains a magic number: return ((ulong)source[start++] << 56)                        | ((ulong)source[start++] << 48)                        | ((ulong)source[start++] << 40)                        | ((ulong)source[start++] << 32)                        | ((ulong)source[start++] << 24)                        | ((ulong)source[start++] << 16)                        | ((ulong)source[start++] << 8)                        | ((ulong)source[start]);
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromBytes,The following statement contains a magic number: return ((ulong)source[start++] << 56)                        | ((ulong)source[start++] << 48)                        | ((ulong)source[start++] << 40)                        | ((ulong)source[start++] << 32)                        | ((ulong)source[start++] << 24)                        | ((ulong)source[start++] << 16)                        | ((ulong)source[start++] << 8)                        | ((ulong)source[start]);
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,FromBytes,The following statement contains a magic number: return ((ulong)source[start++] << 56)                        | ((ulong)source[start++] << 48)                        | ((ulong)source[start++] << 40)                        | ((ulong)source[start++] << 32)                        | ((ulong)source[start++] << 24)                        | ((ulong)source[start++] << 16)                        | ((ulong)source[start++] << 8)                        | ((ulong)source[start]);
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,NumberOfSetBitsImpl,The following statement contains a magic number: i = (i & 0x33333333U) + ((i >> 2) & 0x33333333U);
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,NumberOfSetBitsImpl,The following statement contains a magic number: return (int)((((i + (i >> 4)) & 0x0F0F0F0FU) * 0x01010101U) >> 24);
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,NumberOfSetBitsImpl,The following statement contains a magic number: return (int)((((i + (i >> 4)) & 0x0F0F0F0FU) * 0x01010101U) >> 24);
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,NumberOfSetBitsImpl,The following statement contains a magic number: i = (i & 0x3333333333333333UL) + ((i >> 2) & 0x3333333333333333UL);
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,NumberOfSetBitsImpl,The following statement contains a magic number: return (int)(unchecked(((i + (i >> 4)) & 0xF0F0F0F0F0F0F0FUL) * 0x101010101010101UL) >> 56);
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,NumberOfSetBitsImpl,The following statement contains a magic number: return (int)(unchecked(((i + (i >> 4)) & 0xF0F0F0F0F0F0F0FUL) * 0x101010101010101UL) >> 56);
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,GetHashCode,The following statement contains a magic number: int hash = 13;
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,GetHashCode,The following statement contains a magic number: hash = (hash * -47) + FirstV6Leg.GetHashCode();
Magic Number,StackExchange.Exceptional.Internal,TinyIPAddress,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Internal\IPNet.cs,GetHashCode,The following statement contains a magic number: hash = (hash * -47) + LastV6Leg.GetHashCode();
Magic Number,StackExchange.Exceptional.Stores,SQLErrorStore,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\Stores\SQLErrorStore.cs,GetUpdateParams,The following statement contains a magic number: var queryParams = new DynamicParameters(new              {                  error.DuplicateCount'                  error.ErrorHash'                  error.CreationDate'                  ApplicationName = error.ApplicationName.Truncate(50)'                  minDate = DateTime.UtcNow.Subtract(Settings.RollupPeriod.Value)              });
Missing Default,StackExchange.Exceptional,StackTraceExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ExceptionalUtils.StackTrace.cs,AppendGenerics,The following switch statement is missing a default case: switch (settings.Language)                  {                      case StackTraceSettings.CodeLanguage.VB:                          sb.Append("(Of ");                          break;                      case StackTraceSettings.CodeLanguage.CSharp:                      case StackTraceSettings.CodeLanguage.FSharp:                          sb.Append("&lt;");                          break;                  }
Missing Default,StackExchange.Exceptional,StackTraceExtensions,C:\research\architectureSmells\repos\NickCraver_StackExchange.Exceptional\src\StackExchange.Exceptional.Shared\ExceptionalUtils.StackTrace.cs,AppendGenerics,The following switch statement is missing a default case: switch (settings.Language)                  {                      case StackTraceSettings.CodeLanguage.VB:                          sb.Append(")");                          break;                      case StackTraceSettings.CodeLanguage.CSharp:                      case StackTraceSettings.CodeLanguage.FSharp:                          sb.Append("&gt;");                          break;                  }
