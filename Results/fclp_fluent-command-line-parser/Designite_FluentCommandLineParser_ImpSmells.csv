Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Fclp.Internals.Parsing.OptionParsers,CommandLineOptionParserFactory,F:\newReposMay17\fclp_fluent-command-line-parser\FluentCommandLineParser\Internals\Parsing\OptionParsers\CommandLineOptionParserFactory.cs,TryAddAsSpecialParser,Cyclomatic complexity of the method is 10
Long Statement,Fclp,CommandLineParserErrorFormatter,F:\newReposMay17\fclp_fluent-command-line-parser\FluentCommandLineParser\CommandLineParserErrorFormatter.cs,FormatOptionSyntaxParseError,The length of the statement  "	return string.Format ("Option '{0}' parse error: could not parse '{1}' to '{2}'."' error.ParsedOption.RawKey' error.ParsedOption.Value.RemoveAnyWrappingDoubleQuotes ()' error.Option.SetupType); " is 193.
Long Statement,Fclp,CommandLineParserErrorFormatter,F:\newReposMay17\fclp_fluent-command-line-parser\FluentCommandLineParser\CommandLineParserErrorFormatter.cs,GetOptionText,The length of the statement  "	var optionText = error.Option.LongName.IsNullOrWhiteSpace () ? error.Option.ShortName : error.Option.ShortName + ":" + error.Option.LongName; " is 141.
Long Statement,Fclp,FluentCommandLineParser,F:\newReposMay17\fclp_fluent-command-line-parser\FluentCommandLineParser\FluentCommandLineParserT.cs,Parse,The length of the statement  "		var match = parsedOptions.FirstOrDefault (pair => pair.Key.Equals (option.ShortName' this.StringComparison) // tries to match the short name " is 140.
Long Statement,Fclp,FluentCommandLineParser,F:\newReposMay17\fclp_fluent-command-line-parser\FluentCommandLineParser\FluentCommandLineParserT.cs,Parse,The length of the statement  "	parsedOptions.ForEach (item => result.AdditionalOptionsFound.Add (new KeyValuePair<string' string> (item.Key' item.Value))); " is 124.
Long Statement,Fclp.Internals.Parsing,CommandLineParserEngineMark2,F:\newReposMay17\fclp_fluent-command-line-parser\FluentCommandLineParser\Internals\Parsing\CommandLineParserEngineMark2.cs,IsAKey,The length of the statement  "	return arg != null && SpecialCharacters.OptionPrefix.Any (arg.StartsWith) && SpecialCharacters.OptionPrefix.Any (arg.Equals) == false; " is 134.
Long Statement,Fclp.Internals.Parsing.OptionParsers,DoubleCommandLineOptionParser,F:\newReposMay17\fclp_fluent-command-line-parser\FluentCommandLineParser\Internals\Parsing\OptionParsers\DoubleCommandLineOptionParser.cs,CanParse,The length of the statement  "	return double.TryParse (parsedOption.Value' System.Globalization.NumberStyles.Number' CultureInfo.InvariantCulture' out result); " is 128.
Long Statement,Fclp.Internals.Parsing.OptionParsers,EnumFlagCommandLineOptionParser,F:\newReposMay17\fclp_fluent-command-line-parser\FluentCommandLineParser\Internals\Parsing\OptionParsers\EnumFlagCommandLineOptionParser.cs,IsDefined,The length of the statement  "	return int.TryParse (value' out asInt) ? IsDefined (asInt) : _insensitiveNames.Keys.Contains (value.ToLowerInvariant ()); " is 121.
Long Statement,Fclp.Internals.Parsing.OptionParsers,EnumCommandLineOptionParser,F:\newReposMay17\fclp_fluent-command-line-parser\FluentCommandLineParser\Internals\Parsing\OptionParsers\EnumCommandLineOptionParser.cs,IsDefined,The length of the statement  "	return int.TryParse (value' out asInt) ? IsDefined (asInt) : _insensitiveNames.Keys.Contains (value.ToLowerInvariant ()); " is 121.
Long Statement,Fclp.Internals.Validators,OptionNameValidator,F:\newReposMay17\fclp_fluent-command-line-parser\FluentCommandLineParser\Internals\Validators\OptionNameValidator.cs,ValidateLongName,The length of the statement  "		ThrowInvalid (longName' "Long names must be longer than a single character. Single characters are reserved for short options only."); " is 133.
Long Statement,Fclp.Internals.Validators,OptionNameValidator,F:\newReposMay17\fclp_fluent-command-line-parser\FluentCommandLineParser\Internals\Validators\OptionNameValidator.cs,ThrowInvalid,The length of the statement  "	throw new InvalidOptionNameException (string.Format (CultureInfo.InvariantCulture' "Invalid option name '{0}'. {1}"' value' message)); " is 134.
Magic Number,Fclp.Internals.Parsing,ParsedOption,F:\newReposMay17\fclp_fluent-command-line-parser\FluentCommandLineParser\Internals\Parsing\ParsedOption.cs,GetHashCode,The following statement contains a magic number: unchecked {  	return ((Key != null ? Key.GetHashCode () : 0) * 397) ^ (Value != null ? Value.GetHashCode () : 0);  }  
Magic Number,Fclp.Internals.Parsing,ParsedOption,F:\newReposMay17\fclp_fluent-command-line-parser\FluentCommandLineParser\Internals\Parsing\ParsedOption.cs,GetHashCode,The following statement contains a magic number: return ((Key != null ? Key.GetHashCode () : 0) * 397) ^ (Value != null ? Value.GetHashCode () : 0);  
