Implementation smell,Namespace,Class,File,Method,Description
Magic Number,BitnessCheck,MainUserControl,C:\repos\ikriv_BaktunShell\src\Plugins\BitnessCheck\MainUserControl.xaml.cs,MainUserControl,The following statement contains a magic number: BitnessText.Text = "Running at " + IntPtr.Size * 8 + " bit";  
Magic Number,BitnessCheck,MainUserControl,C:\repos\ikriv_BaktunShell\src\Plugins\BitnessCheck\MainUserControl.xaml.cs,Allocate,The following statement contains a magic number: try {  	const long oneG = 1024L * 1024 * 1024;  	byte[] memory = new byte[oneG];  	commitAction (memory);  	_memory.Add (memory);  }  catch (Exception ex) {  	MessageBox.Show (ex.ToString ()' "Failure");  }  
Magic Number,BitnessCheck,MainUserControl,C:\repos\ikriv_BaktunShell\src\Plugins\BitnessCheck\MainUserControl.xaml.cs,Allocate,The following statement contains a magic number: try {  	const long oneG = 1024L * 1024 * 1024;  	byte[] memory = new byte[oneG];  	commitAction (memory);  	_memory.Add (memory);  }  catch (Exception ex) {  	MessageBox.Show (ex.ToString ()' "Failure");  }  
Magic Number,BitnessCheck,MainUserControl,C:\repos\ikriv_BaktunShell\src\Plugins\BitnessCheck\MainUserControl.xaml.cs,Reserve,The following statement contains a magic number: b [0] = 42;  
Magic Number,BitnessCheck,MainUserControl,C:\repos\ikriv_BaktunShell\src\Plugins\BitnessCheck\MainUserControl.xaml.cs,Commit,The following statement contains a magic number: for (int index = 0; index < b.LongLength; index += PageSize) {  	b [index] = 42;  	// actual value does not matter  }  
Magic Number,BitnessCheck,MainUserControl,C:\repos\ikriv_BaktunShell\src\Plugins\BitnessCheck\MainUserControl.xaml.cs,Commit,The following statement contains a magic number: b [index] = 42;  
