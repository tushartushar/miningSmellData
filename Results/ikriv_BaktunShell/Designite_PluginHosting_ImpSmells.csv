Implementation smell,Namespace,Class,File,Method,Description
Long Statement,IKriv.PluginHosting,PluginCreator,C:\repos\ikriv_BaktunShell\src\WpfHost\PluginHosting\PluginCreator.cs,CreatePlugin,The length of the statement  "            if (type == null) throw new InvalidOperationException("Could not find type " + typeName + " in assembly " + assemblyName); " is 122.
Long Statement,IKriv.PluginHosting,PluginCreator,C:\repos\ikriv_BaktunShell\src\WpfHost\PluginHosting\PluginCreator.cs,CreatePlugin,The length of the statement  "                var message = String.Format("Cannot create an instance of {0}. Either a public default constructor' or a public constructor taking IWpfHost must be defined"' typeName); " is 168.
Magic Number,IKriv.PluginHosting,PluginLoader,C:\repos\ikriv_BaktunShell\src\WpfHost\PluginHosting\PluginLoader.cs,Run,The following statement contains a magic number: using (_log = CreateLog())              {                  try                  {                      _log.Info("PluginHost running at " + IntPtr.Size * 8 + " bit' CLR version " + Environment.Version);                      new AssemblyResolver().Setup();                      AppDomain.CurrentDomain.UnhandledException += OnUnhandledException;                      IpcServices.RegisterChannel(name);                      RegisterObject();                      SignalReady();                      Dispatcher.Run();                  }                  catch (Exception ex)                  {                      ReportFatalError(ex);                  }                    Thread.Sleep(100); // allow any pending remoting operations to finish                  _log.Debug("Shutdown complete");              }
Magic Number,IKriv.PluginHosting,PluginLoader,C:\repos\ikriv_BaktunShell\src\WpfHost\PluginHosting\PluginLoader.cs,Run,The following statement contains a magic number: using (_log = CreateLog())              {                  try                  {                      _log.Info("PluginHost running at " + IntPtr.Size * 8 + " bit' CLR version " + Environment.Version);                      new AssemblyResolver().Setup();                      AppDomain.CurrentDomain.UnhandledException += OnUnhandledException;                      IpcServices.RegisterChannel(name);                      RegisterObject();                      SignalReady();                      Dispatcher.Run();                  }                  catch (Exception ex)                  {                      ReportFatalError(ex);                  }                    Thread.Sleep(100); // allow any pending remoting operations to finish                  _log.Debug("Shutdown complete");              }
Magic Number,IKriv.PluginHosting,PluginLoader,C:\repos\ikriv_BaktunShell\src\WpfHost\PluginHosting\PluginLoader.cs,ReportFatalError,The following statement contains a magic number: Environment.Exit(2);
