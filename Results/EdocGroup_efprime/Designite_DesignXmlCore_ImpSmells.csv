Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,ProcessKey,The method has 176 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNodesForVsLang,The method has 147 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OpenDropDown,The method has 121 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ColumnPermutation,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ColumnPermutation.cs,GetColumnExpansion,The method has 112 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,MoveItem,The method has 195 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetBlankExpansion,The method has 136 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetNavigationTarget,The method has 360 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,EnumOrderedListItems,The method has 180 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RemoveBranch,The method has 101 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandInitialComplexSubItems,The method has 101 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,UpdateCellStyle,The method has 138 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ToggleExpansion,The method has 146 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,LocateObject,The method has 303 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The method has 457 lines of code.
Long Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHeaderControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HeaderControl.cs,WndProc,The method has 256 lines of code.
Complex Method,Microsoft.Data.Entity.Design.Base.Shell,HeaderBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\HeaderBranch.cs,LocateObject,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.Data.Entity.Design.Base.Shell,HeaderBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\HeaderBranch.cs,ToggleState,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Base.Shell,HeaderBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\HeaderBranch.cs,ProcessKeyDown,Cyclomatic complexity of the method is 24
Complex Method,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,GetDisplayData,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,ProcessKeyDown,Cyclomatic complexity of the method is 26
Complex Method,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,GetObject,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerInPlaceEdit,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerInPlaceEdit.cs,ProcessCmdKey,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindow.cs,OnDocumentWindowChanged,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindow.cs,Invalidate,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,SetColumns,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,PopulateTree,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,ProcessKey,Cyclomatic complexity of the method is 36
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.Common,CommonVsUtilities,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\CommonVsUtilities.cs,ShowMessageBoxEx,Cyclomatic complexity of the method is 20
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,WriteToFile,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.Model.VisualStudio,VSXmlTransaction,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Model\VisualStudio\VSXmlTransactionProvider.cs,GetXmlChange,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewBuffer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewBuffer.cs,DisplayPreview,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewBuffer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewBuffer.cs,Dispose,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNodesForVsLang,Cyclomatic complexity of the method is 28
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,DetermineCheckState,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,RefactoringOperationBase,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\RefactoringOperationBase.cs,DoOperation,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnHandleCreated,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,WndProc,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OpenDropDown,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnDropDownKeyDown,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,MouseHooker,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,MouseHookProc,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnMouseMove,Cyclomatic complexity of the method is 21
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ProcessDialogKey,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHostTextBox,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ProcessCmdKey,Cyclomatic complexity of the method is 18
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHostListBox,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnEditKeyDown,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHostListBox,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnEditKeyPress,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ColumnItemEnumerator,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ColumnItemEnumerator.cs,MoveNextUnfiltered,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ColumnItemEnumerator,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ColumnItemEnumerator.cs,MoveNextFiltered,Cyclomatic complexity of the method is 22
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ColumnPermutation,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ColumnPermutation.cs,ChangeVisibleColumnOrder,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ColumnPermutation,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ColumnPermutation.cs,GetColumnExpansion,Cyclomatic complexity of the method is 18
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,PositionManagerEventArgs,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ProviderEvents.cs,StorePositions,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,OnBranchModification,Cyclomatic complexity of the method is 35
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DisplayDataChanged,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DoRealignNotification,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,InsertItems,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DeleteItems,Cyclomatic complexity of the method is 18
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,MoveItem,Cyclomatic complexity of the method is 37
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetBlankExpansion,Cyclomatic complexity of the method is 24
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetItemInfo,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetDescendantItemCount,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetExpandedBranch,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,SynchronizeState,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,FindAbsoluteIndex,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetOffsetFromParent,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetNavigationTarget,Cyclomatic complexity of the method is 99
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,EnumOrderedListItems,Cyclomatic complexity of the method is 32
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,SetRedraw,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DoBeforeListShuffle,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RemoveBranch,Cyclomatic complexity of the method is 20
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,CreateTreeNode,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandTreeNode,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandInitialComplexSubItems,Cyclomatic complexity of the method is 16
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,UpdateCellStyle,Cyclomatic complexity of the method is 18
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ToggleExpansion,Cyclomatic complexity of the method is 33
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ChangeFullCountRecursive,Cyclomatic complexity of the method is 16
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ChangeFullCountRecursive,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ChangeFullCountRecursive,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,LocateObject,Cyclomatic complexity of the method is 56
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ShiftBranchLevels,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,Cyclomatic complexity of the method is 76
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,CollectChildBranches,Cyclomatic complexity of the method is 21
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNode,Cyclomatic complexity of the method is 21
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHeaderControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HeaderControl.cs,SetAppearanceFields,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHeaderControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HeaderControl.cs,WndProc,Cyclomatic complexity of the method is 87
Complex Method,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,GetProjectAndFileInfoForPath,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnBeforeLastDocumentUnlock,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnElementValueChanged,Cyclomatic complexity of the method is 10
Long Parameter List,Microsoft.Data.Entity.Design.Base.Shell,AggregateBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\AggregateBranch.cs,SynchronizeState,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Base.Shell,AggregateBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\AggregateBranch.cs,OnDragEvent,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Base.Shell,HeaderBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\HeaderBranch.cs,SynchronizeState,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Base.Shell,HeaderBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\HeaderBranch.cs,OnDragEvent,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,BeginLabelEdit,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,SynchronizeState,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,OnDragEvent,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,ProcessKey,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Common,CommonVsUtilities,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\CommonVsUtilities.cs,ShowMessageBoxEx,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,FindAndLockDocument,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Common,VsTextLinesFromFile,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\VsTextLinesFromFile.cs,CanReplaceLines,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Common,VsTextLinesFromFile,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\VsTextLinesFromFile.cs,CopyLineText,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Common,VsTextLinesFromFile,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\VsTextLinesFromFile.cs,CreateLineMarker,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Common,VsTextLinesFromFile,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\VsTextLinesFromFile.cs,EnumMarkers,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Common,VsTextLinesFromFile,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\VsTextLinesFromFile.cs,FindMarkerByLineIndex,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Common,VsTextLinesFromFile,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\VsTextLinesFromFile.cs,GetLineDataEx,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Common,VsTextLinesFromFile,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\VsTextLinesFromFile.cs,GetLineText,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Common,VsTextLinesFromFile,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\VsTextLinesFromFile.cs,ReloadLines,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Common,VsTextLinesFromFile,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\VsTextLinesFromFile.cs,ReplaceLines,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Common,VsTextLinesFromFile,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\VsTextLinesFromFile.cs,ReplaceLinesEx,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewBuffer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewBuffer.cs,ScrollInView,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNode,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNode.cs,PreviewChangesNode,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNode,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,VsLangTextChangeProposal,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\VsLangTextChangeProposal.cs,VsLangTextChangeProposal,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ColumnItemEnumerator,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ColumnItemEnumerator.cs,ColumnItemEnumerator,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ColumnItemEnumerator,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ColumnItemEnumerator.cs,ColumnItemEnumerator,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ColumnItemEnumerator,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ColumnItemEnumerator.cs,Initialize,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DisplayDataChangedData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\DisplayDataChangedData.cs,DisplayDataChangedData,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,BlankExpansionData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ExpansionToggle.cs,BlankExpansionData,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,IBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\IBranch.cs,SynchronizeState,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,IBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\IBranch.cs,OnDragEvent,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ITree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ITree.cs,EnumerateColumnItems,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ITree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ITree.cs,EnumerateColumnItems,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ItemCountChangedEventArgs,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ProviderEvents.cs,ItemCountChangedEventArgs,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ItemMovedEventArgs,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ProviderEvents.cs,ItemMovedEventArgs,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DisplayDataChangedEventArgs,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ProviderEvents.cs,DisplayDataChangedEventArgs,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,SynchronizeStateEventArgs,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ProviderEvents.cs,SynchronizeStateEventArgs,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ShiftBranchLevelsData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ShiftBranchLevelData.cs,ShiftBranchLevelsData,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ShiftBranchLevelsData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ShiftBranchLevelData.cs,ShiftBranchLevelsData,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ShiftBranchLevelsData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ShiftBranchLevelData.cs,ShiftBranchLevelsData,The method has 9 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,SubItemColumnAdjustment,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\SubItemColumnAdjustment.cs,SubItemColumnAdjustment,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,TrackCell,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ToggleExpansion,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetItemInfo,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DoToggleState,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,SynchronizeState,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,EnumerateColumnItems,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,EnumerateColumnItems,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,EnumerateColumnItems,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,EnumerateColumnItems,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,EnumOrderedListItems,The method has 12 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,EnumSingleColumnOrderedListItems,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,CreateTreeNode,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandTreeNode,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandTreeNode,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandTreeNode,The method has 9 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandTreeNode,The method has 9 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ToggleExpansion,The method has 9 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ChangeFullCountRecursive,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ChangeFullCountRecursive,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ShiftBranchLevels,The method has 9 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The method has 9 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,CollectChildBranches,The method has 9 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeAccessibilityData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTreeAccessibilityData.cs,VirtualTreeAccessibilityData,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeAccessibilityData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTreeAccessibilityData.cs,VirtualTreeAccessibilityData,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeAccessibilityData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTreeAccessibilityData.cs,VirtualTreeAccessibilityData,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeAccessibilityData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTreeAccessibilityData.cs,VirtualTreeAccessibilityData,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeAccessibilityData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTreeAccessibilityData.cs,VirtualTreeAccessibilityData,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeAccessibilityData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTreeAccessibilityData.cs,VirtualTreeAccessibilityData,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeAccessibilityData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTreeAccessibilityData.cs,VirtualTreeAccessibilityData,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeDisplayData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTreeDisplayData.cs,VirtualTreeDisplayData,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeDisplayData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTreeDisplayData.cs,VirtualTreeDisplayData,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeDisplayData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTreeDisplayData.cs,VirtualTreeDisplayData,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeColumnHeader,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\ColumnHeader.cs,VirtualTreeColumnHeader,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeColumnHeader,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\ColumnHeader.cs,VirtualTreeColumnHeader,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeColumnHeaderClickEventArgs,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\ColumnHeader.cs,VirtualTreeColumnHeaderClickEventArgs,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHeaderControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HeaderControl.cs,SetBoundsCore,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHitInfo,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HitTestTypes.cs,VirtualTreeHitInfo,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,StringRenderer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\StringRenderer.cs,MeasureString,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,StringRenderer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\StringRenderer.cs,MeasureString,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,StringRenderer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\StringRenderer.cs,DrawString,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,SetScrollRange,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,ScrollWindowEx,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,ScrollWindowEx,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,ScrollWindowEx,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,ScrollWindowEx,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,SetWindowPos,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,PeekMessage,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,MsgWaitForMultipleObjects,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,DrawThemeBackground,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,GetThemePartSize,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,GetProjectAndFileInfoForPath,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,GetProjectAndFileInfoForPath,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,GetProjectAndFileInfoForPath,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,GetProjectAndFileInfoForPath,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,TextBufferNavigateTo,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,XmlModelDocumentTask,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\XmlModelDocumentTask.cs,XmlModelDocumentTask,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio,XmlModelErrorTask,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\XmlModelErrorTask.cs,XmlModelErrorTask,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnAfterAttributeChangeEx,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnSelectionChanged,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio.Package,ExplorerWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\ExplorerWindow.cs,OnDockableChange,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.VisualStudio.Package,ExplorerWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\ExplorerWindow.cs,DefineCmd,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Tools.VSXmlDesignerBase.VisualStudio.UI,ProgressDialog,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\ProgressDialog.cs,ProgressDialog,The method has 5 parameters.
Long Identifier,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,WriteToFile,The length of the parameter fileDidNotExistAndShouldBeCreated is 33.
Long Identifier,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandTreeNode,The length of the parameter requireInitialSubItemExpansion is 30.
Long Identifier,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandTreeNode,The length of the parameter requireInitialSubItemExpansion is 30.
Long Identifier,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandTreeNode,The length of the parameter requireInitialSubItemExpansion is 30.
Long Identifier,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,LocateObject,The length of the parameter firstUnexpandedRowSubItemAdjust is 31.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,DeferredRequest,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\DeferredRequest.cs,Request,The length of the statement  "	_operation = Dispatcher.CurrentDispatcher.BeginInvoke (DispatcherPriority.Background' new DispatcherOperationCallback (DispatcherOperation)' arg); " is 146.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,DeferredRequest,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\DeferredRequest.cs,DispatcherOperation,The length of the statement  "	Debug.Assert (_operation != null && _operation.Status == DispatcherOperationStatus.Executing' "This should only be called by an executing DispatcherOperation"); " is 160.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,HeaderBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\HeaderBranch.cs,GetAccessibilityData,The length of the statement  "		return new VirtualTreeAccessibilityData ("{1}' {3} {2}"' TreeGridDesignerBranch._descriptionAccessibilityReplacementFields); " is 124.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,HeaderBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\HeaderBranch.cs,GetAccessibilityData,The length of the statement  "		return new VirtualTreeAccessibilityData ("{0} {5} {3}"' TreeGridDesignerBranch._descriptionAccessibilityReplacementFields); " is 123.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,HeaderBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\HeaderBranch.cs,OnChildBranchModification,The length of the statement  "					_onBranchModification (this' BranchModificationEventArgs.DisplayDataChanged (new DisplayDataChangedData (VirtualTreeDisplayDataChanges.StateImage' this' i' -1' 1))); " is 165.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,HeaderBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\HeaderBranch.cs,ProcessKeyDown,The length of the statement  "						_onBranchModification (this' BranchModificationEventArgs.DisplayDataChanged (new DisplayDataChangedData (VirtualTreeDisplayDataChanges.StateImage' this' row' checkBoxIndex' 1))); " is 178.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,HeaderBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\HeaderBranch.cs,ProcessKeyDown,The length of the statement  "						_onBranchModification (this' BranchModificationEventArgs.DisplayDataChanged (new DisplayDataChangedData (VirtualTreeDisplayDataChanges.StateImage' _childBranchArray [row].Branch' -1' checkBoxIndex' -1))); " is 204.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,GetValueSupported,The length of the statement  "		supportedState = TreeGridDesignerValueSupportedStates.DisplayReadOnly | TreeGridDesignerValueSupportedStates.SupportsKeyboardNavigation; " is 136.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,GetAccessibilityData,The length of the statement  "			// standard cell - {row} {column header}.  Note that text in the cell is already reported in the value field of the accessible object. " is 134.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,CommitLabelEdit,The length of the statement  "			Debug.Assert (convertedObject != null' "Column " + columnDesc.GetType ().FullName + " could not convert newText " + newText); " is 125.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,CommitLabelEdit,The length of the statement  "			result = OnCreatorNodeEditCommitted (_insertingCreatorIndex == -1 ? row - eltCount : _insertingCreatorIndex' newText' _insertingIndex); " is 135.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,BeginLabelEdit,The length of the statement  "	return result ? new VirtualTreeLabelEditData (customInPlaceEdit' null' alternateText' maxTextLength) : VirtualTreeLabelEditData.Invalid; " is 136.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,OnColumnValueChanged,The length of the statement  "		DoBranchModification (BranchModificationEventArgs.DisplayDataChanged (new DisplayDataChangedData (VirtualTreeDisplayDataChanges.All' this' args.Row' args.Column' 1))); " is 167.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindow.cs,OnToolWindowCreate,The length of the statement  "	_treeControl.LabelEditSupport = VirtualTreeLabelEditActivationStyles.ImmediateMouse | VirtualTreeLabelEditActivationStyles.Explicit; " is 132.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindow.cs,OnToolWindowCreate,The length of the statement  "	NativeMethods.SendMessage (_treeControl.Handle' NativeMethods.WM_UPDATEUISTATE' (NativeMethods.UIS_CLEAR | (NativeMethods.UISF_HIDEFOCUS << 16))' 0); " is 149.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindow.cs,SetTreeControlThemedColors,The length of the statement  "	_treeControl.SelectedItemInactiveForeColor = VSColorTheme.GetThemedColor (TreeViewColors.SelectedItemInactiveTextColorKey); " is 123.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindow.cs,PreProcessMessage,The length of the statement  "		if (key == (int)Keys.Escape && (_treeControl.InLabelEdit || (_treeControl.HeaderControl != null && _treeControl.HeaderControl.AdjustingColumnHeader))) { " is 152.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindow.cs,OnTreeSelectionChanged,The length of the statement  "			if ((_previouslySelectedColumn == null || TreeControl.CurrentColumn != _previouslySelectedColumn) && willNotUpdateSelection) { " is 126.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindow.cs,Invalidate,The length of the statement  "					var currentTracking = itemInfo.Branch.GetObject (itemInfo.Row' itemInfo.Column' ObjectStyle.TrackingObject' ref options); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindow.cs,Invalidate,The length of the statement  "			var itemEnumerator = TreeProvider.EnumerateColumnItems (0' _treeControl.ColumnPermutation' false' startIndex' endIndex); " is 120.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindow.cs,ExpandAllDeferred,The length of the statement  "	if (_storeCurrentColumnBeforeReload >= 0 && currentBranch != null && _storeCurrentColumnBeforeReload < currentBranch.VisibleItemCount) { " is 136.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,ProcessDialogKey,The length of the statement  "		// such as moving focus around a dialog when Tab is pressed.  Returning true here causes message processing/translation to halt. " is 128.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,ProcessDialogKey,The length of the statement  "		// things like dialog focus movement to work correctly' but prevents the keystroke from showing up in in-place edit controls. " is 125.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,ProcessKey,The length of the statement  "				if ((treeDirection == TreeNavigation.RightColumn && column < newColumn) || (treeDirection == TreeNavigation.LeftColumn && column > newColumn)) { " is 144.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,ProcessKey,The length of the statement  "					// in this case' we're done as long as the branch is of the appropriate type and supports navigation or is expandable' because we have " is 134.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,ProcessKey,The length of the statement  "					foundEditableColumn = (result.BranchType == null || branchType == result.BranchType || branchType.IsSubclassOf (result.BranchType)) && ((branch.GetValueSupported (relIndex' column) & TreeGridDesignerValueSupportedStates.SupportsKeyboardNavigation) != 0 || (branch as IBranch).IsExpandable (relIndex' column)); " is 309.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,ProcessKey,The length of the statement  "						if (branch != null && (result.BranchType == null || branchType == result.BranchType || branchType.IsSubclassOf (result.BranchType)) && ((branch.GetValueSupported (relIndex' column) & TreeGridDesignerValueSupportedStates.SupportsKeyboardNavigation) != 0 || (branch as IBranch).IsExpandable (relIndex' column))) { " is 311.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,InvalidateItem,The length of the statement  "	NativeMethods.RedrawWindow (Handle' ref rect' IntPtr.Zero' NativeMethods.RedrawWindowFlags.Invalidate | NativeMethods.RedrawWindowFlags.Erase); " is 143.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,InsertCreatorNode,The length of the statement  "		Tree.DisplayDataChanged (new DisplayDataChangedData (VirtualTreeDisplayDataChanges.VisibleElements' info.Branch' _insertIndex' -1' info.Branch.VisibleItemCount - _insertIndex)); " is 177.
Long Statement,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,EndInsert,The length of the statement  "			Tree.DisplayDataChanged (new DisplayDataChangedData (VirtualTreeDisplayDataChanges.VisibleElements' branch' _insertIndex' -1' branch.VisibleItemCount - _insertIndex)); " is 167.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,CommonVsUtilities,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\CommonVsUtilities.cs,ShowMessageBoxEx,The length of the statement  "		return (DialogResult)_marshalingControl.Invoke (new SafeShowMessageBox (ShowMessageBoxEx)' title' text' defaultButton' buttons' icon); " is 134.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,CommonVsUtilities,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\CommonVsUtilities.cs,ShowMessageBoxEx,The length of the statement  "		NativeMethods.ThrowOnFailure (uiShell.ShowMessageBox (0' ref clsid' title' (string.IsNullOrEmpty (text) ? null : text)' string.Empty' 0' vsButtons' oleDefButton' vsIcon' 0' // false " is 181.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,CommonVsUtilities,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\CommonVsUtilities.cs,GetDesignerDocumentFlagFromSaveOption,The length of the statement  "	return ((saveOption & __VSRDTSAVEOPTIONS.RDTSAVEOPT_ForceSave) != 0) ? EnumerateDocumentsFlag.DirtyOrPrimary : EnumerateDocumentsFlag.DirtyDocuments; " is 149.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,CommonVsUtilities,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\CommonVsUtilities.cs,TryGetDocDataFromCookie,The length of the statement  "			var hr = rdt.GetDocumentInfo (cookie' out rdtFlags' out readLocks' out editLocks' out itemName' out hierarchy' out itemId' out unknownDocData); " is 143.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,CriticalException,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\CriticalException.cs,IsCriticalException,The length of the statement  "	if (ex is NullReferenceException || ex is StackOverflowException || ex is OutOfMemoryException || ex is ThreadAbortException) { " is 127.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,CriticalException,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\CriticalException.cs,ThrowOrShow,The length of the statement  "	MessageBox.Show (null' ex.Message' ex.GetType ().Name' MessageBoxButtons.OK' MessageBoxIcon.Exclamation' MessageBoxDefaultButton.Button1' options); " is 147.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,SafeWindowTarget,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\SafeWindowTarget.cs,OnChildControlAdded,The length of the statement  "	if (e.Control != null && (e.Control.WindowTarget == null || !e.Control.WindowTarget.GetType ().Name.Contains ("SafeWindowTarget"))) { " is 133.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,SafeWindowTarget,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\SafeWindowTarget.cs,OnChildControlAdded,The length of the statement  "		Debug.Fail ("A control was added after Form.Load' but it is not wrapped with a SafeWindowTarget.  This violates our exception hardening policy.  See bug 427820 for more info on using SafeWindowTarget."); " is 203.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,GetTextLines,The length of the statement  "			NativeMethods.ThrowOnFailure (FindAndLockDocument ((uint)(VsShell._VSRDTFLAGS.RDT_NoLock)' fullPathFileName' out ppHier' out pitemid' out ppunkDocData' out pdwCookie)); " is 168.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,TryGetTextLinesAndInvisibleEditor,The length of the statement  "		NativeMethods.ThrowOnFailure (invisibleEditorMgr.RegisterInvisibleEditor (fullPathFileName' project' (uint)VsShell._EDITORREGFLAGS.RIEF_ENABLECACHING' null' out spEditor)); " is 172.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,SaveDirtyFiles,The length of the statement  "				throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' Resources.Exception_FailedToSaveFile' filePath)); " is 129.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,GetHierarchyFromDocCookie,The length of the statement  "		NativeMethods.ThrowOnFailure (_runningDocumentTable.GetDocumentInfo (docCookie' out pgrfRDTFlags' out pdwReadLocks' out pdwEditLocks' out pbstrMkDocument' out ppHier' out pitemid' out ppunkDocData)); " is 199.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,TryGetDocDataFromCookie,The length of the statement  "		var hr = rdt.GetDocumentInfo (cookie' out rdtFlags' out readLocks' out editLocks' out itemName' out hierarchy' out itemId' out unknownDocData); " is 143.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,GetWindowFrame,The length of the statement  "				if (string.IsNullOrEmpty (candidateFilename) == false && (string.Compare (candidateFilename' thisFilename' true' CultureInfo.CurrentCulture) == 0 || FileUtils.IsSamePath (candidateFilename' thisFilename))) { " is 207.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,GetRdtCookie,The length of the statement  "			FindAndLockDocument ((uint)(VsShell._VSRDTFLAGS.RDT_NoLock)' fullPathFileName' out ppHier' out pItemId' out ppunkDocData' out result); " is 134.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,GetDocData,The length of the statement  "			FindAndLockDocument ((uint)(VsShell._VSRDTFLAGS.RDT_NoLock)' fullPathFileName' out ppHier' out pItemId' out ppunkDocData' out result); " is 134.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,WriteToFile,The length of the statement  "			if (fileDidNotExistAndShouldBeCreated == false && !TryGetTextLinesAndInvisibleEditor (fullPathFileName' out invisibleEditor' out textLines)) { " is 142.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,Dispose,The length of the statement  "		Debug.Assert (_docDataToKeepAliveOnClose.Keys.Count == 0' "RdtManager is still trying to keep doc data alive on dispose' this could be a symptom of memory leak from invisible doc data."); " is 187.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,ServiceProviderHelper,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\ServiceProviderHelper.cs,AddService,The length of the statement  "			throw new InvalidOperationException (CommonResourceUtil.GetString (Resources.ServiceProvider_ServiceAlreadyExists' serviceType.FullName)); " is 138.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,ServiceProviderHelper,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\ServiceProviderHelper.cs,AddService,The length of the statement  "		throw new ArgumentException (CommonResourceUtil.GetString (Resources.ServiceProvider_InvalidServiceInstance' serviceType.FullName' "serviceInstance")); " is 151.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,ServiceProviderHelper,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\ServiceProviderHelper.cs,AddService,The length of the statement  "			throw new InvalidOperationException (CommonResourceUtil.GetString (Resources.ServiceProvider_ServiceAlreadyExists' serviceType.FullName)); " is 138.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,VsTextBufferFactory,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\VsTextBufferFactory.cs,CreateObject,The length of the statement  "	NativeMethods.ThrowOnFailure (localRegistry.CreateInstance (typeof(VsTextBufferClass).GUID' null' ref iid' (uint)CLSCTX.CLSCTX_INPROC_SERVER' out ptr)); " is 152.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,VsTextLinesFromFile,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\VsTextLinesFromFile.cs,ReplaceLinesEx,The length of the statement  "	return _textBuffer.ReplaceLinesEx (dwFlags' iStartLine' iStartIndex' iEndLine' iEndIndex' pszText' iNewLen' pChangedSpan); " is 122.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,WaitDialog,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\WaitDialog.cs,Start,The length of the statement  "			ThrowOnFailure (_waitDialog.StartWaitDialogWithPercentageProgress (_caption' message' progress' null' null' _cancelable' delayToStart' 0' 0)); " is 142.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,WaitDialog,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\WaitDialog.cs,Start,The length of the statement  "			ThrowOnFailure (_waitDialog.StartWaitDialog (_caption' message' progress' null' null' delayToStart' _cancelable' true)); " is 120.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Common,WaitDialog,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\WaitDialog.cs,UpdateProgressInternal,The length of the statement  "		ThrowOnFailure (_waitDialog.UpdateProgress (null' message' null' currentStep' totalSteps' disableCancelable' out hasCanceled)); " is 127.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Model.VisualStudio,VSXmlModel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Model\VisualStudio\VSXmlModel.cs,CanEditXmlModel,The length of the statement  "		// note we get out of here quickly if this happens as we don't want to allow any cases where somehow documents.Count > 0  " is 120.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Model.VisualStudio,VSXmlModelProvider,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Model\VisualStudio\VSXmlModelProvider.cs,GetXmlModel,The length of the statement  "	// assert that an entry already exists in the RDT for this document and confirm with the designer package that the entry " is 120.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Model.VisualStudio,VSXmlModelProvider,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Model\VisualStudio\VSXmlModelProvider.cs,GetXmlModel,The length of the statement  "	// is owned by the designer.  If this is not the case' the xml editor will create a doc data' and this may not be the doc  " is 121.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Model.VisualStudio,VSXmlModelProvider,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Model\VisualStudio\VSXmlModelProvider.cs,GetXmlModel,The length of the statement  "	// data we want.  This can result in failure to open the document in the desired designer because the editor is incorrect. " is 122.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Model.VisualStudio,VSXmlModelProvider,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Model\VisualStudio\VSXmlModelProvider.cs,GetXmlModel,The length of the statement  "	    // The behaviour of VsShellUtilities.IsDocumentOpen changed in VS2013. In VS2012 IsDocumentOpen would return true if the document" is 129.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Model.VisualStudio,VSXmlModelProvider,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Model\VisualStudio\VSXmlModelProvider.cs,GetXmlModel,The length of the statement  "    // has been loaded even though loading the solution has not finished yet. In VS2013 IsOpenDocument returns false if the solution " is 128.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Model.VisualStudio,VSXmlModelProvider,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Model\VisualStudio\VSXmlModelProvider.cs,GetXmlModel,The length of the statement  "    // is still being loaded. This caused multiple asserts when opening a project after VS was closed when edmx file was active/opened" is 130.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Model.VisualStudio,VSXmlModelProvider,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Model\VisualStudio\VSXmlModelProvider.cs,GetXmlModel,The length of the statement  "            if(solution != null && NativeMethods.Succeeded(solution.GetProperty((int)__VSPROPID2.VSPROPID_IsSolutionOpeningDocs' out propertyValue)))" is 137.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Model.VisualStudio,VSXmlModelProvider,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Model\VisualStudio\VSXmlModelProvider.cs,GetXmlModel,The length of the statement  "		var isDocumentOpen = VsShellUtilities.IsDocumentOpen (_services' sourceUri.LocalPath' Guid.Empty' out hier' out itemId' out windowFrame); " is 137.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Model.VisualStudio,VSXmlModelProvider,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Model\VisualStudio\VSXmlModelProvider.cs,GetXmlModel,The length of the statement  "			Debug.Assert (frameWrapper != null' "Could not construct FrameWrapper for IVsWindowFrame in debug code in GetXmlModel()"); " is 122.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Model.VisualStudio,VSXmlModelProvider,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Model\VisualStudio\VSXmlModelProvider.cs,GetXmlModel,The length of the statement  "				Debug.Assert (frameWrapper.IsDesignerDocInDesigner' "We are trying to GetXmlModel() for a document that is not owned by the designer"); " is 135.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewBuffer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewBuffer.cs,GetPreviewTempFile,The length of the statement  "			if (RdtManager.Instance.TryGetTextLinesAndInvisibleEditor (tempFilePath' out invisibleEditor' out textBuffer) && invisibleEditor != null && textBuffer != null) { " is 161.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewBuffer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewBuffer.cs,GetPreviewTempFile,The length of the statement  "			throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' Resources.Exception_CannotGetTextBuffer' tempFilePath)); " is 136.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewBuffer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewBuffer.cs,DisplayPreview,The length of the statement  "			ScrollInView (vsTextView' visibleChange.StartLine' visibleChange.StartColumn' visibleChange.EndLine' visibleChange.EndColumn); " is 126.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewBuffer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewBuffer.cs,CopyFileToBuffer,The length of the statement  "		buffer.ReplaceLines (spanDst.iStartLine' spanDst.iStartIndex' spanDst.iEndLine' spanDst.iEndIndex' pContent' content.Length' new[] { " is 132.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNode,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNode.cs,ComputeCheckedState,The length of the statement  "		ChangeProposal.Included = (_checkState == __PREVIEWCHANGESITEMCHECKSTATE.PCCS_Checked) || (_checkState == __PREVIEWCHANGESITEMCHECKSTATE.PCCS_PartiallyChecked); " is 160.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNodesForVsLang,The length of the statement  "						foreach (var vsLangTextChange in fileChange.ChangeList.SelectMany (cl => cl.Value).OfType<VsLangTextChangeProposal> ()) { " is 121.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNodesForVsLang,The length of the statement  "								var rootNode = new PreviewChangesNode (vsLangTextChange.ObjectDefinitionFullName' new VSTREEDISPLAYDATA ()' vsLangTextChange.ObjectDefinitionFullName' new List<PreviewChangesNode> ()' vsLangTextChange); " is 202.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNodesForVsLang,The length of the statement  "								rootNode.CheckState = vsLangTextChange.Included ? __PREVIEWCHANGESITEMCHECKSTATE.PCCS_Checked : __PREVIEWCHANGESITEMCHECKSTATE.PCCS_Unchecked; " is 142.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNodesForVsLang,The length of the statement  "									rootToFileToChangesMap.Add (vsLangTextChange.ObjectDefinitionFullName' new Dictionary<string' List<PreviewChangesNode>> ()); " is 124.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNodesForVsLang,The length of the statement  "									if (ErrorHandler.Succeeded (textBuffer.GetLineText (vsLangTextChange.StartLine' 0' vsLangTextChange.StartLine' lineLength' out displayText))) { " is 143.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNodesForVsLang,The length of the statement  "										Debug.Assert (spaceLength <= vsLangTextChange.StartColumn' "Start column of selection is negative' HydratedVsLangRefactor.CreatePreviewNodeForChanges()"); " is 154.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNodesForVsLang,The length of the statement  "											changeNode.CheckState = vsLangTextChange.Included ? __PREVIEWCHANGESITEMCHECKSTATE.PCCS_Checked : __PREVIEWCHANGESITEMCHECKSTATE.PCCS_Unchecked; " is 144.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNodesForVsLang,The length of the statement  "	// Now that all the changes have been sorted under the correct root nodes in our dictionary' create the File nodes that connect " is 127.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNodesForVsLang,The length of the statement  "							if (checkState == __PREVIEWCHANGESITEMCHECKSTATE.PCCS_PartiallyChecked || checkState == __PREVIEWCHANGESITEMCHECKSTATE.PCCS_Unchecked) { " is 136.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNodesForVsLang,The length of the statement  "							if (checkState == __PREVIEWCHANGESITEMCHECKSTATE.PCCS_PartiallyChecked || checkState == __PREVIEWCHANGESITEMCHECKSTATE.PCCS_Checked) { " is 134.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreateEmptyNode,The length of the statement  "	return CreatePreviewNode (Resources.RefactoringOperation_NoChanges' CommonConstants.OM_GLYPH_REFERENCE' IntPtr.Zero' null' false' false' false); " is 144.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewData.cs,SetFileChanges,The length of the statement  "				throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' Resources.Exception_DuplicateChanges' filename)); " is 129.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,RefactoringOperationBase,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\RefactoringOperationBase.cs,DoOperation,The length of the statement  "		// If we don't have a ContributorInput yet' call OnGetContributorInput method to get ContributorInput for this operation. " is 121.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,RefactoringOperationBase,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\RefactoringOperationBase.cs,DoOperation,The length of the statement  "		CommonVsUtilities.ShowMessageBoxEx (Resources.RefactorDialog_Title' errorMessage' MessageBoxButtons.OK' MessageBoxDefaultButton.Button1' MessageBoxIcon.Error); " is 159.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,RefactoringOperationBase,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\RefactoringOperationBase.cs,ApplyChangesToOneFile,The length of the statement  "			var highlight = ((textChangeToHighlight != null) && (change.StartLine == textChangeToHighlight.StartLine) && (change.StartColumn == textChangeToHighlight.StartColumn)); " is 168.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,RefactoringOperationBase,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\RefactoringOperationBase.cs,CreateMarker,The length of the statement  "	var result = textLines.CreateLineMarker (highlight ? (int)MARKERTYPE2.MARKER_REFACTORING_FIELD : (int)MARKERTYPE2.MARKER_REFACTORING_DEPFIELD' resultSpan.iStartLine' resultSpan.iStartIndex' resultSpan.iEndLine' resultSpan.iEndIndex' null' textMarker); " is 251.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,RefactoringOperationBase,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\RefactoringOperationBase.cs,OnError,The length of the statement  "	CommonVsUtilities.ShowMessageBoxEx (Resources.ErrorDialog_Title' errorMessage' MessageBoxButtons.OK' MessageBoxDefaultButton.Button1' MessageBoxIcon.Error); " is 156.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,TextChangeProposal,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\TextChangeProposal.cs,Equals,The length of the statement  "			isEqual = (StartLine == other.StartLine && StartColumn == other.StartColumn && string.Equals (FileName' other.FileName' StringComparison.OrdinalIgnoreCase) && string.Equals (ProjectName' other.ProjectName' StringComparison.OrdinalIgnoreCase)); " is 243.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,VsLangTextChangeProposal,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\VsLangTextChangeProposal.cs,Equals,The length of the statement  "			isEqual = (IsRootChange == other.IsRootChange && string.CompareOrdinal (ObjectDefinitionFullName' other.ObjectDefinitionFullName) == 0); " is 136.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnHandleCreated,The length of the statement  "		_button.FlatAppearance.MouseDownBackColor = VSColorTheme.GetThemedColor (EnvironmentColors.ComboBoxButtonMouseDownBackgroundColorKey); " is 134.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnHandleCreated,The length of the statement  "		_button.FlatAppearance.MouseOverBackColor = VSColorTheme.GetThemedColor (EnvironmentColors.ComboBoxButtonMouseOverBackgroundColorKey); " is 134.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnLayout,The length of the statement  "		// Part of Bug 17449 (Currituck). Button width setting removed here to match VS guidelines' use SystemInformation.VerticalScrollBarArrowHeight instead. " is 151.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,BitmapFromImageReplaceColor,The length of the statement  "			g.DrawImage (original' new Rectangle (0' 0' original.Width' original.Height)' 0' 0' original.Width' original.Height' GraphicsUnit.Pixel' attrs' null' IntPtr.Zero); " is 163.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,MouseHooker,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,HookMouse,The length of the statement  "		_mouseHookHandle = NativeMethods.SetWindowsHookEx (NativeMethods.WH_MOUSE' hook' NativeMethods.NullHandleRef' NativeMethods.GetCurrentThreadId ()); " is 147.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,MouseHooker,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ProcessMouseDown,The length of the statement  "	if (hWndAtPoint != handle && !_control.Contains (ctrlAtPoint) && !TypeEditorHost.HandleContains (_control.Handle' handle)) { " is 124.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,GetSizeGripGlyph,The length of the statement  "			// the +1 is because things at (0'0) stay at (0'0) since [0 * -1 = 0] so we want to get them over to the other side too. " is 120.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,GetSizeGripGlyph,The length of the statement  "			// resizeUp causes the image to also be mirrored vertically so the grip can be used as a top-left grip instead of bottom-left. " is 126.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnCurrentControlResize,The length of the statement  "		var newSize = new Size (2 * DropDownHolderBorder + CurrentControl.Width' 2 * DropDownHolderBorder + CurrentControl.Height); " is 123.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,SetComponent,The length of the statement  "				// UNDONE: This is bizarre. But if we don't double the height adjustment' we lose that much each time the control is shown " is 122.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,WndProc,The length of the statement  "			if (Visible && NativeMethods.UnsignedLOWORD (m.WParam) == NativeMethods.WA_INACTIVE && (activatedControl == null || (!Contains (activatedControl) && !TypeEditorHost.HandleContains (Handle' m.LParam)))) { " is 203.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHostTextBox,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ProcessCmdKey,The length of the statement  "		if (((IVirtualTreeInPlaceControlDefer)_dropDownParent).Dirty && ((keyData & Keys.Control) != 0) && ((keyData & Keys.Shift) == 0) && ((keyData & Keys.Alt) == 0)) { " is 162.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHostListBox,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnEditKeyPress,The length of the statement  "				if (currentString.Length <= itemText.Length && String.Compare (itemText' 0' currentString' 0' currentString.Length' true' CultureInfo.CurrentUICulture) == 0) { " is 159.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHostListBox,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnTextChanged,The length of the statement  "	if (_listBox.Items.Count > 0 && (_listBox.SelectedIndex == -1 || String.Compare (_listBox.Items [_listBox.SelectedIndex].ToString ()' Text' true' CultureInfo.CurrentUICulture) != 0)) { " is 184.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ColumnItemEnumerator,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ColumnItemEnumerator.cs,Cycle,The length of the statement  "	// swap myEndRow and myLimitRow.  Need to store the old value of myEndRow somewhere so that we can put it back upon Reset(). " is 124.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ColumnPermutation,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ColumnPermutation.cs,GetColumnExpansion,The length of the statement  "	return new BlankExpansionData (VirtualTreeConstant.NullIndex' firstPermutedColumn' VirtualTreeConstant.NullIndex' lastPermutedColumn' anchorColumn); " is 148.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DisplayDataChangedData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\DisplayDataChangedData.cs,Compare,The length of the statement  "	return operand1.myChanges == operand2.myChanges && operand1.myBranch == operand2.myBranch && operand1.myColumn == operand2.myColumn && operand1.myCount == operand2.myCount && operand1.myStartRow == operand2.myStartRow; " is 218.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,BlankExpansionData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ExpansionToggle.cs,Compare,The length of the statement  "	return operand1.myLeftColumn == operand2.myLeftColumn && operand1.myTopRow == operand2.myTopRow && operand1.myRightColumn == operand2.myRightColumn && operand1.myBottomRow == operand2.myBottomRow && operand1.myAnchorColumn == operand2.myAnchorColumn; " is 250.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,LocateObjectData,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\LocateObjectData.cs,Compare,The length of the statement  "	return operand1.myColumn == operand2.myColumn && operand1.myRow == operand2.myRow && operand1.myOptions == operand2.myOptions; " is 126.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,PositionTracker,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\PositionTracker.cs,Compare,The length of the statement  "	return operand1.myColumn == operand2.myColumn && operand1.myStartRow == operand2.myStartRow && operand1.myEndRow == operand2.myEndRow && operand1.myUserData == operand2.myUserData; " is 180.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ActivationStylesFromBranchFeatures,The length of the statement  "	return (VirtualTreeLabelEditActivationStyles)(((int)features & BranchFeaturesToActivationStyleMask) >> BranchFeaturesToActivationStyleShift); " is 141.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,BranchFeaturesFromActivationStyles,The length of the statement  "	return (BranchFeatures)(((int)activationStyles << BranchFeaturesToActivationStyleShift) & BranchFeaturesToActivationStyleMask); " is 127.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,TrackCell,The length of the statement  "	return myRootNode.TrackCell (absRow' ref column' ref parentRowOffset' ref affectedSubItemColumns' ref lastSubItem' ref singleColumnSubItemAdjust); " is 146.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,TrackCell,The length of the statement  "	return myRootNode.TrackCell (absRow' ref column' ref parentRowOffset' ref affectedSubItemColumns' ref lastSubItem' ref singleColumnSubItemAdjust); " is 146.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,TrackCell,The length of the statement  "	return myRootNode.TrackCell (absRow' ref column' ref parentRowOffset' ref affectedSubItemColumns' ref lastSubItem' ref singleColumnSubItemAdjust); " is 146.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,TrackCell,The length of the statement  "	return myRootNode.TrackCell (absRow' ref column' ref parentRowOffset' ref affectedSubItemColumns' ref lastSubItem' ref singleColumnSubItemAdjust); " is 146.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,TrackCell,The length of the statement  "	return myRootNode.TrackCell (absRow' ref column' ref parentRowOffset' ref affectedSubItemColumns' ref lastSubItem' ref singleColumnSubItemAdjust); " is 146.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,OnBranchModification,The length of the statement  "		tree.DisplayDataChanged (new DisplayDataChangedData (displayChange.Changes' displayChange.Branch' displayChange.Index' displayChange.Column' displayChange.Count)); " is 163.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,OnBranchModification,The length of the statement  "		tree.ShiftBranchLevels (new ShiftBranchLevelsData (change.Branch' levelChange.RemoveLevels' levelChange.InsertLevels' levelChange.Depth' levelChange.ReplacementBranch' levelChange.BranchTester' change.Index' change.Count' levelChange.NewCount)); " is 245.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DisplayDataChanged,The length of the statement  "						OnDisplayDataChanged (this' new DisplayDataChangedEventArgs (this' changes' prevAbsIndex - reportCount + 1' coordinate.Column + column' reportCount)); " is 150.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DisplayDataChanged,The length of the statement  "						singleView.myOnDisplayDataChanged (singleTree' new DisplayDataChangedEventArgs (singleTree' changes' prevAbsIndexSingleColumn - reportCountSingleColumn + 1' 0' reportCountSingleColumn)); " is 186.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DisplayDataChanged,The length of the statement  "			OnDisplayDataChanged (this' new DisplayDataChangedEventArgs (this' changes' prevAbsIndex - reportCount + 1' coordinate.Column + column' reportCount)); " is 150.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DisplayDataChanged,The length of the statement  "			singleView.myOnDisplayDataChanged (singleTree' new DisplayDataChangedEventArgs (singleTree' changes' prevAbsIndexSingleColumn - reportCountSingleColumn + 1' 0' reportCountSingleColumn)); " is 186.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DoRealignNotification,The length of the statement  "				ItemCountChanged (this' new ItemCountChangedEventArgs (this' coord.Row' coord.Column' -startFullExpansionCount' coord.Row' 0' null' false)); " is 140.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DoRealignNotification,The length of the statement  "				singleView.myItemCountChanged (singleTree' new ItemCountChangedEventArgs (singleTree' singleColumnAbsIndex' 0' -startFullCount' singleColumnAbsIndex' 0' null' false)); " is 167.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DoRealignNotification,The length of the statement  "				ItemCountChanged (this' new ItemCountChangedEventArgs (this' coord.Row' coord.Column' fullExpansionCount' coord.Row' 0' null' false)); " is 134.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DoRealignNotification,The length of the statement  "				singleView.myItemCountChanged (singleTree' new ItemCountChangedEventArgs (singleTree' singleColumnAbsIndex' 0' fullCount' singleColumnAbsIndex' 0' null' false)); " is 161.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,InsertItems,The length of the statement  "			ChangeFullCountRecursive (tn' count' 0/*UNDONE_MC' also need to expand initial complex sub items for newly inserted items*/); " is 125.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,InsertItems,The length of the statement  "			if ((count != 0) && ((ItemCountChanged != null) || (GetStateFlag (TreeStateFlags.FireSingleColumnItemCountChanged) && 0 == COLUMN_ZERO))) { " is 139.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,InsertItems,The length of the statement  "						ItemCountChanged (this' new ItemCountChangedEventArgs (this' coord.Row - 1' coord.Column' count' coord.Row - 1' 0' null' false)); " is 129.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,InsertItems,The length of the statement  "					if (singleColumnAbsIndex != VirtualTreeConstant.NullIndex && GetStateFlag (TreeStateFlags.FireSingleColumnItemCountChanged)) { " is 126.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,InsertItems,The length of the statement  "						(singleTree as SingleColumnView).myItemCountChanged (singleTree' new ItemCountChangedEventArgs (singleTree' singleColumnAbsIndex' 0' count' singleColumnAbsIndex' 0' null' false)); " is 179.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DeleteItems,The length of the statement  "							OnDisplayDataChanged (this' new DisplayDataChangedEventArgs (this' VirtualTreeDisplayDataChanges.All' absIndex' -1' killCount)); " is 128.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DeleteItems,The length of the statement  "						ItemCountChanged (this' new ItemCountChangedEventArgs (this' absIndex - 1' notifyColumn' -killCount' absIndex - 1' 0' null' false)); " is 132.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DeleteItems,The length of the statement  "					(singleTree as SingleColumnView).myItemCountChanged (singleTree' new ItemCountChangedEventArgs (singleTree' singleColumnAbsIndex - 1' 0' -killCount' singleColumnAbsIndex - 1' 0' null' false)); " is 192.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,MoveItem,The length of the statement  "					ItemMoved (this' new ItemMovedEventArgs (this' notifyColumn' absRowAfter + rowAfterSubItemGain' absRowUntil + rowUntilSubItemGain' 1 + (tnLeading.Expanded ? tnLeading.TotalCount : tnLeading.ImmedSubItemGain)' tn.MultiColumn)); " is 226.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,MoveItem,The length of the statement  "					singleView.myItemMoved (singleTree' new ItemMovedEventArgs (singleTree' 0' absRowAfter - singleColumnSubItemAdjust' absRowUntil - singleColumnSubItemAdjust' 1 + (tnLeading.Expanded ? tnLeading.FullCount : 0)' false)); " is 217.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,MoveItem,The length of the statement  "					ItemMoved (this' new ItemMovedEventArgs (this' notifyColumn' absRowAfter + rowAfterSubItemGain' absRowUntil + rowUntilSubItemGain' 1' tn.MultiColumn)); " is 151.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,MoveItem,The length of the statement  "					singleView.myItemMoved (singleTree' new ItemMovedEventArgs (singleTree' 0' absRowAfter - singleColumnSubItemAdjust' absRowUntil - singleColumnSubItemAdjust' 1' false)); " is 168.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,MoveItem,The length of the statement  "				ItemMoved (this' new ItemMovedEventArgs (this' notifyColumn' absRowUntil + rowUntilSubItemGain' absRowAfter + rowAfterSubItemGain' 1 + (tnChild.Expanded ? tnChild.TotalCount : tnChild.ImmedSubItemGain)' tn.MultiColumn)); " is 220.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,MoveItem,The length of the statement  "				singleView.myItemMoved (singleTree' new ItemMovedEventArgs (singleTree' 0' absRowUntil - singleColumnSubItemAdjust' absRowAfter - singleColumnSubItemAdjust' 1 + (tnChild.Expanded ? tnChild.FullCount : 0)' false)); " is 213.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,MoveItem,The length of the statement  "				ItemMoved (this' new ItemMovedEventArgs (this' notifyColumn' absRowUntil + rowUntilSubItemGain' absRowAfter + rowAfterSubItemGain' 1' tn.MultiColumn)); " is 151.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,MoveItem,The length of the statement  "				singleView.myItemMoved (singleTree' new ItemMovedEventArgs (singleTree' 0' absRowUntil - singleColumnSubItemAdjust' absRowAfter - singleColumnSubItemAdjust' 1' false)); " is 168.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ToggleExpansion,The length of the statement  "	ToggleExpansion (row' column' out allowRecursion' out singleColumnSubItemAdjust' out itemExpansionCount' out subItemExpansionCount' out rowChange' out blanksAboveChange' out subItemChanges); " is 190.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ToggleExpansion,The length of the statement  "		ItemCountChanged (this' new ItemCountChangedEventArgs (this' row' column' rowChange' row - 1' blanksAboveChange' subItemChanges' true)); " is 136.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ToggleExpansion,The length of the statement  "		(singleTree as SingleColumnView).myItemCountChanged (singleTree' new ItemCountChangedEventArgs (singleTree' row - singleColumnSubItemAdjust' 0' itemExpansionCount' row - singleColumnSubItemAdjust - 1' 0' null' true)); " is 217.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ColumnWidthOfRow,The length of the statement  "		if ((null != (childNode = parentNode.GetChildNode (pos.Index))) && (null != (sn = childNode.SubItemAtColumn (lastColumn))) && sn.RootNode.MultiColumn)// Note that only the last column is allowed to be multicolumn' so this will eliminate jaggeds with no extra checking " is 267.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetBlankExpansion,The length of the statement  "		var nativeData = GetBlankExpansion (row' (permutedColumns.AnchorColumn == VirtualTreeConstant.NullIndex) ? 0 : columnPermutation.GetNativeColumn (permutedColumns.AnchorColumn)' null); " is 183.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetBlankExpansion,The length of the statement  "		return new BlankExpansionData (nativeData.TopRow' permutedColumns.LeftColumn' nativeData.BottomRow' permutedColumns.RightColumn' permutedColumns.AnchorColumn); " is 159.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetSubItemCount,The length of the statement  "				throw new ArgumentOutOfRangeException ("column"' VirtualTreeStrings.GetString (VirtualTreeStrings.GetSubItemCountExceptionDesc)); " is 129.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetDescendantItemCount,The length of the statement  "			throw new ArgumentOutOfRangeException ("column"' VirtualTreeStrings.GetString (VirtualTreeStrings.ColumnOutOfRangeException)); " is 126.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetExpandedBranch,The length of the statement  "				throw new ArgumentOutOfRangeException ("column"' VirtualTreeStrings.GetString (VirtualTreeStrings.ColumnOutOfRangeException)); " is 126.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,NotifyStateChange,The length of the statement  "		(singleTree as SingleColumnView).myStateToggled (singleTree' new ToggleStateEventArgs (row - singleColumnSubItemAdjust' 0' stateRefreshOptions)); " is 145.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,SynchronizeState,The length of the statement  "				if (!(itemsToSynchronize.Branch == matchBranch && itemsToSynchronize.RowInBranch == matchRow && itemsToSynchronize.ColumnInBranch == matchColumn)) { " is 148.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,SynchronizeState,The length of the statement  "				if (!(itemsToSynchronize.Branch == matchBranch && itemsToSynchronize.RowInBranch == matchRow && itemsToSynchronize.ColumnInBranch == matchColumn)) { " is 148.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetOffsetFromParent,The length of the statement  "			throw new ArgumentOutOfRangeException ("column"' VirtualTreeStrings.GetString (VirtualTreeStrings.ColumnOutOfRangeException)); " is 126.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,EnumerateColumnItems,The length of the statement  "	return new ColumnItemEnumeratorImpl (this' column' columnPermutation' returnBlankAnchors' rowFilter' markExcludedFilterItems); " is 126.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,EnumOrderedListItems,The length of the statement  "					var expansion = permutation.GetColumnExpansion (permutation.GetPermutedColumn (relativeColumn)' columnCount - 1/*UNDONE_MC: Column count local' not global' relativeColumn local' not global*/); " is 192.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,SetRedraw,The length of the statement  "		Debug.Assert (!GetStateFlag (TreeStateFlags.TurnOffSingleColumnRedraw)' "Don't call Redraw = true if TurnOffRedraw is set"); " is 124.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RemoveBranch,The length of the statement  "	var enableSingleColumnEvent = GetStateFlag (TreeStateFlags.FireSingleColumnItemCountChanged) | GetStateFlag (TreeStateFlags.FireSingleColumnOnDisplayDataChanged); " is 162.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RemoveBranch,The length of the statement  "						OnDisplayDataChanged (this' new DisplayDataChangedEventArgs (this' VirtualTreeDisplayDataChanges.VisibleElements' absIndex' notifyColumn' 1)); " is 142.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RemoveBranch,The length of the statement  "					ItemCountChanged (this' new ItemCountChangedEventArgs (this' absIndex' notifyColumn' -killCount - subItemKillCount' absIndex' 0' null' true)); " is 142.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RemoveBranch,The length of the statement  "						(singleTree as SingleColumnView).myOnDisplayDataChanged (singleTree' new DisplayDataChangedEventArgs (singleTree' VirtualTreeDisplayDataChanges.VisibleElements' singleColumnAbsIndex' 0' 1)); " is 190.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RemoveBranch,The length of the statement  "					(singleTree as SingleColumnView).myItemCountChanged (singleTree' new ItemCountChangedEventArgs (singleTree' singleColumnAbsIndex' 0' -killCount' singleColumnAbsIndex' 0' null' true)); " is 183.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,CreateTreeNode,The length of the statement  "			retVal = isMultiColumn ? new TREENODE_Multi_Tracked_Updatable () : (supportMultiColumn ? (multiColumnParent ? (new TREENODE_Complex_Tracked_Updatable ()) as TREENODE : new TREENODE_Single_Tracked_Updatable ()) : new TREENODE_Tracked_Updatable ()); " is 247.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,CreateTreeNode,The length of the statement  "			retVal = isMultiColumn ? new TREENODE_Multi_Tracked () : (supportMultiColumn ? (multiColumnParent ? (new TREENODE_Complex_Tracked ()) as TREENODE : new TREENODE_Single_Tracked ()) : new TREENODE_Tracked ()); " is 207.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,CreateTreeNode,The length of the statement  "		retVal = isMultiColumn ? new TREENODE_Multi_Updatable () : (supportMultiColumn ? (multiColumnParent ? (new TREENODE_Complex_Updatable ()) as TREENODE : new TREENODE_Single_Updatable ()) : new TREENODE_Updatable ()); " is 215.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,CreateTreeNode,The length of the statement  "		retVal = isMultiColumn ? new TREENODE_Multi () : (supportMultiColumn ? (multiColumnParent ? ((startNode == null) ? new TREENODE_Complex () : startNode) : new TREENODE_Single ()) : new TREENODE ()); " is 197.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandTreeNode,The length of the statement  "	return ExpandTreeNode (parentNode' startNode' row' column' column == 0 ? ObjectStyle.ExpandedBranch : ObjectStyle.SubItemExpansion' insertNewChild' out options' out itemIncr' out subItemIncr); " is 192.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandTreeNode,The length of the statement  "	return ExpandTreeNode (parentNode' startNode' row' column' column == 0 ? ObjectStyle.ExpandedBranch : ObjectStyle.SubItemExpansion' insertNewChild' out options' out itemIncr' out requireInitialSubItemExpansion); " is 211.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandTreeNode,The length of the statement  "	var retVal = ExpandTreeNode (parentNode' startNode' row' column' branchStyle' insertNewChild' out expansionOptions' out itemIncr' out requireInitialSubItemExpansion); " is 166.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandTreeNode,The length of the statement  "	Debug.Assert (branchStyle == ObjectStyle.SubItemRootBranch || parentNode.Branch.IsExpandable (row' column)' "GetExpandable should be called before this is attempted"); " is 167.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandTreeNode,The length of the statement  "		tnCur = CreateTreeNode (startNode' newBranch' this' allowMultiColumn' parentNode.InSubItemColumn' parentNode.MultiColumn); " is 122.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ExpandInitialComplexSubItems,The length of the statement  "					tnSubItem = ExpandTreeNode (tn' null' iRow' complexColumns [iCol]' ObjectStyle.SubItemRootBranch' false' out options' out itemIncr' out subItemIncr); " is 149.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,UpdateCellStyle,The length of the statement  "				tnNewSubItem = ExpandTreeNode (tnParent' null' row' column' ObjectStyle.SubItemRootBranch' false' out options' out itemIncr' out subItemIncr); " is 142.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,UpdateCellStyle,The length of the statement  "						ItemCountChanged (this' new ItemCountChangedEventArgs (this' absRow' absColumn' rowIncr' absRow - 1' tnChild.ImmedSubItemGain' subItemChanges' true)); " is 150.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ToggleExpansion,The length of the statement  "		tnCur = ExpandTreeNode (pos.ParentNode' tnUnexpandedSubItemAnchor' pos.Index' localColumn' !subItemExpansion' out itemExpansionCount' out subItemExpansionCount); " is 161.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ToggleExpansion,The length of the statement  "		ChangeFullCountRecursive (tnRecurseOn' itemExpansionCount' subItemExpansionCount' null' ref affectedColumns' out rowChange' out subItemChanges); " is 144.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ChangeFullCountRecursive,The length of the statement  "						subItemChanges [affectedColumnsCount] = new SubItemColumnAdjustment (subItemRoot.FirstSubItem.ColumnOfRootNode (tn)' subItemRoot.Parent.GetColumnCount (subItemRoot.Index) - 1' totalIncr' trailingItems' itemsBelowAnchor); " is 220.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,LocateObject,The length of the statement  "									var tnSubItem = ExpandTreeNode (tn' null' row' column' ObjectStyle.SubItemExpansion' false' out expandOptions' out changeCount' out subItemChangeCount); " is 152.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,LocateObject,The length of the statement  "			TrackCell (firstUnexpandedRow' ref adjustColumn' ref parentRowOffset' ref affectedSubItemColumns' ref singleColumnSubItemAdjust); " is 129.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,LocateObject,The length of the statement  "			ChangeFullCountRecursive (tnFirstUnexpanded' totalChangeCount' totalSubItemChangeCount' null' ref affectedSubItemColumns' out rowIncr' out subItemChanges); " is 155.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,LocateObject,The length of the statement  "			ItemCountChanged (this' new ItemCountChangedEventArgs (this' firstUnexpandedRow' firstUnexpandedColumnOffset' rowIncr' firstUnexpandedRow - 1' tnFirstUnexpanded.ImmedSubItemGain' subItemChanges' true)); " is 202.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,LocateObject,The length of the statement  "			(singleTree as SingleColumnView).myItemCountChanged (singleTree' new ItemCountChangedEventArgs (singleTree' firstUnexpandedRow - firstUnexpandedRowSubItemAdjust' 0' totalChangeCount' firstUnexpandedRow - firstUnexpandedRowSubItemAdjust - 1' 0' null' true)); " is 257.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,ShiftBranchLevels,The length of the statement  "	ShiftBranchLevels (shiftData.Branch' shiftData.RemoveLevels' shiftData.InsertLevels' shiftData.Depth' shiftData.ReplacementBranch' shiftData.BranchTester' shiftData.StartIndex' shiftData.Count' shiftData.NewCount); " is 214.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The length of the statement  "				newBranch = tnParent.Parent.Branch.GetObject (tnParent.Index' tnParent.FirstSubItem.ColumnOfRootNode (tn)' tn.ComplexSubItem ? ObjectStyle.SubItemRootBranch : ObjectStyle.SubItemExpansion' ref options) as IBranch; " is 213.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The length of the statement  "				RealignTreeNodeLevelShift (tnChild' removeLevels' insertLevels' depth + depthAdjustment - 1' branchTester' -1' -1' -1' false); " is 126.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The length of the statement  "								RealignTreeNodeLevelShift (tnChild' removeLevels + 1' insertLevels' depthAdjustment - 1' branchTester' -1' -1' -1' false); " is 122.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The length of the statement  "								CollectChildBranches (ref tnChild' branchTester' ref tnAttach' ref tnDummyHead' ref tnAttachInKillZone' ref tnDummyHeadInKillZone' ref detachedTrackers' removeLevels' true); " is 173.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The length of the statement  "						CollectChildBranches (ref tnChild' branchTester' ref tnAttach' ref tnDummyHead' ref tnAttachInKillZone' ref tnDummyHeadInKillZone' ref detachedTrackers' removeLevels' true); " is 173.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The length of the statement  "									locateData = tnCurParent.Branch.LocateObject (tnLocate.Branch' tnLocate.ComplexSubItem ? ObjectStyle.SubItemRootBranch : ObjectStyle.SubItemExpansion' 0); " is 154.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The length of the statement  "									Debug.Assert ((BranchLocationAction)locateData.Options == BranchLocationAction.DiscardBranch || tnChild.FirstSubItem.ColumnOfRootNode (tnLocate) == locateData.Column); " is 167.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The length of the statement  "											tnNextParent = FindIndexedNode (attachIndex' (tnLastUntouched == null) ? tn.FirstChild : tnLastUntouched.NextSibling' ref tnLastChildPrimary); " is 142.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The length of the statement  "												tnNextParent = ExpandTreeNode (tnCurParent' null' attachIndex' 0' false' out expansionCount' out dummyRequireSubItemExpansion); " is 127.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The length of the statement  "											tnNextParent = ExpandTreeNode (tnCurParent' null' attachIndex' 0' false' out expansionCount' out dummyRequireSubItemExpansion); " is 127.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The length of the statement  "			detachedTrackers.QueryReattachObjects (this' tn' (removeLevels == 0) ? insertLevels : insertLevels - 1' out reattachChangeCount' out reattachSubItemChangeCount); " is 161.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,CollectChildBranches,The length of the statement  "			CollectChildBranches (ref tnChild' branchTester' ref tnAttach' ref tnDummyHead' ref tnAttachInKillZone' ref tnDummyHeadInKillZone' ref detachedTrackers' levelShift' parentExpanded); " is 181.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeItemInfo,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTreeItemInfo.cs,ToString,The length of the statement  "	return string.Format (CultureInfo.CurrentCulture' "Level={0}' Row={1}' Column={2}' Flags={3}' Branch={4}"' Level' Row' Column' myFlags' Branch); " is 144.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeItemInfo,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTreeItemInfo.cs,Compare,The length of the statement  "	return operand1.myBranch == operand2.myBranch && operand1.myColumn == operand2.myColumn && operand1.myRow == operand2.myRow && operand1.myLevel == operand2.myLevel && operand1.myFlags == operand2.myFlags; " is 204.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHeaderControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HeaderControl.cs,SetAppearanceFields,The length of the statement  "	if ((style & ~(VirtualTreeColumnHeaderStyles.DragDisabled | VirtualTreeColumnHeaderStyles.ColumnPositionLocked)) != 0) { " is 120.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHeaderControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HeaderControl.cs,WndProc,The length of the statement  "				myAssociatedControl.OnRawColumnHeaderEvent (IndexToOrder (index)' VirtualTreeColumnHeaderClickStyle.ContextMenu' notifyPoint); " is 126.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHeaderControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HeaderControl.cs,WndProc,The length of the statement  "					if (!BeginTrackingSplitter (IndexToOrder (Marshal.ReadInt32 (m.LParam' NativeMethods.NMHEADER.iItemOffset))' NativeMethods.GetMessagePos ())) { " is 143.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHeaderControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HeaderControl.cs,WndProc,The length of the statement  "					myAssociatedControl.OnRawColumnHeaderEvent (IndexToOrder (Marshal.ReadInt32 (m.LParam' NativeMethods.NMHEADER.iItemOffset))' style' NativeMethods.GetMessagePos ()); " is 164.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHeaderControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HeaderControl.cs,WmReflectDrawItem,The length of the statement  "	myAssociatedControl.OnDrawColumnHeaderItem (new DrawItemEventArgs (g' Font' bounds' dis.itemId' (DrawItemState)dis.itemState' ForeColor' BackColor)); " is 149.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio,VSFileFinder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSFileFinder.cs,ExistInProject,The length of the statement  "		// use IVsProject4 if available - it is much faster than the other other mechanism' but all projects may not implement it " is 121.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,GetDocData,The length of the statement  "		if (ErrorHandler.Succeeded (rdtService.FindAndLockDocument ((uint)lockFlags' documentPath' out hierarchy' out itemId' out docDataPtr' out docCookie)) && docDataPtr != IntPtr.Zero) { " is 181.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,GetProjectForDocument,The length of the statement  "	GetProjectAndFileInfoForPath (path' serviceProvider' out projectHierarchy' out project' out itemId' out isDocInProject); " is 120.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,GetProjectAndFileInfoForPath,The length of the statement  "					GetProjectAndFileInfoForPath (vsProject' originalPath' out projectHierarchy' out project' out fileItemId' out isDocumentInProject); " is 131.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,GetProjectAndFileInfoForPath,The length of the statement  "		// try not to create the Misc files project externally - in some rare cases it has caused Access violoations in VS (e.g.' Dev10 Bug 864725).   " is 140.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,GetProjectAndFileInfoForPath,The length of the statement  "			GetProjectAndFileInfoForPath (miscFilesProject' originalPath' out projectHierarchy' out project' out fileItemId' out isDocumentInProject); " is 138.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,GetProjectAndFileInfoForPath,The length of the statement  "	GetProjectAndFileInfoForPath (originalPath' null' solution' out projectHierarchy' out project' out fileItemId' out isDocumentInProject); " is 136.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,GetProjectAndFileInfoForPath,The length of the statement  "	GetProjectAndFileInfoForPath (originalPath' serviceProvider' solution' out projectHierarchy' out project' out fileItemId' out isDocumentInProject); " is 147.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio,VSHelpers,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSHelpers.cs,GetMiscellaneousProject,The length of the statement  "	var miscFiles = Microsoft.VisualStudio.Shell.Package.GetGlobalService (typeof(SVsExternalFilesManager)) as IVsExternalFilesManager; " is 131.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,SetItemForActiveFrame,The length of the statement  "	NativeMethods.ThrowOnFailure (_sel.GetCurrentElementValue ((uint)VSConstants.VSSELELEMID.SEID_DocumentFrame' out pvarValue)); " is 125.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,UpdateToolWindowsAndCmdsForActiveFrame,The length of the statement  "	NativeMethods.ThrowOnFailure (_sel.GetCurrentElementValue ((uint)VSConstants.VSSELELEMID.SEID_DocumentFrame' out pvarValue)); " is 125.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnAfterFileNameChanged,The length of the statement  "		if (oldUri != null && _package != null && _package.ModelManager != null && _package.ModelManager.GetArtifact (oldUri) != null) { " is 128.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,ReloadArtifactIfNecessary,The length of the statement  "	if (frameWrapper != null && frameWrapper.Uri != null && frameWrapper.IsDocumentOpen (_package))// don't need to reload if the document isn't open at all " is 152.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnBeforeLastDocumentUnlock,The length of the statement  "				var hr = IVsRDT.GetDocumentInfo (docCookie' out pgrfRDTFlags' out pdwReadLocks' out pdwEditLocks' out pbstrsMrDocument' out pHier' out ItemID' out ppunkDocData); " is 161.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnBeforeLastDocumentUnlock,The length of the statement  "				if (hr == VSConstants.S_OK && pHier != null && ItemID != VSConstants.VSITEMID_NIL && ItemID != VSConstants.VSITEMID_ROOT && ItemID != VSConstants.VSITEMID_SELECTION) { " is 167.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnBeforeLastDocumentUnlock,The length of the statement  "					if (uri != null && _package != null && _package.ModelManager != null && _package.ModelManager.GetArtifact (uri) != null) { " is 122.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnElementValueChanged,The length of the statement  "				// On solution closing' don't set the state of Command UI context because this might cause unhandled exception in VS (tracked by 556145). " is 137.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnElementValueChanged,The length of the statement  "					NativeMethods.ThrowOnFailure (solution.GetProperty ((int)__VSPROPID2.VSPROPID_IsSolutionClosing' out isSolutionClosing)); " is 121.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,EditingContextManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\EditingContextManager.cs,GetCurrentUri,The length of the statement  "	Debug.Assert (artifactService != null && artifactService.Artifact != null' "There is no artifact service/artifact tied to this editing context!"); " is 146.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,ExplorerWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\ExplorerWindow.cs,OnContentGotFocus,The length of the statement  "	if (_currentExplorerInfo != null && _currentExplorerInfo._explorerFrame != null && _currentExplorerInfo._lastFocusedElement != null) { " is 134.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,ExplorerWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\ExplorerWindow.cs,DefineSearchCommands,The length of the statement  "	DefineCmd (NativeMethods.GUID_VSStandardCommandSet97' cmdidFindNext' frame => frame.SelectNextSearchResult.Execute (null)' frame => frame.CanGotoNextResult); " is 157.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,ExplorerWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\ExplorerWindow.cs,DefineSearchCommands,The length of the statement  "	DefineCmd (NativeMethods.GUID_VSStandardCommandSet97' cmdidFindPrev' frame => frame.SelectPreviousSearchResult.Execute (null)' frame => frame.CanGotoPreviousResult); " is 165.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,ExplorerWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\ExplorerWindow.cs,OnShow,The length of the statement  "		Debug.WriteLine ("Exception in ExplorerWindow.OnShow(): " + e.Message + " Inner Exception: " + e.InnerException.Message); " is 121.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,ExplorerWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\ExplorerWindow.cs,AddFrameEvents,The length of the statement  "	Debug.Assert (_currentExplorerInfo._explorerFrame != null' "In AddFrameEvents: _currentExplorerInfo._explorerFrame is null"); " is 125.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,ExplorerWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\ExplorerWindow.cs,AddFrameEvents,The length of the statement  "		//_currentExplorerInfo._explorerFrame.EFElementChanged += new EventHandler<EFElementChangedEventArgs>(OnEFElementChanged); " is 122.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,ExplorerWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\ExplorerWindow.cs,RemoveFrameEvents,The length of the statement  "	Debug.Assert (_currentExplorerInfo._explorerFrame != null' "In AddFrameEvents: _currentExplorerInfo._explorerFrame is null"); " is 125.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,ExplorerWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\ExplorerWindow.cs,RemoveFrameEvents,The length of the statement  "		//_currentExplorerInfo._explorerFrame.EFElementChanged -= new EventHandler<EFElementChangedEventArgs>(OnEFElementChanged); " is 122.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,ExplorerWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\ExplorerWindow.cs,OnShowContextMenu,The length of the statement  "			Debug.Fail ("Caught exception of type " + ex.GetType ().FullName + " with message " + ex.Message + ". Stack Trace: " + ex.StackTrace); " is 134.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,SelectionContainer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\SelectionContainer.cs,CountObjects,The length of the statement  "	if ((dwFlags & NativeMethods.ALL) == NativeMethods.ALL || (dwFlags & NativeMethods.SELECTED) == NativeMethods.SELECTED) { " is 121.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,SelectionContainer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\SelectionContainer.cs,GetObjects,The length of the statement  "	if ((dwFlags & NativeMethods.ALL) == NativeMethods.ALL || (dwFlags & NativeMethods.SELECTED) == NativeMethods.SELECTED) { " is 121.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,UriComparer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\UriComparer.cs,Equals,The length of the statement  "	return 0 == Uri.Compare (uri1' uri2' UriComponents.AbsoluteUri' UriFormat.UriEscaped' StringComparison.OrdinalIgnoreCase); " is 122.
Long Statement,Microsoft.Data.Entity.Design.VisualStudio.Package,UriComparer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\UriComparer.cs,GetHashCode,The length of the statement  "	return StringComparer.OrdinalIgnoreCase.GetHashCode (uri.GetComponents (UriComponents.AbsoluteUri' UriFormat.UriEscaped)); " is 122.
Long Statement,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,ImageToDiagram,The length of the statement  "		var s = DiagramClientView.DeviceToWorld (new Size ((int)(imagePoint.X / _imageScale)' (int)(imagePoint.Y / _imageScale))); " is 122.
Long Statement,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,SetViewLocation,The length of the statement  "		var scrollUnitLength = (double)typeof(DiagramClientView).GetProperty ("ScrollUnitLength"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue (DiagramClientView' new object[0]); " is 182.
Long Statement,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,InvalidateImage,The length of the statement  "		_imageScale = Math.Min ((double)maxImageSize.Width / deviceDiagramSize.Width' (double)maxImageSize.Height / deviceDiagramSize.Height); " is 134.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VisualStudio.UI,ProgressDialog,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\ProgressDialog.cs,ProgressDialog_Load,The length of the statement  "	Debug.Assert (backgroundWorker.IsBusy == false' "Should not attempt to start the background job when the backgroundWorker is already busy"); " is 140.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VisualStudio.UI,ProgressDialog,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\ProgressDialog.cs,backgroundWorker_RunWorkerCompleted,The length of the statement  "		sb.AppendLine (string.Format (CultureInfo.CurrentCulture' Resources.ProgressDialogBackgroundJobErrorMessage' _currentUserState.CurrentIteration' _currentUserState.NumberIterations' e.GetType ().FullName' e.Error.Message' e.Error.StackTrace)); " is 242.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VisualStudio.UI,ProgressDialog,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\ProgressDialog.cs,backgroundWorker_RunWorkerCompleted,The length of the statement  "			var message = string.Format (CultureInfo.CurrentCulture' Resources.ProgressDialogBackgroundJobInnerExceptionErrorMessage' inner.GetType ().FullName' inner.Message' inner.StackTrace); " is 182.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VisualStudio.UI,ProgressDialog,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\ProgressDialog.cs,backgroundWorker_RunWorkerCompleted,The length of the statement  "		var statusText = string.Format (CultureInfo.CurrentCulture' Resources.ProgressDialogBackgroundJobCancellationMessage' _currentUserState.CurrentIteration' _currentUserState.NumberIterations' _currentUserState.CurrentStatusMessage); " is 230.
Long Statement,Microsoft.Data.Tools.VSXmlDesignerBase.VisualStudio.UI,ProgressDialog,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\ProgressDialog.cs,closeInterrruptButton_Click,The length of the statement  "	if (closeInterrruptButton.Text.Equals (Resources.ProgressDialogCloseInterruptButtonInterruptText' StringComparison.CurrentCulture)) { " is 133.
Complex Conditional,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,CommitLabelEdit,The conditional expression  "row != _insertingIndex && (row < eltCount || (row == eltCount && eltCount == 0))"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindow.cs,PreProcessMessage,The conditional expression  "key == (int)Keys.Escape && (_treeControl.InLabelEdit || (_treeControl.HeaderControl != null && _treeControl.HeaderControl.AdjustingColumnHeader))"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,ProcessKey,The conditional expression  "(treeDirection == TreeNavigation.RightColumn && column < newColumn) || (treeDirection == TreeNavigation.LeftColumn && column > newColumn)"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,ProcessKey,The conditional expression  "branch != null && (result.BranchType == null || branchType == result.BranchType || branchType.IsSubclassOf (result.BranchType)) && ((branch.GetValueSupported (relIndex' column) & TreeGridDesignerValueSupportedStates.SupportsKeyboardNavigation) != 0 || (branch as IBranch).IsExpandable (relIndex' column))"  is complex.
Complex Conditional,Microsoft.Data.Tools.VSXmlDesignerBase.Common,CriticalException,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\CriticalException.cs,IsCriticalException,The conditional expression  "ex is NullReferenceException || ex is StackOverflowException || ex is OutOfMemoryException || ex is ThreadAbortException"  is complex.
Complex Conditional,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OpenDropDown,The conditional expression  "(value != null && !value.Equals (newValue)) || (value == null && newValue != null)"  is complex.
Complex Conditional,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,WndProc,The conditional expression  "Visible && NativeMethods.UnsignedLOWORD (m.WParam) == NativeMethods.WA_INACTIVE && (activatedControl == null || (!Contains (activatedControl) && !TypeEditorHost.HandleContains (Handle' m.LParam)))"  is complex.
Complex Conditional,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHostTextBox,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ProcessCmdKey,The conditional expression  "((IVirtualTreeInPlaceControlDefer)_dropDownParent).Dirty && ((keyData & Keys.Control) != 0) && ((keyData & Keys.Shift) == 0) && ((keyData & Keys.Alt) == 0)"  is complex.
Complex Conditional,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,InsertItems,The conditional expression  "(count != 0) && ((ItemCountChanged != null) || (GetStateFlag (TreeStateFlags.FireSingleColumnItemCountChanged) && 0 == COLUMN_ZERO))"  is complex.
Complex Conditional,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetNavigationTarget,The conditional expression  "localColumn == 0 && (pos.ParentAbsolute != -1 || (pos.ParentNode.SubItemRoot && !pos.ParentNode.ComplexSubItem))"  is complex.
Complex Conditional,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetNavigationTarget,The conditional expression  "(sourceColumn == 0) || (pos.ParentNode.ComplexSubItem && pos.Index == 0) || (localColumn > 0)"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnAfterFileNameChanged,The conditional expression  "oldUri != null && _package != null && _package.ModelManager != null && _package.ModelManager.GetArtifact (oldUri) != null"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnBeforeLastDocumentUnlock,The conditional expression  "hr == VSConstants.S_OK && pHier != null && ItemID != VSConstants.VSITEMID_NIL && ItemID != VSConstants.VSITEMID_ROOT && ItemID != VSConstants.VSITEMID_SELECTION"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnBeforeLastDocumentUnlock,The conditional expression  "uri != null && _package != null && _package.ModelManager != null && _package.ModelManager.GetArtifact (uri) != null"  is complex.
Empty Catch Block,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,FindAndLockDocument,The method has an empty catch block.
Empty Catch Block,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,FindAndLockDocument,The method has an empty catch block.
Empty Catch Block,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,GetTextLines,The method has an empty catch block.
Empty Catch Block,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,GetRdtCookie,The method has an empty catch block.
Empty Catch Block,Microsoft.Data.Tools.VSXmlDesignerBase.Common,RdtManager,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\RdtManager.cs,GetDocData,The method has an empty catch block.
Empty Catch Block,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewBuffer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewBuffer.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewBuffer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewBuffer.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewBuffer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewBuffer.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewBuffer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewBuffer.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewBuffer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewBuffer.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Microsoft.Data.Entity.Design.VisualStudio,VSEventBroadcaster,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\VSEventBroadcaster.cs,Dispose,The method has an empty catch block.
Empty Catch Block,Microsoft.Data.Entity.Design.VisualStudio.Package,DocumentFrameMgr,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\Package\DocumentFrameMgr.cs,OnBeforeLastDocumentUnlock,The method has an empty catch block.
Magic Number,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindow,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindow.cs,OnToolWindowCreate,The following statement contains a magic number: NativeMethods.SendMessage (_treeControl.Handle' NativeMethods.WM_UPDATEUISTATE' (NativeMethods.UIS_CLEAR | (NativeMethods.UISF_HIDEFOCUS << 16))' 0);  
Magic Number,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindowContainer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindowContainer.cs,TreeGridDesignerToolWindowContainer,The following statement contains a magic number: Width = 200;  
Magic Number,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindowContainer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindowContainer.cs,TreeGridDesignerToolWindowContainer,The following statement contains a magic number: Height = 200;  
Magic Number,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindowContainer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindowContainer.cs,TreeGridDesignerToolWindowContainer,The following statement contains a magic number: mainControl.Bounds = new Rectangle (1' 1' 198' 198);  
Magic Number,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindowContainer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindowContainer.cs,TreeGridDesignerToolWindowContainer,The following statement contains a magic number: mainControl.Bounds = new Rectangle (1' 1' 198' 198);  
Magic Number,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindowContainer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindowContainer.cs,TreeGridDesignerToolWindowContainer,The following statement contains a magic number: _watermark.Location = new Point (BORDER + 2' BORDER + 1);  
Magic Number,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindowContainer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindowContainer.cs,TreeGridDesignerToolWindowContainer,The following statement contains a magic number: _watermark.Size = new Size (Width - 2 * BORDER - 2' Height - 2 * BORDER - 1);  
Magic Number,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindowContainer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindowContainer.cs,TreeGridDesignerToolWindowContainer,The following statement contains a magic number: _watermark.Size = new Size (Width - 2 * BORDER - 2' Height - 2 * BORDER - 1);  
Magic Number,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerToolWindowContainer,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerToolWindowContainer.cs,TreeGridDesignerToolWindowContainer,The following statement contains a magic number: _watermark.Size = new Size (Width - 2 * BORDER - 2' Height - 2 * BORDER - 1);  
Magic Number,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,TreeGridDesignerTreeControl,The following statement contains a magic number: _columnTable = new HybridDictionary (5);  
Magic Number,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,FindAttributes,The following statement contains a magic number: if (_testAggregateBranch && attributeType == typeof(TreeGridDesignerRootBranchAttribute)) {  	// clone branch attributes to allow AggregateBranch testing  	var testAttributes = new object[attributes.Length * 2];  	attributes.CopyTo (testAttributes' 0);  	attributes.CopyTo (testAttributes' attributes.Length);  	return testAttributes;  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesList,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesList.cs,GetDisplayData,The following statement contains a magic number: if (previewNode.ShowCheckBox) {  	displayData.State = displayData.State | ((uint)previewNode.CheckState) << 12;  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesList,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesList.cs,GetDisplayData,The following statement contains a magic number: displayData.State = displayData.State | ((uint)previewNode.CheckState) << 12;  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,CreateArrowBitmap,The following statement contains a magic number: try {  	icon = new Icon (typeof(TypeEditorHost)' "arrow.ico");  	using (var original = icon.ToBitmap ()) {  		bitmap = BitmapFromImageReplaceColor (original);  	}  }  catch {  	bitmap = new Bitmap (16' 16);  	throw;  }  finally {  	if (icon != null) {  		icon.Dispose ();  	}  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,CreateArrowBitmap,The following statement contains a magic number: try {  	icon = new Icon (typeof(TypeEditorHost)' "arrow.ico");  	using (var original = icon.ToBitmap ()) {  		bitmap = BitmapFromImageReplaceColor (original);  	}  }  catch {  	bitmap = new Bitmap (16' 16);  	throw;  }  finally {  	if (icon != null) {  		icon.Dispose ();  	}  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,CreateArrowBitmap,The following statement contains a magic number: bitmap = new Bitmap (16' 16);  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,CreateArrowBitmap,The following statement contains a magic number: bitmap = new Bitmap (16' 16);  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,CreateDotDotDotBitmap,The following statement contains a magic number: try {  	icon = new Icon (typeof(TypeEditorHost)' "dotdotdot.ico");  	using (var original = icon.ToBitmap ()) {  		bitmap = BitmapFromImageReplaceColor (original);  	}  }  catch {  	bitmap = new Bitmap (16' 16);  	throw;  }  finally {  	if (icon != null) {  		icon.Dispose ();  	}  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,CreateDotDotDotBitmap,The following statement contains a magic number: try {  	icon = new Icon (typeof(TypeEditorHost)' "dotdotdot.ico");  	using (var original = icon.ToBitmap ()) {  		bitmap = BitmapFromImageReplaceColor (original);  	}  }  catch {  	bitmap = new Bitmap (16' 16);  	throw;  }  finally {  	if (icon != null) {  		icon.Dispose ();  	}  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,CreateDotDotDotBitmap,The following statement contains a magic number: bitmap = new Bitmap (16' 16);  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,CreateDotDotDotBitmap,The following statement contains a magic number: bitmap = new Bitmap (16' 16);  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ShowDialog,The following statement contains a magic number: if (dialog.StartPosition == FormStartPosition.CenterScreen) {  	Control topControl = this;  	if (topControl != null) {  		while (topControl.Parent != null) {  			topControl = topControl.Parent;  		}  		if (topControl.Size.Equals (dialog.Size)) {  			dialog.StartPosition = FormStartPosition.Manual;  			var location = topControl.Location;  			// CONSIDER what constant to get here?  			location.Offset (25' 25);  			dialog.Location = location;  		}  	}  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ShowDialog,The following statement contains a magic number: if (dialog.StartPosition == FormStartPosition.CenterScreen) {  	Control topControl = this;  	if (topControl != null) {  		while (topControl.Parent != null) {  			topControl = topControl.Parent;  		}  		if (topControl.Size.Equals (dialog.Size)) {  			dialog.StartPosition = FormStartPosition.Manual;  			var location = topControl.Location;  			// CONSIDER what constant to get here?  			location.Offset (25' 25);  			dialog.Location = location;  		}  	}  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ShowDialog,The following statement contains a magic number: if (topControl != null) {  	while (topControl.Parent != null) {  		topControl = topControl.Parent;  	}  	if (topControl.Size.Equals (dialog.Size)) {  		dialog.StartPosition = FormStartPosition.Manual;  		var location = topControl.Location;  		// CONSIDER what constant to get here?  		location.Offset (25' 25);  		dialog.Location = location;  	}  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ShowDialog,The following statement contains a magic number: if (topControl != null) {  	while (topControl.Parent != null) {  		topControl = topControl.Parent;  	}  	if (topControl.Size.Equals (dialog.Size)) {  		dialog.StartPosition = FormStartPosition.Manual;  		var location = topControl.Location;  		// CONSIDER what constant to get here?  		location.Offset (25' 25);  		dialog.Location = location;  	}  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ShowDialog,The following statement contains a magic number: if (topControl.Size.Equals (dialog.Size)) {  	dialog.StartPosition = FormStartPosition.Manual;  	var location = topControl.Location;  	// CONSIDER what constant to get here?  	location.Offset (25' 25);  	dialog.Location = location;  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ShowDialog,The following statement contains a magic number: if (topControl.Size.Equals (dialog.Size)) {  	dialog.StartPosition = FormStartPosition.Manual;  	var location = topControl.Location;  	// CONSIDER what constant to get here?  	location.Offset (25' 25);  	dialog.Location = location;  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ShowDialog,The following statement contains a magic number: location.Offset (25' 25);  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ShowDialog,The following statement contains a magic number: location.Offset (25' 25);  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,DoModalLoop,The following statement contains a magic number: while (Visible) {  	Application.DoEvents ();  	NativeMethods.MsgWaitForMultipleObjects (1' 0' true' 250' NativeMethods.QS_ALLINPUT);  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,DoModalLoop,The following statement contains a magic number: NativeMethods.MsgWaitForMultipleObjects (1' 0' true' 250' NativeMethods.QS_ALLINPUT);  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnCurrentControlResize,The following statement contains a magic number: if (CurrentControl != null && !_resizing && !CurrentControl.Disposing) {  	var oldWidth = Width;  	var newSize = new Size (2 * DropDownHolderBorder + CurrentControl.Width' 2 * DropDownHolderBorder + CurrentControl.Height);  	if (_resizable) {  		newSize.Height += SystemInformation.HorizontalScrollBarHeight;  	}  	try {  		_resizing = true;  		SuspendLayout ();  		Size = newSize;  	}  	finally {  		_resizing = false;  		ResumeLayout (false);  	}  	Left -= (Width - oldWidth);  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnCurrentControlResize,The following statement contains a magic number: if (CurrentControl != null && !_resizing && !CurrentControl.Disposing) {  	var oldWidth = Width;  	var newSize = new Size (2 * DropDownHolderBorder + CurrentControl.Width' 2 * DropDownHolderBorder + CurrentControl.Height);  	if (_resizable) {  		newSize.Height += SystemInformation.HorizontalScrollBarHeight;  	}  	try {  		_resizing = true;  		SuspendLayout ();  		Size = newSize;  	}  	finally {  		_resizing = false;  		ResumeLayout (false);  	}  	Left -= (Width - oldWidth);  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,SetComponent,The following statement contains a magic number: if (ctl != null) {  	var sz = new Size (2 * DropDownHolderBorder + ctl.Width' 2 * DropDownHolderBorder + ctl.Height);  	// set the size stuff.  	//  	try {  		SuspendLayout ();  		// if we're resizable' add the space for the widget. Make sure  		// this happens with layout off or you get the side effect of shrinking  		// the contained control.  		if (resizable) {  			var hscrollHeight = SystemInformation.HorizontalScrollBarHeight;  			sz.Height += hscrollHeight + hscrollHeight;  			// UNDONE: This is bizarre. But if we don't double the height adjustment' we lose that much each time the control is shown  			// we use dockpadding to save space to draw the widget.  			//  			if (ResizeUp) {  				DockPadding.Top = hscrollHeight;  			}  			else {  				DockPadding.Bottom = hscrollHeight;  			}  		}  		Size = sz;  		ctl.Dock = DockStyle.Fill;  		ctl.Visible = true;  		Controls.Add (ctl);  	}  	finally {  		ResumeLayout (true);  	}  	CurrentControl = ctl;  	// hook the resize event.  	//  	CurrentControl.Resize += OnCurrentControlResize;  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,SetComponent,The following statement contains a magic number: if (ctl != null) {  	var sz = new Size (2 * DropDownHolderBorder + ctl.Width' 2 * DropDownHolderBorder + ctl.Height);  	// set the size stuff.  	//  	try {  		SuspendLayout ();  		// if we're resizable' add the space for the widget. Make sure  		// this happens with layout off or you get the side effect of shrinking  		// the contained control.  		if (resizable) {  			var hscrollHeight = SystemInformation.HorizontalScrollBarHeight;  			sz.Height += hscrollHeight + hscrollHeight;  			// UNDONE: This is bizarre. But if we don't double the height adjustment' we lose that much each time the control is shown  			// we use dockpadding to save space to draw the widget.  			//  			if (ResizeUp) {  				DockPadding.Top = hscrollHeight;  			}  			else {  				DockPadding.Bottom = hscrollHeight;  			}  		}  		Size = sz;  		ctl.Dock = DockStyle.Fill;  		ctl.Visible = true;  		Controls.Add (ctl);  	}  	finally {  		ResumeLayout (true);  	}  	CurrentControl = ctl;  	// hook the resize event.  	//  	CurrentControl.Resize += OnCurrentControlResize;  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,ColumnPermutation,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\ColumnPermutation.cs,GetColumnExpansion,The following statement contains a magic number: for (var pass = 0; pass < 2; ++pass) {  	if (searchLeft) {  		// Go right on the next pass  		searchLeft = false;  		// Pick up blank columns to the left  		if (permutedColumn > 0) {  			for (i = permutedColumn - 1; i >= 0; --i) {  				if (myVisibleColumns [i] <= lastNativeNonBlankColumn) {  					if (haveAnchor) {  						// We're looking left to pick up blanks only' not to find an anchor.  						// If we find another non-blank column to the left' then any blanks  						// between it and our pivot column belong to this node if we prefer  						// right blanks. Otherwise' attach them to the current pivot. In any  						// case' we do not need to look further.  						if (myPreferLeftBlanks) {  							firstPermutedColumn = i + 1;  						}  						break;  					}  					else {  						haveAnchor = true;  						firstPermutedColumn = anchorColumn = i;  						// If we did not have an anchor before' then  						// we need to handle the case of a central anchor  						// node' which can have blanks both to the left  						// and to the right' so we can't break here unless  						// there is nothing more to the left.  						if (i == 0) {  							break;  						}  					}  				}  			}  			if (i == -1) {  				// We fell off the end' so there must be blank columns  				// all the way to the left of the anchor  				firstPermutedColumn = 0;  			}  		}  	}  	else// !searchLeft  	 {  		// Go left on the next pass  		searchLeft = true;  		// Pick up blank columns to the right  		var visibleColumnCount = myVisibleColumns.Length;  		var lastVisibleColumn = visibleColumnCount - 1;  		if (permutedColumn < lastVisibleColumn) {  			for (i = permutedColumn + 1; i < visibleColumnCount; ++i) {  				if (myVisibleColumns [i] <= lastNativeNonBlankColumn) {  					if (haveAnchor) {  						// We're looking right to pick up blanks only' not to find an anchor.  						// If we find another non-blank column to the right' then any blanks  						// between it and our pivot column belong to this node if we prefer  						// left blanks. Otherwise' attach them to the current pivot. In any  						// case' we do not need to look further.  						if (!myPreferLeftBlanks) {  							lastPermutedColumn = i - 1;  						}  						break;  					}  					else {  						haveAnchor = true;  						lastPermutedColumn = anchorColumn = i;  						// If we did not have an anchor before' then  						// we need to handle the case of a central anchor  						// node' which can have blanks both to the left  						// and to the right' so we can't break here unless  						// there is nothing more to the left.  						if (i == lastVisibleColumn) {  							break;  						}  					}  				}  			}  			if (i == visibleColumnCount) {  				// We fell off the end' so there must be blank columns  				// all the way to the right of the anchor  				lastPermutedColumn = lastVisibleColumn;  			}  		}  	}  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DisplayDataChanged,The following statement contains a magic number: while (tn != null) {  	prevAbsIndex = prevAbsIndexSingleColumn = -2;  	// Set to -2 so that first diff check is never 1  	reportCount = reportCountSingleColumn = 0;  	if (changeData.StartRow == -1) {  		startRow = 0;  		count = tn.ImmedCount;  	}  	else {  		startRow = changeData.StartRow;  		count = changeData.Count;  	}  	while (count > 0) {  		coordinate = FindAbsoluteIndex (tn' startRow' out singleColumnSubItemAdjust);  		if (coordinate.IsValid) {  			if (fireNormalEvent) {  				if (((coordinate.Row - prevAbsIndex) == 1) || (reportCount == 0)) {  					++reportCount;  					//Wait to fire the event until we find something discontiguous  				}  				else {  					OnDisplayDataChanged (this' new DisplayDataChangedEventArgs (this' changes' prevAbsIndex - reportCount + 1' coordinate.Column + column' reportCount));  					reportCount = 1;  				}  				prevAbsIndex = coordinate.Row;  			}  			if (fireSingleColumnEvent && coordinate.Column == 0) {  				if (((coordinate.Row - singleColumnSubItemAdjust - prevAbsIndexSingleColumn) == 1) || (reportCountSingleColumn == 0)) {  					++reportCountSingleColumn;  					//Wait to fire the event until we find something discontiguous  				}  				else {  					singleView.myOnDisplayDataChanged (singleTree' new DisplayDataChangedEventArgs (singleTree' changes' prevAbsIndexSingleColumn - reportCountSingleColumn + 1' 0' reportCountSingleColumn));  					reportCountSingleColumn = 1;  				}  				prevAbsIndexSingleColumn = coordinate.Row - singleColumnSubItemAdjust;  			}  			++startRow;  			--count;  		}  		else {  			break;  		}  	}  	if (reportCount != 0) {  		OnDisplayDataChanged (this' new DisplayDataChangedEventArgs (this' changes' prevAbsIndex - reportCount + 1' coordinate.Column + column' reportCount));  	}  	if (reportCountSingleColumn != 0) {  		singleView.myOnDisplayDataChanged (singleTree' new DisplayDataChangedEventArgs (singleTree' changes' prevAbsIndexSingleColumn - reportCountSingleColumn + 1' 0' reportCountSingleColumn));  	}  	tn = tn.NextNode;  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,DisplayDataChanged,The following statement contains a magic number: prevAbsIndex = prevAbsIndexSingleColumn = -2;  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHeaderControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HeaderControl.cs,WndProc,The following statement contains a magic number: try {  	switch (m.Msg) {  	case NativeMethods.WM_GETOBJECT:  		// Call DefWndProc here to get the Windows standard accessibility object for the header control.  		// base.WndProc provides the WinForms object' which does not work correctly on Vista (bug 89037).   		DefWndProc (ref m);  		return;  	case NativeMethods.WM_SETCURSOR:  		// We want the standard header cursors' not the default WinForms.Control behavior  		DefWndProc (ref m);  		return;  	case NativeMethods.HDM_SETORDERARRAY:  		if (!GetFlag (StateFlags.IgnoreSetOrderArray)) {  			var itemCount = (int)NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_GETITEMCOUNT' 0' 0);  			if (itemCount != (int)m.WParam) {  				// Sanity test  				m.Result = IntPtr.Zero;  				return;  			}  			var oldOrder = new int[itemCount];  			NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_GETORDERARRAY' oldOrder.Length' oldOrder);  			var newOrder = new int[itemCount];  			Marshal.Copy (m.LParam' newOrder' 0' itemCount);  			if (OnPotentialOrderChange (oldOrder' newOrder' false)) {  				base.WndProc (ref m);  				myAssociatedControl.UpdateHeaderControlWidths (this);  			}  			else {  				m.Result = IntPtr.Zero;  			}  			return;  		}  		break;  	case NativeMethods.WM_LBUTTONUP:  		if (GetFlag (StateFlags.Dragging) && !GetFlag (StateFlags.DragCanceled)) {  			// I'd like to do this in respose to HDM_SETORDERARRAY' but the control  			// does not fire this when it does the resize on its own.  			var oldOrder = new int[(int)NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_GETITEMCOUNT' 0' 0)];  			NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_GETORDERARRAY' oldOrder.Length' oldOrder);  			base.WndProc (ref m);  			if (!GetFlag (StateFlags.Dragging)) {  				var newOrder = new int[oldOrder.Length];  				NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_GETORDERARRAY' newOrder.Length' newOrder);  				if (!OnPotentialOrderChange (oldOrder' newOrder' true)) {  					SetFlag (StateFlags.IgnoreSetOrderArray' true);  					NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_SETORDERARRAY' oldOrder.Length' oldOrder);  					SetFlag (StateFlags.IgnoreSetOrderArray' false);  				}  			}  			SetFlag (StateFlags.Dragging' false);  			// In case enddrag didn't fire for whatever reason  			return;  		}  		else if (GetFlag (StateFlags.HeaderTracked)) {  			myAssociatedControl.UpdateHeaderControlWidths (this);  		}  		break;  	case NativeMethods.WM_LBUTTONDOWN:  		SetFlag (StateFlags.HeaderTracked | StateFlags.Tracking | StateFlags.DragCanceled' false);  		break;  	case NativeMethods.WM_MOUSEMOVE:  		if (GetFlag (StateFlags.Tracking)) {  			// If we're tracking' then the range we allow is not the same as the range  			// allowed by the header control. However' there is no way to stop the header  			// control from drawing its line' so we simply never let the mouse move message  			// with the out-of-bounds x position to get through to the control.  			var currentPoint = PointToScreen (new Point ((int)m.LParam));  			var newPoint = LimitTrackedMousePosition (currentPoint);  			if (newPoint != currentPoint) {  				// Do this with a SendMessage instead of recreating a Message structure  				// so that normal processing can occur and GetMessagePos returns the constrained value  				// downstream from here.  				newPoint = PointToClient (newPoint);  				m.Result = NativeMethods.SendMessage (m.HWnd' m.Msg' (int)m.WParam' NativeMethods.MAKELONG (newPoint.X' newPoint.Y));  				return;  			}  			// When we're in full drag mode' the control doesn't send a track notification. Send one now  			// so that the lines draw correctly.  			if (!GetFlag (StateFlags.ReceivedTrack)) {  				base.WndProc (ref m);  				if (!GetFlag (StateFlags.ReceivedTrack)) {  					TrackSplitter (NativeMethods.GetMessagePos ());  				}  				return;  			}  		}  		break;  	case NativeMethods.WM_CONTEXTMENU: {  		var notifyPoint = NativeMethods.GetMessagePos ();  		var hitInfo = new NativeMethods.HDHITTESTINFO (PointToClient (notifyPoint));  		var index = (int)NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_HITTEST' 0' ref hitInfo);  		if (index != -1 && (0 != (hitInfo.flags & NativeMethods.HDHITTESTINFO.Flags.HHT_ONHEADER))) {  			myAssociatedControl.OnRawColumnHeaderEvent (IndexToOrder (index)' VirtualTreeColumnHeaderClickStyle.ContextMenu' notifyPoint);  		}  		break;  	}  	case NativeMethods.WM_CANCELMODE:  		SetFlag (StateFlags.DragCanceled' true);  		break;  	case NativeMethods.WM_PAINT:  		if (GetStyle (ControlStyles.UserPaint)) {  			// if UserPaint is turned on' we can't do owner-draw' so just let  			// the base handle it.  			base.WndProc (ref m);  		}  		else {  			if (myOwnerDrawItemQueue != null) {  				myOwnerDrawItemQueue.Clear ();  			}  			var ps = new NativeMethods.PAINTSTRUCT ();  			var dc = NativeMethods.BeginPaint (Handle' ref ps);  			var oldPal = NativeMethods.SelectPalette (dc' Graphics.GetHalftonePalette ()' 1);  			try {  				using (var g = Graphics.FromHdc (dc)) {  					try {  						m.WParam = dc;  						// per MSDN' header control will use this DC for painting if provided.  						DefWndProc (ref m);  						// DefWndProc send the WM_DRAWITEM messages we will use to populate myOwnerDrawItemQueue.  						if (myOwnerDrawItemQueue != null) {  							for (var i = 0; i < myOwnerDrawItemQueue.Count; i++) {  								WmReflectDrawItem ((NativeMethods.DRAWITEMSTRUCT)myOwnerDrawItemQueue [i]' g);  							}  						}  					}  					finally {  						NativeMethods.EndPaint (Handle' ref ps);  					}  				}  			}  			finally {  				if (oldPal != IntPtr.Zero) {  					NativeMethods.SelectPalette (dc' oldPal' 0);  				}  			}  		}  		return;  	case NativeMethods.WM_REFLECT + NativeMethods.WM_DRAWITEM:  		if (myAssociatedControl != null) {  			var dis = (NativeMethods.DRAWITEMSTRUCT)m.GetLParam (typeof(NativeMethods.DRAWITEMSTRUCT));  			// transform itemId into a native column index. this will get passed in   			// the DrawItemEventArgs via the DrawColumnHeaderItem event.  			dis.itemId = IndexToOrder (dis.itemId);  			if (myAssociatedControl.ColumnPermutation != null) {  				dis.itemId = myAssociatedControl.ColumnPermutation.GetNativeColumn (dis.itemId);  			}  			var header = myAssociatedControl.GetColumnHeader (dis.itemId);  			// Queue the draw item message.  This allows us to do overlay drawing' because we can let  			// the underlying control paint first if necessary.  			if (myOwnerDrawItemQueue == null) {  				myOwnerDrawItemQueue = new ArrayList ();  			}  			myOwnerDrawItemQueue.Add (dis);  			// return 0 here if we want the column header to draw normally (i.e.' we're doing overlay drawing)  			// otherwise 1 to indicate no further handling of the message is necessary.  Either way we'll  			// send the DrawHeaderControlItem event at the end of WM_PAINT processing since we've added an entry to the queue.  			m.Result = (0 != (header.Style & VirtualTreeColumnHeaderStyles.OwnerDrawOverlay)) ? IntPtr.Zero : (IntPtr)1;  		}  		return;  	case NativeMethods.WM_REFLECT + NativeMethods.WM_NOTIFY:  		if (myAssociatedControl != null) {  			var code = Marshal.ReadIntPtr (m.LParam' 8).ToInt32 ();  			switch (code) {  			case NativeMethods.HDN_BEGINTRACKW: {  				if (!BeginTrackingSplitter (IndexToOrder (Marshal.ReadInt32 (m.LParam' NativeMethods.NMHEADER.iItemOffset))' NativeMethods.GetMessagePos ())) {  					m.Result = (IntPtr)1;  					// Block the tracking  					return;  				}  				SetFlag (StateFlags.DragCanceled' false);  				SetFlag (StateFlags.Tracking' true);  				SetFlag (StateFlags.ReceivedTrack' false);  				return;  			}  			case NativeMethods.HDN_TRACKW:  				SetFlag (StateFlags.ReceivedTrack' true);  				if (GetFlag (StateFlags.DragCanceled)) {  					m.Result = (IntPtr)1;  				}  				else {  					TrackSplitter (NativeMethods.GetMessagePos ());  				}  				return;  			case NativeMethods.HDN_ENDTRACKW:  				bool canceled = GetFlag (StateFlags.DragCanceled);  				SetFlag (StateFlags.Tracking' false);  				if (!canceled && !GetFlag (StateFlags.ReceivedTrack)) {  					// Need at least one track notification so that FinishTrackingSplitter works correctly  					TrackSplitter (NativeMethods.GetMessagePos ());  				}  				FinishTrackingSplitter (canceled);  				if (!canceled) {  					SetFlag (StateFlags.HeaderTracked' true);  				}  				// Always cancel at this point' we'll pick this up in the mouse up.  				// This way' the resize algorithms don't have to be exactly the same  				m.Result = (IntPtr)1;  				return;  			case NativeMethods.HDN_BEGINDRAG:  				if (GetFlag (StateFlags.DragCanceled)) {  					m.Result = (IntPtr)1;  				}  				else {  					var index = Marshal.ReadInt32 (m.LParam' NativeMethods.NMHEADER.iItemOffset);  					if (index < 0) {  						// Not sure why this is happening' but handle it  					}  					else if (BeginDrag (IndexToOrder (index))) {  						SetFlag (StateFlags.Dragging' true);  						SetFlag (StateFlags.DragCanceled' false);  					}  					else {  						SetFlag (StateFlags.DragCanceled' true);  						m.Result = (IntPtr)1;  					}  				}  				return;  			case NativeMethods.HDN_ENDDRAG:  				SetFlag (StateFlags.Dragging' false);  				return;  			case NativeMethods.HDN_ITEMCLICKW:  			case NativeMethods.HDN_ITEMDBLCLICKW:  			case NativeMethods.HDN_DIVIDERDBLCLICKW: {  				VirtualTreeColumnHeaderClickStyle style;  				switch (code) {  				case NativeMethods.HDN_ITEMCLICKW:  					style = VirtualTreeColumnHeaderClickStyle.Click;  					break;  				case NativeMethods.HDN_ITEMDBLCLICKW:  					style = VirtualTreeColumnHeaderClickStyle.DoubleClick;  					break;  				case NativeMethods.HDN_DIVIDERDBLCLICKW:  					style = VirtualTreeColumnHeaderClickStyle.DividerDoubleClick;  					break;  				default:  					Debug.Assert (false);  					// Shouldn't be here  					return;  				}  				myAssociatedControl.OnRawColumnHeaderEvent (IndexToOrder (Marshal.ReadInt32 (m.LParam' NativeMethods.NMHEADER.iItemOffset))' style' NativeMethods.GetMessagePos ());  				break;  			}  			}  		}  		break;  	}  	base.WndProc (ref m);  }  catch (Exception e) {  	if (CriticalException.IsCriticalException (e)) {  		throw;  	}  	VirtualTreeControl.DisplayException (myAssociatedControl.Site' e);  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHeaderControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HeaderControl.cs,WndProc,The following statement contains a magic number: switch (m.Msg) {  case NativeMethods.WM_GETOBJECT:  	// Call DefWndProc here to get the Windows standard accessibility object for the header control.  	// base.WndProc provides the WinForms object' which does not work correctly on Vista (bug 89037).   	DefWndProc (ref m);  	return;  case NativeMethods.WM_SETCURSOR:  	// We want the standard header cursors' not the default WinForms.Control behavior  	DefWndProc (ref m);  	return;  case NativeMethods.HDM_SETORDERARRAY:  	if (!GetFlag (StateFlags.IgnoreSetOrderArray)) {  		var itemCount = (int)NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_GETITEMCOUNT' 0' 0);  		if (itemCount != (int)m.WParam) {  			// Sanity test  			m.Result = IntPtr.Zero;  			return;  		}  		var oldOrder = new int[itemCount];  		NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_GETORDERARRAY' oldOrder.Length' oldOrder);  		var newOrder = new int[itemCount];  		Marshal.Copy (m.LParam' newOrder' 0' itemCount);  		if (OnPotentialOrderChange (oldOrder' newOrder' false)) {  			base.WndProc (ref m);  			myAssociatedControl.UpdateHeaderControlWidths (this);  		}  		else {  			m.Result = IntPtr.Zero;  		}  		return;  	}  	break;  case NativeMethods.WM_LBUTTONUP:  	if (GetFlag (StateFlags.Dragging) && !GetFlag (StateFlags.DragCanceled)) {  		// I'd like to do this in respose to HDM_SETORDERARRAY' but the control  		// does not fire this when it does the resize on its own.  		var oldOrder = new int[(int)NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_GETITEMCOUNT' 0' 0)];  		NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_GETORDERARRAY' oldOrder.Length' oldOrder);  		base.WndProc (ref m);  		if (!GetFlag (StateFlags.Dragging)) {  			var newOrder = new int[oldOrder.Length];  			NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_GETORDERARRAY' newOrder.Length' newOrder);  			if (!OnPotentialOrderChange (oldOrder' newOrder' true)) {  				SetFlag (StateFlags.IgnoreSetOrderArray' true);  				NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_SETORDERARRAY' oldOrder.Length' oldOrder);  				SetFlag (StateFlags.IgnoreSetOrderArray' false);  			}  		}  		SetFlag (StateFlags.Dragging' false);  		// In case enddrag didn't fire for whatever reason  		return;  	}  	else if (GetFlag (StateFlags.HeaderTracked)) {  		myAssociatedControl.UpdateHeaderControlWidths (this);  	}  	break;  case NativeMethods.WM_LBUTTONDOWN:  	SetFlag (StateFlags.HeaderTracked | StateFlags.Tracking | StateFlags.DragCanceled' false);  	break;  case NativeMethods.WM_MOUSEMOVE:  	if (GetFlag (StateFlags.Tracking)) {  		// If we're tracking' then the range we allow is not the same as the range  		// allowed by the header control. However' there is no way to stop the header  		// control from drawing its line' so we simply never let the mouse move message  		// with the out-of-bounds x position to get through to the control.  		var currentPoint = PointToScreen (new Point ((int)m.LParam));  		var newPoint = LimitTrackedMousePosition (currentPoint);  		if (newPoint != currentPoint) {  			// Do this with a SendMessage instead of recreating a Message structure  			// so that normal processing can occur and GetMessagePos returns the constrained value  			// downstream from here.  			newPoint = PointToClient (newPoint);  			m.Result = NativeMethods.SendMessage (m.HWnd' m.Msg' (int)m.WParam' NativeMethods.MAKELONG (newPoint.X' newPoint.Y));  			return;  		}  		// When we're in full drag mode' the control doesn't send a track notification. Send one now  		// so that the lines draw correctly.  		if (!GetFlag (StateFlags.ReceivedTrack)) {  			base.WndProc (ref m);  			if (!GetFlag (StateFlags.ReceivedTrack)) {  				TrackSplitter (NativeMethods.GetMessagePos ());  			}  			return;  		}  	}  	break;  case NativeMethods.WM_CONTEXTMENU: {  	var notifyPoint = NativeMethods.GetMessagePos ();  	var hitInfo = new NativeMethods.HDHITTESTINFO (PointToClient (notifyPoint));  	var index = (int)NativeMethods.SendMessage (m.HWnd' NativeMethods.HDM_HITTEST' 0' ref hitInfo);  	if (index != -1 && (0 != (hitInfo.flags & NativeMethods.HDHITTESTINFO.Flags.HHT_ONHEADER))) {  		myAssociatedControl.OnRawColumnHeaderEvent (IndexToOrder (index)' VirtualTreeColumnHeaderClickStyle.ContextMenu' notifyPoint);  	}  	break;  }  case NativeMethods.WM_CANCELMODE:  	SetFlag (StateFlags.DragCanceled' true);  	break;  case NativeMethods.WM_PAINT:  	if (GetStyle (ControlStyles.UserPaint)) {  		// if UserPaint is turned on' we can't do owner-draw' so just let  		// the base handle it.  		base.WndProc (ref m);  	}  	else {  		if (myOwnerDrawItemQueue != null) {  			myOwnerDrawItemQueue.Clear ();  		}  		var ps = new NativeMethods.PAINTSTRUCT ();  		var dc = NativeMethods.BeginPaint (Handle' ref ps);  		var oldPal = NativeMethods.SelectPalette (dc' Graphics.GetHalftonePalette ()' 1);  		try {  			using (var g = Graphics.FromHdc (dc)) {  				try {  					m.WParam = dc;  					// per MSDN' header control will use this DC for painting if provided.  					DefWndProc (ref m);  					// DefWndProc send the WM_DRAWITEM messages we will use to populate myOwnerDrawItemQueue.  					if (myOwnerDrawItemQueue != null) {  						for (var i = 0; i < myOwnerDrawItemQueue.Count; i++) {  							WmReflectDrawItem ((NativeMethods.DRAWITEMSTRUCT)myOwnerDrawItemQueue [i]' g);  						}  					}  				}  				finally {  					NativeMethods.EndPaint (Handle' ref ps);  				}  			}  		}  		finally {  			if (oldPal != IntPtr.Zero) {  				NativeMethods.SelectPalette (dc' oldPal' 0);  			}  		}  	}  	return;  case NativeMethods.WM_REFLECT + NativeMethods.WM_DRAWITEM:  	if (myAssociatedControl != null) {  		var dis = (NativeMethods.DRAWITEMSTRUCT)m.GetLParam (typeof(NativeMethods.DRAWITEMSTRUCT));  		// transform itemId into a native column index. this will get passed in   		// the DrawItemEventArgs via the DrawColumnHeaderItem event.  		dis.itemId = IndexToOrder (dis.itemId);  		if (myAssociatedControl.ColumnPermutation != null) {  			dis.itemId = myAssociatedControl.ColumnPermutation.GetNativeColumn (dis.itemId);  		}  		var header = myAssociatedControl.GetColumnHeader (dis.itemId);  		// Queue the draw item message.  This allows us to do overlay drawing' because we can let  		// the underlying control paint first if necessary.  		if (myOwnerDrawItemQueue == null) {  			myOwnerDrawItemQueue = new ArrayList ();  		}  		myOwnerDrawItemQueue.Add (dis);  		// return 0 here if we want the column header to draw normally (i.e.' we're doing overlay drawing)  		// otherwise 1 to indicate no further handling of the message is necessary.  Either way we'll  		// send the DrawHeaderControlItem event at the end of WM_PAINT processing since we've added an entry to the queue.  		m.Result = (0 != (header.Style & VirtualTreeColumnHeaderStyles.OwnerDrawOverlay)) ? IntPtr.Zero : (IntPtr)1;  	}  	return;  case NativeMethods.WM_REFLECT + NativeMethods.WM_NOTIFY:  	if (myAssociatedControl != null) {  		var code = Marshal.ReadIntPtr (m.LParam' 8).ToInt32 ();  		switch (code) {  		case NativeMethods.HDN_BEGINTRACKW: {  			if (!BeginTrackingSplitter (IndexToOrder (Marshal.ReadInt32 (m.LParam' NativeMethods.NMHEADER.iItemOffset))' NativeMethods.GetMessagePos ())) {  				m.Result = (IntPtr)1;  				// Block the tracking  				return;  			}  			SetFlag (StateFlags.DragCanceled' false);  			SetFlag (StateFlags.Tracking' true);  			SetFlag (StateFlags.ReceivedTrack' false);  			return;  		}  		case NativeMethods.HDN_TRACKW:  			SetFlag (StateFlags.ReceivedTrack' true);  			if (GetFlag (StateFlags.DragCanceled)) {  				m.Result = (IntPtr)1;  			}  			else {  				TrackSplitter (NativeMethods.GetMessagePos ());  			}  			return;  		case NativeMethods.HDN_ENDTRACKW:  			bool canceled = GetFlag (StateFlags.DragCanceled);  			SetFlag (StateFlags.Tracking' false);  			if (!canceled && !GetFlag (StateFlags.ReceivedTrack)) {  				// Need at least one track notification so that FinishTrackingSplitter works correctly  				TrackSplitter (NativeMethods.GetMessagePos ());  			}  			FinishTrackingSplitter (canceled);  			if (!canceled) {  				SetFlag (StateFlags.HeaderTracked' true);  			}  			// Always cancel at this point' we'll pick this up in the mouse up.  			// This way' the resize algorithms don't have to be exactly the same  			m.Result = (IntPtr)1;  			return;  		case NativeMethods.HDN_BEGINDRAG:  			if (GetFlag (StateFlags.DragCanceled)) {  				m.Result = (IntPtr)1;  			}  			else {  				var index = Marshal.ReadInt32 (m.LParam' NativeMethods.NMHEADER.iItemOffset);  				if (index < 0) {  					// Not sure why this is happening' but handle it  				}  				else if (BeginDrag (IndexToOrder (index))) {  					SetFlag (StateFlags.Dragging' true);  					SetFlag (StateFlags.DragCanceled' false);  				}  				else {  					SetFlag (StateFlags.DragCanceled' true);  					m.Result = (IntPtr)1;  				}  			}  			return;  		case NativeMethods.HDN_ENDDRAG:  			SetFlag (StateFlags.Dragging' false);  			return;  		case NativeMethods.HDN_ITEMCLICKW:  		case NativeMethods.HDN_ITEMDBLCLICKW:  		case NativeMethods.HDN_DIVIDERDBLCLICKW: {  			VirtualTreeColumnHeaderClickStyle style;  			switch (code) {  			case NativeMethods.HDN_ITEMCLICKW:  				style = VirtualTreeColumnHeaderClickStyle.Click;  				break;  			case NativeMethods.HDN_ITEMDBLCLICKW:  				style = VirtualTreeColumnHeaderClickStyle.DoubleClick;  				break;  			case NativeMethods.HDN_DIVIDERDBLCLICKW:  				style = VirtualTreeColumnHeaderClickStyle.DividerDoubleClick;  				break;  			default:  				Debug.Assert (false);  				// Shouldn't be here  				return;  			}  			myAssociatedControl.OnRawColumnHeaderEvent (IndexToOrder (Marshal.ReadInt32 (m.LParam' NativeMethods.NMHEADER.iItemOffset))' style' NativeMethods.GetMessagePos ());  			break;  		}  		}  	}  	break;  }  
Magic Number,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHeaderControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HeaderControl.cs,WndProc,The following statement contains a magic number: if (myAssociatedControl != null) {  	var code = Marshal.ReadIntPtr (m.LParam' 8).ToInt32 ();  	switch (code) {  	case NativeMethods.HDN_BEGINTRACKW: {  		if (!BeginTrackingSplitter (IndexToOrder (Marshal.ReadInt32 (m.LParam' NativeMethods.NMHEADER.iItemOffset))' NativeMethods.GetMessagePos ())) {  			m.Result = (IntPtr)1;  			// Block the tracking  			return;  		}  		SetFlag (StateFlags.DragCanceled' false);  		SetFlag (StateFlags.Tracking' true);  		SetFlag (StateFlags.ReceivedTrack' false);  		return;  	}  	case NativeMethods.HDN_TRACKW:  		SetFlag (StateFlags.ReceivedTrack' true);  		if (GetFlag (StateFlags.DragCanceled)) {  			m.Result = (IntPtr)1;  		}  		else {  			TrackSplitter (NativeMethods.GetMessagePos ());  		}  		return;  	case NativeMethods.HDN_ENDTRACKW:  		bool canceled = GetFlag (StateFlags.DragCanceled);  		SetFlag (StateFlags.Tracking' false);  		if (!canceled && !GetFlag (StateFlags.ReceivedTrack)) {  			// Need at least one track notification so that FinishTrackingSplitter works correctly  			TrackSplitter (NativeMethods.GetMessagePos ());  		}  		FinishTrackingSplitter (canceled);  		if (!canceled) {  			SetFlag (StateFlags.HeaderTracked' true);  		}  		// Always cancel at this point' we'll pick this up in the mouse up.  		// This way' the resize algorithms don't have to be exactly the same  		m.Result = (IntPtr)1;  		return;  	case NativeMethods.HDN_BEGINDRAG:  		if (GetFlag (StateFlags.DragCanceled)) {  			m.Result = (IntPtr)1;  		}  		else {  			var index = Marshal.ReadInt32 (m.LParam' NativeMethods.NMHEADER.iItemOffset);  			if (index < 0) {  				// Not sure why this is happening' but handle it  			}  			else if (BeginDrag (IndexToOrder (index))) {  				SetFlag (StateFlags.Dragging' true);  				SetFlag (StateFlags.DragCanceled' false);  			}  			else {  				SetFlag (StateFlags.DragCanceled' true);  				m.Result = (IntPtr)1;  			}  		}  		return;  	case NativeMethods.HDN_ENDDRAG:  		SetFlag (StateFlags.Dragging' false);  		return;  	case NativeMethods.HDN_ITEMCLICKW:  	case NativeMethods.HDN_ITEMDBLCLICKW:  	case NativeMethods.HDN_DIVIDERDBLCLICKW: {  		VirtualTreeColumnHeaderClickStyle style;  		switch (code) {  		case NativeMethods.HDN_ITEMCLICKW:  			style = VirtualTreeColumnHeaderClickStyle.Click;  			break;  		case NativeMethods.HDN_ITEMDBLCLICKW:  			style = VirtualTreeColumnHeaderClickStyle.DoubleClick;  			break;  		case NativeMethods.HDN_DIVIDERDBLCLICKW:  			style = VirtualTreeColumnHeaderClickStyle.DividerDoubleClick;  			break;  		default:  			Debug.Assert (false);  			// Shouldn't be here  			return;  		}  		myAssociatedControl.OnRawColumnHeaderEvent (IndexToOrder (Marshal.ReadInt32 (m.LParam' NativeMethods.NMHEADER.iItemOffset))' style' NativeMethods.GetMessagePos ());  		break;  	}  	}  }  
Magic Number,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,MAKELONG,The following statement contains a magic number: return (high << 16) | (low & 0xffff);  
Magic Number,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,MAKELPARAM,The following statement contains a magic number: return (IntPtr)((high << 16) | (low & 0xffff));  
Magic Number,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,UnsignedHIWORD,The following statement contains a magic number: return (n >> 16) & 0xffff;  
Magic Number,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,SignedHIWORD,The following statement contains a magic number: i = i << 16;  
Magic Number,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,SignedHIWORD,The following statement contains a magic number: i = i >> 16;  
Magic Number,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,SignedLOWORD,The following statement contains a magic number: i = i << 16;  
Magic Number,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,SignedLOWORD,The following statement contains a magic number: i = i >> 16;  
Magic Number,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,RGB,The following statement contains a magic number: return r | (g << 8) | (b << 16);  
Magic Number,Microsoft.Data.Entity.Design.VisualStudio,NativeMethods,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\NativeMethods.cs,RGB,The following statement contains a magic number: return r | (g << 8) | (b << 16);  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,SetViewLocation,The following statement contains a magic number: if (Enabled) {  	Invalidate (Rectangle.Inflate (ImageViewBounds' 2' 2));  	var scrollUnitLength = (double)typeof(DiagramClientView).GetProperty ("ScrollUnitLength"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue (DiagramClientView' new object[0]);  	DiagramClientView.HorizontalScrollPosition = (int)(viewLocation.X / scrollUnitLength);  	DiagramClientView.VerticalScrollPosition = (int)(viewLocation.Y / scrollUnitLength);  	DiagramClientView.Invalidate ();  	Invalidate (Rectangle.Inflate (ImageViewBounds' 2' 2));  }  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,SetViewLocation,The following statement contains a magic number: if (Enabled) {  	Invalidate (Rectangle.Inflate (ImageViewBounds' 2' 2));  	var scrollUnitLength = (double)typeof(DiagramClientView).GetProperty ("ScrollUnitLength"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue (DiagramClientView' new object[0]);  	DiagramClientView.HorizontalScrollPosition = (int)(viewLocation.X / scrollUnitLength);  	DiagramClientView.VerticalScrollPosition = (int)(viewLocation.Y / scrollUnitLength);  	DiagramClientView.Invalidate ();  	Invalidate (Rectangle.Inflate (ImageViewBounds' 2' 2));  }  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,SetViewLocation,The following statement contains a magic number: if (Enabled) {  	Invalidate (Rectangle.Inflate (ImageViewBounds' 2' 2));  	var scrollUnitLength = (double)typeof(DiagramClientView).GetProperty ("ScrollUnitLength"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue (DiagramClientView' new object[0]);  	DiagramClientView.HorizontalScrollPosition = (int)(viewLocation.X / scrollUnitLength);  	DiagramClientView.VerticalScrollPosition = (int)(viewLocation.Y / scrollUnitLength);  	DiagramClientView.Invalidate ();  	Invalidate (Rectangle.Inflate (ImageViewBounds' 2' 2));  }  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,SetViewLocation,The following statement contains a magic number: if (Enabled) {  	Invalidate (Rectangle.Inflate (ImageViewBounds' 2' 2));  	var scrollUnitLength = (double)typeof(DiagramClientView).GetProperty ("ScrollUnitLength"' BindingFlags.NonPublic | BindingFlags.Instance).GetValue (DiagramClientView' new object[0]);  	DiagramClientView.HorizontalScrollPosition = (int)(viewLocation.X / scrollUnitLength);  	DiagramClientView.VerticalScrollPosition = (int)(viewLocation.Y / scrollUnitLength);  	DiagramClientView.Invalidate ();  	Invalidate (Rectangle.Inflate (ImageViewBounds' 2' 2));  }  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,SetViewLocation,The following statement contains a magic number: Invalidate (Rectangle.Inflate (ImageViewBounds' 2' 2));  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,SetViewLocation,The following statement contains a magic number: Invalidate (Rectangle.Inflate (ImageViewBounds' 2' 2));  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,SetViewLocation,The following statement contains a magic number: Invalidate (Rectangle.Inflate (ImageViewBounds' 2' 2));  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,SetViewLocation,The following statement contains a magic number: Invalidate (Rectangle.Inflate (ImageViewBounds' 2' 2));  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,OnMouseMove,The following statement contains a magic number: switch (_mouseMode) {  case MouseMode.None: {  	Cursor = Cursors.SizeAll;  	break;  }  case MouseMode.Move: {  	var p = e.Location;  	var imageLocation = ImageLocation;  	p.Offset (-imageLocation.X' -imageLocation.Y);  	var imageBounds = ImageViewBounds;  	p.Offset (-imageBounds.Width / 2' -imageBounds.Height / 2);  	SetViewLocation (ImageToDiagram (p));  	break;  }  }  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,OnMouseMove,The following statement contains a magic number: switch (_mouseMode) {  case MouseMode.None: {  	Cursor = Cursors.SizeAll;  	break;  }  case MouseMode.Move: {  	var p = e.Location;  	var imageLocation = ImageLocation;  	p.Offset (-imageLocation.X' -imageLocation.Y);  	var imageBounds = ImageViewBounds;  	p.Offset (-imageBounds.Width / 2' -imageBounds.Height / 2);  	SetViewLocation (ImageToDiagram (p));  	break;  }  }  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,OnMouseMove,The following statement contains a magic number: p.Offset (-imageBounds.Width / 2' -imageBounds.Height / 2);  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,OnMouseMove,The following statement contains a magic number: p.Offset (-imageBounds.Width / 2' -imageBounds.Height / 2);  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,OnMouseClick,The following statement contains a magic number: p.Offset (-ImageViewBounds.Width / 2' -ImageViewBounds.Height / 2);  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,OnMouseClick,The following statement contains a magic number: p.Offset (-ImageViewBounds.Width / 2' -ImageViewBounds.Height / 2);  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,StartMove,The following statement contains a magic number: if (_mouseMode == MouseMode.None) {  	Capture = true;  	var viewRect = ImageViewBounds;  	viewRect.Offset (Location);  	Cursor.Position = PointToScreen (new Point (viewRect.Left + viewRect.Width / 2' viewRect.Top + viewRect.Height / 2));  	_mouseMode = MouseMode.Move;  }  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,StartMove,The following statement contains a magic number: if (_mouseMode == MouseMode.None) {  	Capture = true;  	var viewRect = ImageViewBounds;  	viewRect.Offset (Location);  	Cursor.Position = PointToScreen (new Point (viewRect.Left + viewRect.Width / 2' viewRect.Top + viewRect.Height / 2));  	_mouseMode = MouseMode.Move;  }  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,StartMove,The following statement contains a magic number: Cursor.Position = PointToScreen (new Point (viewRect.Left + viewRect.Width / 2' viewRect.Top + viewRect.Height / 2));  
Magic Number,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,StartMove,The following statement contains a magic number: Cursor.Position = PointToScreen (new Point (viewRect.Left + viewRect.Width / 2' viewRect.Top + viewRect.Height / 2));  
Magic Number,Microsoft.Data.Entity.Design.Package,ThumbnailViewForm,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\ThumbnailViewForm.cs,ThumbnailViewForm,The following statement contains a magic number: location.Offset (-ViewSize / 2' -ViewSize / 2);  
Magic Number,Microsoft.Data.Entity.Design.Package,ThumbnailViewForm,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\ThumbnailViewForm.cs,ThumbnailViewForm,The following statement contains a magic number: location.Offset (-ViewSize / 2' -ViewSize / 2);  
Missing Default,Microsoft.Data.Entity.Design.Base.Shell,HeaderBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\HeaderBranch.cs,LocateObject,The following switch statement is missing a default case: switch (style) {  case ObjectStyle.ExpandedBranch:  case ObjectStyle.SubItemExpansion:  	options = (int)BranchLocationAction.DiscardBranch;  	for (var i = 0; i < _currentBranches.Count; i++) {  		if (_currentBranches [i].Branch == obj) {  			return new LocateObjectData (i' 0' (int)BranchLocationAction.KeepBranch);  		}  	}  	break;  case ObjectStyle.TrackingObject:  	for (var i = 0; i < _currentBranches.Count; i++) {  		if (obj != null && obj == _currentBranches [i].Id) {  			return new LocateObjectData (i' 0' (int)TrackingObjectAction.ThisLevel);  		}  		var data = _currentBranches [i].Branch.LocateObject (obj' ObjectStyle.TrackingObject' locateOptions);  		if (data.Options != (int)TrackingObjectAction.NotTracked) {  			return new LocateObjectData (i' 0' (int)TrackingObjectAction.NextLevel);  		}  	}  	break;  }  
Missing Default,Microsoft.Data.Entity.Design.Base.Shell,HeaderBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\HeaderBranch.cs,ProcessKeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.Tab:  	result.Action = KeyAction.Handle;  	result.Direction = !e.Shift ? NavigationDirection.Right : NavigationDirection.Left;  	result.Local = false;  	return result;  case Keys.Space:  	if (_columns [column].ColumnIsCheckBox) {  		// if we're on a check box' use standard processing  		return new ProcessKeyResult (KeyAction.Process);  	}  	// special case for only one checkbox in the row'  	// it should be toggled no matter where the focus is.  	var checkBoxIndex = -1;  	for (var i = 0; i < _columns.Length; i++) {  		if (_columns [i].ColumnIsCheckBox && (GetCheckBoxValue (row' i) != CheckBoxState.Unsupported)) {  			if (checkBoxIndex == -1) {  				checkBoxIndex = i;  			}  			else {  				// more than one checkbox' use standard processing  				return new ProcessKeyResult (KeyAction.Process);  			}  		}  		if (checkBoxIndex != -1) {  			((IBranch)this).ToggleState (row' checkBoxIndex);  			// need to refresh both ourselves and our children.  Do we need BranchModificationAction.ToggleState?  			if (_onBranchModification != null) {  				_onBranchModification (this' BranchModificationEventArgs.DisplayDataChanged (new DisplayDataChangedData (VirtualTreeDisplayDataChanges.StateImage' this' row' checkBoxIndex' 1)));  				_onBranchModification (this' BranchModificationEventArgs.DisplayDataChanged (new DisplayDataChangedData (VirtualTreeDisplayDataChanges.StateImage' _childBranchArray [row].Branch' -1' checkBoxIndex' -1)));  			}  			return new ProcessKeyResult (KeyAction.Discard);  			// we've handled this' no further processing necessary  		}  	}  	break;  case Keys.Up:  	// let Ctrl-Up fall through to the base control processing.  	if (!e.Control) {  		result.Action = KeyAction.Handle;  		result.Local = false;  		result.Direction = NavigationDirection.Up;  	}  	break;  case Keys.Down:  	// let Ctrl-Down fall through to the base control processing.  	if (!e.Control) {  		result.Action = KeyAction.Handle;  		result.Local = false;  		result.Direction = NavigationDirection.Down;  	}  	break;  }  
Missing Default,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,ProcessKeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.F2:  	result.Action = KeyAction.Handle;  	result.StartLabelEdit = true;  	result.Direction = NavigationDirection.Down;  	break;  case Keys.Tab:  	result.Action = KeyAction.Handle;  	result.ColumnType = null;  	break;  case Keys.Space:  	if (_columns [column].ColumnIsCheckBox || InLabelEdit) {  		// check box and text box columns should use default   		// key processing for the space bar (toggle value)  		result.Action = KeyAction.Process;  	}  	break;  case Keys.Up:  	// let Ctrl-Up fall through to the base control processing.  	if (!e.Control) {  		result.Action = KeyAction.Handle;  		result.Local = false;  		result.Direction = NavigationDirection.Up;  	}  	break;  case Keys.Down:  	// let Ctrl-Down fall through to the base control processing.  	if (!e.Control) {  		result.Action = KeyAction.Handle;  		result.Local = false;  		result.Direction = NavigationDirection.Down;  		// Alt + Down should open a drop down  		if (e.Alt) {  			result.StartLabelEdit = true;  		}  	}  	break;  case Keys.Delete:  	result.Action = KeyAction.Handle;  	result.Delete = true;  	break;  }  
Missing Default,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerBranch,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerBranch.cs,LocateObject,The following switch statement is missing a default case: switch (style) {  case ObjectStyle.ExpandedBranch:  case ObjectStyle.SubItemExpansion:  	locateData.Options = (int)BranchLocationAction.DiscardBranch;  	break;  case ObjectStyle.TrackingObject:  	locateData = LocateTrackingObject (obj' locateData);  	break;  }  
Missing Default,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerInPlaceEdit,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerInPlaceEdit.cs,ProcessCmdKey,The following switch statement is missing a default case: switch (keyData & Keys.KeyCode) {  case Keys.Z:  	// ensure that the edit control handles undo.  	if (((keyData & Keys.Control) != 0) && ((keyData & Keys.Shift) == 0) && ((keyData & Keys.Alt) == 0)) {  		Undo ();  		return true;  	}  	break;  case Keys.A:  	// ensure that the edit control handles select all.  	if (((keyData & Keys.Control) != 0) && ((keyData & Keys.Shift) == 0) && ((keyData & Keys.Alt) == 0)) {  		SelectAll ();  		return true;  	}  	break;  case Keys.Delete:  	NativeMethods.SendMessage (Handle' msg.Msg' msg.WParam.ToInt32 ()' msg.LParam.ToInt32 ());  	return true;  }  
Missing Default,Microsoft.Data.Entity.Design.Base.Shell,TreeGridDesignerTreeControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Base\Shell\TreeGridDesignerTreeControl.cs,TranslateNavigationDirection,The following switch statement is missing a default case: switch (treeNav) {  case NavigationDirection.Left:  	return TreeNavigation.LeftColumn;  case NavigationDirection.Right:  	return TreeNavigation.RightColumn;  case NavigationDirection.Up:  	return TreeNavigation.Up;  case NavigationDirection.Down:  	return TreeNavigation.Down;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.Common,CommonVsUtilities,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Common\CommonVsUtilities.cs,ShowMessageBoxEx,The following switch statement is missing a default case: switch (icon) {  case MessageBoxIcon.Error:  	vsIcon = OLEMSGICON.OLEMSGICON_CRITICAL;  	break;  case MessageBoxIcon.Information:  	vsIcon = OLEMSGICON.OLEMSGICON_INFO;  	break;  case MessageBoxIcon.None:  	vsIcon = OLEMSGICON.OLEMSGICON_NOICON;  	break;  case MessageBoxIcon.Question:  	vsIcon = OLEMSGICON.OLEMSGICON_QUERY;  	break;  case MessageBoxIcon.Warning:  	vsIcon = OLEMSGICON.OLEMSGICON_WARNING;  	break;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.Refactoring,PreviewChangesNodeBuilder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\Refactoring\PreviewChangesNodeBuilder.cs,CreatePreviewNodesForVsLang,The following switch statement is missing a default case: switch (rootNode.CheckState) {  case __PREVIEWCHANGESITEMCHECKSTATE.PCCS_Checked: {  	if (checkState == __PREVIEWCHANGESITEMCHECKSTATE.PCCS_PartiallyChecked || checkState == __PREVIEWCHANGESITEMCHECKSTATE.PCCS_Unchecked) {  		rootNode.CheckState = __PREVIEWCHANGESITEMCHECKSTATE.PCCS_PartiallyChecked;  	}  	break;  }  case __PREVIEWCHANGESITEMCHECKSTATE.PCCS_Unchecked: {  	if (checkState == __PREVIEWCHANGESITEMCHECKSTATE.PCCS_PartiallyChecked || checkState == __PREVIEWCHANGESITEMCHECKSTATE.PCCS_Checked) {  		rootNode.CheckState = __PREVIEWCHANGESITEMCHECKSTATE.PCCS_PartiallyChecked;  	}  	break;  }  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnHandleCreated,The following switch statement is missing a default case: switch (_editControlStyle) {  case TypeEditorHostEditControlStyle.Editable:  	InitializeEdit ();  	break;  case TypeEditorHostEditControlStyle.ReadOnlyEdit:  	InitializeEdit ();  	_edit.ReadOnly = true;  	break;  case TypeEditorHostEditControlStyle.InstructionLabel:  	InitializeInstructionLabel ();  	UpdateInstructionLabelText ();  	break;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,IsInputKey,The following switch statement is missing a default case: switch (keyData & Keys.KeyCode) {  case Keys.Left:  case Keys.Right:  case Keys.Up:  case Keys.Down:  	// Key these to the message loop' where we can forward them to the parent control  	return true;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.Down:  	if (e.Alt && !e.Control) {  		OpenDropDown ();  		e.Handled = true;  		return;  	}  	break;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHost,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnDropDownKeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.Escape:  	CloseDropDown (false);  	e.Handled = true;  	break;  case Keys.Enter:  	CloseDropDown (true);  	e.Handled = true;  	break;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,MouseHooker,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,MouseHookProc,The following switch statement is missing a default case: switch ((int)wparam) {  case NativeMethods.WM_LBUTTONDOWN:  case NativeMethods.WM_MBUTTONDOWN:  case NativeMethods.WM_RBUTTONDOWN:  case NativeMethods.WM_NCLBUTTONDOWN:  case NativeMethods.WM_NCMBUTTONDOWN:  case NativeMethods.WM_NCRBUTTONDOWN:  case NativeMethods.WM_MOUSEACTIVATE:  	if (ProcessMouseDown (mhs.handle)) {  		return (IntPtr)1;  	}  	break;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,DropDownHolder,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ProcessDialogKey,The following switch statement is missing a default case: switch (keyData & Keys.KeyCode) {  case Keys.Escape:  	doClose = true;  	//accept = false; // default value  	break;  case Keys.Enter:  	doClose = accept = true;  	break;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHostTextBox,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,ProcessCmdKey,The following switch statement is missing a default case: switch (keyData & Keys.KeyCode) {  case Keys.Z:  	// ensure that the edit control handles undo if the text box is dirty.  	if (((IVirtualTreeInPlaceControlDefer)_dropDownParent).Dirty && ((keyData & Keys.Control) != 0) && ((keyData & Keys.Shift) == 0) && ((keyData & Keys.Alt) == 0)) {  		Undo ();  		return true;  	}  	break;  case Keys.A:  	// ensure that the edit control handles select all.  	if (((keyData & Keys.Control) != 0) && ((keyData & Keys.Shift) == 0) && ((keyData & Keys.Alt) == 0)) {  		SelectAll ();  		return true;  	}  	break;  case Keys.F4:  	// F4 opens the drop down  	if ((keyData & (Keys.Shift | Keys.Control | Keys.Alt)) == 0) {  		_dropDownParent.OpenDropDown ();  		return true;  	}  	break;  case Keys.Down:  	// Alt-Down opens the drop down  	if (((keyData & Keys.Alt) != 0) && ((keyData & Keys.Control) == 0)) {  		_dropDownParent.OpenDropDown ();  		return true;  	}  	break;  case Keys.Delete:  	NativeMethods.SendMessage (Handle' msg.Msg' msg.WParam.ToInt32 ()' msg.LParam.ToInt32 ());  	return true;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHostTextBox,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnKeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.Down:  	// Alt-Down opens the drop down  	if (((e.KeyData & Keys.Alt) != 0) && ((e.KeyData & Keys.Control) == 0)) {  		_dropDownParent.OpenDropDown ();  		e.Handled = true;  		return;  	}  	break;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,TypeEditorHostListBox,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\DropDownControl.cs,OnEditKeyDown,The following switch statement is missing a default case: switch (e.KeyCode) {  case Keys.Up:  	if (_listBox.SelectedIndex > 0) {  		_listBox.SelectedIndex--;  		Text = _listBox.Text;  		if (Edit != null) {  			Edit.SelectionStart = 0;  			Edit.SelectionLength = Edit.Text.Length;  		}  	}  	e.Handled = true;  	break;  case Keys.Down:  	if (_listBox.SelectedIndex < _listBox.Items.Count - 1) {  		_listBox.SelectedIndex++;  		Text = _listBox.Text;  		if (Edit != null) {  			Edit.SelectionStart = 0;  			Edit.SelectionLength = Edit.Text.Length;  		}  	}  	e.Handled = true;  	break;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,OnBranchModification,The following switch statement is missing a default case: switch (change.Action) {  case BranchModificationAction.DisplayDataChanged: {  	var displayChange = change as BranchModificationEventArgs.BranchModificationDisplayData;  	tree.DisplayDataChanged (new DisplayDataChangedData (displayChange.Changes' displayChange.Branch' displayChange.Index' displayChange.Column' displayChange.Count));  	break;  }  case BranchModificationAction.Realign:  	tree.Realign (change.Branch);  	break;  case BranchModificationAction.InsertItems:  	tree.InsertItems (change.Branch' change.Index' change.Count);  	break;  case BranchModificationAction.DeleteItems:  	tree.DeleteItems (change.Branch' change.Index' change.Count);  	break;  case BranchModificationAction.MoveItem:  	tree.MoveItem (change.Branch' change.Index' change.Count);  	break;  case BranchModificationAction.ShiftBranchLevels: {  	var levelChange = change as BranchModificationEventArgs.BranchModificationLevelShift;  	tree.ShiftBranchLevels (new ShiftBranchLevelsData (change.Branch' levelChange.RemoveLevels' levelChange.InsertLevels' levelChange.Depth' levelChange.ReplacementBranch' levelChange.BranchTester' change.Index' change.Count' levelChange.NewCount));  	break;  }  case BranchModificationAction.Redraw:  	tree.Redraw = change.Flag;  	break;  case BranchModificationAction.DelayRedraw:  	tree.DelayRedraw = change.Flag;  	break;  case BranchModificationAction.ListShuffle:  	tree.ListShuffle = change.Flag;  	break;  case BranchModificationAction.DelayListShuffle:  	tree.DelayListShuffle = change.Flag;  	break;  case BranchModificationAction.UpdateCellStyle:  	if (MultiColumnSupport) {  		(this as IMultiColumnTree).UpdateCellStyle (change.Branch' change.Index' change.Count' change.Flag);  	}  	break;  case BranchModificationAction.RemoveBranch:  	tree.RemoveBranch (change.Branch);  	break;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,GetNavigationTarget,The following switch statement is missing a default case: switch (direction) {  case TreeNavigation.Parent:  case TreeNavigation.ComplexParent:  	if (localColumn == 0 && (pos.ParentAbsolute != -1 || (pos.ParentNode.SubItemRoot && !pos.ParentNode.ComplexSubItem))) {  		if (nativeSourceColumn > 0) {  			// This is more work than column zero. The parent  			// absolute is relative to the root node in the branch.  			targetRow = sourceRow - pos.ParentNode.GetChildOffset (pos.Index);  		}  		else {  			targetRow = pos.ParentAbsolute;  		}  		targetColumn = sourceColumn;  		retVal = true;  	}  	else if (direction == TreeNavigation.ComplexParent) {  		if (pos.ParentNode.ComplexSubItem) {  			targetColumn = nativeSourceColumn - pos.ParentNode.Parent.FirstSubItem.ColumnOfRootNode (pos.ParentNode);  			if ((columnPermutation == null) || (-1 != (targetColumn = columnPermutation.GetPermutedColumn (targetColumn)))) {  				targetRow = sourceRow - pos.ParentNode.GetChildOffset (pos.Index) + 1;  				retVal = true;  			}  		}  		else if (localColumn > 0) {  			targetColumn = nativeSourceColumn - localColumn;  			if ((columnPermutation == null) || (-1 != (targetColumn = columnPermutation.GetPermutedColumn (targetColumn)))) {  				targetRow = sourceRow;  				retVal = true;  			}  		}  	}  	break;  case TreeNavigation.FirstChild:  case TreeNavigation.LastChild:  	// FirstChild and LastChild share code for testing if the node is expanded  	tnChild = pos.ParentNode.GetChildNode (pos.Index);  	if (localColumn > 0 && tnChild != null) {  		var sn = tnChild.SubItemAtColumn (localColumn);  		tnChild = (sn == null) ? null : sn.RootNode;  	}  	if (tnChild != null && tnChild.Expanded && tnChild.ImmedCount > 0) {  		// Right jumps to FirstChild' test LastChild' not FirstChild' so  		// else handles both elements.  		if (direction == TreeNavigation.LastChild) {  			targetRow = sourceRow + tnChild.GetChildOffset (tnChild.ImmedCount - 1);  		}  		else {  			targetRow = sourceRow + tnChild.ImmedSubItemGain + 1;  		}  		targetColumn = sourceColumn;  		retVal = true;  	}  	else if (attemptNextColumn) {  		goto case TreeNavigation.RightColumn;  	}  	break;  case TreeNavigation.RightColumn: {  	// Move right to the next column. Note that this is not a natural  	// thing to do from the tree perspective because the closest element  	// to the right is likely to be only a distant relative of the current  	// node' but the user is unlikely to appreciate this distinction and  	// just wants to move right' so we let them.  	if (nativeSourceColumn == 0 || localColumn > 0) {  		if (columnPermutation == null) {  			if (pos.ParentNode.GetColumnCount (pos.Index) > (localColumn + 1)) {  				targetRow = sourceRow;  				targetColumn = sourceColumn + 1;  				retVal = true;  			}  		}  		else if (expansion.RightColumn < (columnPermutation.VisibleColumnCount - 1)) {  			targetColumn = GetBlankExpansion (sourceRow' expansion.RightColumn + 1' columnPermutation).AnchorColumn;  			targetRow = sourceRow;  			retVal = true;  		}  	}  	else {  		// Walk back up this tree until we get to a subitem root node' tracking  		// offsets as we go.  		tnParent = pos.ParentNode;  		rowOffset = tnParent.GetChildOffset (pos.Index);  		while (!tnParent.SubItemRoot) {  			tnChild = tnParent;  			tnParent = tnChild.Parent;  			rowOffset += tnParent.GetChildOffset (tnChild.Index);  		}  		if (tnParent.ComplexSubItem) {  			--rowOffset;  		}  		tnChild = tnParent;  		tnParent = tnChild.Parent;  		// Find the SUBITEMNODE for the next column and the next column  		// index. The sub item node may be null if the next column is simple.  		SUBITEMNODE snNext = null;  		selectColumn = -1;  		if (columnPermutation == null) {  			if (localColumn < (tnParent.Parent.GetColumnCount (tnParent.Index) - 1)) {  				var sn = tnParent.FirstSubItem;  				while (sn.RootNode != tnChild) {  					sn = sn.NextSibling;  				}  				var snTestNext = sn.NextSibling;  				if (snTestNext != null && (snTestNext.Column - sn.Column) == 1) {  					snNext = snTestNext;  				}  				selectColumn = sourceColumn + 1;  			}  		}  		else {  			if (expansion.RightColumn < (columnPermutation.VisibleColumnCount - 1)) {  				selectColumn = GetBlankExpansion (sourceRow' expansion.RightColumn + 1' columnPermutation).AnchorColumn;  				// Note that column zero has no subitem node' so this covers this case  				// UNDONE_MC: Need local column' not global  				snNext = tnParent.SubItemAtColumn (columnPermutation.GetNativeColumn (selectColumn));  			}  		}  		if (selectColumn != -1) {  			if (snNext != null) {  				var nextGain = snNext.RootNode.TotalCount;  				if (snNext.RootNode.ComplexSubItem) {  					--nextGain;  				}  				else if (!snNext.RootNode.Expanded) {  					nextGain = 0;  				}  				if (nextGain < rowOffset) {  					targetRow = sourceRow - rowOffset + nextGain;  				}  				else {  					targetRow = sourceRow;  				}  			}  			else {  				targetRow = sourceRow - rowOffset;  			}  			targetColumn = selectColumn;  			retVal = true;  		}  	}  	break;  }  case TreeNavigation.NextSibling:  	// Test localColumn. Expandable and simple cells don't have siblings'  	// and all other nodes will give back a localColumn of 0.  	if (localColumn == 0 && pos.Index < (pos.ParentNode.ImmedCount - 1)) {  		targetRow = sourceRow + 1;  		tnChild = pos.ParentNode.GetChildNode (pos.Index);  		if (tnChild != null) {  			targetRow += tnChild.TotalCount;  		}  		targetColumn = sourceColumn;  		retVal = true;  	}  	break;  case TreeNavigation.PreviousSibling:  	if (localColumn == 0 && pos.Index > 0) {  		if (pos.ParentNode.ComplexSubItem) {  			// The parent absolute is -1 and can't be used to give back a real count'   			// so use a more expensive algorithm in this case.  			targetRow = sourceRow - pos.ParentNode.GetChildOffset (pos.Index) + pos.ParentNode.GetChildOffset (pos.Index - 1);  		}  		else {  			targetRow = pos.ParentAbsolute + pos.ParentNode.GetChildOffset (pos.Index - 1);  		}  		targetColumn = sourceColumn;  		retVal = true;  		break;  	}  	break;  case TreeNavigation.Up:  	while (targetRow > 0) {  		expansion = GetBlankExpansion (targetRow - 1' startColumn' columnPermutation);  		targetRow = expansion.TopRow;  		if (startColumn == expansion.AnchorColumn) {  			retVal = true;  			break;  		}  	}  	break;  case TreeNavigation.Down:  	while (expansion.BottomRow < (myRootNode.TotalCount - 1)) {  		// Just return the next non-blank column  		var testRow = expansion.BottomRow + 1;  		expansion = GetBlankExpansion (testRow' startColumn' columnPermutation);  		targetRow = expansion.TopRow;  		if (startColumn == expansion.AnchorColumn && targetRow >= testRow) {  			retVal = true;  			break;  		}  	}  	break;  case TreeNavigation.LeftColumn:  	if (localColumn > 0) {  		if (columnPermutation == null) {  			if (sourceColumn > 0) {  				targetRow = sourceRow;  				targetColumn = sourceColumn - 1;  				retVal = true;  			}  		}  		else if (expansion.LeftColumn > 0) {  			targetRow = sourceRow;  			targetColumn = GetBlankExpansion (targetRow' expansion.LeftColumn - 1' columnPermutation).AnchorColumn;  			retVal = true;  		}  	}  	else {  		// tnParent may have been set already in TreeNavigation.Left' only set it if needed  		// Note that the nativeSourceColumn == 0 case can happen with a columnPermutation only  		if (tnParent == null && nativeSourceColumn != 0) {  			tnParent = pos.ParentNode;  			rowOffset = tnParent.GetChildOffset (pos.Index);  			while (!tnParent.SubItemRoot) {  				tnChild = tnParent;  				tnParent = tnChild.Parent;  				rowOffset += tnParent.GetChildOffset (tnChild.Index);  			}  			if (tnParent.ComplexSubItem) {  				--rowOffset;  			}  		}  		selectColumn = -1;  		SUBITEMNODE snPrev = null;  		if (columnPermutation == null) {  			if (tnParent != null && tnParent.Parent != null) {  				var sn = tnParent.Parent.FirstSubItem;  				SUBITEMNODE snTestPrev = null;  				while (sn.RootNode != tnParent) {  					snTestPrev = sn;  					sn = sn.NextSibling;  				}  				if (snTestPrev != null && (sn.Column - snTestPrev.Column) == 1) {  					snPrev = snTestPrev;  				}  			}  			selectColumn = sourceColumn - 1;  		}  		else if (expansion.LeftColumn > 0) {  			selectColumn = GetBlankExpansion (sourceRow' expansion.LeftColumn - 1' columnPermutation).AnchorColumn;  			if (tnParent != null) {  				// Note that column zero has no subitem node' so this covers this case  				// UNDONE_MC: Need local column' not global  				snPrev = tnParent.Parent.SubItemAtColumn (columnPermutation.GetNativeColumn (selectColumn));  			}  		}  		if (selectColumn != -1) {  			targetColumn = selectColumn;  			retVal = true;  			if (snPrev == null) {  				// The previous column is the parent node or a simple cell. Move  				// to that cell.  				targetRow = sourceRow - rowOffset;  			}  			else {  				// The most closely related node to the left is the 0 node in the  				// previous column. However' this node is not spatially closest  				// to the current cell. The subtle the distinction that the closest  				// cell is only a distant relative of the current one is generally lost  				// on the user' so we just let them move left to the current value.  				var prevGain = snPrev.RootNode.TotalCount;  				if (snPrev.RootNode.ComplexSubItem) {  					--prevGain;  				}  				else if (!snPrev.RootNode.Expanded) {  					prevGain = 0;  				}  				if (prevGain < rowOffset) {  					targetRow = sourceRow - rowOffset + prevGain;  				}  				else {  					targetRow = sourceRow;  				}  			}  		}  	}  	break;  case TreeNavigation.Left:  	if (sourceColumn > 0) {  		if (localColumn > 0 || (pos.Index == 0 && pos.ParentNode.ComplexSubItem)) {  			// Move left one column  			if (columnPermutation == null) {  				targetRow = sourceRow;  				targetColumn = sourceColumn - 1;  				retVal = true;  			}  			else if (expansion.LeftColumn > 0) {  				targetRow = sourceRow;  				targetColumn = GetBlankExpansion (sourceRow' expansion.LeftColumn - 1' columnPermutation).AnchorColumn;  				retVal = true;  			}  			break;  		}  		else if (pos.ParentNode.ComplexSubItem && pos.Index > 0) {  			tnParent = pos.ParentNode;  			rowOffset = tnParent.GetChildOffset (pos.Index) - 1;  			goto case TreeNavigation.LeftColumn;  		}  		else if (nativeSourceColumn == 0 && pos.ParentNode.Index == -1) {  			goto case TreeNavigation.LeftColumn;  		}  	}  	goto case TreeNavigation.Parent;  case TreeNavigation.Right:  	if (MultiColumnSupport) {  		if ((sourceColumn == 0) || (pos.ParentNode.ComplexSubItem && pos.Index == 0) || (localColumn > 0)) {  			if (columnPermutation == null) {  				if (localColumn < (pos.ParentNode.GetColumnCount (pos.Index) - 1)) {  					targetRow = sourceRow;  					targetColumn = sourceColumn + 1;  					retVal = true;  					break;  				}  			}  			else if (expansion.RightColumn < (columnPermutation.VisibleColumnCount - 1)) {  				targetRow = sourceRow;  				targetColumn = GetBlankExpansion (sourceRow' expansion.RightColumn + 1' columnPermutation).AnchorColumn;  				retVal = true;  				break;  			}  		}  		else if (columnPermutation == null) {  			if (sourceColumn < (ColumnCount - 1)) {  				// If firstchild doesn't go anywhere' then attempt  				// to move to the next branch.  				attemptNextColumn = true;  			}  		}  		else if (expansion.RightColumn < (columnPermutation.VisibleColumnCount - 1)) {  			attemptNextColumn = true;  		}  	}  	goto case TreeNavigation.FirstChild;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,LocateObject,The following switch statement is missing a default case: switch (action) {  case TrackingObjectAction.NotTracked:  	// Nothing more we can do' just get out.  	tn = null;  	break;  case TrackingObjectAction.NotTrackedReturnParent:  	if (partialSuccess) {  		retVal = true;  	}  	tn = null;  	break;  case TrackingObjectAction.ThisLevel:  case TrackingObjectAction.NextLevel:  	partialSuccess = true;  	rowOffset = tn.GetChildOffset (row' out rowOffsetSubItemAdjust);  	if (tn.ComplexSubItem) {  		--rowOffset;  	}  	totalRowOffset += rowOffset;  	totalRowOffsetSubItemAdjust += rowOffsetSubItemAdjust;  	totalColumnOffset += column;  	if (!tn.Expanded) {  		changeCount = tn.FullCount;  		subItemChangeCount = tn.ExpandedSubItemGain;  		// Adjust for subsequent ChangeFullCountRecursive call. We  		// want to make this call on the current node so that any  		// subitem expansions are picked up and edit correctly' but  		// we need to avoid the side effects on the current node.  		tn.FullCount -= changeCount;  		tn.FullSubItemGain -= subItemChangeCount;  		if (tnFirstUnexpanded == null) {  			tnFirstUnexpanded = tn;  		}  		Debug.Assert (tn.Branch != null);  		tn.Expanded = true;  		ChangeFullCountRecursive (tn' changeCount' subItemChangeCount' tnFirstUnexpanded' out subItemRemainder);  		totalSubItemChangeCount += subItemRemainder;  		if (!inSubItemTerritory) {  			totalChangeCount += changeCount;  		}  	}  	if (tnFirstUnexpanded == null) {  		firstUnexpandedColumnOffset += column;  		firstUnexpandedRow += rowOffset;  		firstUnexpandedRowSubItemAdjust += rowOffsetSubItemAdjust;  	}  	if (action == TrackingObjectAction.ThisLevel) {  		retVal = true;  		tn = null;  	}  	else {  		// Keep going down the tree  		tnAttachCache = null;  		tnNext = FindIndexedNode (row' tn.FirstChild' ref tnAttachCache);  		// If we have a node with a branch' then it will be expanded if needed  		// in the next pass through the main loop. We only do expansion here if  		// that is not the case' meaning that the branch has never been expanded.  		if (column > 0) {  			// We're being directed down a subitem column. In this case'  			// tnNext is a subitem anchor node.  			if (column < tn.GetColumnCount (row)) {  				var columnStyle = tn.SubItemStyle (column);  				if (0 != (tn.SubItemStyle (column) & SubItemCellStyles.Mixed)) {  					SUBITEMNODE snPrev = null;  					var sn = (tnNext != null) ? tnNext.SubItemAtColumn (column' out snPrev) : null;  					if (sn == null) {  						if (0 != (columnStyle & SubItemCellStyles.Expandable)) {  							// We only handle null for expandable cells.  							// A complex cell would already have been expanded  							// when the branch initially loaded.  							ExpansionOptions expandOptions;  							var tnSubItem = ExpandTreeNode (tn' null' row' column' ObjectStyle.SubItemExpansion' false' out expandOptions' out changeCount' out subItemChangeCount);  							if (tnSubItem != null) {  								if (tnNext == null) {  									// Create a new anchor  									tnNext = new TREENODE_Complex ();  									tnNext.Index = row;  									InsertIndexedNode (tn' tnNext' ref tnAttachCache);  								}  								tnSubItem.SubItemRoot = true;  								// UNDONE: Would be nice to store a global column in Index  								tnSubItem.Index = VirtualTreeConstant.NullIndex;  								tnSubItem.Parent = tnNext;  								sn = new SUBITEMNODE ();  								sn.Column = column;  								sn.RootNode = tnSubItem;  								if (snPrev == null) {  									sn.NextSibling = tnNext.FirstSubItem;  									tnNext.FirstSubItem = sn;  								}  								else {  									sn.NextSibling = snPrev.NextSibling;  									snPrev.NextSibling = sn;  								}  								// Adjust for ChangeFullCountRecursive call  								tnSubItem.FullCount -= changeCount;  								tnSubItem.FullSubItemGain -= subItemChangeCount;  								if (tnFirstUnexpanded == null) {  									tnFirstUnexpanded = tnSubItem;  									totalChangeCount += changeCount;  									totalSubItemChangeCount += subItemChangeCount;  								}  								else {  									inSubItemTerritory = true;  									ChangeFullCountRecursive (tnSubItem' changeCount' subItemChangeCount' tnFirstUnexpanded' out subItemRemainder);  									totalSubItemChangeCount += subItemRemainder;  								}  								tnNext = tnSubItem;  							}  							else {  								// Break the outer loop  								tnNext = null;  							}  						}  					}  					else {  						tnNext = sn.RootNode;  						inSubItemTerritory = tnFirstUnexpanded != null;  					}  				}  			}  		}  		else if (tnNext == null || tnNext.Branch == null) {  			var insertNode = tnNext == null;  			tnNext = ExpandTreeNode (tn' tnNext' row' 0' false' out changeCount' out subItemChangeCount);  			if (insertNode) {  				// If the branch was set coming in' then the node already existed  				// for a subitem expansion and is already in the list' so we  				// only insert if we created a node for this position.  				InsertIndexedNode (tn' tnNext' ref tnAttachCache);  			}  			// Adjust back to prepare for the ChangeFullCountRecursive loop that will happen  			// eventually. If this is the first expanded' then the one below will do nothing.  			if (tnFirstUnexpanded == null) {  				tnFirstUnexpanded = tnNext;  				tnNext.FullSubItemGain -= subItemChangeCount;  				tnNext.FullCount -= changeCount;  				totalChangeCount += changeCount;  				totalSubItemChangeCount += subItemChangeCount;  			}  			else {  				ChangeFullCountRecursive (tn' changeCount' subItemChangeCount' tnFirstUnexpanded' out subItemRemainder);  				totalSubItemChangeCount += subItemRemainder;  				if (!inSubItemTerritory) {  					totalChangeCount += changeCount;  				}  			}  		}  		tn = tnNext;  	}  	break;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNodeLevelShift,The following switch statement is missing a default case: switch (action) {  case BranchLocationAction.RetrieveNewBranch:  	// This only makes sense at the last insertion level  	if (level == maxInsertLevel) {  		//Use the returned Index to retrieve a new list. Go ahead and  		//leave the current node in the kill list and get a brand new one.  		tnPrev = tnChild;  		try {  			tnChild = ExpandTreeNode (tnCurParent' null' attachIndex' 0' false' out expansionCount' out subItemIncr);  			tnPrev.TransferPositionTrackerTo (tnChild);  			changeCount += expansionCount;  			subItemChange += subItemIncr;  			if (level == 0) {  				InsertIndexedNode (tnCurParent' tnChild' ref tnLastChildPrimary);  			}  			else {  				tnLastChildSecondary = null;  				InsertIndexedNode (tnCurParent' tnChild' ref tnLastChildSecondary);  			}  		}  		catch {  			// Ignore an error here' just let the expansion be lost.  			level = maxInsertLevel + 1;  		}  	}  	else {  		goto case BranchLocationAction.DiscardBranch;  	}  	break;  case BranchLocationAction.DiscardBranch:  	// The deletion of items in this branch have already been  	// accounted for. Just leave it in the dummy list and discard  	// it when we're done reattaching.  	tnPrev = tnChild;  	level = maxInsertLevel + 1;  	break;  case BranchLocationAction.KeepBranchAtThisLevel:  case BranchLocationAction.KeepBranch:  	// Detach from the list of nodes to insert  	tnPrev.NextSibling = tnNext;  	tnChild.NextSibling = null;  	if (action == BranchLocationAction.KeepBranchAtThisLevel) {  		// Easy to do' just pretend we're at the last level and move on.  		level = maxInsertLevel;  	}  	if (level == 0) {  		// First level down' we do a little more work here than in the secondary branches  		// Validate the attach index. We don't want to put a new  		// branch on top of one outside our edit range.  		if (start != -1 && (attachIndex < start || attachIndex >= maxIndexReattach)) {  			// Undo detach  			tnChild.NextSibling = tnPrev.NextSibling;  			tnPrev.NextSibling = tnChild;  			goto case BranchLocationAction.DiscardBranch;  		}  		else if (insertLevels == 0 || level == maxInsertLevel) {  			// Removing nodes only' just reattach  			if (expandBranch) {  				changeCount += tnChild.FullCount;  				subItemChange += tnChild.ExpandedSubItemGain;  			}  			subItemChange += tnChild.ImmedSubItemGain;  			tnChild.Index = attachIndex;  			InsertIndexedNode (tn' tnChild' ref tnLastChildPrimary);  		}  		else {  			tnNextParent = FindIndexedNode (attachIndex' (tnLastUntouched == null) ? tn.FirstChild : tnLastUntouched.NextSibling' ref tnLastChildPrimary);  			if (tnNextParent != null) {  				if (expandBranch && !tnNextParent.Expanded) {  					tnNextParent.Expanded = true;  					changeCount += tnNextParent.FullCount;  					subItemChange += tnNextParent.ExpandedSubItemGain;  				}  			}  			else {  				tnNextParent = ExpandTreeNode (tnCurParent' null' attachIndex' 0' false' out expansionCount' out dummyRequireSubItemExpansion);  				tnNextParent.Expanded = expandBranch;  				if (expandBranch) {  					changeCount += tnNextParent.FullCount;  					subItemChange += tnNextParent.ExpandedSubItemGain;  				}  				subItemChange += tnNextParent.ImmedSubItemGain;  				InsertIndexedNode (tnCurParent' tnNextParent' ref tnLastChildPrimary);  			}  			tnCurParent = tnNextParent;  		}  	}  	else if (level == maxInsertLevel) {  		// Reattach existing node to current parent  		tnLastChildSecondary = null;  		tnChild.Index = attachIndex;  		InsertIndexedNode (tnCurParent' tnChild' ref tnLastChildSecondary);  		if (expandBranch) {  			changeCount += tnChild.FullCount;  			subItemChange += tnChild.FullSubItemGain;  		}  		if (tnCurParent != tn) {  			ChangeFullCountRecursive (tnCurParent' tnChild.Expanded ? tnChild.FullCount : 0' tnChild.FullSubItemGain' tn);  		}  	}  	else {  		tnLastChildSecondary = null;  		tnNextParent = FindIndexedNode (attachIndex' tnCurParent.FirstChild' ref tnLastChildSecondary);  		if (tnNextParent != null) {  			if (expandBranch && !tnNextParent.Expanded) {  				tnNextParent.Expanded = true;  				changeCount += tnNextParent.FullCount;  				subItemChange += tnNextParent.FullSubItemGain;  				ChangeFullCountRecursive (tnCurParent' tnNextParent.FullCount' tnNextParent.FullSubItemGain' tn);  			}  		}  		else {  			tnNextParent = ExpandTreeNode (tnCurParent' null' attachIndex' 0' false' out expansionCount' out dummyRequireSubItemExpansion);  			tnNextParent.Expanded = expandBranch;  			if (expandBranch) {  				changeCount += tnNextParent.FullCount;  				subItemChange += tnNextParent.FullSubItemGain;  				ChangeFullCountRecursive (tnCurParent' tnNextParent.FullCount' tnNextParent.FullSubItemGain' tn);  			}  			InsertIndexedNode (tnCurParent' tnNextParent' ref tnLastChildSecondary);  		}  		tnCurParent = tnNextParent;  	}  	break;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,CollectChildBranches,The following switch statement is missing a default case: switch (testResult) {  case TestReattachBranchResult.ReattachIntact:  	return;  case TestReattachBranchResult.Realign:  	tnProcessParent.ImmedCount = tnProcessParent.Branch.VisibleItemCount;  	if ((tnProcessParent.FirstPositionTracker != null) && !tnProcessParent.DefaultTracking) {  		NODEPOSITIONTRACKER_Dynamic.DetachTrackers (ref tnProcessParent.FirstPositionTracker' ref detachedTrackers);  	}  	goto case TestReattachBranchResult.ReattachChildren;  case TestReattachBranchResult.ReattachChildren:  	// Allow processing to continue below  	tnProcessParent.FullCount = tnProcessParent.ImmedCount;  	tnProcessParent.ImmedSubItemGain = 0;  	tnProcessParent.FullSubItemGain = 0;  	break;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTree,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\Provider\VirtualTree.cs,RealignTreeNode,The following switch statement is missing a default case: switch (action) {  case BranchLocationAction.DiscardBranch:  	//Get rid of list' just like in norelocate case  	if (tnChild.Expanded) {  		ChangeCount -= tnChild.FullCount;  	}  	FreeRecursive (ref tnChild);  	break;  case BranchLocationAction.KeepBranchAtThisLevel:  case BranchLocationAction.KeepBranch:  	InsertIndexedNode (tn' tnChild' ref tnLastChild);  	break;  case BranchLocationAction.RetrieveNewBranch:  	//Use the returned Index to retrieve a new list  	ReloadIndex = tnChild.Index;  	ChangeCount -= tnChild.FullCount;  	FreeRecursive (ref tnChild);  	try {  		int subItemIncr;  		tnChild = ExpandTreeNode (tn' null' ReloadIndex' COLUMN_ZERO/*UNDONE_MC*/' false' out ExpansionCount' out subItemIncr);  	}  	catch {  		// Ignore an error here' just let the expansion be lost.  		break;  	}  	goto case BranchLocationAction.KeepBranch;  }  
Missing Default,Microsoft.Data.Tools.VSXmlDesignerBase.VirtualTreeGrid,VirtualTreeHeaderControl,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VirtualTreeGrid\UI\HeaderControl.cs,PreProcessMessage,The following switch statement is missing a default case: switch (msg.Msg) {  case NativeMethods.WM_KEYDOWN:  	if ((Keys)msg.WParam == Keys.Escape) {  		SetFlag (StateFlags.DragCanceled' true);  	}  	break;  }  
Missing Default,Microsoft.Data.Entity.Design.Package,PanZoomPanel,C:\repos\EdocGroup_efprime\src\EFTools\DesignXmlCore\VisualStudio\UI\PanZoomPanel.cs,OnMouseMove,The following switch statement is missing a default case: switch (_mouseMode) {  case MouseMode.None: {  	Cursor = Cursors.SizeAll;  	break;  }  case MouseMode.Move: {  	var p = e.Location;  	var imageLocation = ImageLocation;  	p.Offset (-imageLocation.X' -imageLocation.Y);  	var imageBounds = ImageViewBounds;  	p.Offset (-imageBounds.Width / 2' -imageBounds.Height / 2);  	SetViewLocation (ImageToDiagram (p));  	break;  }  }  
