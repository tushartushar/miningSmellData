Implementation smell,Namespace,Class,File,Method,Description
Long Method,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,InvokeInternal,The method has 147 lines of code.
Long Method,Microsoft.Data.Entity.Design.Model.Commands,DeleteInheritanceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteInheritanceCommand.cs,InvokeInternal,The method has 101 lines of code.
Long Method,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The method has 104 lines of code.
Long Method,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,ProcessMappingFragment,The method has 102 lines of code.
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateEnumTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEnumTypeCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionCommand.cs,GetParameterInfos,Cyclomatic complexity of the method is 16
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 25
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,AddChangeComplexTypePropertiesCommands,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,DeleteUnmappedStorageEntitySetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteUnmappedStorageEntitySetsCommand.cs,FindMappedStorageEntitySets,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,DeleteUnmappedStorageEntitySetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteUnmappedStorageEntitySetsCommand.cs,FindMappedConceptualObjects,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexTypeFromPropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexTypeFromPropertiesCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportTypeMappingCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionImportCommand.cs,UpdateFunctionImportReturnType,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateDiagramItemForEFElementsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateDiagramItemForEFElementsCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexPropertyCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexTypePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexTypePropertyCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 16
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateAssociationSetCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateAssociationSetCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateEntitySetCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntitySetCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 19
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentScalarPropertyCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionMappingCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,CreateFunctionScalarPropertyInAssociationEnd,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateInheritanceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateInheritanceCommand.cs,PreInvoke,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateInheritanceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateInheritanceCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,DeleteInheritanceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteInheritanceCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 18
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,DeleteUnboundMappingsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteUnboundMappingsCommand.cs,RecursiveDeleteUnboundElements,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,RefreshKeysCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\RefreshKeysCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,RenameConceptualAliasCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\RenameConceptualAliasCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,RenameConceptualNamespaceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\RenameConceptualNamespaceCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,SetKeyPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetKeyPropertyCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,SetPropertyFacetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetPropertyFacetsCommand.cs,InvokeInternal,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,UpdateConceptualPropertiesFromArtifact,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,Cyclomatic complexity of the method is 17
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindMatchingConceptualEntityTypeInExistingArtifact,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindMatchingPropertyInExistingArtifactEntityType,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,ShouldCreateAssociationGivenReferentialConstraint,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,Cyclomatic complexity of the method is 19
Complex Method,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,OnBeforeModelChangesCommitted,Cyclomatic complexity of the method is 19
Complex Method,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectEntityTypeShapeCommand,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectAssociationConnectorCommand,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectInheritanceConnectorCommand,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model,EFNormalizableItemDefaults,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EFNormalizableItemDefaults.cs,DefaultNameNormalizerForMSL,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,Parse,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleElement,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleEntityModelElement,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,DetermineIfArtifactIsStructurallySafe,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ExpectEFObjectForXObject,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,CreateValidSimpleIdentifier,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniqueNameInternal,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindEntityTypeMapping,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsPropertyEquivalentToSchemaColumn,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindNavigationPropertyForFunctionAssociationEnd,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,DeterminePrincipalDependentAssociationEnds,Cyclomatic complexity of the method is 14
Complex Method,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetRelatedEntityTypes,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindTablesMappedDirectlyToConceptualEntityType,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model,MultiItemBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MultiItemBinding.cs,UpdateRefNameUsingReplacement,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Entity.Design.Model,SingleItemBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\SingleItemBinding.cs,UpdateRefNameUsingReplacement,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Entity.Design.Model,EDMXModelChangeEventArgs,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EDMXModelChangeEventArgs.cs,GetChangeTypeFromEfiChange,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Entity.Design.Model.Entity,EntitiesClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntitiesClipboardFormat.cs,EntitiesClipboardFormat,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model.Entity,ParameterNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\ParameterNameNormalizer.cs,NameNormalizer,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Entity,AssociationNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\AssociationNameNormalizer.cs,NameNormalizer,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model.Entity,AssociationSetEndNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\AssociationSetEndNameNormalizer.cs,NameNormalizer,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Entity,AssociationSetNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\AssociationSetNameNormalizer.cs,NameNormalizer,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model.Entity,EntitySetNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntitySetNameNormalizer.cs,NameNormalizer,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Entity.Design.Model.Entity,ReferentialConstraintRole,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\ReferentialConstraintRole.cs,ReferentialConstraintPropertyRefNameNormalizer,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Entity,FunctionImportNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\FunctionImportNameNormalizer.cs,NameNormalizer,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model.Entity,PropertyNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyNameNormalizer.cs,NameNormalizer,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Entity.Design.Model.Entity,Property,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\Property.cs,RemoveAllFacetsExceptNullable,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,Initialize,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,PropagateAllStoragePropertyFacets,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,SynchronizeFacet,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoreGeneratedPatternToStorageModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoreGeneratedPatternToStorageModel.cs,Invoke,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoreGeneratedPatternToStorageModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoreGeneratedPatternToStorageModel.cs,PropagateConceptualSGPToStorageProperty,Cyclomatic complexity of the method is 11
Complex Method,Microsoft.Data.Entity.Design.Model.Integrity,PropagateViewKeysToStorageModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateViewKeysToStorageModel.cs,PropagateKeyToStorageColumn,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model.Integrity,CreateForeignKeyProperties,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\CreateForeignKeyProperties.cs,Invoke,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Entity.Design.Model.Integrity,EnforceAssociationSetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceAssociationSetMappingRules.cs,Invoke,Cyclomatic complexity of the method is 13
Complex Method,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,ProcessMappingFragment,Cyclomatic complexity of the method is 19
Complex Method,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,ProcessModificationFunction,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,Invoke,Cyclomatic complexity of the method is 15
Complex Method,Microsoft.Data.Entity.Design.Model.Mapping,EntityTypeMappingTypeNameBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntityTypeMappingTypeNameBinding.cs,UpdateRefNameUsingReplacement,Cyclomatic complexity of the method is 12
Complex Method,Microsoft.Data.Entity.Design.Model.Mapping,PropertyMappingColumnNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\PropertyMappingColumnNameNormalizer.cs,NameNormalizer,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Entity.Design.Model.Mapping,ProperyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\PropertyMappingNameNormalizer.cs,NormalizeNameFromAssociationSetEnd,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,IsOpenInEditorError,Cyclomatic complexity of the method is 9
Complex Method,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationSummary.cs,ConstructAssociationSummary,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationIdentityForAssociationSetMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationIdentityForAssociationSetMapping.cs,Equals,Cyclomatic complexity of the method is 10
Complex Method,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationIdentity,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationIdentity.cs,IsCoveredBy,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ExistingModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ExistingModelSummary.cs,RecordInheritanceAndEntityTypeMappings,Cyclomatic complexity of the method is 8
Complex Method,Microsoft.Data.Entity.Design.Model.Mapping.ChildCollectionBuilders,AssociationSetEndMappingBuilder,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\ChildCollectionBuilders\AssociationSetEndMappingBuilder.cs,Build,Cyclomatic complexity of the method is 11
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateEnumTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEnumTypeCommand.cs,CreateEnumTypeCommand,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionCommand.cs,CreateFunctionCommand,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionCommand.cs,CreateFunctionCommand,The method has 12 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,DeleteStaleFKsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteStaleFKsCommand.cs,DeleteStaleAssociations,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,SetEnumTypeFacetCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetEnumTypeFacetCommand.cs,SetEnumTypeFacetCommand,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,AddCreateComplexTypePropertyCommands,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,AddChangeComplexTypePropertiesCommands,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyTreeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyTreeCommand.cs,CreateFunctionScalarPropertyTreeCommand,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionImportCommand.cs,ChangeFunctionImportCommand,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionImportCommand.cs,ChangeFunctionImportCommand,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionScalarPropertyCommand.cs,ChangeFunctionScalarPropertyCommand,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexPropertyCommand.cs,CreateComplexProperty,The method has 10 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,InvokeInternal,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateNavigationPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateNavigationPropertyCommand.cs,CreateNavigationPropertyCommand,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,CreateConceptualAssociationCommand,The method has 9 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeCommand.cs,CreateConceptualEntityTypeAndEntitySetAndProperty,The method has 9 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeCommand.cs,CreateEntityTypeAndEntitySetAndProperty,The method has 10 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeMappingCommand.cs,CloneEntityTypeMapping,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,CreateEntityTypeShapeAndConnectorsInDiagram,The method has 10 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportCommand.cs,UpdateFunctionImportParameters,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentConditionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentConditionCommand.cs,CreateConditionUsingEntity,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,CreateFunctionScalarPropertyCommand,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,CreateFunctionScalarPropertyCommand,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,CreateFunctionScalarPropertyInAssociationEnd,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualConstraintOrMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualConstraintOrMapping.cs,InvokeInternal,The method has 14 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreatePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreatePropertyCommand.cs,CreatePropertyCommand,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreatePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreatePropertyCommand.cs,CreateProperty,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreatePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreatePropertyCommand.cs,CreateConceptualProperty,The method has 17 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreatePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreatePropertyCommand.cs,CreateStorageProperty,The method has 13 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateResultBindingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateResultBindingCommand.cs,CreateResultBindingCommand,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateEndScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEndScalarPropertyCommand.cs,CreateEndScalarPropertyCommand,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,CreateStorageAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateStorageAssociationCommand.cs,CreateStorageAssociationCommand,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,SetConceptualPropertyFacetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetConceptualPropertyFacetsCommand.cs,SetConceptualPropertyFacetsCommand,The method has 11 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,SetConceptualPropertyFacetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetConceptualPropertyFacetsCommand.cs,SetConceptualPropertyFacetsCommand,The method has 11 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,SetKeyPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetKeyPropertyCommand.cs,SetKeyPropertyCommand,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,SetPropertyFacetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetPropertyFacetsCommand.cs,SetPropertyFacetsCommand,The method has 9 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,SetPropertyFacetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetPropertyFacetsCommand.cs,SetPropertyFacetsCommand,The method has 9 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,SetPropertyFacetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetPropertyFacetsCommand.cs,SetPropertyFacetsCommand,The method has 9 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEntitySetMapping,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The method has 10 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddAssociationSetMappingForConceptualAssociation,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociationSetMapping,The method has 7 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,ShouldCreateAssociationGivenReferentialConstraint,The method has 10 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddReferentialConstraintForAssociation,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,LogWarningMessageForReferentialConstraintProperties,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectEntityTypeShapeCommand,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectAssociationConnectorCommand,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectInheritanceConnectorCommand,The method has 8 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model,DiagramArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\DiagramArtifact.cs,GetVerifyModelIntegrityVisitor,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,GetVerifyModelIntegrityVisitor,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniqueName,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniqueNameInternal,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetUniqueTableNameInSchema,The method has 6 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindMappingFragment,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetUniqueConceptualPropertyName,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetUniquePropertyName,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,Initialize,The method has 13 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationSummary.cs,TraceString,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ExistingModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ExistingModelSummary.cs,TraceString,The method has 15 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,UpdatedModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\UpdatedModelSummary.cs,TraceString,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Visitor,VerifyDiagramModelIntegrityVisitor,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Visitor\VerifyDiagramModelIntegrityVisitor.cs,VerifyDiagramModelIntegrityVisitor,The method has 5 parameters.
Long Parameter List,Microsoft.Data.Entity.Design.Model.Visitor,VerifyEscherModelIntegrityVisitor,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Visitor\ModelVerifierVisitor.cs,VerifyEscherModelIntegrityVisitor,The method has 5 parameters.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,CreateMatchingFunctionImportCommand,The length of the parameter shouldCreateMatchingFunctionImport is 34.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,DeleteUnmappedStorageEntitySetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteUnmappedStorageEntitySetsCommand.cs,UnmappedStorageEntitySetsIfDelete,The length of the parameter allCSideObjectsThatWouldBeDeleted is 33.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,DeleteUnmappedStorageEntitySetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteUnmappedStorageEntitySetsCommand.cs,UnmappedStorageEntitySetsIfDelete,The length of the parameter storageEntitySetsAtRiskOfDeletion is 33.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,DeleteUnmappedStorageEntitySetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteUnmappedStorageEntitySetsCommand.cs,UnmappedStorageEntitySetsIfDelete,The length of the parameter cSideObjectsThatWouldBeDeleted is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,DeleteUnmappedStorageEntitySetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteUnmappedStorageEntitySetsCommand.cs,UnmappedStorageEntitySetsIfDelete,The length of the parameter cSideObjectsMappedToStorageEntitySetAtRiskOfDeletion is 52.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,DeleteUnmappedStorageEntitySetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteUnmappedStorageEntitySetsCommand.cs,ConceptualObjectsToBeDeleted,The length of the parameter cSideObjectsThatWouldBeDeleted is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,DeleteUnmappedStorageEntitySetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteUnmappedStorageEntitySetsCommand.cs,FindMappedStorageEntitySets,The length of the parameter cSideObjectsThatWouldBeDeleted is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,DeleteUnmappedStorageEntitySetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteUnmappedStorageEntitySetsCommand.cs,FindMappedStorageEntitySets,The length of the parameter storageEntitySetsAtRiskOfDeletion is 33.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportTypeMappingCommand.cs,CreateFunctionImportTypeMappingCommand,The length of the parameter createFunctionImportMappingCmd is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportTypeMappingCommand.cs,CreateFunctionImportTypeMappingCommand,The length of the parameter createFunctionImportMappingCmd is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,ChangeAssociationEndCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeAssociationEndCommand.cs,InvokeInternal,The length of the parameter endPropertiesInAssocSetMappings is 31.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,CreateEntityTypeShapeAndConnectorsInDiagram,The length of the parameter relatedEntityTypesNotInDiagram is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,DeleteChangedIdentityMappingsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteChangedIdentityMappingsCommand.cs,InvokeInternal,The length of the parameter storageEntitySetsWithSameNameButDifferentIdentity is 49.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,DeleteChangedIdentityMappingsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteChangedIdentityMappingsCommand.cs,InvokeInternal,The length of the parameter storageFunctionsWithSameNameButDifferentIdentity is 48.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,DeleteChangedIdentityMappingsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteChangedIdentityMappingsCommand.cs,FindNewStorageEntitySetsWithSameName,The length of the parameter storageEntitySetsWithSameNameButDifferentIdentity is 49.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,DeleteChangedIdentityMappingsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteChangedIdentityMappingsCommand.cs,FindNewStorageFunctionsWithSameName,The length of the parameter storageFunctionsWithSameNameButDifferentIdentity is 48.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,RenameConceptualAliasCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\RenameConceptualAliasCommand.cs,InvokeInternal,The length of the parameter allElementsWithConceptualNamespaceSymbol is 40.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,RenameConceptualNamespaceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\RenameConceptualNamespaceCommand.cs,InvokeInternal,The length of the parameter allElementsWithConceptualNamespaceSymbol is 40.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,InvokeInternal,The length of the parameter previousStorageEntityContainerName is 34.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,RetargetMappingsForRenamedStorageObjects,The length of the parameter preExistingStorageEntityContainer is 33.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,RetargetMappingsForRenamedStorageObjects,The length of the parameter newStorageEntityEntityContainer is 31.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,RetargetMappingsForRenamedStorageEntitySets,The length of the parameter preExistingStorageEntityContainer is 33.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,RetargetMappingsForRenamedStorageEntitySets,The length of the parameter newStorageEntityEntityContainer is 31.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,ReplaceSsdl,The length of the parameter existingStorageModelParentNode is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,UpdateOldDatabaseObjectReferencesToNewNames,The length of the parameter existingDatabaseObjectToNewNameMappings is 39.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,SetKeyPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetKeyPropertyCommand.cs,SetKeyPropertyCommand,The length of the parameter isRemovingDerivedKeyForInheritance is 34.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,SetPropertyFacetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetPropertyFacetsCommand.cs,ProcessPreReqCommands,The length of the parameter createComplexTypePropertyCommand is 32.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,InvokeInternal,The length of the parameter tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact is 57.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualEntityTypesFromArtifact,The length of the parameter entityTypesFromTempArtifactToBeAdded is 36.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualEntityTypesFromArtifact,The length of the parameter tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact is 57.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualEntityTypesFromArtifact,The length of the parameter newEntityTypeInExistingArtifact is 31.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,UpdateConceptualPropertiesFromArtifact,The length of the parameter cSideEntityTypesToBeUpdatedFromTempArtifact is 43.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,UpdateConceptualPropertiesFromArtifact,The length of the parameter entityTypesToBeUpdatedDatabaseObjects is 37.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,UpdateConceptualPropertiesFromArtifact,The length of the parameter rootExistingEntityTypesForDbObj is 31.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The length of the parameter tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact is 57.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The length of the parameter end1EntityTypeInExistingArtifact is 32.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The length of the parameter end2EntityTypeInExistingArtifact is 32.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindNewProperties,The length of the parameter tempArtifactPropertiesForDbObj is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindNewAssociations,The length of the parameter tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact is 57.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The length of the parameter tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact is 57.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The length of the parameter existingEntityTypesForAssocTable is 32.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindSSidePropInExistingArtifact,The length of the parameter sSidePropSymbolInTempArtifactSet is 32.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindMatchingConceptualEntityTypeInExistingArtifact,The length of the parameter tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact is 57.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindMatchingPropertyInExistingArtifactEntityType,The length of the parameter propertyIdFromExistingArtifact is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEntitySetMapping,The length of the parameter existingEntityContainerMapping is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEntitySetMapping,The length of the parameter tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact is 57.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the parameter end1EntityTypeInExistingArtifact is 32.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the parameter end2EntityTypeInExistingArtifact is 32.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the parameter tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact is 57.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the parameter principalPropertiesInExistingArtifact is 37.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the parameter dependentPropertiesInExistingArtifact is 37.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddAssociationSetMappingForConceptualAssociation,The length of the parameter tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact is 57.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddAssociationSetMappingForConceptualAssociation,The length of the parameter storeEntitySetInExistingArtifact is 32.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociationSetMapping,The length of the parameter existingEntityContainerMapping is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociationSetMapping,The length of the parameter tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact is 57.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,ShouldCreateAssociationGivenReferentialConstraint,The length of the parameter end1EntityTypeInExistingArtifact is 32.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,ShouldCreateAssociationGivenReferentialConstraint,The length of the parameter end2EntityTypeInExistingArtifact is 32.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,ShouldCreateAssociationGivenReferentialConstraint,The length of the parameter principalPropertiesInExistingArtifact is 37.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,ShouldCreateAssociationGivenReferentialConstraint,The length of the parameter dependentPropertiesInExistingArtifact is 37.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddReferentialConstraintForAssociation,The length of the parameter principalPropertiesInExistingArtifact is 37.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddReferentialConstraintForAssociation,The length of the parameter dependentPropertiesInExistingArtifact is 37.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddReferentialConstraintForAssociation,The length of the parameter principalEndInExistingArtifact is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddReferentialConstraintForAssociation,The length of the parameter dependentEndInExistingArtifact is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the parameter tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact is 57.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the parameter spCSideEntityTypeinTempArtifact is 31.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the parameter spSSideEntityTypeinTempArtifact is 31.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the parameter csdlEntityTypeInExistingArtifact is 32.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the parameter ssdlEntityTypeInExistingArtifact is 32.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the parameter sSidePropertyToBeMappedInTempArtifact is 37.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the parameter sSidePropertyToBeMappedInExistingArtifact is 41.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateModelFromDatabaseCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateModelFromDatabaseCommand.cs,InvokeInternal,The length of the parameter deleteChangedIdentityMappingsCommand is 36.
Long Identifier,Microsoft.Data.Entity.Design.Model.Commands,UpdateModelFromDatabaseCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateModelFromDatabaseCommand.cs,InvokeInternal,The length of the parameter shouldSynchronizePropertyFacets is 31.
Long Identifier,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectAssociationConnectorCommand,The length of the parameter deleteAssociationConnectorCommand is 33.
Long Identifier,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectInheritanceConnectorCommand,The length of the parameter deleteInheritanceConnectorCommand is 33.
Long Identifier,Microsoft.Data.Entity.Design.Model,MetadataConverterDriver,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\MetadataConverterDriver.cs,CreateConverterHandler,The length of the parameter ssdlProviderAttributesConverter is 31.
Long Identifier,Microsoft.Data.Entity.Design.Model,MetadataConverterDriver,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\MetadataConverterDriver.cs,CreateConverterHandler,The length of the parameter useStrongSpatialTypesConverter is 30.
Long Identifier,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetUniqueConceptualPropertyName,The length of the parameter allDistinctPropertyNamesInInheritanceTree is 41.
Long Identifier,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,DetermineCurrentInheritanceStrategy,The length of the parameter tablesMappedToThisEntityTypeWithAncestorInfo is 44.
Long Identifier,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,SynchronizeFacet,The length of the parameter sSideDefaultableValueDefaultValue is 33.
Long Identifier,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,SynchronizeFacet,The length of the parameter cSideDefaultableValueDefaultValue is 33.
Long Identifier,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,DeriveMappingPlanRecurse,The length of the parameter hierarchyHasUnconditionalIsTypeOfMapping is 40.
Long Identifier,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,DeriveMappingPlanRecurse,The length of the parameter hierarchyHasUnconditionalIsTypeOfMappingForChildren is 51.
Long Identifier,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,RuntimeMetadataValidator,The length of the parameter targetEntityFrameworkRuntimeVersion is 35.
Long Identifier,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ExistingModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ExistingModelSummary.cs,GetConceptualEntityTypesForDatabaseObject,The length of the parameter entityTypeNormalizedNamesForDbObj is 33.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeEnumUnderlyingTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeEnumUnderlyingTypeCommand.cs,InvokeInternal,The length of the statement  "		throw new CommandValidationFailedException (String.Format (CultureInfo.CurrentCulture' Resources.Incorrect_Enum_UnderlyingType' NewTypeName)); " is 142.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEnumTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEnumTypeCommand.cs,InvokeInternal,The length of the statement  "	var cmd = new CreateEnumTypeCommand (_clipboardEnumType.Name' _clipboardEnumType.UnderlyingType' _clipboardEnumType.ExternalTypeName' _clipboardEnumType.IsFlag' true); " is 167.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEnumTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEnumTypeCommand.cs,InvokeInternal,The length of the statement  "		CommandProcessor.InvokeSingleCommand (cpc' new CreateEnumTypeMemberCommand (cmd' member.MemberName' member.MemberValue)); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEnumTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEnumTypeCommand.cs,InvokeInternal,The length of the statement  "	if (String.IsNullOrWhiteSpace (UnderlyingType) == false && ModelHelper.UnderlyingEnumTypes.Count (t => String.CompareOrdinal (t.Name' UnderlyingType) == 0) == 0) { " is 163.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEnumTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEnumTypeCommand.cs,InvokeInternal,The length of the statement  "		throw new CommandValidationFailedException (String.Format (CultureInfo.CurrentCulture' Resources.Incorrect_Enum_UnderlyingType' UnderlyingType)); " is 145.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEnumTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEnumTypeCommand.cs,InvokeInternal,The length of the statement  "	if (String.IsNullOrWhiteSpace (UnderlyingType) == false && String.CompareOrdinal (enumType.UnderlyingType.DefaultValue' UnderlyingType) != 0) { " is 143.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEnumTypeMemberCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEnumTypeMemberCommand.cs,InvokeInternal,The length of the statement  "	// Note that member names are case sensitive so it is perfectly legal to have members with the same names but differs in case (for e.g. member vs. MEMBER) " is 154.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEnumTypeMemberCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEnumTypeMemberCommand.cs,InvokeInternal,The length of the statement  "	var type = ModelHelper.UnderlyingEnumTypes.FirstOrDefault (t => String.CompareOrdinal (t.Name' EnumType.UnderlyingType.Value) == 0); " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEnumTypeMemberCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEnumTypeMemberCommand.cs,InvokeInternal,The length of the statement  "			throw new CommandValidationFailedException (String.Format (CultureInfo.CurrentCulture' Resources.BadEnumTypeMemberValue' Value)); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionCommand.cs,GetCreateFunctionCommandFromDataSchemaProcedure,The length of the statement  "		createFunctionCommand = new CreateFunctionCommand (name: ModelHelper.CreateValidSimpleIdentifier (procedure.Name)' schemaName: procedure.Schema' isNiladic: !procedure.RawParameters.Any ()' isAggregate: false' // figure out if there's some way to determine this from IDataSchemaProcedure " is 286.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionCommand.cs,GetCreateFunctionCommandFromDataSchemaProcedure,The length of the statement  "		commandText: null' returnType: GetReturnType (procedure' artifact)' storeFunctionName: procedure.Name' parameterInfos: GetParameterInfos (procedure' artifact)' dataSchemaProcedure: procedure' bindingAction: bindingAction); " is 222.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionCommand.cs,GetCreateFunctionCommandFromDataSchemaProcedure,The length of the statement  "		createFunctionCommand = new CreateFunctionCommand (name: ModelHelper.CreateValidSimpleIdentifier (procedure.Name)' storeFunctionName: procedure.Name' schemaName: procedure.Schema' commandText: null' parameterInfos: GetParameterInfos (procedure' artifact)' dataSchemaProcedure: procedure' bindingAction: bindingAction); " is 318.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionCommand.cs,GetParameterInfos,The length of the statement  "	foreach (var dataSchemaParam in procedure.RawParameters.Where (p => p != null && p.Direction != ParameterDirection.ReturnValue)) { " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionCommand.cs,ValidateParameterInfo,The length of the statement  "			throw new ArgumentException (String.Format (CultureInfo.CurrentCulture' Resources.BadFunctionParameterType' paramDev.Name)); " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionCommand.cs,GetParameterType,The length of the statement  "	var type = ModelHelper.GetPrimitiveType (artifact.StorageModel ()' parameter.NativeDataType' parameter.ProviderDataType); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionCommand.cs,GetParameterType,The length of the statement  "	Debug.Fail ("Unable to find EDM primitive type for DB type:" + parameter.NativeDataType + "' provider data type:" + parameter.ProviderDataType); " is 144.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,SetEnumTypeFacetCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetEnumTypeFacetCommand.cs,InvokeInternal,The length of the statement  "		CommandProcessor.InvokeSingleCommand (cpc' _enumType.Artifact.ModelManager.CreateRenameCommand (_enumType' _enumTypeName' true)); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateEntityTypeTypeAccessCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateEntityTypeTypeAccessCommand.cs,InvokeInternal,The length of the statement  "				if (ModelConstants.CodeGenerationAccessPublic.Equals (entitySetGetterAccess) || ModelConstants.CodeGenerationAccessProtected.Equals (entitySetGetterAccess)) { " is 158.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceCsdlAndMslCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceCsdlAndMslCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (EFElementState.Resolved == existingArtifact.ConceptualModel.State' "ConceptualModel State should be Resolved"); " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceCsdlAndMslCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceCsdlAndMslCommand.cs,ReplaceCsdl,The length of the statement  "		Debug.Assert (EFElementState.Parsed == existingArtifact.ConceptualModel.State' "ConceptualModel State should be Parsed"); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,MovePropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\MovePropertiesCommand.cs,InvokeInternal,The length of the statement  "			// - If the properties are moved forward (MoveDirection == Down)' we need to move the property that are closer to the last-property first. " is 138.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,MovePropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\MovePropertiesCommand.cs,InvokeInternal,The length of the statement  "			// - If the properties are moved backward (MoveDirection == Up)' we need to move the property that are closer to the first-property first. " is 138.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,MovePropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\MovePropertiesCommand.cs,InvokeInternal,The length of the statement  "			Debug.Assert (sortedProperties.Count == _properties.Count' "The sorted properties should have the same number of properties."); " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,MovePropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\MovePropertiesCommand.cs,InvokeInternal,The length of the statement  "				// For example: if property A' B and C are moved forward' the move should not cause property A to be placed after Property B. " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,MovePropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\MovePropertiesCommand.cs,GetNumberOfMoveStep,The length of the statement  "	var insertLocation = _moveDirection == MoveDirection.Up ? property.PreviousSiblingInPropertyXElementOrder : property.NextSiblingInPropertyXElementOrder; " is 152.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,MovePropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\MovePropertiesCommand.cs,GetNumberOfMoveStep,The length of the statement  "		insertLocation = _moveDirection == MoveDirection.Up ? insertLocation.PreviousSiblingInPropertyXElementOrder : insertLocation.NextSiblingInPropertyXElementOrder; " is 160.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,InvokeInternal,The length of the statement  "		// in some error scenarios where the model has not been properly created we can be asked to create a FunctionImport for a Function which does not exist " is 151.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,InvokeInternal,The length of the statement  "		var isUnique = ModelHelper.IsUniqueName (typeof(FunctionImport)' cContainer' functionImportName' false' out errorMessage); " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,InvokeInternal,The length of the statement  "	if (OverrideReturnTypeValue == null && returnType is string && false == Resources.NoneDisplayValueUsedForUX.Equals (returnType)) { " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,InvokeInternal,The length of the statement  "		createComplexTypeCommand = AddCreateComplexTypeCommands (sModel' returnType as string' _schemaProcedure.RawColumns' commands); " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,InvokeInternal,The length of the statement  "		var cmdFuncImpMapping = new CreateFunctionImportMappingCommand (artifact.MappingModel ().FirstEntityContainerMapping' function' cmdFuncImp.Id); " is 143.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,InvokeInternal,The length of the statement  "			mapPropertyNameToColumnName = ModelHelper.ConstructComplexTypePropertyNameToColumnNameMapping (_schemaProcedure.RawColumns.Select (c => c.Name).ToList ()); " is 155.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,ConstructReturnType,The length of the statement  "				Debug.Fail ("Could not find primitive type for column with NativeDataType = " + col.NativeDataType + "' ProviderDataType = " + col.ProviderDataType); " is 149.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,AddCreateComplexTypePropertyCommands,The length of the statement  "	Debug.Assert (((cmdNewComplexType != null && complexType == null) || (cmdNewComplexType == null && complexType != null))' "Both cmdNewComplexType and complexType are null or both are not null. cmdNewComplexType is null : " + (cmdNewComplexType == null).ToString () + "' complexType is null : " + (complexType == null).ToString ()); " is 331.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,AddCreateComplexTypePropertyCommands,The length of the statement  "		// Skip creating the complex type property for a column if the column type is unknown or not supported ( providerDataType == -1 ). " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,AddCreateComplexTypePropertyCommands,The length of the statement  "					cmdNewComplexTypeProperty = new CreateComplexTypePropertyCommand (// Automatically "fix" the property Name if it contains bad character.  " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,AddCreateComplexTypePropertyCommands,The length of the statement  "					ModelHelper.CreateValidSimpleIdentifier (column.Name)' cmdNewComplexType' primitiveType.GetEdmPrimitiveType ().Name' column.IsNullable); " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,AddCreateComplexTypePropertyCommands,The length of the statement  "					cmdNewComplexTypeProperty = new CreateComplexTypePropertyCommand (// Automatically "fix" the property Name if it contains bad character.  " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,AddCreateComplexTypePropertyCommands,The length of the statement  "					ModelHelper.CreateValidSimpleIdentifier (column.Name)' complexType' primitiveType.GetEdmPrimitiveType ().Name' column.IsNullable); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,AddCreateComplexTypePropertyCommands,The length of the statement  "				' DefaultableValueUIntOrNone.GetFromNullableUInt (column.Precision)' DefaultableValueUIntOrNone.GetFromNullableUInt (column.Scale)' null// unicode " is 146.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,AddChangeComplexTypePropertiesCommands,The length of the statement  "					var primitiveType = ModelHelper.GetPrimitiveType (storageModel' schemaColumn.NativeDataType' schemaColumn.ProviderDataType); " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,AddChangeComplexTypePropertiesCommands,The length of the statement  "						' DefaultableValueUIntOrNone.GetFromNullableUInt (schemaColumn.Precision)' DefaultableValueUIntOrNone.GetFromNullableUInt (schemaColumn.Scale)' null// unicode " is 158.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionComplexPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionComplexPropertyCommand.cs,ProcessPreReqCommands,The length of the statement  "		Debug.Assert (_parentComplexProperty != null' "We didn't get a good FunctionComplexProperty out of the pre-req Command"); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionComplexPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionComplexPropertyCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (_parentModificationFunction != null || _parentComplexProperty != null' "Must have either a ModificationFunction or a ComplexProperty parent to house this ComplexProperty"); " is 186.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionComplexPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionComplexPropertyCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (_parentModificationFunction == null || _parentComplexProperty == null' "Must not have both a ModificationFunction and a ComplexProperty parent to house this ComplexProperty"); " is 189.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionComplexPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionComplexPropertyCommand.cs,CreateNewFunctionComplexProperty,The length of the statement  "	Debug.Assert (property != null' "CreateFunctionComplexPropertyCommand.CreateNewFunctionComplexProperty() received null property"); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionComplexPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionComplexPropertyCommand.cs,CreateNewFunctionComplexProperty,The length of the statement  "	Debug.Assert (property.ComplexType.Target != null' typeof(CreateFunctionComplexPropertyCommand).Name + ".CreateNewFunctionComplexProperty() received property with null ComplexType.Target"); " is 189.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionComplexPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionComplexPropertyCommand.cs,CreateNewFunctionComplexProperty,The length of the statement  "	Debug.Assert (fcp.Name.Target != null && fcp.Name.Target.LocalName.Value == fcp.Name.RefName' (fcp.Name.Target == null ? "Broken property resolution for FunctionComplexProperty " + fcp.ToPrettyString () + ": null Target" : "Broken property resolution for FunctionComplexProperty " + fcp.ToPrettyString () + ": Target.LocalName = " + fcp.Name.Target.LocalName.Value + "' RefName = " + fcp.Name.RefName)); " is 403.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyTreeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyTreeCommand.cs,InvokeInternal,The length of the statement  "				cmd = new CreateFunctionScalarPropertyCommand (_modificationFunction' property' _navPropPointingToProperty' _parameter' _version); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,SetConceptualPropertyAnnotationsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetConceptualPropertyAnnotationsCommand.cs,ProcessPreReqCommands,The length of the statement  "		Debug.Assert (null != prereq' "Pre-req CreatePropertyCommand is not present for PrereqId " + CreatePropertyCommand.PrereqId); " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,SetConceptualPropertyAnnotationsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetConceptualPropertyAnnotationsCommand.cs,ProcessPreReqCommands,The length of the statement  "				Debug.Assert (null != _property' "Pre-req Command returned Property of type " + prop.GetType ().FullName + ". Should be ConceptualProperty"); " is 141.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,SetStoreGeneratedPatternCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetStoreGeneratedPatternCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (cProp != null' "expected Property of type ConceptualProperty' instead got type " + Property.GetType ().FullName); " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexTypeFromPropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexTypeFromPropertiesCommand.cs,InvokeInternal,The length of the statement  "	var propertyName = ModelHelper.GetUniqueConceptualPropertyName (ComplexConceptualProperty.DefaultComplexPropertyName' _entityType); " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexTypeFromPropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexTypeFromPropertiesCommand.cs,InvokeInternal,The length of the statement  "			var createdComplexTypeProperty = _createdComplexType.FindPropertyByLocalName (property.LocalName.Value) as ComplexConceptualProperty; " is 133.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexTypeFromPropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexTypeFromPropertiesCommand.cs,PreserveScalarPropertyMapping,The length of the statement  "	var cmd = new CreateFragmentScalarPropertyTreeCommand (_entityType' propertiesChain' scalarPropertyMapping.ColumnName.Target); " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexTypeFromPropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexTypeFromPropertiesCommand.cs,PreserveFunctionScalarPropertyMapping,The length of the statement  "	Debug.Assert (null != mf' "PreserveFunctionScalarPropertyMapping(): Could not find ancestor of type + " + typeof(ModificationFunction).FullName); " is 145.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexTypeFromPropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexTypeFromPropertiesCommand.cs,PreserveFunctionScalarPropertyMapping,The length of the statement  "		var cmd = new CreateFunctionScalarPropertyTreeCommand (mf' propertiesChain' null' fsp.ParameterName.Target' fsp.Version.Value); " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexTypeFromPropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexTypeFromPropertiesCommand.cs,PostInvoke,The length of the statement  "		Debug.Assert (deletePropertyCommand != null' "Property.GetDeleteCommand() failed to return a DeletePropertyCommand' command translation will not receive the correct value for the IsConceptualDeleteOnly flag"); " is 209.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyComplexTypePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyComplexTypePropertyCommand.cs,InvokeInternal,The length of the statement  "	var propertyName = ModelHelper.GetUniqueName (typeof(ConceptualProperty)' _parentComplexType' _clipboardProperty.PropertyName); " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyComplexTypePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyComplexTypePropertyCommand.cs,InvokeInternal,The length of the statement  "		var cmd = new CreateComplexTypePropertyCommand (propertyName' _parentComplexType' _clipboardProperty.PropertyType' _clipboardProperty.IsNullable); " is 146.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyComplexTypePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyComplexTypePropertyCommand.cs,InvokeInternal,The length of the statement  "		var complexTypeNormalizedName = EFNormalizableItemDefaults.DefaultNameNormalizerForEDM (_parentComplexType' _clipboardProperty.PropertyType); " is 141.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyComplexTypePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyComplexTypePropertyCommand.cs,InvokeInternal,The length of the statement  "			Debug.Assert (complexProperty.ComplexType.Status != BindingStatus.Known' "Why didn't we find the ComplexType in the ArtifactSet previously?"); " is 142.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyComplexTypePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyComplexTypePropertyCommand.cs,InvokeInternal,The length of the statement  "		var cmd2 = new SetConceptualPropertyFacetsCommand (_createdProperty' _clipboardProperty.Default' _clipboardProperty.ConcurrencyMode' _clipboardProperty.GetterAccessModifier' _clipboardProperty.SetterAccessModifier' _clipboardProperty.MaxLength' DefaultableValueBoolOrNone.GetFromNullableBool (_clipboardProperty.FixedLength)' _clipboardProperty.Precision' _clipboardProperty.Scale' DefaultableValueBoolOrNone.GetFromNullableBool (_clipboardProperty.Unicode)' _clipboardProperty.Collation); " is 489.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeDesignerPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeDesignerPropertyCommand.cs,InvokeInternal,The length of the statement  "		throw new CommandValidationFailedException (String.Format (CultureInfo.CurrentCulture' Resources.NonValidDesignerProperty' _value' _name)); " is 139.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportScalarPropertyCommand.cs,ProcessPreReqCommands,The length of the statement  "		var prereq = GetPreReqCommand (CreateFunctionImportTypeMappingCommand.PrereqId) as CreateFunctionImportTypeMappingCommand; " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (_typeMapping != null && _property != null && _columnName != null' "InvokeInternal is called when _typeMapping or _property or _columnName is null."); " is 163.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "		throw new InvalidOperationException ("InvokeInternal is called when _typeMapping or _property or _columnName is null."); " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportTypeMappingCommand.cs,ProcessPreReqCommands,The length of the statement  "	var preregCommand1 = GetPreReqCommand (CreateFunctionImportMappingCommand.PrereqId) as CreateFunctionImportMappingCommand; " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportTypeMappingCommand.cs,ProcessPreReqCommands,The length of the statement  "		Debug.Assert (_functionImportMapping != null' "CreateFunctionImportMappingCommand command return null value of _functionImportMapping"); " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportTypeMappingCommand.cs,InvokeInternal,The length of the statement  "		throw new InvalidOperationException ("InvokeInternal is called when _entityType or _complexType or _functionImportMapping is null."); " is 133.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportTypeMappingCommand.cs,InvokeInternal,The length of the statement  "	_createdTypeMapping = _entityType != null ? _functionImportMapping.ResultMapping.FindTypeMapping (_entityType) : _functionImportMapping.ResultMapping.FindTypeMapping (_complexType); " is 181.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportTypeMappingCommand.cs,InvokeInternal,The length of the statement  "					var columnName = (_mapPropertyNameToColumnName != null && _mapPropertyNameToColumnName.ContainsKey (prop.DisplayName) ? _mapPropertyNameToColumnName [prop.DisplayName] : prop.DisplayName); " is 188.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportTypeMappingCommand.cs,InvokeInternal,The length of the statement  "					CommandProcessor.InvokeSingleCommand (cpc' new CreateFunctionImportScalarPropertyCommand (_createdTypeMapping' prop' columnName)); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteReferentialConstraintPropertyRefCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteReferentialConstraintPropertyRefCommand.cs,InvokeInternal,The length of the statement  "			Debug.Assert ((other == rc.Principal && role == rc.Dependent) || (role == rc.Principal && other == rc.Dependent)' "Why aren't both RefConstraintRoles being used?"); " is 164.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeAssociationEndCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeAssociationEndCommand.cs,PreInvoke,The length of the statement  "	// Bug 599719: If this end's role equals the other end's role (within the association)' we end up with the same normalized " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeAssociationEndCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeAssociationEndCommand.cs,PreInvoke,The length of the statement  "	if (string.IsNullOrEmpty (Multiplicity) == false && !string.Equals (End.Multiplicity.Value' Multiplicity' StringComparison.OrdinalIgnoreCase)) { " is 144.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeAssociationEndCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeAssociationEndCommand.cs,PreInvoke,The length of the statement  "		if (association != null && association.AssociationSet != null && association.AssociationSet.AssociationSetMapping != null) { " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeConditionColumnCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeConditionColumnCommand.cs,InvokeInternal,The length of the statement  "	if (string.Compare (Condition.ColumnName.RefName' NewStorageProperty.LocalName.Value' StringComparison.CurrentCulture) != 0) { " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionImportCommand.cs,UpdateFunctionImportIsComposable,The length of the statement  "		Command updateComposableCommand = new UpdateDefaultableValueCommand<BoolOrNone> (FunctionImport.IsComposable' FunctionImportIsComposable); " is 138.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionImportCommand.cs,UpdateFunctionImportFunction,The length of the statement  "				if (FunctionImport.Artifact != null && FunctionImport.Artifact.MappingModel () != null && FunctionImport.Artifact.MappingModel ().FirstEntityContainerMapping != null) { " is 168.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionImportCommand.cs,UpdateFunctionImportFunction,The length of the statement  "					var cmdFuncImpMapping = new CreateFunctionImportMappingCommand (FunctionImport.Artifact.MappingModel ().FirstEntityContainerMapping' Function' FunctionImport); " is 159.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionImportCommand.cs,UpdateFunctionImportReturnType,The length of the statement  "		// if returnTypeStringValue is not null' the value could be "None" or the string representation of primitive types (for example: "string"' "Int16"). " is 148.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionImportCommand.cs,UpdateFunctionImportReturnType,The length of the statement  "				if (typeMapping is FunctionImportComplexTypeMapping && (complexType == null || !String.Equals (typeMapping.TypeName.Target.DisplayName' complexType.DisplayName' StringComparison.CurrentCulture))) { " is 197.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionImportCommand.cs,UpdateFunctionImportReturnType,The length of the statement  "				else if (typeMapping is FunctionImportEntityTypeMapping && (entityType == null || !String.Equals (typeMapping.TypeName.Target.DisplayName' entityType.DisplayName' StringComparison.CurrentCulture))) { " is 199.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionImportCommand.cs,UpdateFunctionImportReturnType,The length of the statement  "			// If we change from the return type from a complex type to an entity type' we need to remove the complex type binding in the function import. " is 142.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionImportCommand.cs,UpdateFunctionImportReturnType,The length of the statement  "			Debug.Assert (entityType.EntitySet != null' "Entity Type doesn't have an Entity Set we can use for the Function Import"); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionImportCommand.cs,UpdateFunctionImportReturnType,The length of the statement  "			// If we change from the return type from a complex type to a primitive type' we need to remove the complex type binding in the function import. " is 144.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionImportCommand.cs,UpdateFunctionImportReturnType,The length of the statement  "				updatedReturnTypeAsString = String.Format (CultureInfo.InvariantCulture' FunctionImport.CollectionFormat' returnTypeStringValue); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "			var mfAncestor = _existingFunctionScalarProperty.GetParentOfType (typeof(ModificationFunction)) as ModificationFunction; " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "			Debug.Assert (mfAncestor != null' "Bad attempt to set version on FunctionScalarProperty which does not have a ModificationFunction ancestor"); " is 142.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "				Debug.Assert (mfAncestor.FunctionType == ModificationFunctionType.Update' "Bad attempt to set version on FunctionScalarProperty which has a ModificationFunction ancestor whose FunctionType is " + mfAncestor.FunctionType.ToString () + ". Should be " + ModificationFunctionType.Update.ToString ()); " is 296.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (mf != null' "Bad attempt to change FunctionScalarProperty which does not have a ModificationFunction ancestor"); " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (_updatedFunctionScalarProperty != null' "CreateFunctionScalarPropertyTreeCommand should not result in null FunctionScalarProperty"); " is 146.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CommandValidation,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CommandValidation.cs,ValidateConceptualEntityContainer,The length of the statement  "	Debug.Assert (conceptualModel.IsCSDL' "The ConceptualEntityContainer sent must be passed in from the conceptual model"); " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CommandValidation,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CommandValidation.cs,ValidateConceptualEntitySet,The length of the statement  "	Debug.Assert (conceptualEntitySet.EntityType.Target != null' "The passed in C-Side EntitySet has unknown entity binding"); " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CommandValidation,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CommandValidation.cs,ValidateStorageEntityType,The length of the statement  "	Debug.Assert (storageEntityType.EntityModel.IsCSDL == false' "The EntityType passed in must be from the storage model"); " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CommandValidation,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CommandValidation.cs,ValidateConceptualProperty,The length of the statement  "	Debug.Assert (conceptualProperty.EntityModel.IsCSDL' "The Property (conceptualProperty) passed in must be from the conceptual model"); " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CommandValidation,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CommandValidation.cs,ValidateConceptualEntityProperty,The length of the statement  "	Debug.Assert (conceptualProperty.EntityModel.IsCSDL' "The Property (conceptualProperty) passed in must be from the conceptual model"); " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CommandValidation,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CommandValidation.cs,ValidateStorageProperty,The length of the statement  "	Debug.Assert (storageProperty.EntityModel.IsCSDL == false' "The Property (storageProperty) passed in must be from the storage model"); " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CommandValidation,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CommandValidation.cs,ValidateTableColumn,The length of the statement  "	Debug.Assert (tableColumn.EntityModel.IsCSDL != true' "The Property (tableColumn) passed in must be from the storage model"); " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CommandValidation,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CommandValidation.cs,ValidateEntityContainerMapping,The length of the statement  "	Debug.Assert (ecm.CdmEntityContainer.Target != null' "The passed in EntityContainerMapping does not reference a known C Model"); " is 128.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CommandValidation,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CommandValidation.cs,ValidateEntityContainerMapping,The length of the statement  "	Debug.Assert (ecm.StorageEntityContainer.Target != null' "The passed in EntityContainerMapping does not reference a known S Model"); " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CommandValidation,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CommandValidation.cs,ValidateEntityTypeMapping,The length of the statement  "	Debug.Assert (etm.EntitySetMapping != null' "The passed in EntityTypeMapping has a null parent or is not a child of an EntitySetMapping"); " is 138.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CommandValidation,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CommandValidation.cs,ValidateMappingFragment,The length of the statement  "	Debug.Assert (mappingFragment.EntityTypeMapping != null' "The passed in MappingFragment has a null parent or is not a child of an EntityTypeMapping"); " is 150.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CommandValidation,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CommandValidation.cs,ValidateMappingFragment,The length of the statement  "	Debug.Assert (mappingFragment.EntityTypeMapping.FirstBoundConceptualEntityType != null' "The parent EntityTypeMapping of the passed in MappingFragment is not bound to an EntityTypes"); " is 184.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CommandValidation,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CommandValidation.cs,ValidateEFElement,The length of the statement  "	Debug.Assert (element != null' string.Format (CultureInfo.CurrentCulture' "You must pass in an {0}."' typeof(EFElement).Name)); " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeComplexPropertyTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeComplexPropertyTypeCommand.cs,InvokeInternal,The length of the statement  "			throw new CommandValidationFailedException (String.Format (CultureInfo.CurrentCulture' Resources.Error_CircularComplexTypeDefinitionOnChange' _newType.LocalName.Value)); " is 169.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteComplexPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteComplexPropertyCommand.cs,InvokeInternal,The length of the statement  "	if (complexProperty != null && complexProperty.ScalarProperties ().Count == 0 && complexProperty.ComplexProperties ().Count == 1) { " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteComplexPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteComplexPropertyCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (complexProperty.ComplexProperties () [0] == ComplexProperty' "complexProperty.ComplexProperties()[0] should be the same as this.ComplexProperty"); " is 160.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateDiagramItemForEFElementsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateDiagramItemForEFElementsCommand.cs,InvokeInternal,The length of the statement  "				CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' entityType' _createRelatedEntities); " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateDiagramItemForEFElementsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateDiagramItemForEFElementsCommand.cs,InvokeInternal,The length of the statement  "				Debug.Assert (association.AssociationEnds ().Count == 2' "Received incorrect number of AssociationEnds (" + association.AssociationEnds ().Count + ") for Association " + association.ToPrettyString () + " should be 2."); " is 219.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateDiagramItemForEFElementsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateDiagramItemForEFElementsCommand.cs,InvokeInternal,The length of the statement  "					CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' assocEnd1.Type.Target as ConceptualEntityType' _createRelatedEntities); " is 160.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateDiagramItemForEFElementsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateDiagramItemForEFElementsCommand.cs,InvokeInternal,The length of the statement  "						CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' assocEnd2.Type.Target as ConceptualEntityType' _createRelatedEntities); " is 160.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateDiagramItemForEFElementsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateDiagramItemForEFElementsCommand.cs,InvokeInternal,The length of the statement  "					CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' et as ConceptualEntityType' _createRelatedEntities); " is 141.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentScalarPropertyTreeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentScalarPropertyTreeCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (_mode == Mode.EntityType || _mode == Mode.MappingFragment' "Unknown mode set in CreateFragmentScalarPropertyTreeCommand"); " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteComplexTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteComplexTypeCommand.cs,PreInvoke,The length of the statement  "		// to the re-added ComplexType. It is likely that this command will also delete ComplexProperty mappings (see just above). " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteComplexTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteComplexTypeCommand.cs,RemoveAntiDeps,The length of the statement  "			CommandProcessor.InvokeSingleCommand (cpc' new ChangeFunctionImportCommand (cModel.FirstEntityContainer as ConceptualEntityContainer' fi' fi.Function' fi.DisplayName' fi.IsComposable.Value' true' Resources.NoneDisplayValueUsedForUX)); " is 234.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentComplexPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentComplexPropertyCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (_mode == Mode.EntityType || _mode == Mode.MappingFragment || _mode == Mode.ComplexProperty' "Unknown mode set in CreateFragmentComplexPropertyCommand"); " is 166.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentComplexPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentComplexPropertyCommand.cs,CreateNewComplexProperty,The length of the statement  "	Debug.Assert (cp.Name.Target != null && cp.Name.Target.LocalName.Value == cp.Name.RefName' "Broken property resolution"); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexTypeCommand.cs,CreateComplexTypeWithDefaultName,The length of the statement  "	var complexTypeName = ModelHelper.GetUniqueNameWithNumber (typeof(ComplexType)' model' Resources.Model_DefaultComplexTypeName); " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexTypePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexTypePropertyCommand.cs,InvokeInternal,The length of the statement  "			throw new CommandValidationFailedException (String.Format (CultureInfo.CurrentCulture' Resources.Error_CircularComplexTypeDefinitionOnAdd' ComplexType.LocalName.Value)); " is 169.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexTypePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexTypePropertyCommand.cs,ProcessPreReqCommands,The length of the statement  "		Debug.Assert (ParentComplexType != null' typeof(CreateComplexTypePropertyCommand).Name + " command return null value of ComplexType"); " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateComplexTypePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateComplexTypePropertyCommand.cs,CreateDefaultProperty,The length of the statement  "	var name = ModelHelper.GetUniqueName (typeof(ConceptualProperty)' parentComplexType' ComplexConceptualProperty.DefaultComplexPropertyName); " is 139.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,InvokeInternal,The length of the statement  "		if (cpc.EfiTransaction.GetContextValue<DiagramContextItem> (EfiTransactionOriginator.TransactionOriginatorDiagramId) == null) { " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,InvokeInternal,The length of the statement  "			cpc.EfiTransaction.AddContextValue (EfiTransactionOriginator.TransactionOriginatorDiagramId' new DiagramContextItem (_diagram.Id.Value)); " is 137.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,InvokeInternal,The length of the statement  "				// we need to create a new copy of the association in the model. Without the check below' the code will determine that there is no need " is 135.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,InvokeInternal,The length of the statement  "					if (association.GetAntiDependenciesOfType<AssociationConnector> ().Count (ac => ac.Diagram.Id == _diagram.Id.Value) == 0) { " is 123.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,InvokeInternal,The length of the statement  "							Debug.Assert (entityType != null' "In: CopyEntitiesCommand's  InvokeInternal' associationEnd's Type property should be typeof ConceptualEntityType"); " is 149.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,InvokeInternal,The length of the statement  "								// Also' VerifyDiagramModelIntegrityVisitor will assert if there are duplicate diagram shapes (shapes that point to the same model element) " is 139.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,InvokeInternal,The length of the statement  "					if (derivedEntity.GetAntiDependenciesOfType<EntityTypeShape> ().Count (ets => ets.Diagram.Id == _diagram.Id.Value) == 0 && baseEntity.GetAntiDependenciesOfType<EntityTypeShape> ().Count (ets2 => ets2.Diagram.Id == _diagram.Id.Value) == 0) { " is 240.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,InvokeInternal,The length of the statement  "						// Also' VerifyDiagramModelIntegrityVisitor will assert if there are duplicate diagram shapes (shapes that point to the same model element) " is 139.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,InvokeInternal,The length of the statement  "						CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' derivedEntity as ConceptualEntityType' false); " is 135.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,InvokeInternal,The length of the statement  "						CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' baseEntity as ConceptualEntityType' false); " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The length of the statement  "	var navigationPropertyEntity1 = clipboardEntity1.GetNavigationPropertyClipboard (clipboardAssociation.AssociationName' clipboardAssociation.AssociationEndRole1); " is 161.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The length of the statement  "	var navigationPropertyEntity2 = clipboardEntity2.GetNavigationPropertyClipboard (clipboardAssociation.AssociationName' clipboardAssociation.AssociationEndRole2); " is 161.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The length of the statement  "	var navigationPropertyName1 = navigationPropertyEntity1 != null ? ModelHelper.GetUniqueConceptualPropertyName (navigationPropertyEntity1.PropertyName' entity1) : null; " is 167.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The length of the statement  "		navigationPropertyName2 = ModelHelper.GetUniqueConceptualPropertyName ((navigationPropertyEntity2 != null ? navigationPropertyEntity2.PropertyName : entity1.LocalName.Value)' entity2' new HashSet<string> { " is 205.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The length of the statement  "		navigationPropertyName2 = ModelHelper.GetUniqueConceptualPropertyName ((navigationPropertyEntity2 != null ? navigationPropertyEntity2.PropertyName : entity1.LocalName.Value)' entity2); " is 184.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The length of the statement  "	var cmd = new CreateConceptualAssociationCommand (associationName' entity1' clipboardAssociation.Multiplicity1' navigationPropertyName1' entity2' clipboardAssociation.Multiplicity2' navigationPropertyName2' true' false); " is 220.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The length of the statement  "		CommandProcessor.InvokeSingleCommand (cpc' new SetNavigationPropertyFacetsCommand (np1' navigationPropertyEntity1.GetterAccessModifier' navigationPropertyEntity1.SetterAccessModifier)); " is 185.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The length of the statement  "		CommandProcessor.InvokeSingleCommand (cpc' new SetNavigationPropertyFacetsCommand (np2' navigationPropertyEntity2.GetterAccessModifier' navigationPropertyEntity2.SetterAccessModifier)); " is 185.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The length of the statement  "		if (entity1 == FindEntityByClipboardName (clipboardAssociation.ReferentialConstraint.PrincipalEntityName' entitiesMap)) { " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The length of the statement  "			Debug.Assert (entity2 == FindEntityByClipboardName (clipboardAssociation.ReferentialConstraint.PrincipalEntityName' entitiesMap)' "could not find entity using clipboard name " + clipboardAssociation.ReferentialConstraint.PrincipalEntityName); " is 242.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The length of the statement  "		if (associationEnds.Count == 2 && (principalPropertyList = ModelHelper.FindProperties (principal' clipboardAssociation.ReferentialConstraint.PrincipalProperties)) != null && (dependentPropertyList = ModelHelper.FindProperties (dependent' clipboardAssociation.ReferentialConstraint.DependentProperties)) != null) { " is 313.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The length of the statement  "			var refCmd = new CreateReferentialConstraintCommand (associationEnds [0]' associationEnds [1]' principalPropertyList' dependentPropertyList); " is 141.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyPropertyCommand.cs,InvokeInternal,The length of the statement  "			_createdProperty = CreateComplexPropertyCommand.CreateComplexProperty (cpc' propertyName' _entityType' _clipboardProperty.PropertyType' _clipboardProperty.ConcurrencyMode' _clipboardProperty.GetterAccessModifier' _clipboardProperty.SetterAccessModifier' _insertPosition); " is 271.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyPropertyCommand.cs,InvokeInternal,The length of the statement  "				_createdProperty = CreatePropertyCommand.CreateConceptualProperty (cpc' propertyName' _entityType as ConceptualEntityType' _clipboardProperty.PropertyType' _clipboardProperty.IsNullable' _clipboardProperty.Default' _clipboardProperty.ConcurrencyMode' _clipboardProperty.GetterAccessModifier' _clipboardProperty.SetterAccessModifier' _clipboardProperty.MaxLength' _clipboardProperty.FixedLength' _clipboardProperty.Precision' _clipboardProperty.Scale' _clipboardProperty.Unicode' _clipboardProperty.Collation' _clipboardProperty.StoreGeneratedPattern' _insertPosition); " is 568.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyPropertyCommand.cs,InvokeInternal,The length of the statement  "				_createdProperty = CreatePropertyCommand.CreateStorageProperty (cpc' propertyName' _entityType as StorageEntityType' _clipboardProperty.PropertyType' _clipboardProperty.IsNullable' _clipboardProperty.Default' _clipboardProperty.MaxLength' DefaultableValueBoolOrNone.GetFromNullableBool (_clipboardProperty.FixedLength)' _clipboardProperty.Precision' _clipboardProperty.Scale' DefaultableValueBoolOrNone.GetFromNullableBool (_clipboardProperty.Unicode)' _clipboardProperty.Collation' _clipboardProperty.ConcurrencyMode); " is 519.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntityCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntityCommand.cs,InvokeInternal,The length of the statement  "		if (cpc.EfiTransaction.GetContextValue<DiagramContextItem> (EfiTransactionOriginator.TransactionOriginatorDiagramId) == null) { " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntityCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntityCommand.cs,InvokeInternal,The length of the statement  "			cpc.EfiTransaction.AddContextValue (EfiTransactionOriginator.TransactionOriginatorDiagramId' new DiagramContextItem (_diagram.Id.Value)); " is 137.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntityCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntityCommand.cs,InvokeInternal,The length of the statement  "		if (_createdEntity.GetAntiDependenciesOfType<EntityTypeShape> ().Count (ets => ets.Diagram.Id == _diagram.Id.Value) == 0) { " is 123.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntityCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntityCommand.cs,InvokeInternal,The length of the statement  "			// Also' VerifyDiagramModelIntegrityVisitor will assert if there are duplicate diagram shapes (shapes that point to the same model element) " is 139.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntityCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntityCommand.cs,InvokeInternal,The length of the statement  "			CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' _createdEntity as ConceptualEntityType' _clipboardEntity.EntityTypeShapeFillColor' false); " is 179.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntityCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntityCommand.cs,CreateEntityCopyInModel,The length of the statement  "	_createdEntity = CreateEntityTypeCommand.CreateEntityTypeAndEntitySetAndProperty (cpc' entityName' setName' false' null' null' null' _modelSpace' true); " is 152.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyEntityCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntityCommand.cs,CreateEntityCopyInModel,The length of the statement  "		CommandProcessor.InvokeSingleCommand (cpc' new CreateEntityTypeShapeCommand (_diagram' _createdEntity' _clipboardEntity.EntityTypeShapeFillColor)); " is 147.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CopyPropertiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyPropertiesCommand.cs,InvokeInternal,The length of the statement  "		var cmd = _entity != null ? new CopyPropertyCommand (clipboardProperty' _entity' _insertPosition) : new CopyPropertyCommand (clipboardProperty' _complexType); " is 158.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "		if (ShouldCreateNavigationPropertyEnd1 && !ModelHelper.IsUniquePropertyName (End1Entity' NavigationPropertyInEnd1Entity' true) || NavigationPropertyInEnd1Entity == End1Entity.LocalName.Value) { " is 193.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "			NavigationPropertyInEnd1Entity = ModelHelper.GetUniqueConceptualPropertyName (NavigationPropertyInEnd1Entity' End1Entity' namesToAvoid); " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "		if (ShouldCreateNavigationPropertyEnd2 && !ModelHelper.IsUniquePropertyName (End2Entity' NavigationPropertyInEnd2Entity' true) || NavigationPropertyInEnd2Entity == End2Entity.LocalName.Value) { " is 193.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "			NavigationPropertyInEnd2Entity = ModelHelper.GetUniqueConceptualPropertyName (NavigationPropertyInEnd2Entity' End2Entity' namesToAvoid); " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "		else if (!ModelHelper.IsUniqueName (typeof(AssociationSet)' model.FirstEntityContainer' assocSetName' false' out msg)) { " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "		else if (ShouldCreateNavigationPropertyEnd1 && (!ModelHelper.IsUniquePropertyName (End1Entity' NavigationPropertyInEnd1Entity' true))) { " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "		else if (ShouldCreateNavigationPropertyEnd2 && (!ModelHelper.IsUniquePropertyName (End2Entity' NavigationPropertyInEnd2Entity' true))) { " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,CreateAssociationAndAssociationSetWithDefaultNames,The length of the statement  "	var associationName = ModelHelper.GetUniqueName (typeof(Association)' model' end1Entity.LocalName.Value + end2Entity.LocalName.Value); " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,CreateAssociationAndAssociationSetWithDefaultNames,The length of the statement  "	var pluralize = ModelHelper.GetDesignerPropertyValueFromArtifactAsBool (OptionsDesignerInfo.ElementName' OptionsDesignerInfo.AttributeEnablePluralization' OptionsDesignerInfo.EnablePluralizationDefault' artifact); " is 213.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,CreateAssociationAndAssociationSetWithDefaultNames,The length of the statement  "	var proposedEnd1NavPropName = ModelHelper.ConstructProposedNavigationPropertyName (pluralizationService' end2Entity.LocalName.Value' end2Multiplicity); " is 151.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,CreateAssociationAndAssociationSetWithDefaultNames,The length of the statement  "	var proposedEnd2NavPropName = ModelHelper.ConstructProposedNavigationPropertyName (pluralizationService' end1Entity.LocalName.Value' end1Multiplicity); " is 151.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,CreateAssociationAndAssociationSetWithDefaultNames,The length of the statement  "	var end2NavigationPropertyName = ModelHelper.GetUniqueConceptualPropertyName (proposedEnd2NavPropName' end2Entity' new HashSet<string> { " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateConceptualAssociationCommand.cs,CreateAssociationAndAssociationSetWithDefaultNames,The length of the statement  "	var cac = new CreateConceptualAssociationCommand (associationName' end1Entity' end1Multiplicity' end1NavigationPropertyName' end2Entity' end2Multiplicity' end2NavigationPropertyName' false' // uniquify names " is 207.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateAssociationSetCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateAssociationSetCommand.cs,InvokeInternal,The length of the statement  "	if (end1 != null && end1.Type.Status == BindingStatus.Known && end2 != null && end2.Type.Status == BindingStatus.Known) { " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateDiagramCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateDiagramCommand.cs,CreateDiagramWithDefaultName,The length of the statement  "		if (entityDesignArtifact == null || entityDesignArtifact.DesignerInfo == null || entityDesignArtifact.DesignerInfo.Diagrams == null) { " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateDiagramCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateDiagramCommand.cs,CreateDiagramWithDefaultName,The length of the statement  "		var diagramName = ModelHelper.GetUniqueNameWithNumber (typeof(Diagram)' entityDesignArtifact.DesignerInfo.Diagrams' Resources.Model_DefaultDiagramName); " is 152.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeCommand.cs,CreateEntityTypeAndEntitySetWithDefaultNames,The length of the statement  "	var entityName = ModelHelper.GetUniqueNameWithNumber (typeof(EntityType)' model' Resources.Model_DefaultEntityTypeName); " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeCommand.cs,CreateEntityTypeAndEntitySetWithDefaultNames,The length of the statement  "	var entitySetName = ModelHelper.GetUniqueName (typeof(EntitySet)' model.FirstEntityContainer' ModelHelper.ConstructProposedEntitySetName (artifact' entityName)); " is 161.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeCommand.cs,CreateEntityTypeAndEntitySetWithDefaultNames,The length of the statement  "	EntityType entityType = CreateConceptualEntityTypeAndEntitySetAndProperty (cpc' entityName' entitySetName' true' Resources.Model_IdPropertyName' ModelConstants.Int32PropertyType' ModelConstants.StoreGeneratedPattern_Identity' false' true); " is 239.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeCommand.cs,CreateConceptualEntityTypeAndEntitySetAndProperty,The length of the statement  "	var cet = CreateEntityTypeAndEntitySetAndProperty (cpc' name' setName' createKeyProperty' propertyName' propertyType' propertyStoreGeneratedPattern' ModelSpace.Conceptual' uniquifyNames' isDefaultName) as ConceptualEntityType; " is 226.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeMappingCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (entityTypeMapping == null' "We are calling CreateEntityTypeMappingCommand and there is already one of this Kind"); " is 128.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeMappingCommand.cs,InvokeInternal,The length of the statement  "		var cmd = new CreateEntitySetMappingCommand (_entityType.Artifact.MappingModel ().FirstEntityContainerMapping' _entityType.EntitySet as ConceptualEntitySet); " is 157.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeMappingCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (_entitySetMapping != null' "_entitySetMapping should not be null - we have been unable to find or create an EntitySetMapping"); " is 141.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeMappingCommand.cs,CloneEntityTypeMapping,The length of the statement  "		var ses = existingEntitySetMapping.EntityContainerMapping.Artifact.StorageModel ().FirstEntityContainer.GetFirstNamedChildByLocalName (sesToClone.LocalName.Value) as StorageEntitySet; " is 183.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,InvokeInternal,The length of the statement  "	var nExistingTypeShapeCount = _entity.GetAntiDependenciesOfType<EntityTypeShape> ().Count (ets => ets.Diagram.Id == _diagram.Id.Value); " is 135.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (nExistingTypeShapeCount == 0' "There is already Entity Type Shape for entity :" + _entity.Name + " in the diagram " + _diagram.Name); " is 147.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,InvokeInternal,The length of the statement  "		// The DSL will set the correct locations for the shapes at a later point' but we need to provide initial values for X and Y in the meantime " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,InvokeInternal,The length of the statement  "		// so that we can construct the shape. We're using random numbers here to ensure that if the DSL fails for some reason' new shapes do not " is 137.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,CreateEntityTypeShapeAndConnectorsInDiagram,The length of the statement  "	CreateEntityTypeShapeAndConnectorsInDiagram (cpc' diagram' entity' EntityDesignerDiagramConstant.EntityTypeShapeDefaultFillColor' createRelatedEntityTypeShapes); " is 161.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,CreateEntityTypeShapeAndConnectorsInDiagram,The length of the statement  "	if (entity == null || entity.GetAntiDependenciesOfType<EntityTypeShape> ().Count (ets => ets.Diagram.Id == diagram.Id.Value) > 0) { " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,CreateEntityTypeShapeAndConnectorsInDiagram,The length of the statement  "					// we only want to bring entity-type directly related to the entity-type' so set createRelatedEntityTypeShapes flag to false. " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,CreateEntityTypeShapeAndConnectorsInDiagram,The length of the statement  "					CreateEntityTypeShapeAndConnectorsInDiagram (cpc' diagram' entityType as ConceptualEntityType' entityTypeShapeFillColor' false); " is 128.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportCommand.cs,ProcessPreReqCommands,The length of the statement  "		Debug.Assert (ReturnSingleType != null' typeof(CreateComplexTypeCommand).Name + " command return null value of ComplexType"); " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportCommand.cs,InvokeInternal,The length of the statement  "		throw new InvalidOperationException ("InvokeInternal is called when Container or Function or ParameterDefinitions or ReturnSingleType is null"); " is 144.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (returnSingleTypeString != null || returnSingleTypeComplexType != null || returnSingleTypeEntity != null' "Return Type for function import must be of type string or ComplexType or EntityType"); " is 206.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportCommand.cs,InvokeInternal,The length of the statement  "			_fi.ReturnTypeAsPrimitiveType.Value = String.Format (CultureInfo.InvariantCulture' FunctionImport.CollectionFormat' returnSingleTypeString); " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportCommand.cs,InvokeInternal,The length of the statement  "			var msg = string.Format (CultureInfo.CurrentCulture' Resources.INVALID_FORMAT' returnSingleTypeComplexType.NormalizedNameExternal); " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportCommand.cs,UpdateFunctionImportParameters,The length of the statement  "		Debug.Assert (storeTypeNameToStoreTypeMap != null' "StoreTypeName to StoreType map should not be null. Not updating function import"); " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportCommand.cs,UpdateFunctionImportParameters,The length of the statement  "			IDictionary<string' string> storeToEdmPrimitiveMap = storeTypeNameToStoreTypeMap.ToDictionary (kvp => kvp.Key' kvp => kvp.Value.GetEdmPrimitiveType ().Name); " is 157.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentConditionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentConditionCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (Mode == ModeValues.EntityType || Mode == ModeValues.MappingFragment' "Unknown mode set in CreateFragmentConditionCommand"); " is 137.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentConditionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentConditionCommand.cs,CreateConditionUsingEntity,The length of the statement  "	var mappingFragment = ModelHelper.FindMappingFragment (cpc' conceptualEntityType' tableColumn.EntityType' EntityTypeMappingKind.Default' false); " is 144.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentConditionCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentConditionCommand.cs,CreateConditionUsingEntity,The length of the statement  "		mappingFragment = ModelHelper.FindMappingFragment (cpc' conceptualEntityType' tableColumn.EntityType' EntityTypeMappingKind.IsTypeOf' true); " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (ModeValue == Mode.EntityType || ModeValue == Mode.MappingFragment || ModeValue == Mode.ComplexProperty' "Unknown mode set in CreateFragmentScalarPropertyCommand"); " is 177.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "	if (_sp.MappingFragment != null && _sp.MappingFragment.EntityTypeMapping != null && _sp.MappingFragment.EntityTypeMapping.FirstBoundConceptualEntityType != null) { " is 163.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "		if (EfiTransactionOriginator.UpdateModelFromDatabaseId != cpc.OriginatorId && _sp.Name != null && _sp.Name.Target != null) { " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "			Debug.Assert (cProp != null' " ScalarProperty should have Name target with type ConceptualProperty' instead got type " + _sp.Name.Target.GetType ().FullName); " is 158.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentScalarPropertyCommand.cs,CreateNewScalarProperty,The length of the statement  "	Debug.Assert (sp.Name.Target != null && sp.Name.Target.LocalName.Value == sp.Name.RefName' "Broken entity property resolution"); " is 128.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFragmentScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFragmentScalarPropertyCommand.cs,CreateNewScalarProperty,The length of the statement  "	Debug.Assert (sp.ColumnName.Target != null && sp.ColumnName.Target.LocalName.Value == sp.ColumnName.RefName' "Broken column resolution"); " is 137.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportMappingCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (Function != null && FunctionImport != null && ContainerMapping != null' "InvokeInternal is called when Function or FunctionImport or ContainerMapping is null."); " is 175.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportMappingCommand.cs,InvokeInternal,The length of the statement  "		throw new InvalidOperationException ("InvokeInternal is called when Function or FunctionImport or ContainerMapping is null."); " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionMappingCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (_conceptualEntityType != null && _function != null' "InvokeInternal is called when _conceptualEntityType or _function is null"); " is 142.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionMappingCommand.cs,InvokeInternal,The length of the statement  "	var entityTypeMapping = ModelHelper.FindEntityTypeMapping (cpc' _conceptualEntityType' EntityTypeMappingKind.Function' true); " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionMappingCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (entityTypeMapping.ModificationFunctionMapping != null' "Failed to create the ModificationFunctionMapping node to house this item"); " is 145.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,ProcessPreReqCommands,The length of the statement  "		Debug.Assert (_parentComplexProperty != null' "We didn't get a good FunctionComplexProperty out of the pre-req Command"); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (_parentModFunc != null || _parentComplexProperty != null' "Must have either a ModificationFunction or a FunctionComplexProperty parent to house this ScalarProperty"); " is 180.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (_parentModFunc == null || _parentComplexProperty == null' "Must not have both a ModificationFunction and a FunctionComplexProperty parent to house this ScalarProperty"); " is 183.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (_pointingNavProperty == null' "We're creating a FunctionScalarProperty within a FunctionComplexProperty - but _pointingNavProperty is non-null!"); " is 160.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (_sp.Name.Target != null && _sp.Name.Target.LocalName.Value == _sp.Name.RefName' (_sp.Name.Target == null ? "Broken entity property resolution - Target is null" : "Broken entity property resolution - Target.LocalName.Value (" + _sp.Name.Target.LocalName.Value + ") != RefName (" + _sp.Name.RefName + ")")); " is 319.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (_sp.ParameterName.Target != null && _sp.ParameterName.Target.LocalName.Value == _sp.ParameterName.RefName' (_sp.ParameterName.Target == null ? "Broken parameter resolution - Target is null" : "Broken parameter resolution - Target.LocalName.Value (" + _sp.ParameterName.Target.LocalName.Value + ") != RefName (" + _sp.ParameterName.RefName + ")")); " is 361.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,CreateFunctionScalarPropertyInAssociationEnd,The length of the statement  "	Debug.Assert (pointingNavProperty != null' "We need the navigation property pointing to the property in order to create the mapping function scalar property"); " is 159.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,CreateFunctionScalarPropertyInAssociationEnd,The length of the statement  "	Debug.Assert (pointingNavProperty.Relationship.Target != null' "Where is the Association for this navigation property?"); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,CreateFunctionScalarPropertyInAssociationEnd,The length of the statement  "	Debug.Assert (null != navPropFromEnd' "Null FromRole for pointingNavProperty " + pointingNavProperty.ToPrettyString ()); " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,CreateFunctionScalarPropertyInAssociationEnd,The length of the statement  "			Debug.Assert (null == assocSetFromEnd' "pointingNavProperty From End " + navPropFromEnd.ToPrettyString () + " matches more than 1 AssociationSetEnd for AssociationSet " + assocSet.ToPrettyString ()); " is 199.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,CreateFunctionScalarPropertyInAssociationEnd,The length of the statement  "			Debug.Assert (null == assocSetToEnd' "pointingNavProperty To End " + navPropToEnd.ToPrettyString () + " matches more than 1 AssociationSetEnd for AssociationSet " + assocSet.ToPrettyString ()); " is 193.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,CreateFunctionScalarPropertyInAssociationEnd,The length of the statement  "		if (funcAssocEnd.AssociationSet.Target == assocSet && funcAssocEnd.From.Target == assocSetFromEnd && funcAssocEnd.To.Target == assocSetToEnd) { " is 143.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionScalarPropertyCommand.cs,CreateFunctionScalarPropertyCommon,The length of the statement  "		Debug.Fail ("Unknown parent type (" + parent.GetType ().FullName + ") sent to CreateFunctionScalarPropertyCommand.CreateFunctionScalarPropertyCommon()"); " is 153.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateInheritanceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateInheritanceCommand.cs,PreInvoke,The length of the statement  "		if (association != null && association.AssociationSet != null && association.AssociationSet.AssociationSetMapping != null && association.AssociationSet.AssociationSetMapping.XObject != null) { " is 192.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateInheritanceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateInheritanceCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (EntityToBeDerived != null && BaseType != null' "InvokeInternal is called when EntityToBeDerived or BaseType is null"); " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateInheritanceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateInheritanceCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (EntityToBeDerived.BaseType.Status == BindingStatus.Known' "EntityToBeDerived.BaseType.Status should be BindingStatus.Known' instead it is " + EntityToBeDerived.BaseType.Status.ToString ()); " is 203.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMappingFragmentCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMappingFragmentCommand.cs,CloneMappingFragment,The length of the statement  "			if (sp.Name != null && sp.Name.Target != null && sp.Name.Target.LocalName != null && sp.Name.Target.LocalName.Value != null) { " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMappingFragmentCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMappingFragmentCommand.cs,CloneMappingFragment,The length of the statement  "				entityProperty = ModelHelper.FindPropertyForEntityTypeMapping (existingEntityTypeMapping' sp.Name.Target.LocalName.Value); " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMappingFragmentCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMappingFragmentCommand.cs,CloneMappingFragment,The length of the statement  "				Debug.Assert (entityProperty != null' "Cannot find Property with name " + sp.Name.Target.LocalName.Value + " for EntityTypeMapping " + existingEntityTypeMapping.ToPrettyString ()); " is 180.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMappingFragmentCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMappingFragmentCommand.cs,CloneMappingFragment,The length of the statement  "			if (frag.StoreEntitySet != null && frag.StoreEntitySet.Target != null && frag.StoreEntitySet.Target.EntityType != null && frag.StoreEntitySet.Target.EntityType.Target != null && sp.ColumnName != null && sp.ColumnName.Target != null && sp.ColumnName.Target.LocalName != null && sp.ColumnName.Target.LocalName.Value != null) { " is 324.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMappingFragmentCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMappingFragmentCommand.cs,CloneMappingFragment,The length of the statement  "				tableColumn = ModelHelper.FindProperty (frag.StoreEntitySet.Target.EntityType.Target' sp.ColumnName.Target.LocalName.Value); " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateMappingFragmentCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMappingFragmentCommand.cs,CloneMappingFragment,The length of the statement  "				Debug.Assert (tableColumn != null' "Cannot find Property with name " + sp.ColumnName.Target.LocalName.Value + " for EntityType " + frag.StoreEntitySet.Target.EntityType.Target.ToPrettyString ()); " is 195.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (CreatedAssociation.AssociationEnds ().Count == 2' "Association element is invalid' it should always have exactly 2 ends"); " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "			if (principal.Type.Target == null || !string.Equals (principal.Type.Target.Name.Value' End1Entity.LocalName.Value' StringComparison.Ordinal)) { " is 143.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "			if (dependent.Type.Target == null || !string.Equals (dependent.Type.Target.Name.Value' End2Entity.LocalName.Value' StringComparison.Ordinal)) { " is 143.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "			// We have to resolve the association after both the principal and dependent have been updated here. The reason is because  " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "			// if we resolve the principal and dependent separately we will end up with duplicate symbols in the symbol table because " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "			// It's possible for the association to exist but not the associationSet when a rename in the EntityDesigner is propagated " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "				var assocSetName = ModelHelper.GetUniqueName (typeof(AssociationSet)' cpc.Artifact.ConceptualModel ().FirstEntityContainer' Name); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "			if (associationSet != null && principal.Type.Status == BindingStatus.Known && dependent.Type.Status == BindingStatus.Known && associationSet.PrincipalEnd != null && associationSet.DependentEnd != null) { " is 203.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "			var navProp1 = principal.GetAntiDependenciesOfType<NavigationProperty> ().FirstOrDefault (np => np.FromRole.Target == principal); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The length of the statement  "			var navProp2 = dependent.GetAntiDependenciesOfType<NavigationProperty> ().FirstOrDefault (np => np.FromRole.Target == dependent); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualConstraintOrMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualConstraintOrMapping.cs,InvokeInternal,The length of the statement  "	if (Association != null && cpc.Artifact != null && cpc.Artifact.DesignerInfo () != null && cpc.Artifact.DesignerInfo ().TryGetDesignerInfo (OptionsDesignerInfo.ElementName' out designerInfo)) { " is 193.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualConstraintOrMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualConstraintOrMapping.cs,InvokeInternal,The length of the statement  "		// APPDB_SCENARIO: We cannot use referential constraints for 0..1:0..1 or 1:1 associations' since these exist as configured " is 123.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualConstraintOrMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualConstraintOrMapping.cs,InvokeInternal,The length of the statement  "		//                 0..1:* or 1:* associations and so introducing a referential constraint would cause validation errors. " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualConstraintOrMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualConstraintOrMapping.cs,InvokeInternal,The length of the statement  "		// Must use Referential Constraint for 1:0..1 relationship as using an AssociationSetMapping results in illegal reference to the same ID column twice (since the PK is also the FK) " is 179.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualConstraintOrMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualConstraintOrMapping.cs,InvokeInternal,The length of the statement  "		if (Association.IsOneToZeroOrOne || (UseReferentialConstraint && !(Association.IsZeroOrOneToZeroOrOne || Association.IsOneToOne))) { " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualConstraintOrMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualConstraintOrMapping.cs,InvokeInternal,The length of the statement  "			// We're not including fk columns' so the update will consist of an association set mapping and a deletes of the fk columns (if they exist) " is 139.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualConstraintOrMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualConstraintOrMapping.cs,InvokeInternal,The length of the statement  "				return cmd.Association != null && cmd.AssociationSet != null && cmd.EntityContainerMapping != null && cmd.StorageEntitySet != null; " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualConstraintOrMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualConstraintOrMapping.cs,InvokeInternal,The length of the statement  "				var propertiesToDelete = DependentProperties.Where (p => p.EntityType != null && !p.EntityType.ResolvableKeys.Contains (p)).ToList (); " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualConstraintOrMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualConstraintOrMapping.cs,InvokeInternal,The length of the statement  "			Debug.Assert (AssociationSet.AssociationSetEnds ().First ().Role.Target != null' "Role Target for Association End was null' AssociationSetMapping update failed"); " is 162.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateEndPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateEndPropertyCommand.cs,InvokeInternal,The length of the statement  "	var endProperty = AssociationSetMapping.EndProperties ().FirstOrDefault (ep => string.Equals (ep.Name.XAttribute.Value' AssociationSetEnd.GetRefNameForBinding (ep.Name)' StringComparison.CurrentCulture)); " is 204.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateEndPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateEndPropertyCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (ConceptualKeyProperties.Count () == StorageKeyProperties.Count ()' "Found different number of keys in storage and conceptual models"); " is 148.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateEndPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateEndPropertyCommand.cs,InvokeInternal,The length of the statement  "			var createEndScalarCommand = new CreateEndScalarPropertyCommand (endProperty' conceptualEnumerator.Current' storageEnumerator.Current); " is 135.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateReferentialConstraintCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateReferentialConstraintCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (association != null && association == DependentEnd.Parent' "Association parent for both ends must agree and be not null"); " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateStorageAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateStorageAssociationCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (association.AssociationEnds ().Count == 2' "Association element is invalid' it should always have exactly 2 ends"); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateStorageAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateStorageAssociationCommand.cs,InvokeInternal,The length of the statement  "			ModelHelper.DeterminePrincipalDependentAssociationEnds (association' out principal' out dependent' ModelHelper.DeterminePrincipalDependentAssociationEndsScenario.CreateForeignKeyProperties); " is 190.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreatePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreatePropertyCommand.cs,InvokeInternal,The length of the statement  "		throw new CommandValidationFailedException (string.Format (CultureInfo.CurrentCulture' Resources.Error_MemberNameSameAsParent' Name' EntityType.LocalName.Value)); " is 162.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreatePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreatePropertyCommand.cs,InvokeInternal,The length of the statement  "		throw new CommandValidationFailedException (string.Format (CultureInfo.CurrentCulture' Resources.Error_MemberNameNotUnique' Name' EntityType.LocalName.Value)); " is 159.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreatePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreatePropertyCommand.cs,CreateProperty,The length of the statement  "	var property = conceptualEntity != null ? CreateConceptualProperty (conceptualEntity' name' type' insertPosition) : CreateStorageProperty ((StorageEntityType)parentEntity' name' type); " is 184.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreatePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreatePropertyCommand.cs,CreateDefaultProperty,The length of the statement  "	var cpcd = new CreatePropertyCommand (name' entityType' ModelConstants.DefaultPropertyType' ModelConstants.DefaultPropertyNullability); " is 135.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreatePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreatePropertyCommand.cs,CreateConceptualProperty,The length of the statement  "	var scp = new SetConceptualPropertyFacetsCommand (cpcd' theDefault' concurrencyMode' getterAccessModifier' setterAccessModifier' maxLength' DefaultableValueBoolOrNone.GetFromNullableBool (fixedLength)' precision' scale' DefaultableValueBoolOrNone.GetFromNullableBool (unicode)' collation); " is 289.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreatePropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreatePropertyCommand.cs,CreateStorageProperty,The length of the statement  "	var ssp = new SetPropertyFacetsCommand (cpcd' theDefault' maxLength' fixedLength' precision' scale' unicode' collation' concurrencyMode); " is 137.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateReferentialConstraintCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateReferentialConstraintCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (PrincipalEnd != null && DependentEnd != null' "InvokeInternal is called when PrincipalEnd or DependentEnd is null."); " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateReferentialConstraintCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateReferentialConstraintCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (association != null && association == DependentEnd.Parent' "Association parent for both ends must agree and be not null"); " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateReferentialConstraintCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateReferentialConstraintCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (principalProps.Count == 0 || (principalRole.PropertyRefs.First ().Name.Target != null && dependentRole.PropertyRefs.First ().Name.Target != null)' "Unresolved property references"); " is 195.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateResultBindingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateResultBindingCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (_conceptualEntityType != null && _function != null' "InvokeInternal is called when _conceptualEntityType or _function is null."); " is 143.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateResultBindingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateResultBindingCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (_binding.Name.Target != null && _binding.Name.Target.LocalName.Value == _binding.Name.RefName' "Broken entity property resolution"); " is 146.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,CreateStorageAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateStorageAssociationCommand.cs,InvokeInternal,The length of the statement  "		if (ModelHelper.IsUniqueName (typeof(AssociationSet)' model.FirstEntityContainer' assocSetName' false' out msg) == false) { " is 123.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteEntityTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteEntityTypeCommand.cs,SaveDeletedInformation,The length of the statement  "				var entityToPropertyName = new EntityQualifiedPropertyName (storageProperty.EntityType.Name.Value' storageProperty.Name.Value' false); " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteEntityTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteEntityTypeCommand.cs,RemoveAntiDeps,The length of the statement  "				CommandProcessor.InvokeSingleCommand (cpc' new ChangeFunctionImportCommand (cModel.FirstEntityContainer as ConceptualEntityContainer' fi' fi.Function' fi.DisplayName' fi.IsComposable.Value' true' Resources.NoneDisplayValueUsedForUX)); " is 234.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteEntityTypeMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteEntityTypeMappingCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (esm.EntityTypeMappings () [0] == EntityTypeMapping' "esm.EntityTypeMappings()[0] should be the same as this.EntityTypeMapping"); " is 142.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteFunctionMappingCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteFunctionMappingCommand.cs,InvokeInternal,The length of the statement  "	if (ModificationFunction.ModificationFunctionMapping.Children.Count () == 1 && ModificationFunction.ModificationFunctionMapping.EntityTypeMapping != null) { " is 156.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteFunctionScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "		//  we are about to remove the last item from this FunctionComplexProperty' so remove the entire FunctionComplexProperty " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteFunctionScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (fcp.ScalarProperties () [0] == FunctionScalarProperty' "fcp.ScalarProperties()[0] should be the same as this.FunctionScalarProperty"); " is 148.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteInheritanceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteInheritanceCommand.cs,InvokeInternal,The length of the statement  "	// re-resolve the derived type.  This will set the state of the _derivedType to be resolved (it could be unresolved because base-type binding could have been a duplicate or unknown binding).  " is 190.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteInheritanceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteInheritanceCommand.cs,PostInvoke,The length of the statement  "	if (association != null && association.AssociationSet != null && association.AssociationSet.AssociationSetMapping != null && association.AssociationSet.AssociationSetMapping.XObject != null) { " is 192.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteMappingFragmentCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteMappingFragmentCommand.cs,PreInvoke,The length of the statement  "		ConceptualEntityTypeName = MappingFragment.EntityTypeMapping.FirstBoundConceptualEntityType != null ? MappingFragment.EntityTypeMapping.FirstBoundConceptualEntityType.Name.Value : null; " is 185.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteMappingFragmentCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteMappingFragmentCommand.cs,PreInvoke,The length of the statement  "		StorageEntitySetName = MappingFragment.StoreEntitySet.Target != null ? MappingFragment.StoreEntitySet.Target.Name.Value : null; " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteMappingFragmentCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteMappingFragmentCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (etm.MappingFragments () [0] == MappingFragment' "end.MappingFragments()[0] should be the same as this.MappingFragment"); " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteScalarPropertyCommand.cs,PreInvoke,The length of the statement  "		MFConceptualEntityTypeName = ScalarProperty.FirstBoundConceptualEntityType != null ? ScalarProperty.FirstBoundConceptualEntityType.Name.Value : null; " is 149.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteScalarPropertyCommand.cs,PreInvoke,The length of the statement  "		MFStorageEntitySetName = ScalarProperty.BoundStorageEntityType != null ? ScalarProperty.BoundStorageEntityType.Name.Value : null; " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteScalarPropertyCommand.cs,PreInvoke,The length of the statement  "		MFConceptualEntityTypeOwnerName = ScalarProperty.FirstBoundConceptualEntityType != null ? ScalarProperty.FirstBoundConceptualEntityType.Name.Value : null; " is 154.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteScalarPropertyCommand.cs,PreInvoke,The length of the statement  "		MFComplexParentList = ScalarProperty.GetParentComplexProperties (true).Where (cp => cp.Name.Target != null).Select (cp => cp.Name.Target.Name.Value); " is 149.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteScalarPropertyCommand.cs,PreInvoke,The length of the statement  "	if (EfiTransactionOriginator.UpdateModelFromDatabaseId != cpc.OriginatorId && ScalarProperty.Name != null && ScalarProperty.Name.Target != null) { " is 146.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteScalarPropertyCommand.cs,PreInvoke,The length of the statement  "		Debug.Assert (cProp != null' "ScalarProperty should have Name target with type " + typeof(ConceptualProperty).Name + "' instead got type " + ScalarProperty.Name.Target.GetType ().FullName); " is 189.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (end.ScalarProperties () [0] == ScalarProperty' "end.ScalarProperties()[0] should be the same as this.ScalarProperty"); " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "	else if (complexProperty != null && complexProperty.ScalarProperties ().Count == 1 && complexProperty.ComplexProperties ().Count == 0) { " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,DeleteScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteScalarPropertyCommand.cs,InvokeInternal,The length of the statement  "		Debug.Assert (complexProperty.ScalarProperties () [0] == ScalarProperty' "complexProperty.ScalarProperties()[0] should be the same as this.ScalarProperty"); " is 156.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,RefreshKeysCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\RefreshKeysCommand.cs,InvokeInternal,The length of the statement  "			Debug.Assert (entityNameToLookFor != null' "Should have created an entity name to look for based off of the current EntityType"); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,RefreshKeysCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\RefreshKeysCommand.cs,InvokeInternal,The length of the statement  "						if (prop.IsKeyProperty && EntityTypePks [entityNameToRefresh].All (c => string.Compare (c' prop.Name.Value' StringComparison.Ordinal) != 0)) { " is 142.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,RefreshKeysCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\RefreshKeysCommand.cs,InvokeInternal,The length of the statement  "						else if (prop.IsKeyProperty == false && EntityTypePks [entityNameToRefresh].Any (c => string.Compare (c' prop.Name.Value' StringComparison.Ordinal) == 0)) { " is 156.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,RenameConceptualAliasCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\RenameConceptualAliasCommand.cs,InvokeInternal,The length of the statement  "			var allElementsWithConceptualNamespaceSymbol = artifactSet.GetElementsContainingFirstSymbolPart (previousConceptualNamespace); " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,RenameConceptualNamespaceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\RenameConceptualNamespaceCommand.cs,InvokeInternal,The length of the statement  "			var msg = string.Format (CultureInfo.CurrentCulture' Resources.EntityContainerNameConflictsWithNamespaceName' _newNamespace); " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,RenameConceptualNamespaceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\RenameConceptualNamespaceCommand.cs,InvokeInternal,The length of the statement  "	if (EscherAttributeContentValidator.GetInstance (artifact.SchemaVersion).IsValidAttributeValue (_newNamespace' _conceptualEntityModel.Namespace)) { " is 147.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,RenameConceptualNamespaceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\RenameConceptualNamespaceCommand.cs,InvokeInternal,The length of the statement  "		var allElementsWithConceptualNamespaceSymbol = artifactSet.GetElementsContainingFirstSymbolPart (previousConceptualNamespace); " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,InvokeInternal,The length of the statement  "		if (null != previousStorageEntityModel.Namespace && !string.IsNullOrEmpty (previousStorageEntityModel.Namespace.Value)) { " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,InvokeInternal,The length of the statement  "		if (null != previousStorageEntityModel.FirstEntityContainer && null != previousStorageEntityModel.FirstEntityContainer.LocalName && !string.IsNullOrEmpty (previousStorageEntityModel.FirstEntityContainer.LocalName.Value)) { " is 222.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,InvokeInternal,The length of the statement  "	if (existingArtifact.MappingModel != null && _newArtifactStorageEntityModel != null && _newArtifactStorageEntityModel.Namespace != null && !string.IsNullOrEmpty (_newArtifactStorageEntityModel.Namespace.Value) && !_newArtifactStorageEntityModel.Namespace.Value.Equals (previousStorageModelNamespace' StringComparison.CurrentCulture)) { " is 335.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,InvokeInternal,The length of the statement  "		RecursivelyReplaceStorageNamespaceRefs (existingArtifact.MappingModel' previousStorageModelNamespace' _newArtifactStorageEntityModel.Namespace.Value); " is 150.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,RetargetMappingsForRenamedStorageObjects,The length of the statement  "	Debug.Assert (null != preExistingStorageEntityModel' "Null preExistingStorageEntityModel in ReplaceSsdlCommand.RetargetMappingsForRenamedStorageObjects()"); " is 156.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,RetargetMappingsForRenamedStorageObjects,The length of the statement  "	Debug.Assert (null != newStorageEntityModel' "Null newStorageEntityModel in ReplaceSsdlCommand.RetargetMappingsForRenamedStorageObjects()"); " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,ReplaceSsdl,The length of the statement  "	Debug.Assert (EFElementState.Parsed == existingArtifact.StorageModel.State' "StorageModel State should be Parsed' instead it is " + existingArtifact.StorageModel.State); " is 169.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,ReplaceSsdl,The length of the statement  "	Debug.Assert (EFElementState.Resolved == existingArtifact.StorageModel.State' "StorageModel State should be Resolved' instead it is " + existingArtifact.StorageModel.State); " is 173.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,ReplaceMappingContainerRef,The length of the statement  "	if (!string.IsNullOrEmpty (oldStorageEntityContainerName) && existingArtifact.StorageModel () != null && existingArtifact.StorageModel ().FirstEntityContainer != null && existingArtifact.MappingModel () != null && existingArtifact.MappingModel ().FirstEntityContainerMapping != null && existingArtifact.MappingModel ().FirstEntityContainerMapping.StorageEntityContainer != null && existingArtifact.MappingModel ().FirstEntityContainerMapping.StorageEntityContainer.RefName == oldStorageEntityContainerName) { " is 508.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,ReplaceMappingContainerRef,The length of the statement  "		existingArtifact.MappingModel ().FirstEntityContainerMapping.StorageEntityContainer.SetRefName (existingArtifact.StorageModel ().FirstEntityContainer); " is 151.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,UpdateOldDatabaseObjectReferencesToNewNames,The length of the statement  "		if (null != databaseIdNamePair.Value && null != databaseIdNamePair.Value.LocalName && !string.IsNullOrEmpty (databaseIdNamePair.Value.LocalName.Value)) { " is 153.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,UpdateOldDatabaseObjectReferencesToNewNames,The length of the statement  "			if (newArtifactContainsDBIdentity && null != matchingNewDatabaseObject && null != matchingNewDatabaseObject.LocalName && !string.IsNullOrEmpty (matchingNewDatabaseObject.LocalName.Value) && matchingNewDatabaseObject.LocalName.Value != oldName)// Note: byte-by-byte (Ordinal) compare is correct here - if name has changed ordinally want to change references too " is 360.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,UpdateOldDatabaseObjectReferencesToNewNames,The length of the statement  "			if (null != antiDepAsItemBinding && null != existingDatabaseObject.LocalName && !string.IsNullOrEmpty (existingDatabaseObject.LocalName.Value)) { " is 145.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,RetargetXmlNamespaceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\RetargetXmlNamespaceCommand.cs,RetargetArtifactXmlNamespaces,The length of the statement  "	CommandProcessor.InvokeSingleCommand (cpc' new RetargetXmlNamespaceCommand (artifact' targetSchemaVersion' reparseArtifact: false)); " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,SetFunctionImportSprocCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetFunctionImportSprocCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert (_function != null && _functionImport != null' "InvokeInternal is called when _function or _function import is null."); " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,EntityDesignRenameCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\EntityDesignRenameCommand.cs,InvokeInternal,The length of the statement  "	// Ideally' we want put this restriction in the XSD but we have defined the diagram name XSD type in V1 and V2 XSDs as 'string' (and the files have shipped). " is 157.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,EntityDesignRenameCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\EntityDesignRenameCommand.cs,InvokeInternal,The length of the statement  "	// Adding the restriction in the XSD could potentially cause safe-mode when opening an existing edmx file with empty diagram name. " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,EntityDesignRenameCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\EntityDesignRenameCommand.cs,RenameEntitySet,The length of the statement  "				var newEntitySetName = ModelHelper.GetUniqueName (typeof(EntitySet)' (entity.EntityModel.EntityContainer)' proposedEntitySetName); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,SetKeyPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetKeyPropertyCommand.cs,PostInvoke,The length of the statement  "			Debug.Assert (cProp != null' "expected _property of type ConceptualProperty' instead got type " + Property.GetType ().FullName); " is 128.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangePropertyTypeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangePropertyTypeCommand.cs,InvokeInternal,The length of the statement  "		throw new InvalidOperationException ("InvokeInternal is called when the Property is neither a ConceptualProperty nor a StorageProperty"); " is 137.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,SetRowsAffectedParameterCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetRowsAffectedParameterCommand.cs,InvokeInternal,The length of the statement  "			var errMsg = string.Format (CultureInfo.CurrentCulture' Resources.SetRowsAffectedParameterErrorMessage_CannotUse' _param.NormalizedNameExternal' _param.InOut.ToString ()' _param.Type.Value); " is 190.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,SetPropertyFacetsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\SetPropertyFacetsCommand.cs,ProcessPreReqCommands,The length of the statement  "			var createComplexTypePropertyCommand = GetPreReqCommand (CreateComplexTypePropertyCommand.PrereqId) as CreateComplexTypePropertyCommand; " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,InvokeInternal,The length of the statement  "	AddNewConceptualEntityTypesFromArtifact (cpc' entityTypesToBeAdded' out tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact); " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,InvokeInternal,The length of the statement  "	AddNewConceptualAssociationsFromArtifact (cpc' associationsToBeAdded' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,InvokeInternal,The length of the statement  "	PropagateViewKeysToStorageModel.AddRule (cpc' _preExistingModel.Artifact.ConceptualModel ().EntityTypes ().OfType<ConceptualEntityType> ()); " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualEntityTypesFromArtifact,The length of the statement  "				CloneEntitySetMapping (cpc' esmInTempArtifact' _preExistingModel.Artifact.MappingModel ().FirstEntityContainerMapping' newEntitySet' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact); " is 192.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualEntityTypesFromArtifact,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseCannotCreateEntityType' etFromTempArtifact.ToPrettyString ())); " is 178.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,UpdateConceptualPropertiesFromArtifact,The length of the statement  "				throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseCannotFindRootEntityTypeForProperty' newStoragePropertiesForDbObj.Count' dbObj.ToString ())); " is 208.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CreateNewConceptualPropertyAndMapping,The length of the statement  "	Debug.Assert (pcf != null' "Could not construct PropertyClipboardFormat for C-side Property " + cSidePropInTempArtifact.ToPrettyString ()); " is 139.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CreateNewConceptualPropertyAndMapping,The length of the statement  "		Debug.Assert (null != sSidePropInExistingArtifact' "Cannot find S-side Property matching the one in the temp artifact " + sSidePropInTempArtifact.ToPrettyString ()); " is 165.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CreateNewConceptualPropertyAndMapping,The length of the statement  "			var cmd2 = new CreateFragmentScalarPropertyCommand (existingEntityType' cSidePropInExistingArtifact' sSidePropInExistingArtifact); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationWrongNumberEnds' assocInTempArtifact.ToPrettyString ()' assocInTempArtifact.AssociationEnds ().Count)); " is 229.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationEndNoTarget' end1InTempArtifact.ToPrettyString ())); " is 178.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationEndNoTarget' end2InTempArtifact.ToPrettyString ())); " is 178.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The length of the statement  "		var navProp1InTempArtifact = ModelHelper.FindNavigationPropertyForAssociationEnd (end1EntityTypeInTempArtifact' end1InTempArtifact); " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationNoMatchingNavProp' end1EntityTypeInTempArtifact.ToPrettyString ()' end1InTempArtifact.ToPrettyString ())); " is 232.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The length of the statement  "		var navProp2InTempArtifact = ModelHelper.FindNavigationPropertyForAssociationEnd (end2EntityTypeInTempArtifact' end2InTempArtifact); " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationNoMatchingNavProp' end2EntityTypeInTempArtifact.ToPrettyString ()' end2InTempArtifact.ToPrettyString ())); " is 232.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The length of the statement  "		var end1EntityTypeInExistingArtifact = FindMatchingConceptualEntityTypeInExistingArtifact (end1EntityTypeInTempArtifact' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact); " is 180.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The length of the statement  "		var end2EntityTypeInExistingArtifact = FindMatchingConceptualEntityTypeInExistingArtifact (end2EntityTypeInTempArtifact' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact); " is 180.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The length of the statement  "		CloneAssociation (cpc' existingArtifact' assocInTempArtifact' end1InTempArtifact' end2InTempArtifact' navProp1InTempArtifact' navProp2InTempArtifact' end1EntityTypeInExistingArtifact' end2EntityTypeInExistingArtifact' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact); " is 277.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindNewAndExistingEntityTypes,The length of the statement  "	if (null == _modelRepresentingDatabase || null == _modelRepresentingDatabase.Artifact || null == _modelRepresentingDatabase.Artifact.ConceptualModel ()) { " is 154.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindNewProperties,The length of the statement  "		Debug.Assert (null != tempArtifactColumnName' "Property " + tempArtifactColumn.ToPrettyString () + "has null LocalName"); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindNewAssociations,The length of the statement  "	if (null == _modelRepresentingDatabase || null == _modelRepresentingDatabase.Artifact || null == _modelRepresentingDatabase.Artifact.ConceptualModel ()) { " is 154.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindNewAssociations,The length of the statement  "			if (!HasBeenReplacedByInheritanceOrSplitEntity (assoc' assocIdentity' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact)) { " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The length of the statement  "		Debug.Fail ("Received incorrect number of AssociationEnds (" + assoc.AssociationEnds ().Count + ") for Association " + assoc.ToPrettyString () + " should be 2."); " is 162.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The length of the statement  "	if (!(ModelConstants.Multiplicity_One == assocEnd1.Multiplicity.Value && (ModelConstants.Multiplicity_One == assocEnd2.Multiplicity.Value || ModelConstants.Multiplicity_ZeroOrOne == assocEnd2.Multiplicity.Value)) || (ModelConstants.Multiplicity_One == assocEnd2.Multiplicity.Value && (ModelConstants.Multiplicity_One == assocEnd1.Multiplicity.Value || ModelConstants.Multiplicity_ZeroOrOne == assocEnd1.Multiplicity.Value))) { " is 426.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The length of the statement  "		// If we get here' the properties involved in a Ref Constraint were mapped to multiple tables.  This implies inheritance  " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The length of the statement  "		// or horizontal partitioning on the database (ie' the dependent end of the RC is an entity mapped to more than one table'  " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The length of the statement  "		Debug.Fail ("An association is mapped to more than one table on the dependent via a referential constraint.  We didn't expect this to happen for a model generated from model gen APIs"); " is 185.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The length of the statement  "		// just return false here.  It should be OK for us to include this association' and the user can make the call on what to do. " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The length of the statement  "		Debug.Fail ("Neither end of the Association " + assoc.ToPrettyString () + " contains the association table " + assocTable.ToString ()); " is 135.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The length of the statement  "	var existingEntityType1 = FindMatchingConceptualEntityTypeInExistingArtifact (et1' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact); " is 142.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The length of the statement  "	var existingEntityType2 = FindMatchingConceptualEntityTypeInExistingArtifact (et2' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact); " is 142.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The length of the statement  "	return (HasIdenticalKeyToEntityType (refConstraint.Principal) && HasIdenticalKeyToEntityType (refConstraint.Dependent)); " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasIdenticalKeyToEntityType,The length of the statement  "	if (null == refConstraintRole || null == refConstraintRole.Role || null == refConstraintRole.Role.Target || null == refConstraintRole.Role.Target.Type || null == refConstraintRole.Role.Target.Type.Target) { " is 206.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasIdenticalKeyToEntityType,The length of the statement  "	Debug.Assert (cet != null' "expected EntityType of type ConceptualEntityType' instead type is " + (et == null ? "null" : et.GetType ().FullName)); " is 146.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindMappedCSidePropertyForSSideProperty,The length of the statement  "	Debug.Assert (!sSideProp.EntityModel.IsCSDL' "sSideProp with name " + sSideProp.NormalizedNameExternal + " is from CSDL' it must be from SSDL"); " is 144.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindAllMappedSSidePropertiesForCSideProperty,The length of the statement  "	Debug.Assert (cSideProp.EntityModel.IsCSDL' "cSideProp with name " + cSideProp.NormalizedNameExternal + " is from SSDL' it must be from CSDL"); " is 143.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindSSidePropInExistingArtifact,The length of the statement  "		Debug.Fail ("Cannot find matching Property for sSidePropInTempArtifact " + sSidePropInTempArtifact.ToPrettyString () + " in existing artifact"); " is 144.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindMatchingStorageEntityTypeInExistingArtifact,The length of the statement  "	var et = ModelHelper.FindEntityType (entityTypeFromTempArtifact.EntityModel' entityTypeFromTempArtifact.LocalName.Value); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindMatchingConceptualEntityTypeInExistingArtifact,The length of the statement  "		tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact.TryGetValue (entityTypeFromTempArtifact' out etInExistingArtifact); " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,FindMatchingPropertyInExistingArtifactEntityType,The length of the statement  "		Debug.Fail (" Mismatched Property and EntityType passed to FindMatchingPropertyInExistingArtifactEntityType. " + "Property has IsCSDL = " + propIsCSide + "' EntityType has IsCSDL = " + entityIsCSide); " is 200.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEntitySetMapping,The length of the statement  "			Debug.Fail ("EntityTypeMapping to be cloned " + etmToBeCloned.ToPrettyString () + " has bindings count = " + bindings.Count + ". We only support 1 binding."); " is 158.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEntitySetMapping,The length of the statement  "			var etInExistingArtifact = FindMatchingConceptualEntityTypeInExistingArtifact (etToBeCloned' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact); " is 152.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEntitySetMapping,The length of the statement  "				CreateEntityTypeMappingCommand.CloneEntityTypeMapping (cpc' etmToBeCloned' esm' etInExistingArtifact' etmToBeCloned.Kind); " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEntitySetMapping,The length of the statement  "				throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseEntitySetMappingCannotFindEntityType' etToBeCloned.ToPrettyString ())); " is 186.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the statement  "		var cmd = new CreateConceptualAssociationCommand (assocInTempArtifact.LocalName.Value' end1EntityTypeInExistingArtifact' end1InTempArtifact.Multiplicity.Value' navProp1InTempArtifact.LocalName.Value' end2EntityTypeInExistingArtifact' end2InTempArtifact.Multiplicity.Value' navProp2InTempArtifact.LocalName.Value' true' false); " is 326.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the statement  "		if (ShouldCreateAssociationGivenReferentialConstraint (refConstraintInTempArtifact' end1InTempArtifact' end2InTempArtifact' end1EntityTypeInExistingArtifact' end2EntityTypeInExistingArtifact' out end1IsPrincipalEnd' out principalPropertiesInExistingArtifact' out dependentPropertiesInExistingArtifact' out unfoundPrincipalProperties' out unfoundDependentProperties)) { " is 368.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the statement  "			var cmd = new CreateConceptualAssociationCommand (assocInTempArtifact.LocalName.Value' end1EntityTypeInExistingArtifact' end1InTempArtifact.Multiplicity.Value' navProp1InTempArtifact.LocalName.Value' end2EntityTypeInExistingArtifact' end2InTempArtifact.Multiplicity.Value' navProp2InTempArtifact.LocalName.Value' true' false); " is 326.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the statement  "				AddReferentialConstraintForAssociation (cpc' cmd' end1IsPrincipalEnd' principalPropertiesInExistingArtifact' dependentPropertiesInExistingArtifact); " is 148.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the statement  "			EntityType principalEndEntityType = end1IsPrincipalEnd ? end1EntityTypeInExistingArtifact : end2EntityTypeInExistingArtifact; " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the statement  "			EntityType dependentEndEntityType = end1IsPrincipalEnd ? end2EntityTypeInExistingArtifact : end1EntityTypeInExistingArtifact; " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the statement  "			LogWarningMessageForReferentialConstraintProperties (assocInTempArtifact.LocalName.Value' principalEndEntityType' dependentEndEntityType' unfoundPrincipalProperties' unfoundDependentProperties); " is 194.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the statement  "		throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseCannotCreateAssociation' assocInTempArtifact.ToPrettyString ())); " is 180.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociation,The length of the statement  "	AddAssociationSetMappingForConceptualAssociation (cpc' existingArtifact' assocInTempArtifact' newAssocInExistingArtifact' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact); " is 181.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,UpdateOnDeleteAction,The length of the statement  "		else if (false == newAssocEnd.OnDeleteAction.Action.Value.Equals (tempArtifactOnDeleteAction' StringComparison.Ordinal)) { " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddAssociationSetMappingForConceptualAssociation,The length of the statement  "		if (!EdmFeatureManager.GetForeignKeysInModelFeatureState (existingArtifact.SchemaVersion).IsEnabled () || assocInTempArtifact.IsManyToMany) { " is 141.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddAssociationSetMappingForConceptualAssociation,The length of the statement  "			// this is an error condition - we should have an association set mapping in this case' so assert and throw an exception " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddAssociationSetMappingForConceptualAssociation,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingCannotFind' assocInTempArtifact.ToPrettyString ())); " is 188.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddAssociationSetMappingForConceptualAssociation,The length of the statement  "		throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingCannotFindTempSSideEntitySet' asmInTempArtifact.ToPrettyString ())); " is 204.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddAssociationSetMappingForConceptualAssociation,The length of the statement  "		throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingCannotFindMatchingSSideEntitySet' storeEntitySetInTempArtifact.LocalName.Value)); " is 217.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddAssociationSetMappingForConceptualAssociation,The length of the statement  "	CloneAssociationSetMapping (cpc' asmInTempArtifact' existingArtifact.MappingModel ().FirstEntityContainerMapping' assocInExistingArtifact.AssociationSet' assocInExistingArtifact' storeEntitySetInExistingArtifact' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact); " is 272.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociationSetMapping,The length of the statement  "	var createASM = new CreateAssociationSetMappingCommand (existingEntityContainerMapping' existingAssociationSet' existingAssociation' existingStorageEntitySet); " is 159.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociationSetMapping,The length of the statement  "		throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseCannotCreateAssociationSetMapping' existingAssociationSet.ToPrettyString ())); " is 193.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociationSetMapping,The length of the statement  "		throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingWrongNumberAssociationSetEnds' existingAssociationSet.ToPrettyString ()' existingAssocSetEnds.Length)); " is 239.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociationSetMapping,The length of the statement  "		throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingWrongNumberAssociationSetEnds' existingAssociationSet.ToPrettyString ()' existingAssocSetEnds.Length)); " is 239.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociationSetMapping,The length of the statement  "		CloneEndProperty (cpc' endToClone' asmInExistingArtifact' aseInExistingArtifact' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact); " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,ShouldCreateAssociationGivenReferentialConstraint,The length of the statement  "		Debug.Assert (refConstraintInTempArtifact.Dependent.Role.Target == end2InTempArtifact' "Unexpected end value for Dependent Role of ReferentialConstraint when Principal Role matches end1 from temp artifact"); " is 207.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,ShouldCreateAssociationGivenReferentialConstraint,The length of the statement  "		Debug.Assert (refConstraintInTempArtifact.Dependent.Role.Target == end1InTempArtifact' "Unexpected end value for Dependent Role of ReferentialConstraint when Principal Role matches end2 from temp artifact"); " is 207.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddReferentialConstraintForAssociation,The length of the statement  "	var rcCmd = new CreateReferentialConstraintCommand (principalEndInExistingArtifact' dependentEndInExistingArtifact' principalPropertiesInExistingArtifact' dependentPropertiesInExistingArtifact); " is 194.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,LogWarningMessageForReferentialConstraintProperties,The length of the statement  "		var s = String.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseUnableToBringRefConstraint' associationName' prinicpalEntityTypeName' dependentEntityTypeName' propertyList); " is 188.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,LogWarningMessageForReferentialConstraintProperties,The length of the statement  "		var errorInfo = new ErrorInfo (ErrorInfo.Severity.WARNING' s' errorMessageTarget' ErrorCodes.UPDATE_MODEL_FROM_DB_CANT_INCLUDE_REF_CONSTRAINT' ErrorClass.Escher_UpdateModelFromDB); " is 180.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "		throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseCannotCreateAssociationSetMappingEndProperty' aseInExistingArtifact.ToPrettyString ())); " is 203.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseScalarPropertyNoNameTarget' sp.ToPrettyString ())); " is 166.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseScalarPropertyNoColumnNameTarget' sp.ToPrettyString ())); " is 172.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingCannotFindEntityTypeForProperty' sp.Name.Target.ToPrettyString ())); " is 204.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingCannotFindEntityTypeForProperty' sp.ColumnName.Target.ToPrettyString ())); " is 210.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "		var csdlEntityTypeInExistingArtifact = FindMatchingConceptualEntityTypeInExistingArtifact (spCSideEntityTypeinTempArtifact' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact); " is 183.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingCannotFindMatchingEntityType' sp.ToPrettyString ()' spCSideEntityTypeinTempArtifact.ToPrettyString ())); " is 240.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "		var ssdlEntityTypeInExistingArtifact = FindMatchingStorageEntityTypeInExistingArtifact (spSSideEntityTypeinTempArtifact); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingCannotFindMatchingEntityType' sp.ToPrettyString ()' spSSideEntityTypeinTempArtifact.ToPrettyString ())); " is 240.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "		var entityProperty = FindMatchingPropertyInExistingArtifactEntityType (sp.Name.Target' csdlEntityTypeInExistingArtifact); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "							Debug.Fail ("C-side Property " + sp.Name.Target.ToPrettyString () + " has more than 1 ScalarProperty anti-dep with an EntitySetMapping parent. Should be at most 1."); " is 166.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "				throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingCannotFindSSideForCSideProperty' sp.ToPrettyString ()' sp.Name.Target.ToPrettyString ())); " is 226.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "			var sSidePropertyToBeMappedInExistingArtifact = FindSSidePropInExistingArtifact (sSidePropertyToBeMappedInTempArtifact); " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "				throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingCannotFindMatchingSSideProperty' sp.ToPrettyString ()' sSidePropertyToBeMappedInTempArtifact.ToPrettyString ())); " is 249.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "			entityProperty = CreateNewConceptualPropertyAndMapping (cpc' sp.Name.Target' sSidePropertyToBeMappedInTempArtifact' csdlEntityTypeInExistingArtifact); " is 150.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "				throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingCannotFindOrCreateMatchingProperty' sp.ToPrettyString ()' sp.Name.Target.ToPrettyString ()' csdlEntityTypeInExistingArtifact.ToPrettyString ())); " is 281.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "		var tableColumn = FindMatchingPropertyInExistingArtifactEntityType (sp.ColumnName.Target' ssdlEntityTypeInExistingArtifact); " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingCannotFindMatchingProperty' sp.ToPrettyString ()' sp.ColumnName.Target.ToPrettyString ()' ssdlEntityTypeInExistingArtifact.ToPrettyString ())); " is 279.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneEndProperty,The length of the statement  "			throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseCannotCreateAssociationSetMappingScalarProperty' entityProperty.ToPrettyString ()' tableColumn.ToPrettyString ())); " is 230.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateModelFromDatabaseCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateModelFromDatabaseCommand.cs,InvokeInternal,The length of the statement  "			if (null != fim.FunctionImportName && null != fim.FunctionImportName.Target && null != fim.FunctionName && null != fim.FunctionName.Target) { " is 141.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateModelFromDatabaseCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateModelFromDatabaseCommand.cs,InvokeInternal,The length of the statement  "				CreateFunctionImportCommand.UpdateFunctionImportParameters (cpc' fim.FunctionImportName.Target' fim.FunctionName.Target); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,UpdateModelFromDatabaseCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateModelFromDatabaseCommand.cs,InvokeInternal,The length of the statement  "		var shouldSynchronizePropertyFacets = ModelHelper.GetDesignerPropertyValueFromArtifactAsBool (OptionsDesignerInfo.ElementName' OptionsDesignerInfo.AttributeSynchronizePropertyFacets' OptionsDesignerInfo.SynchronizePropertyFacetsDefault (artifact)' artifact); " is 258.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeNavigationPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeNavigationPropertyCommand.cs,InvokeInternal,The length of the statement  "	Debug.Assert ((_property.Relationship.Status == BindingStatus.Known || (_association == null && _property.Relationship.Status == BindingStatus.Undefined))' "Rebind for the NavigationProperty failed"); " is 200.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeNavigationPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeNavigationPropertyCommand.cs,InvokeInternal,The length of the statement  "			_end1 = associationEnds.Where (r => r.Type != null && r.Type.Status == BindingStatus.Known && r.Type.Target == _property.Parent).FirstOrDefault (); " is 147.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeNavigationPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeNavigationPropertyCommand.cs,InvokeInternal,The length of the statement  "			_end2 = associationEnds.Where (r => r.Type != null && r.Type.Status == BindingStatus.Known && ((r.Type.Target != _property.Parent) || (r.Type.Target == _property.Parent && r != _end1))).FirstOrDefault (); " is 204.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeNavigationPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeNavigationPropertyCommand.cs,InvokeInternal,The length of the statement  "	if (_property.ToRole.Status == BindingStatus.Known && string.Compare (_property.ToRole.Target.Multiplicity.Value' _multiplicity' StringComparison.OrdinalIgnoreCase) != 0) { " is 172.
Long Statement,Microsoft.Data.Entity.Design.Model.Commands,ChangeNavigationPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeNavigationPropertyCommand.cs,InvokeInternal,The length of the statement  "			if (association != null && association.AssociationSet != null && association.AssociationSet.AssociationSetMapping != null) { " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model.Designer,Diagram,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagram.cs,IsEFObjectRepresentedInDiagram,The length of the statement  "	// if efobject is an entity-set' Return true only if all the entity-types contained in the set are represented in the diagram. " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,OnBeforeModelChangesCommitted,The length of the statement  "			// diagram objects are not resolved yet. This means that when we try to create entity type shapes or association connectors " is 123.
Long Statement,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,OnBeforeModelChangesCommitted,The length of the statement  "			// the logic assumes that there aren't any anti-dependencies of the model elements' so it adds duplicate shapes/connectors " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,OnBeforeModelChangesCommitted,The length of the statement  "							InjectAssociationConnectorCommand (e.CommandProcessorContext' shapeChangeInfoSet' diagram' association' xmlChange.Action); " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectEntityTypeShapeCommand,The length of the statement  "			var contextItem = commandProcessorContext.EfiTransaction.GetContextValue<DiagramContextItem> (EfiTransactionOriginator.TransactionOriginatorDiagramId); " is 151.
Long Statement,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectEntityTypeShapeCommand,The length of the statement  "					InjectInheritanceConnectorCommand (commandProcessorContext' shapeChangeInfoSet' diagram' entityType.BaseType' changeAction); " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectEntityTypeShapeCommand,The length of the statement  "		foreach (var entityTypeShape in entityType.GetAntiDependenciesOfType<EntityTypeShape> ().Where (ets => ets.Diagram != null && ets.Diagram.Id == diagram.Id.Value)) { " is 164.
Long Statement,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectAssociationConnectorCommand,The length of the statement  "				if (diagram.EntityTypeShapes.Where (ets => ets.EntityType.Target == end.Type.Target).Any () || shapeChangeInfoSet.Where (sc => sc.DiagramId == diagram.Id.Value && sc.ModelEFObject == end.Type.Target && sc.ChangeType == XObjectChange.Add).Any ()) { " is 247.
Long Statement,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectAssociationConnectorCommand,The length of the statement  "		foreach (var associationConnector in association.GetAntiDependenciesOfType<AssociationConnector> ().Where (ac => ac.Diagram != null && ac.Diagram.Id == diagram.Id.Value)) { " is 172.
Long Statement,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectInheritanceConnectorCommand,The length of the statement  "				if (diagram.EntityTypeShapes.Where (ets => ets.EntityType.Target == entityType).Any () || shapeChangeInfoSet.Where (sc => sc.DiagramId == diagram.Id.Value && sc.ModelEFObject == entityType && sc.ChangeType == XObjectChange.Add).Any ()) { " is 237.
Long Statement,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectInheritanceConnectorCommand,The length of the statement  "			foreach (var inheritanceConnector in owningEntityType.GetAntiDependenciesOfType<InheritanceConnector> ().Where (ic => ic.Diagram != null && ic.Diagram.Id == diagram.Id.Value)) { " is 177.
Long Statement,Microsoft.Data.Entity.Design.Model,AnnotationManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\AnnotationManager.cs,UpdateAttributeName,The length of the statement  "	Debug.Assert (!String.IsNullOrEmpty (oldName)' "Attribute name for AnnotationManager.UpdateAttributeName is null or empty"); " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model,AnnotationManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\AnnotationManager.cs,UpdateAttributeValue,The length of the statement  "	Debug.Assert (!String.IsNullOrEmpty (name)' "Attribute name for AnnotationManager.UpdateAttributeValue is null or empty"); " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmxUtils,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmxUtils.cs,GetEDMXXsdResource,The length of the statement  "		return XmlReader.Create (assembly.GetManifestResourceStream ("Microsoft.Data.Entity.Design.Model.Microsoft.Data.Entity.Design.Edmx_1.xsd")); " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmxUtils,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmxUtils.cs,GetEDMXXsdResource,The length of the statement  "		return XmlReader.Create (assembly.GetManifestResourceStream ("Microsoft.Data.Entity.Design.Model.Microsoft.Data.Entity.Design.Edmx_2.xsd")); " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmxUtils,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmxUtils.cs,GetEDMXXsdResource,The length of the statement  "		return XmlReader.Create (assembly.GetManifestResourceStream ("Microsoft.Data.Entity.Design.Model.Microsoft.Data.Entity.Design.Edmx_3.xsd")); " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model,UseStrongSpatialTypesHandler,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\UseStrongSpatialTypesHandler.cs,DoHandleConversion,The length of the statement  "	var csdlSchemaElement = (XmlElement)doc.SelectSingleNode ("/edmx:Edmx/edmx:Runtime/edmx:ConceptualModels/csdl:Schema"' nsmgr); " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model,UseStrongSpatialTypesHandler,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\UseStrongSpatialTypesHandler.cs,DoHandleConversion,The length of the statement  "		var useStrongSpatialTypesAttr = csdlSchemaElement.Attributes [UseStrongSpatialTypesDefaultableValue.AttributeUseStrongSpatialTypes' annotationNamespace]; " is 153.
Long Statement,Microsoft.Data.Entity.Design.Model,UseStrongSpatialTypesHandler,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\UseStrongSpatialTypesHandler.cs,DoHandleConversion,The length of the statement  "			// we are retargeting to a Schema Version that supports UseStrongSpatialTypes - add UseStrongSpatialTypes="false" if it is not present " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model,UseStrongSpatialTypesHandler,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\UseStrongSpatialTypesHandler.cs,DoHandleConversion,The length of the statement  "				useStrongSpatialTypesAttr = doc.CreateAttribute ("annotation"' UseStrongSpatialTypesDefaultableValue.AttributeUseStrongSpatialTypes' annotationNamespace); " is 154.
Long Statement,Microsoft.Data.Entity.Design.Model,UseStrongSpatialTypesHandler,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\UseStrongSpatialTypesHandler.cs,DoHandleConversion,The length of the statement  "			// we are retargeting to a Schema Version that does not support UseStrongSpatialTypes - remove UseStrongSpatialTypes if it is present " is 133.
Long Statement,Microsoft.Data.Entity.Design.Model,DiagramArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\DiagramArtifact.cs,ParseSingleElement,The length of the statement  "	Debug.Assert (elem.Name.LocalName == "Designer"' "Incorrect XElement name' Expected: 'Designer'; Actual: " + elem.Name.LocalName); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,DiagramArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\DiagramArtifact.cs,GetVerifyModelIntegrityVisitor,The length of the statement  "	return new VerifyDiagramModelIntegrityVisitor (checkDisposed' checkUnresolved' checkXObject' checkAnnotations' checkBindingIntegrity); " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model,DiagramArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\DiagramArtifact.cs,DetermineIfArtifactIsDesignerSafe,The length of the statement  "		XDocument.Validate (EscherAttributeContentValidator.GetInstance (SchemaVersion).EdmxSchemaSet' (sender' args) => IsDesignerSafe = false); " is 137.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmFeatureManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmFeatureManager.cs,GetFunctionImportReturningComplexTypeFeatureState,The length of the statement  "	return schemaVersion > EntityFrameworkVersion.Version1 ? FeatureState.VisibleAndEnabled : FeatureState.VisibleButDisabled; " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmFeatureManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmFeatureManager.cs,GetEnumTypeFeatureState,The length of the statement  "	return schemaVersion > EntityFrameworkVersion.Version2 ? FeatureState.VisibleAndEnabled : FeatureState.VisibleButDisabled; " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmFeatureManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmFeatureManager.cs,GetEnumTypeFeatureState,The length of the statement  "	return IsFeatureSupportedForWorkflowAndRuntime (artifact' (a' existingFs) => GetEnumTypeFeatureState (a.SchemaVersion)); " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmFeatureManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmFeatureManager.cs,GetFunctionImportMappingFeatureState,The length of the statement  "	return schemaVersion > EntityFrameworkVersion.Version1 ? FeatureState.VisibleAndEnabled : FeatureState.VisibleButDisabled; " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmFeatureManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmFeatureManager.cs,GetForeignKeysInModelFeatureState,The length of the statement  "	return schemaVersion == EntityFrameworkVersion.Version1 ? FeatureState.VisibleButDisabled : FeatureState.VisibleAndEnabled; " is 123.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmFeatureManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmFeatureManager.cs,GetGenerateUpdateViewsFeatureState,The length of the statement  "	return schemaVersion > EntityFrameworkVersion.Version1 ? FeatureState.VisibleAndEnabled : FeatureState.VisibleButDisabled; " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmFeatureManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmFeatureManager.cs,GetEntityContainerTypeAccessFeatureState,The length of the statement  "	return schemaVersion > EntityFrameworkVersion.Version1 ? FeatureState.VisibleAndEnabled : FeatureState.VisibleButDisabled; " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmFeatureManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmFeatureManager.cs,GetLazyLoadingFeatureState,The length of the statement  "	return schemaVersion > EntityFrameworkVersion.Version1 ? FeatureState.VisibleAndEnabled : FeatureState.VisibleButDisabled; " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmFeatureManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmFeatureManager.cs,GetComposableFunctionImportFeatureState,The length of the statement  "	return schemaVersion > EntityFrameworkVersion.Version2 ? FeatureState.VisibleAndEnabled : FeatureState.VisibleButDisabled; " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmFeatureManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmFeatureManager.cs,GetUseStrongSpatialTypesFeatureState,The length of the statement  "	return schemaVersion > EntityFrameworkVersion.Version2 ? FeatureState.VisibleAndEnabled : FeatureState.VisibleButDisabled; " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model,EdmFeatureManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EdmFeatureManager.cs,IsFeatureSupportedForWorkflowAndRuntime,The length of the statement  "	// NOTE: There are no scenarios yet for the case where a feature is disabled (but visible) and the runtime wants to set it to invisible. " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model,MetadataConverterDriver,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\MetadataConverterDriver.cs,GetConverterHandler,The length of the statement  "		var key = String.Format (CultureInfo.InvariantCulture' "{0}{1}"' sourceSchemaVersion.ToString (2)' targetSchemaVersion.ToString (2)); " is 133.
Long Statement,Microsoft.Data.Entity.Design.Model,MetadataConverterDriver,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\MetadataConverterDriver.cs,GetDocumentSchemaVersion,The length of the statement  "	Debug.Assert (isRootElementEdmxNode' String.Format (CultureInfo.InvariantCulture' "Not valid root element name. Expected: 'edmx'' found: {0}"' element.LocalName)); " is 163.
Long Statement,Microsoft.Data.Entity.Design.Model,EFExtensions,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EFExtensions.cs,IsSqlFamilyProvider,The length of the statement  "		return storageModel.Provider.Value.Equals ("System.Data.SqlClient"' StringComparison.Ordinal) || storageModel.Provider.Value.StartsWith ("System.Data.SqlServerCe"' StringComparison.Ordinal); " is 190.
Long Statement,Microsoft.Data.Entity.Design.Model,EFExtensions,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EFExtensions.cs,GetEntityDesignArtifact,The length of the statement  "	// For now' we only expect only 1 instance of EntityDesignArtifact exists in the ArtifactSet (with the exception of our unit-test). " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model,EFExtensions,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EFExtensions.cs,GetEntityDesignArtifact,The length of the statement  "	Debug.Assert (artifactSet.Artifacts.OfType<EntityDesignArtifact> ().Count () == 1' "Expect to have 1 instance of EntityDesignArtifactSet in the artifactSet's Artifacts collection. Found: " + artifactSet.Artifacts.OfType<EntityDesignArtifact> ().Count ()); " is 255.
Long Statement,Microsoft.Data.Entity.Design.Model,EFExtensions,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EFExtensions.cs,GetEntityDesignArtifact,The length of the statement  "		Debug.Fail ("The artifact must be an EntityDesignArtifact or DiagramArtifact to be used with the EFExtensions extension methods."); " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model,EFExtensions,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EFExtensions.cs,ConceptualEntityTypes,The length of the statement  "	Debug.Assert (derivedArtifactSet != null' "Every EFArtifactSet must be an EntityDesignArtifactSet to be used with the EFExtensions extension methods."); " is 152.
Long Statement,Microsoft.Data.Entity.Design.Model,EFExtensions,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EFExtensions.cs,GetSchemaFromRuntimeModelRoot,The length of the statement  "	Debug.Assert (modelRoot.XElement != null' "Could not find the runtime model root or its XElement in GetSchemaFromRuntimeModelRoot"); " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model,EFExtensions,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EFExtensions.cs,GetEdmItemCollectionFromArtifact,The length of the statement  "	Debug.Assert (conceptualModel != null && conceptualModel.XElement != null' "Could not find the conceptual model or its XElement in GetEdmItemCollectionFromArtifact"); " is 166.
Long Statement,Microsoft.Data.Entity.Design.Model,EFNormalizableItemDefaults,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EFNormalizableItemDefaults.cs,DefaultNameNormalizerForMSL,The length of the statement  "					var errorInfo = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' parent' ErrorCodes.RESOLVE_UNRESOLVED_ALIAS' ErrorClass.ResolveError); " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ReloadArtifact,The length of the statement  "		// NOTE: DiagramArtifact must be reloaded after EntityDesignArtifact finishes reloading but before we fire artifact reloaded event. " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ReloadArtifact,The length of the statement  "		// this will do some analysis to determine if the artifact is safe for the designer' or should be displayed in the xml editor " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,CheckForCorrectNamespace,The length of the statement  "			var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.NON_QUALIFIED_ELEMENT' ErrorClass.ParseError); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleElement,The length of the statement  "					var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.DUPLICATED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleElement,The length of the statement  "					ParseSingleEntityModelElement (elem3' ref conceptualModelsProcessed' ref storageModelsProcessed' ref mappingsProcessed); " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleElement,The length of the statement  "					var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.DUPLICATED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleElement,The length of the statement  "				var error = new ErrorInfo (ErrorInfo.Severity.WARNING' Resources.DataServicesNodeWarning' this' ErrorCodes.DATA_SERVICES_NODE_DETECTED' ErrorClass.ParseError); " is 159.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleElement,The length of the statement  "				var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.UNEXPECTED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleElement,The length of the statement  "		var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.UNEXPECTED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ReparseSingleElement,The length of the statement  "		Debug.Assert (entityModelXObj != null && (entityModelXObj.Name.LocalName == "ConceptualModels" || entityModelXObj.Name.LocalName == "StorageModels" || entityModelXObj.Name.LocalName == "Mappings")' "How could a Schema element be added underneath a parent that is not a ConceptualModel' StorageModel' or Mapping?"); " is 314.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ReparseSingleElement,The length of the statement  "		ParseSingleEntityModelElement (entityModelXObj' ref conceptualModelsProcessed' ref storageModelsProcessed' ref mappingsProcessed); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleEntityModelElement,The length of the statement  "			var msg = String.Format (CultureInfo.CurrentCulture' Resources.DuplicatedElementMsg' entityModelXElement.Name.LocalName); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleEntityModelElement,The length of the statement  "			var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.DUPLICATED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleEntityModelElement,The length of the statement  "			var msg = String.Format (CultureInfo.CurrentCulture' Resources.DuplicatedElementMsg' entityModelXElement.Name.LocalName); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleEntityModelElement,The length of the statement  "			var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.DUPLICATED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleEntityModelElement,The length of the statement  "			var msg = String.Format (CultureInfo.CurrentCulture' Resources.DuplicatedElementMsg' entityModelXElement.Name.LocalName); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleEntityModelElement,The length of the statement  "			var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.DUPLICATED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleEntityModelElement,The length of the statement  "		var msg = String.Format (CultureInfo.CurrentCulture' Resources.UnexpectedElementMsg' entityModelXElement.Name.LocalName); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseSingleEntityModelElement,The length of the statement  "		var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.UNEXPECTED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,CreateRuntimeModelRoot,The length of the statement  "	if (runtimeModelRoot.Name.LocalName == BaseEntityModel.ElementName && CheckForCorrectNamespace (runtimeModelRoot' SchemaManager.GetCSDLNamespaceNames ()' false)) { " is 163.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,CreateRuntimeModelRoot,The length of the statement  "	else if (runtimeModelRoot.Name.LocalName == BaseEntityModel.ElementName && CheckForCorrectNamespace (runtimeModelRoot' SchemaManager.GetSSDLNamespaceNames ()' false)) { " is 168.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,CreateRuntimeModelRoot,The length of the statement  "	else if (runtimeModelRoot.Name.LocalName == MappingModel.ElementName && CheckForCorrectNamespace (runtimeModelRoot' SchemaManager.GetMSLNamespaceNames ()' false)) { " is 164.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseStorageModels,The length of the statement  "				var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.DUPLICATED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseStorageModels,The length of the statement  "			var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.UNEXPECTED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseMappings,The length of the statement  "				var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.DUPLICATED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseMappings,The length of the statement  "			var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.UNEXPECTED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseConceptualModels,The length of the statement  "				var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.DUPLICATED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,ParseConceptualModels,The length of the statement  "			var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.UNEXPECTED_ELEMENT_ENCOUNTERED' ErrorClass.ParseError); " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,GetVerifyModelIntegrityVisitor,The length of the statement  "	return new VerifyEscherModelIntegrityVisitor (checkDisposed' checkUnresolved' checkXObject' checkAnnotations' checkBindingIntegrity); " is 133.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,DetermineIfArtifactIsStructurallySafe,The length of the statement  "	// now do runtime validation.  Always pass true to do mapping validation since we need these errors to determine safe-mode " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,DetermineIfArtifactIsVersionSafe,The length of the statement  "	// make sure that the XML namespace of the EDMX' Csdl' ssdl & msl nodes match the expected XML namespaces for the schema version  " is 128.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignArtifact,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignArtifact.cs,DetermineIfArtifactIsVersionSafe,The length of the statement  "	_isVersionSafe = rootNamespace != null && rootNamespace == SchemaManager.GetEDMXNamespaceName (SchemaVersion) && CompareNamespaces (ConceptualModel' SchemaManager.GetCSDLNamespaceName (SchemaVersion)) && CompareNamespaces (StorageModel' SchemaManager.GetSSDLNamespaceName (SchemaVersion)) && CompareNamespaces (MappingModel' SchemaManager.GetMSLNamespaceName (SchemaVersion)); " is 376.
Long Statement,Microsoft.Data.Entity.Design.Model,EFDesignerInfoRoot,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EFDesignerInfoRoot.cs,ParseSingleElement,The length of the statement  "	else if (_diagramArtifact == null && element.Name.LocalName == Diagrams.ElementName)// only parse Diagrams element if DiagramArtifact is not available. " is 151.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,CanTypeSupportIdentity,The length of the statement  "	return type != null && (type.PrimitiveTypeKind == PrimitiveTypeKind.Int16 || type.PrimitiveTypeKind == PrimitiveTypeKind.Int32 || type.PrimitiveTypeKind == PrimitiveTypeKind.Int64 || type.PrimitiveTypeKind == PrimitiveTypeKind.Decimal || type.PrimitiveTypeKind == PrimitiveTypeKind.Byte); " is 288.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniqueNameForExistingItem,The length of the statement  "	return IsUniqueNameInternal (existingItem.GetType ()' existingItem.Parent' existingItem' proposedName' uniquenessIsCaseSensitive' out errorMessage); " is 148.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniqueNameInternal,The length of the statement  "			Debug.Assert (et != null' "For type assignable from EntityType Unexpected existingItem type of " + existingItem.GetType ().Name + " for type " + type.Name); " is 156.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniqueNameInternal,The length of the statement  "				// for entity types' we need to check if the proposed name will conflict with any existing entity types in the container' or any properties in the entity type " is 158.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniqueNameInternal,The length of the statement  "				return (XmlModelHelper.IsUniqueNameInsideContainer (container' proposedName' uniquenessIsCaseSensitive) && XmlModelHelper.IsUniqueNameInsideContainer (et' proposedName' uniquenessIsCaseSensitive)); " is 197.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniqueNameInternal,The length of the statement  "			Debug.Assert (complexType != null' "For type assignable from ComplexType Unexpected existingItem type of " + existingItem.GetType ().Name + " for type " + type.Name); " is 166.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniqueNameInternal,The length of the statement  "				// for complex types' we need to check if the proposed name will conflict with any existing complex' enum or  entity types in the container' or any properties in the entity type " is 177.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniqueNameInternal,The length of the statement  "				return (XmlModelHelper.IsUniqueNameInsideContainer (container' proposedName' uniquenessIsCaseSensitive) && XmlModelHelper.IsUniqueNameInsideContainer (complexType' proposedName' uniquenessIsCaseSensitive)); " is 206.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniqueNameInternal,The length of the statement  "			Debug.Assert (enumType != null' "For type assignable from EnumType Unexpected existingItem type of " + existingItem.GetType ().Name + " for type " + type.Name); " is 160.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniqueNameInternal,The length of the statement  "				// for enum types' we need to check if the proposed name will conflict with any existing complex' enum or entity types in the container. " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniqueNameInternal,The length of the statement  "				errorMessage = string.Format (CultureInfo.CurrentCulture' Resources.EntityContainerNameConflictsWithNamespaceName' proposedName); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,ValidatePropertyName,The length of the statement  "		return ValidateComplexTypePropertyName (property.Parent as ComplexType' proposedName' uniquenessIsCaseSensitive' out errorMessage); " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,ValidateEntityPropertyName,The length of the statement  "		errorMessage = string.Format (CultureInfo.CurrentCulture' Resources.Error_MemberNameSameAsParent' proposedName' entityType.LocalName.Value); " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,ValidateEntityPropertyName,The length of the statement  "		errorMessage = string.Format (CultureInfo.CurrentCulture' Resources.Error_MemberNameNotUnique' proposedName' entityType.LocalName.Value); " is 137.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,ValidateComplexTypePropertyName,The length of the statement  "		errorMessage = string.Format (CultureInfo.CurrentCulture' Resources.Error_MemberNameSameAsParent' proposedName' complexType.LocalName.Value); " is 141.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,ValidateComplexTypePropertyName,The length of the statement  "		errorMessage = string.Format (CultureInfo.CurrentCulture' Resources.Error_ComplexTypePropertyNameNotUnique' proposedName' complexType.LocalName.Value); " is 151.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniquePropertyName,The length of the statement  "			if (!XmlModelHelper.IsUniqueNameInsideContainer (parentEntity' proposedName' uniquenessIsCaseSensitive' childEFObjectsToIgnore)) { " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsUniquePropertyNameInSubTypes,The length of the statement  "	if (!XmlModelHelper.IsUniqueNameInsideContainer (entityType' proposedName' uniquenessIsCaseSensitive' childEFObjectsToIgnore)) { " is 128.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetUniqueName,The length of the statement  "		if (IsUniqueName (type' container' uniqueName' false' out msg) && (namesToAvoid == null || !namesToAvoid.Contains (uniqueName))) { " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetUniqueTableNameInSchema,The length of the statement  "	var existingTableNames = new HashSet<string> (ec.EntitySets ().Cast<StorageEntitySet> ().Where (es => es.Schema.Value == schemaName).Select (es => es.Table.Value)); " is 164.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,AllPrimitiveTypes,The length of the statement  "		primitiveTypeSet = new HashSet<string> (edmCollection.GetPrimitiveTypes (EntityFrameworkVersion.VersionToDouble (targetSchemaVersion)).Select (t => t.Name)); " is 157.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,AllPrimaryKeyPrimitiveTypes,The length of the statement  "	// TODO: this is a hack (also is incorrect for V1 where Binary is not a valid key type) - should be fixed - see StoreModelBuilder.IsValidKeyType() " is 146.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindEntityTypeMapping,The length of the statement  "				Debug.Assert (etm.TypeName.Bindings.Count <= 1 && etm.TypeName.IsTypeOfs.Count <= 1' "etm.TypeName.Bindings.Count(" + etm.TypeName.Bindings.Count + ") should be <= 1 and etm.TypeName.IsTypeOfs.Count(" + etm.TypeName.IsTypeOfs.Count + ") should be <= 1"); " is 254.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindMappingFragment,The length of the statement  "	var mappingFragment = FindMappingFragment (cpc' conceptualEntityType' storageEntityType' EntityTypeMappingKind.Default' false); " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindMappingFragment,The length of the statement  "		mappingFragment = FindMappingFragment (cpc' conceptualEntityType' storageEntityType' EntityTypeMappingKind.IsTypeOf' createIfNoneFound); " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindFragmentScalarProperty,The length of the statement  "		if (sp.MappingFragment != null && sp.MappingFragment.EntityTypeMapping.FirstBoundConceptualEntityType == conceptualEntityType) { " is 128.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindFragmentComplexProperty,The length of the statement  "	Debug.Assert (entityProperty is ComplexConceptualProperty' "Only ComplexConceptualProperty can be mapped to ComplexProperty"); " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindFragmentComplexProperty,The length of the statement  "		if (cp.MappingFragment != null && cp.MappingFragment.EntityTypeMapping.FirstBoundConceptualEntityType == conceptualEntityType) { " is 128.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindFragmentCondition,The length of the statement  "		if (cond.MappingFragment != null && cond.MappingFragment.EntityTypeMapping.FirstBoundConceptualEntityType == conceptualEntityType) { " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindModificationFunction,The length of the statement  "		Debug.Assert (entityTypeMapping.ModificationFunctionMapping != null' "entityTypeMapping.ModificationFunctionMapping should not be null"); " is 137.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindModificationFunction,The length of the statement  "		if (mfm.InsertFunction != null && mfm.InsertFunction.FunctionName.Target == storageFunction && functionType == ModificationFunctionType.Insert) { " is 145.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindModificationFunction,The length of the statement  "		else if (mfm.UpdateFunction != null && mfm.UpdateFunction.FunctionName.Target == storageFunction && functionType == ModificationFunctionType.Update) { " is 150.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindModificationFunction,The length of the statement  "		else if (mfm.DeleteFunction != null && mfm.DeleteFunction.FunctionName.Target == storageFunction && functionType == ModificationFunctionType.Delete) { " is 150.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetMaxLengthFacetValue,The length of the statement  "		// Ideally we just need to check if columnSize value is equal to Int32.MaxValue; but unfortunately this does not work for some DB unicode types for example NText. " is 162.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetMaxLengthFacetValue,The length of the statement  "		// I think it is pretty safe to assume if the columnSize >= Int32.MaxValue/2 then set the MaxLength to "Max" since in SQL Server you could not set column size to be greater than 8000. " is 183.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetMaxLengthFacetText,The length of the statement  "	// Ideally we just need to check if columnSize value is equal to Int32.MaxValue; but unfortunately this does not work for some DB unicode types for example NText. " is 162.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetMaxLengthFacetText,The length of the statement  "	// I think it is pretty safe to assume if the columnSize >= Int32.MaxValue/2 then set the MaxLength to "Max" since in SQL Server you could not set a column size to be greater than 8000. " is 185.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,InvalidSchemaError,The length of the statement  "	var message = string.Format (CultureInfo.CurrentCulture' formatString' args) + " " + Resources.OperationRequiresValidSchema; " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetUniqueConceptualPropertyName,The length of the statement  "	Debug.Assert (EscherAttributeContentValidator.IsValidCsdlPropertyName (alwaysAddSuffix ? propertyNameCandidate + DefaultPropertySuffixSeed : propertyNameCandidate)' "Candidate property name is not valid"); " is 205.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetUniqueConceptualPropertyName,The length of the statement  "	namesToAvoid = namesToAvoid != null ? new HashSet<string> (namesToAvoid.Union (allDistinctPropertyNamesInInheritanceTree)) : new HashSet<string> (allDistinctPropertyNamesInInheritanceTree); " is 189.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetUniqueConceptualPropertyName,The length of the statement  "	var propertyName = GetUniquePropertyName (propertyNameCandidate' entityType' namesToAvoid' childEFObjectsToIgnore' alwaysAddSuffix ? DefaultPropertySuffixSeed : (int?)null); " is 173.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetUniqueConceptualPropertyName,The length of the statement  "	Debug.Assert (EscherAttributeContentValidator.IsValidCsdlPropertyName (propertyName)' "ModelHelper.GetUniqueConceptualPropertyName(): Generated non-valid unique property name"); " is 177.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,ConstructProposedEntitySetName,The length of the statement  "	var pluralize = GetDesignerPropertyValueFromArtifactAsBool (OptionsDesignerInfo.ElementName' OptionsDesignerInfo.AttributeEnablePluralization' OptionsDesignerInfo.EnablePluralizationDefault' artifact); " is 201.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindNavigationPropertyForAssociationEnd,The length of the statement  "			if (navProp.Relationship != null && navProp.Relationship.Target == assoc && navProp.FromRole != null && navProp.FromRole.Target == fromRoleEnd) { " is 145.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindAssociation,The length of the statement  "		return entityModel.Associations ().FirstOrDefault (a => String.Compare (name' a.LocalName.Value' StringComparison.OrdinalIgnoreCase) == 0 || String.Compare (name' a.NormalizedNameExternal' StringComparison.OrdinalIgnoreCase) == 0); " is 231.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindAssociationSet,The length of the statement  "		return entityModel.FirstEntityContainer.AssociationSets ().FirstOrDefault (a => String.Compare (name' a.LocalName.Value' StringComparison.OrdinalIgnoreCase) == 0 || String.Compare (name' a.NormalizedNameExternal' StringComparison.OrdinalIgnoreCase) == 0); " is 255.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindEntityType,The length of the statement  "		if (String.Compare (name' et.LocalName.Value' StringComparison.OrdinalIgnoreCase) == 0 || String.Compare (name' et.NormalizedNameExternal' StringComparison.OrdinalIgnoreCase) == 0) { " is 182.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindComplexType,The length of the statement  "		if (String.Compare (name' ct.LocalName.Value' StringComparison.OrdinalIgnoreCase) == 0 || String.Compare (name' ct.NormalizedNameExternal' StringComparison.OrdinalIgnoreCase) == 0) { " is 182.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindEnumType,The length of the statement  "		if (String.Equals (name' et.LocalName.Value' StringComparison.OrdinalIgnoreCase) || String.Equals (name' et.NormalizedNameExternal' StringComparison.OrdinalIgnoreCase)) { " is 170.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindComplexTypeEntityTypeOrPrimitiveTypeForFunctionImportReturnType,The length of the statement  "	Debug.Assert (AllPrimitiveTypes (cModel.Artifact.SchemaVersion).Contains (desanitizedReturnType)' "Why isn't the return type of the function import either 'None'' a primitive type' or an entity type?"); " is 202.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,SetConditionPredicate,The length of the statement  "	Debug.Assert ((isNull != null && string.IsNullOrEmpty (conditionValue)) || (isNull == null && string.IsNullOrEmpty (conditionValue) == false) || (isNull == null && string.IsNullOrEmpty (conditionValue))' "isNull(" + isNull + ") and conditionValue(" + (conditionValue == null ? "NULL" : conditionValue) + ") combination is incorrect"); " is 334.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,SetConditionPredicate,The length of the statement  "		Debug.Assert (string.IsNullOrEmpty (conditionValue)' "IsNull and Value condition predicates can't be set at the same time"); " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,IsElementComplexProperty,The length of the statement  "		// Since a name has to be unique across all enum types and complex types' we assume that the type must be a complex type. " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetDesignerPropertyValueFromArtifact,The length of the statement  "			// If this succeeds' then we will try to find the DesignerProperty corresponding to "GenerateDatabaseScriptWorkflowPath" " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetDesignerPropertyValueFromArtifact,The length of the statement  "				// Finally if all of this succeeds' we'll return back the value of the GenerateDatabaseScriptWorkflowPath DesignerProperty " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetDesignerPropertyValueFromArtifact,The length of the statement  "				Debug.Assert (designerProperty.ValueAttr != null' "DesignerProperty " + designerProperty.LocalName + "'s ValueAttr is null"); " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,CreateSetDesignerPropertyValueCommandFromArtifact,The length of the statement  "	Debug.Assert (foundDesignerInfo && designerInfo != null' "Could not find the DesignerInfo: " + designerInfoElementName + ". Edmx might be corrupted"); " is 150.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,CreateSetDesignerPropertyCommandInsideDesignerInfo,The length of the statement  "	if (designerInfo.PropertySet.TryGetDesignerProperty (designerPropertyName' out designerProperty) && designerProperty.ValueAttr != null) { " is 137.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,DeterminePrincipalDependentAssociationEnds,The length of the statement  "	if (end1.Multiplicity.Value == ModelConstants.Multiplicity_One && end2.Multiplicity.Value == ModelConstants.Multiplicity_One) { " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,DeterminePrincipalDependentAssociationEnds,The length of the statement  "	else if (end1.Multiplicity.Value == ModelConstants.Multiplicity_ZeroOrOne && end2.Multiplicity.Value == ModelConstants.Multiplicity_Many && scenario == DeterminePrincipalDependentAssociationEndsScenario.CreateForeignKeyProperties) { " is 232.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,DeterminePrincipalDependentAssociationEnds,The length of the statement  "	else if (end2.Multiplicity.Value == ModelConstants.Multiplicity_ZeroOrOne && end1.Multiplicity.Value == ModelConstants.Multiplicity_Many && scenario == DeterminePrincipalDependentAssociationEndsScenario.CreateForeignKeyProperties) { " is 232.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,DeterminePrincipalDependentAssociationEnds,The length of the statement  "	else if (end1.Multiplicity.Value == ModelConstants.Multiplicity_ZeroOrOne && end2.Multiplicity.Value == ModelConstants.Multiplicity_ZeroOrOne && scenario == DeterminePrincipalDependentAssociationEndsScenario.CreateForeignKeyProperties) { " is 237.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,DeterminePrincipalDependentAssociationEnds,The length of the statement  "		if (end1.Multiplicity.Value == ModelConstants.Multiplicity_One && (end2.Multiplicity.Value == ModelConstants.Multiplicity_ZeroOrOne || end2.Multiplicity.Value == ModelConstants.Multiplicity_Many)) { " is 198.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,DeterminePrincipalDependentAssociationEnds,The length of the statement  "		else if (end2.Multiplicity.Value == ModelConstants.Multiplicity_One && (end1.Multiplicity.Value == ModelConstants.Multiplicity_ZeroOrOne || end1.Multiplicity.Value == ModelConstants.Multiplicity_Many)) { " is 203.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,DeterminePrincipalDependentEndsForAnyAssociationType,The length of the statement  "		// We can't call DeterminePrincipalDependentAssociationEnds on ManyToMany associations' since there is no principal or dependent end for ManyToMany. " is 148.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,DeterminePrincipalDependentEndsForAnyAssociationType,The length of the statement  "		DeterminePrincipalDependentAssociationEnds (association' out principal' out dependent' DeterminePrincipalDependentAssociationEndsScenario.CreateForeignKeyProperties); " is 166.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetRelatedEntityTypes,The length of the statement  "				// check if the entity-type is not already in the list and is not equal to the passed in entity-type (Self association scenario). " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetListOfAssociationConnectorsForEntityTypeShape,The length of the statement  "	IEnumerable<Association> participatingAssociations = Association.GetAssociationsForEntityType (entityTypeShape.EntityType.SafeTarget); " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetListOfAssociationConnectorsForEntityTypeShape,The length of the statement  "		foreach (var connector in association.GetAntiDependenciesOfType<AssociationConnector> ().Where (ac => ac.Diagram.Id == entityTypeShape.Diagram.Id)) { " is 149.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetListOfInheritanceConnectorsForEntityTypeShape,The length of the statement  "		var ic = conceptualEntityType.GetAntiDependenciesOfType<InheritanceConnector> ().Where (c => c.Diagram.Id == entityTypeShape.Diagram.Id).FirstOrDefault (); " is 155.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetListOfInheritanceConnectorsForEntityTypeShape,The length of the statement  "			ic = derivedEntityType.GetAntiDependenciesOfType<InheritanceConnector> ().Where (c => c.Diagram.Id == entityTypeShape.Diagram.Id).FirstOrDefault (); " is 148.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,DetermineCurrentInheritanceStrategy,The length of the statement  "	var numMappingsDirectlyMapped = cet.GetAntiDependenciesOfType<EntityTypeMapping> ().Where<EntityTypeMapping> (etm => (EntityTypeMappingKind.IsTypeOf == etm.Kind || EntityTypeMappingKind.Default == etm.Kind)).Count (); " is 217.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,DetermineCurrentInheritanceStrategy,The length of the statement  "		Debug.Fail ("Mixed mode - this should only happen if the user has hand-edited the file in which case the Mapping Details " + "window should be in safe mode and so this code should not be executed"); " is 198.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetMappedTypesWithDuplicates,The length of the statement  "		Debug.Assert (bindingTarget != null ? mappedType != null : true' "EntityType bindingTarget is not a ConceptualEntityType"); " is 123.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetMappedTypesWithDuplicates,The length of the statement  "			throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' Resources.UnresolvedTypeReferences_0' assignments.RefName)); " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,InferDependentEnd,The length of the statement  "	Debug.Assert (association.IsManyToMany == false' "Cannot infer a dependent end on a *:* association; this method should not be called"); " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,InferDependentEnd,The length of the statement  "		if (association.End1.Multiplicity.Value == ModelConstants.Multiplicity_One && association.End2.Multiplicity.Value == ModelConstants.Multiplicity_One) { " is 151.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,InferDependentEnd,The length of the statement  "				return association.End1.OnDeleteAction.Action.Value == ModelConstants.OnDeleteAction_Cascade ? association.End2 : association.End1; " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,InferDependentEnd,The length of the statement  "		if ((association.End1.Multiplicity.Value == ModelConstants.Multiplicity_Many) || (association.End1.Multiplicity.Value == ModelConstants.Multiplicity_ZeroOrOne && association.End2.Multiplicity.Value == ModelConstants.Multiplicity_One)) { " is 236.
Long Statement,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindEntitySet,The length of the statement  "		if (String.Compare (name' et.LocalName.Value' StringComparison.OrdinalIgnoreCase) == 0 || String.Compare (name' et.NormalizedNameExternal' StringComparison.OrdinalIgnoreCase) == 0) { " is 182.
Long Statement,Microsoft.Data.Entity.Design.Model,MultiItemBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MultiItemBinding.cs,UpdateRefNameUsingReplacement,The length of the statement  "	Debug.Assert (!string.IsNullOrEmpty (toBeReplaced)' "UpdateRefNameUsingReplacement: toBeReplaced must not null or empty"); " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model,MultiItemBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MultiItemBinding.cs,UpdateRefNameUsingReplacement,The length of the statement  "	Debug.Assert (!string.IsNullOrEmpty (replacement)' "UpdateRefNameUsingReplacement: replacement must not null or empty"); " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model,MultiItemBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MultiItemBinding.cs,UpdateRefNameUsingReplacement,The length of the statement  "		Debug.Assert (replacementString != RefName' "UpdateRefNameNamespaceOrAlias() is about to replace the following RefName with an identical value " + RefName); " is 156.
Long Statement,Microsoft.Data.Entity.Design.Model,MultiItemBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MultiItemBinding.cs,UpdateRefNameUsingReplacement,The length of the statement  "		Debug.Assert (replacementString == RefName' "UpdateRefNameNamespaceOrAlias() for RefName' " + RefName + "' is about to ignore the following replacement string which is different " + replacementString); " is 201.
Long Statement,Microsoft.Data.Entity.Design.Model,SingleItemBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\SingleItemBinding.cs,NormalizedName,The length of the statement  "	Debug.Assert (normalizedNames.Count == 1' GetType ().FullName + ".NormalizedName(): expected normalizedNames.Count to be 1' got " + normalizedNames.Count); " is 155.
Long Statement,Microsoft.Data.Entity.Design.Model,SingleItemBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\SingleItemBinding.cs,GetRefNameAsNormalizedNames,The length of the statement  "				throw new InvalidOperationException (string.Format (CultureInfo.CurrentCulture' Resources.UnresolvedReference_0' RefName)); " is 123.
Long Statement,Microsoft.Data.Entity.Design.Model,SingleItemBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\SingleItemBinding.cs,UpdateRefNameUsingReplacement,The length of the statement  "	Debug.Assert (!string.IsNullOrEmpty (toBeReplaced)' GetType ().FullName + ".UpdateRefNameUsingReplacement(): toBeReplaced must not null or empty"); " is 147.
Long Statement,Microsoft.Data.Entity.Design.Model,SingleItemBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\SingleItemBinding.cs,UpdateRefNameUsingReplacement,The length of the statement  "	Debug.Assert (!string.IsNullOrEmpty (replacement)' GetType ().FullName + ".UpdateRefNameUsingReplacement(): replacement must not null or empty"); " is 145.
Long Statement,Microsoft.Data.Entity.Design.Model,SingleItemBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\SingleItemBinding.cs,UpdateRefNameUsingReplacement,The length of the statement  "		Debug.Fail (GetType ().FullName + ".UpdateRefNameUsingReplacement(): expecting only 1 symbol from GetRefNameAsNormalizedNames(). Received " + refNameAsNormalizedNames.Count); " is 174.
Long Statement,Microsoft.Data.Entity.Design.Model,SingleItemBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\SingleItemBinding.cs,UpdateRefNameUsingReplacement,The length of the statement  "		Debug.Assert (replacementRefName != RefName' "UpdateRefNameNamespaceOrAlias() is about to replace the following RefName with an identical value " + RefName); " is 157.
Long Statement,Microsoft.Data.Entity.Design.Model,SingleItemBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\SingleItemBinding.cs,UpdateRefNameUsingReplacement,The length of the statement  "		Debug.Assert (replacementRefName == RefName' "UpdateRefNameNamespaceOrAlias() for RefName' " + RefName + "' is about to ignore the following replacement string which is different " + replacementRefName); " is 203.
Long Statement,Microsoft.Data.Entity.Design.Model,EntityDesignModelManager,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\EntityDesignModelManager.cs,ValidateAndCompileMappings,The length of the statement  "	new RuntimeMetadataValidator (this' artifactSet.SchemaVersion' DependencyResolver.Instance).ValidateAndCompileMappings (artifactSet' artifactSet.ShouldDoRuntimeMappingValidation ()); " is 182.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,NavigationPropertyClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\NavigationPropertyClipboardFormat.cs,TraceString,The length of the statement  "	return "[" + typeof(NavigationPropertyClipboardFormat).Name + " name=" + PropertyName + "' getter=" + GetterAccessModifier + "' setter=" + SetterAccessModifier + "' relationship=" + _relationship + "' fromRole=" + _fromRole + "' toRole=" + _toRole + "]"; " is 254.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBaseClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBaseClipboardFormat.cs,ValidateAttributes,The length of the statement  "	foreach (var propertyInfo in GetType ().GetProperties (BindingFlags.Instance | BindingFlags.NonPublic | BindingFlags.Public)) { " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBaseClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBaseClipboardFormat.cs,ValidateAttributes,The length of the statement  "		var attributes = propertyInfo.GetCustomAttributes (typeof(ClipboardPropertyMapAttribute)' false) as ClipboardPropertyMapAttribute[]; " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBaseClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBaseClipboardFormat.cs,ValidateAttributes,The length of the statement  "			Debug.Assert (attributes.Length == 1' String.Format (CultureInfo.CurrentCulture' "There exist more than 1 instance of {0} for {1}"' "ClipboardPropertyMapAttribute"' propertyInfo.Name)); " is 185.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBaseClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBaseClipboardFormat.cs,ValidateAttributes,The length of the statement  "			Debug.Assert (!attributes [0].IsExcluded' String.Format (CultureInfo.CurrentCulture' "Attribute {0} is misplaced."' attributes [0].AttributeName)); " is 147.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBaseClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBaseClipboardFormat.cs,ValidateAttributes,The length of the statement  "	var excludedAttributes = GetType ().GetCustomAttributes (typeof(ClipboardPropertyMapAttribute)' false) as ClipboardPropertyMapAttribute[]; " is 138.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBaseClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBaseClipboardFormat.cs,ValidateAttributes,The length of the statement  "			Debug.Assert (excludedAttribute.IsExcluded' String.Format (CultureInfo.CurrentCulture' "Attribute {0} is misplaced."' excludedAttribute.AttributeName)); " is 152.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBaseClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBaseClipboardFormat.cs,ValidateAttributes,The length of the statement  "		Debug.Assert (attributesCollection.Contains (attributeName)' String.Format (CultureInfo.CurrentCulture' "Clipboard format for {0} does not exist"' attributeName)); " is 163.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,ComplexType,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\ComplexType.cs,ParseSingleElement,The length of the statement  "		Debug.Assert (conceptualModel != null' typeof(ComplexType).Name + "ParseSingleElement: Unable to find parent of type ConceptualEntityModel"); " is 141.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,ConceptualEntityType,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\ConceptualEntityType.cs,GetSafeDescendantTypesHelper,The length of the statement  "			Debug.Assert (et.BaseType.Target == this' "Why isn't this conceptual entity type the base type of the found derived type?"); " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,ConceptualEntityType,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\ConceptualEntityType.cs,AncestorEntityTypes,The length of the statement  "	while (topMostBaseType.HasResolvableBaseType && !visitedAncestors.ContainsKey ((topMostBaseType = topMostBaseType.BaseType.Target))) { " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EFDocumentableItem,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EFDocumentableItem.cs,ParseSingleElement,The length of the statement  "			Artifact.AddParseErrorForObject (this' Resources.TOO_MANY_DOCUMENTATION_ELEMENTS' ErrorCodes.TOO_MANY_DOCUMENTATION_ELEMENTS); " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntitiesClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntitiesClipboardFormat.cs,InitializeAssociationAndInheritanceClipboardObjects,The length of the statement  "		if (associationEnds.Count == 2 && associationEnds [0].Type.Status == BindingStatus.Known && associationEnds [1].Type.Status == BindingStatus.Known) { " is 149.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntitiesClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntitiesClipboardFormat.cs,InitializeAssociationAndInheritanceClipboardObjects,The length of the statement  "			if (entitiesMap.TryGetValue (associationEnds [0].Type.Target' out clipboardEntity1) && entitiesMap.TryGetValue (associationEnds [1].Type.Target' out clipboardEntity2)) { " is 169.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntitiesClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntitiesClipboardFormat.cs,InitializeAssociationAndInheritanceClipboardObjects,The length of the statement  "		if (entitiesMap.TryGetValue (inheritance.Key' out clipboardEntity1) && entitiesMap.TryGetValue (inheritance.Value' out clipboardEntity2)) { " is 139.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyClipboardFormat.cs,TraceString,The length of the statement  "	return "[" + typeof(PropertyClipboardFormat).Name + " name=" + PropertyName + "' getter=" + GetterAccessModifier + "' setter=" + SetterAccessModifier + "' propertyType=" + _propertyType + "' isNullable=" + _isNullable + "' isKeyProperty=" + _isKeyProperty + "' defaultValue=" + _defaultValue + "' concurrencyMode=" + _concurrencyMode + "' isConceptualProperty=" + _isConceptualProperty + "' isComplexProperty=" + _isComplexProperty + "' maxLength=" + _maxLength + "' fixedLength=" + _fixedLength + "' precision=" + _precision + "' scale =" + _scale + "' unicode=" + _unicode + "' collation=" + _collation + "' storeGeneratedPattern=" + _storeGeneratedPattern + "]"; " is 665.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntityTypeClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntityTypeClipboardFormat.cs,TraceString,The length of the statement  "	var sb = new StringBuilder ("[" + typeof(EntityTypeClipboardFormat).Name + " entityName=" + _entityName + "' entitySetName=" + _entitySetName + "' entityTypeShapeFillColor=" + _entityTypeShapeFillColor); " is 203.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntityTypeClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntityTypeClipboardFormat.cs,TraceString,The length of the statement  "	sb.Append ("' " + EFToolsTraceUtils.FormatNamedEnumerable ("navigationProperties"' _navigationProperties' npcf => npcf.TraceString ())); " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntityTypeClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntityTypeClipboardFormat.cs,GetNavigationPropertyClipboard,The length of the statement  "		if (String.Compare (navigationProperty.Relationship' associationName' StringComparison.OrdinalIgnoreCase) == 0 && String.Compare (navigationProperty.FromRole' associationEndRole' StringComparison.OrdinalIgnoreCase) == 0) { " is 222.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBase,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBase.cs,MoveTo,The length of the statement  "	Debug.Assert (PreviousSiblingInPropertyXElementOrder != null || NextSiblingInPropertyXElementOrder != null' "Why do we need to move the property if it is the only property?"); " is 175.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBase,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBase.cs,MoveTo,The length of the statement  "			// Instead of re-parenting the property's XElement' we are going to clone the XElement' insert the clone and delete the old XElement. " is 133.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBase,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBase.cs,MoveTo,The length of the statement  "				if (a.IsNamespaceDeclaration && (a.Value == SchemaManager.GetCSDLNamespaceName (Artifact.SchemaVersion) || a.Value == SchemaManager.GetSSDLNamespaceName (Artifact.SchemaVersion) || a.Value == SchemaManager.GetAnnotationNamespaceName ())) { " is 239.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBase,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBase.cs,MoveTo,The length of the statement  "			Debug.Assert (XElement == newPropertyXElement' "Unexpected XElement value. Expected:" + newPropertyXElement + " ' Actual:" + XElement); " is 135.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBase,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBase.cs,MoveTo,The length of the statement  "			Debug.Assert (ModelItemAnnotation.GetModelItem (newPropertyXElement) == this' "The new XElement should contain annotation to the model property."); " is 147.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBase,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBase.cs,MoveTo,The length of the statement  "			// Preceding whitespace is preferred over trailing whitespace because we don't want to remove the last property's trailing white-space since " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBase,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBase.cs,MoveTo,The length of the statement  "				Debug.Assert (position.InsertAtProperty == NextSiblingInPropertyXElementOrder' "Expected next sibling property: " + position.InsertAtProperty.DisplayName + " ' Actual next sibling:" + NextSiblingInPropertyXElementOrder.DisplayName); " is 232.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,PropertyBase,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBase.cs,MoveTo,The length of the statement  "				Debug.Assert (position.InsertAtProperty == PreviousSiblingInPropertyXElementOrder' "Expected previous sibling property: " + position.InsertAtProperty.DisplayName + " ' Actual previous sibling:" + PreviousSiblingInPropertyXElementOrder.DisplayName); " is 248.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,ConceptualEntityModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\ConceptualEntityModel.cs,ParseSingleElement,The length of the statement  "			var error = new ErrorInfo (ErrorInfo.Severity.ERROR' msg' this' ErrorCodes.TOO_MANY_ENTITY_CONTAINER_ELEMENTS' ErrorClass.ParseError); " is 134.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,ReferentialConstraintRole,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\ReferentialConstraintRole.cs,ReferentialConstraintPropertyRefNameNormalizer,The length of the statement  "				endTypeName = (end.Type.Status == BindingStatus.Known) ? cet.ResolvableTopMostBaseType.NormalizedName : end.Type.NormalizedName (); " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,NavigationProperty,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\NavigationProperty.cs,DoResolve,The length of the statement  "	if (FromRole.Status == BindingStatus.Known && ToRole.Status == BindingStatus.Known && Relationship.Status == BindingStatus.Known) { " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,Association,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\Association.cs,ParseSingleElement,The length of the statement  "			var msg = String.Format (CultureInfo.CurrentCulture' Resources.TOO_MANY_REFERENTIAL_CONSTRAINTS_IN_ASSOCIATION' LocalName.Value); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,Association,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\Association.cs,IsMultiplicity,The length of the statement  "		if ((End1.Multiplicity.Value == multiplicity1 && End2.Multiplicity.Value == multiplicity2) || End1.Multiplicity.Value == multiplicity2 && End2.Multiplicity.Value == multiplicity1) { " is 181.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,Association,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\Association.cs,GetOtherEnd,The length of the statement  "	Debug.Assert (!IsSelfAssociation' "GetOtherEnd() will not work correctly for self associations as both ends point to the same entity type"); " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntityType,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntityType.cs,GetXLinqInsertPosition,The length of the statement  "	if (childProperty != null && childProperty.InsertPosition != null && childProperty.InsertPosition.InsertAtProperty != null) { " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntityType,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntityType.cs,GetXLinqInsertPosition,The length of the statement  "			Debug.Assert (childProperty is Property || childProperty is NavigationProperty' "Unexpected property type. Type name: " + childProperty.GetType ().Name); " is 153.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntityType,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntityType.cs,GetXLinqInsertPosition,The length of the statement  "				Debug.Assert (insertAtProperty is Property || insertAtProperty is NavigationProperty' "Unexpected InsertAtProperty type. Type name: " + insertAtProperty.GetType ().Name); " is 170.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntityType,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntityType.cs,GetXLinqInsertPosition,The length of the statement  "					if ((insertAtProperty is Property && childProperty is NavigationProperty) || (insertAtProperty is NavigationProperty && childProperty is Property)) { " is 149.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntityType,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntityType.cs,GetXLinqInsertPosition,The length of the statement  "						Debug.Fail ("The InsertAtProperty value is not valid. InsertAtProperty should have the same type as the Property that we try to insert"); " is 137.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntityType,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntityType.cs,GetXLinqInsertPosition,The length of the statement  "						// Check if the reference property (the property that will be the sibling of the to-be-created property) is one of the entity-type's property. " is 142.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntityType,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntityType.cs,GetXLinqInsertPosition,The length of the statement  "						Debug.Assert (parentOfInsertAtProperty == this' "Expected sibling property's entityType: " + DisplayName + " ' actual:" + parentOfInsertAtProperty == null ? "null" : parentOfInsertAtProperty.DisplayName); " is 204.
Long Statement,Microsoft.Data.Entity.Design.Model.Entity,EntityType,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntityType.cs,GetXLinqInsertPosition,The length of the statement  "		Documentation.GetInsertPositionForSiblingThatNeedsToBeAfterDocumentationElementButBeforeOtherElements (this' out insertAt' out insertBefore); " is 141.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,Initialize,The length of the statement  "	_facetSynchronizers.Add ((storageProperty' conceptualProperty) => SynchronizeFacet (storageProperty.TypeName' storageProperty.Precision' conceptualProperty.TypeName' conceptualProperty.Precision)); " is 197.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,Initialize,The length of the statement  "	_facetSynchronizers.Add ((storageProperty' conceptualProperty) => SynchronizeFacet (storageProperty.TypeName' storageProperty.Scale' conceptualProperty.TypeName' conceptualProperty.Scale)); " is 189.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,Initialize,The length of the statement  "	_facetSynchronizers.Add ((storageProperty' conceptualProperty) => SynchronizeFacet (storageProperty.TypeName' storageProperty.MaxLength' conceptualProperty.TypeName' conceptualProperty.MaxLength)); " is 197.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,Initialize,The length of the statement  "	_facetSynchronizers.Add ((storageProperty' conceptualProperty) => SynchronizeFacet (storageProperty.TypeName' storageProperty.Nullable' conceptualProperty.TypeName' conceptualProperty.Nullable)); " is 195.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,Initialize,The length of the statement  "	_facetSynchronizers.Add ((storageProperty' conceptualProperty) => SynchronizeFacet (storageProperty.TypeName' storageProperty.Unicode' conceptualProperty.TypeName' conceptualProperty.Unicode)); " is 193.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,Initialize,The length of the statement  "	_facetSynchronizers.Add ((storageProperty' conceptualProperty) => SynchronizeFacet (storageProperty.TypeName' storageProperty.FixedLength' conceptualProperty.TypeName' conceptualProperty.FixedLength)); " is 201.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,GetFacetDefault,The length of the statement  "		if (null != facetToDefaultMap && facetToDefaultMap.TryGetValue (defaultableValue.AttributeName' out facetDefaultAsObject)) { " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,GetFacetDefault,The length of the statement  "			var facetDefault = (null == facetDefaultAsObject ? null : defaultableValue.ConvertStringToValue (facetDefaultAsObject.ToString ())); " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,PropagateAllStoragePropertyFacets,The length of the statement  "					if (null != cSideProperty && null != cSideProperty.GetParentOfType (typeof(EntityType)) && false == cSideProperties.Contains (cSideProperty)) { " is 143.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,SynchronizeFacet,The length of the statement  "	if (sSideDefaultableValue.IsDefaulted || null == sSideValueToPropagate || sSideValueToPropagate.Equals (sSideDefaultableValueDefaultValue)) { " is 141.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,SynchronizeFacet,The length of the statement  "		if ((null == sSideDefaultableValueDefaultValue && null == cSideDefaultableValueDefaultValue) || (null != sSideDefaultableValueDefaultValue && sSideDefaultableValueDefaultValue.Equals (cSideDefaultableValueDefaultValue))) { " is 222.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,SynchronizeFacet,The length of the statement  "			if (cSideDefaultableValue.IsDefaulted || null == preExistingCSideValue || preExistingCSideValue.Equals (cSideDefaultableValueDefaultValue)) { " is 141.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,SynchronizeFacet,The length of the statement  "			Debug.Fail ("S-side DefaultableValue is defaulted but default value of S-side DefaultableValue is null' so defaulting C-side DefaultableValue would cause it to assume different default value: " + cSideDefaultableValueDefaultValue); " is 231.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoreGeneratedPatternToStorageModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoreGeneratedPatternToStorageModel.cs,Invoke,The length of the statement  "					Debug.Assert (null != sProp' "property of Storage Model EntityType has type " + prop.GetType ().FullName + "' should be " + typeof(StorageProperty).FullName); " is 158.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoreGeneratedPatternToStorageModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoreGeneratedPatternToStorageModel.cs,PropagateConceptualSGPToStorageProperty,The length of the statement  "				if (_propagateNoneSGP || false == ModelConstants.StoreGeneratedPattern_None.Equals (cSideSGPValue' StringComparison.Ordinal)) { " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoreGeneratedPatternToStorageModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoreGeneratedPatternToStorageModel.cs,IsStorageForNonRootEntityType,The length of the statement  "		Debug.Fail ("should only receive a storage-side Property. Received property: " + (storageProperty == null ? "NULL" : storageProperty.ToPrettyString ())); " is 153.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoreGeneratedPatternToStorageModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoreGeneratedPatternToStorageModel.cs,IsStorageForNonRootEntityType,The length of the statement  "			// EntityTypeMapping is not for Default or IsTypeOf mapping - so don't count for finding the corresponding C-side EntityType " is 124.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoreGeneratedPatternToStorageModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoreGeneratedPatternToStorageModel.cs,IsDependentSidePropertyInAssociation,The length of the statement  "		Debug.Fail ("should only receive a storage-side Property. Received property: " + (storageProperty == null ? "NULL" : storageProperty.ToPrettyString ())); " is 153.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,PropagateViewKeysToStorageModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateViewKeysToStorageModel.cs,IsEqual,The length of the statement  "		else if (typedOtherCheck._conceptualEntityTypes != null && _conceptualEntityTypes != null && new HashSet<EntityType> (_conceptualEntityTypes).SetEquals (typedOtherCheck._conceptualEntityTypes)) { " is 195.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,CreateForeignKeyProperties,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\CreateForeignKeyProperties.cs,Invoke,The length of the statement  "	Debug.Assert (_association.AssociationEnds ().Count == 2' "The association to be processed does not have 2 ends while trying to create foreign key properties"); " is 160.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,CreateForeignKeyProperties,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\CreateForeignKeyProperties.cs,Invoke,The length of the statement  "	Debug.Assert (_association.AssociationSet != null' "The association being processed does not have a valid AssociationSet while trying to create foreign key properties"); " is 169.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,CreateForeignKeyProperties,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\CreateForeignKeyProperties.cs,Invoke,The length of the statement  "	ModelHelper.DeterminePrincipalDependentAssociationEnds (_association' out principal' out dependent' ModelHelper.DeterminePrincipalDependentAssociationEndsScenario.CreateForeignKeyProperties); " is 191.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,CreateForeignKeyProperties,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\CreateForeignKeyProperties.cs,Invoke,The length of the statement  "		if (principal.Multiplicity.Value == ModelConstants.Multiplicity_Many && dependent.Multiplicity.Value == ModelConstants.Multiplicity_Many) { " is 139.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,CreateForeignKeyProperties,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\CreateForeignKeyProperties.cs,Invoke,The length of the statement  "			var fkeyName = string.Format (CultureInfo.CurrentCulture' "{0}{1}{2}"' principal.Type.Target.LocalName.Value' (char.IsUpper (pkey.LocalName.Value' 0) ? "" : "_")' pkey.LocalName.Value); " is 185.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,CreateForeignKeyProperties,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\CreateForeignKeyProperties.cs,Invoke,The length of the statement  "		Debug.Assert (principalPropertyRefs.Count == dependentPropertyRefs.Count' "List of keys are mismatched while trying to create a Ref Constraint"); " is 145.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,CreateForeignKeyProperties,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\CreateForeignKeyProperties.cs,Invoke,The length of the statement  "		if (principalPropertyRefs.Count > 0 && dependentPropertyRefs.Count > 0 && principalPropertyRefs.Count == dependentPropertyRefs.Count) { " is 135.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,CreateForeignKeyProperties,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\CreateForeignKeyProperties.cs,AddRule,The length of the statement  "	Debug.Assert (association.AssociationEnds ().Count == 2' "association.AssociationEnds().Count(" + association.AssociationEnds ().Count + ") should be 2"); " is 154.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceAssociationSetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceAssociationSetMappingRules.cs,Invoke,The length of the statement  "	Debug.Assert (end1 != null && end2 != null' "AssociationSetMapping's Association has an invalid reference to one or more Ends"); " is 128.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceAssociationSetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceAssociationSetMappingRules.cs,Invoke,The length of the statement  "					if (sp.ColumnName.Target != null && sp.ColumnName.Target.IsKeyProperty == false && conditionCreateForColumn.Contains (sp.ColumnName.Target) == false) { " is 151.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceAssociationSetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceAssociationSetMappingRules.cs,DoesEndNeedCondition,The length of the statement  "			if (!(end.Multiplicity.Value == ModelConstants.Multiplicity_Many && otherEnd.Multiplicity.Value == ModelConstants.Multiplicity_Many)) { " is 135.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceAssociationSetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceAssociationSetMappingRules.cs,DoesEndNeedCondition,The length of the statement  "				// and the association's foreign key is on the TPH side (ergo' the association is mapped to the same table as the TPH hierarchy) " is 128.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,Invoke,The length of the statement  "	Debug.Assert (_entitySetMapping.Name.Target != null' "The EntitySetMapping being used does not point to a C-Side entity set"); " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,Invoke,The length of the statement  "	Debug.Assert (conceptualEntitySet.EntityType.Target != null' "Cannot find the root entity referenced by the EntitySetMapping and the EntitySet"); " is 145.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,Invoke,The length of the statement  "	Debug.Assert (conceptualEntitySet.EntityType.Target is ConceptualEntityType' "EntityType is not a ConceptualEntityType"); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,Invoke,The length of the statement  "		Debug.Fail ("Mixed mode - this should only happen if the user has hand-edited the file in which case the Mapping Details " + "window should be in safe mode and so this code should not be executed"); " is 198.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,ProcessMappingFragment,The length of the statement  "	// move any key scalar mappings to this fragment if they exist in a different one - provided they are for the same table " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,ProcessModificationFunction,The length of the statement  "			Debug.Assert (from.Role.Target.Type.Target != null ? fromType != null : true' "fromType EntityType is not a ConceptualEntityType"); " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,ProcessModificationFunction,The length of the statement  "			Debug.Assert (to.Role.Target.Type.Target != null ? toType != null : true' "toType EntityType is not a ConceptualEntityType"); " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,DeriveMappingPlanRecurse,The length of the statement  "				if (info.InheritanceStrategy == InheritanceMappingStrategy.TablePerHierarchy && tableInfo.EntityTypeMappingKind == EntityTypeMappingKind.IsTypeOf && info.Conditions.Count == 0 && info.EntityType.IsConcrete) { " is 208.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,DetermineFragmentPlacement,The length of the statement  "			if (cond.ColumnName != null && cond.ColumnName.Target != null && cond.ColumnName.Target.EntityType != null && cond.ColumnName.Target.EntityType == tableInfo.Table && columns.Contains (cond.ColumnName.Target)) { " is 210.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,PopulateEntityInfoRecurse,The length of the statement  "		Debug.Assert (InheritanceMappingStrategy.Mixed != inheritanceMappingStrategy' "Mixed mode - this should only happen if the user has hand-edited the file in which case the Mapping Details window should be in safe mode and so this code should not be executed"); " is 259.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,GatherScalarsForEntityTypeMapping,The length of the statement  "		Debug.Assert (frag.StoreEntitySet.Target.EntityType.Target != null' "frag.StoreEntitySet.Target.EntityType.Target should not be null"); " is 135.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,GatherScalarsForEntityTypeMapping,The length of the statement  "		if (frag.StoreEntitySet.Target != null && frag.StoreEntitySet.Target.EntityType.Target != null && info.HasTable (frag.StoreEntitySet.Target.EntityType.Target) == false) { " is 170.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,GatherConditionsForEntityTypeMapping,The length of the statement  "		Debug.Assert (frag.StoreEntitySet.Target.EntityType.Target != null' "Found an S-Side entity set with an unknown entity binding"); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,GatherConditionsForEntityTypeMapping,The length of the statement  "		if (frag.StoreEntitySet.Target != null && frag.StoreEntitySet.Target.EntityType.Target != null && info.HasTable (frag.StoreEntitySet.Target.EntityType.Target) == false) { " is 170.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,Invoke,The length of the statement  "	Debug.Assert (_association.AssociationEnds ().Count == 2' "The association to be processed does not have 2 ends while trying to infer ref constraints"); " is 152.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,Invoke,The length of the statement  "	Debug.Assert (_association.AssociationSet != null' "The association being processed does not have a valid AssociationSet while trying to infer ref constraints"); " is 161.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,Invoke,The length of the statement  "	ModelHelper.DeterminePrincipalDependentAssociationEnds (_association' out principal' out dependent' ModelHelper.DeterminePrincipalDependentAssociationEndsScenario.InferReferentialConstraint); " is 191.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,Invoke,The length of the statement  "				Debug.Assert (dependentEndProperty != null && principalEndProperty != null' "Either dependent or principal EndProperty is null"); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,Invoke,The length of the statement  "						var principalScalarProp = principalEndProperty.ScalarProperties ().FirstOrDefault (psp => psp.ColumnName.Target == dependentScalarProp.ColumnName.Target); " is 154.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,Invoke,The length of the statement  "					Debug.Assert (principalPropertyRefs.Count == dependentPropertyRefs.Count' "List of keys are mismatched while trying to create a Ref Constraint"); " is 145.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,Invoke,The length of the statement  "					if (principalPropertyRefs.Count > 0 && dependentPropertyRefs.Count > 0 && principalPropertyRefs.Count == dependentPropertyRefs.Count) { " is 135.
Long Statement,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,AddRule,The length of the statement  "	Debug.Assert (association.AssociationEnds ().Count == 2' "association.AssociationEnds().Count(" + association.AssociationEnds ().Count + ") should be 2"); " is 154.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,FunctionImportProperyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\FunctionImportPropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "	Debug.Assert (parentItem.GetParentOfType (typeof(ComplexProperty)) == null' "Use the PropertyMappingNameNormalizer to normalize children of " + parent.GetType ().FullName); " is 172.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,FunctionImportProperyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\FunctionImportPropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "	Debug.Assert (parentItem.GetParentOfType (typeof(FunctionComplexProperty)) == null' "Use the FunctionPropertyMappingNameNormalizer to normalize children of " + parent.GetType ().FullName); " is 188.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,FunctionImportProperyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\FunctionImportPropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "	Debug.Assert (parentItem.GetParentOfType (typeof(EntityTypeMapping)) == null' "Use the PropertyMappingNameNormalizer or FunctionPropertyMappingNameNormalizer to normalize children of " + parent.GetType ().FullName); " is 215.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,FunctionImportProperyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\FunctionImportPropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "	Debug.Assert (parentItem.GetParentOfType (typeof(FunctionAssociationEnd)) == null' "Use the FunctionPropertyMappingNameNormalizer to normalize children of " + parent.GetType ().FullName); " is 187.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,FunctionImportProperyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\FunctionImportPropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "	Debug.Assert (parentItem.GetParentOfType (typeof(AssociationSetMapping)) == null' "Use the PropertyNameNormalizer to normalize children of " + parent.GetType ().FullName); " is 171.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,FunctionImportProperyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\FunctionImportPropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "	Debug.Assert (parentItem.GetParentOfType (typeof(EndProperty)) == null' "Use the PropertyNameNormalizer to normalize children of " + parent.GetType ().FullName); " is 161.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,FunctionPropertyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\FunctionPropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "	Debug.Assert (parentItem.GetParentOfType (typeof(ComplexProperty)) == null' "Use the PropertyNameNormalizer to normalize children of " + parent.GetType ().FullName); " is 165.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,FunctionPropertyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\FunctionPropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "	Debug.Assert (parentItem.GetParentOfType (typeof(AssociationSetMapping)) == null' "Use the PropertyNameNormalizer to normalize children of " + parent.GetType ().FullName); " is 171.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,FunctionPropertyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\FunctionPropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "	Debug.Assert (parentItem.GetParentOfType (typeof(EndProperty)) == null' "Use the PropertyNameNormalizer to normalize children of " + parent.GetType ().FullName); " is 161.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,FunctionPropertyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\FunctionPropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "	Debug.Assert (parentItem.GetParentOfType (typeof(FunctionImportTypeMapping)) == null' "Use the FunctionImportPropertyMappingNameNormalizer to normalize children of " + parent.GetType ().FullName); " is 196.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,ComplexProperty,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\ComplexProperty.cs,DoResolve,The length of the statement  "	if (Name.Status == BindingStatus.Known && (TypeName.Status == BindingStatus.Known || TypeName.Status == BindingStatus.Undefined)) { " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,FunctionAssociationEnd,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\FunctionAssociationEnd.cs,DoResolve,The length of the statement  "	if (AssociationSet.Status == BindingStatus.Known && From.Status == BindingStatus.Known && To.Status == BindingStatus.Known) { " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,MappingFragment,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\MappingFragment.cs,DisplayNameInternal,The length of the statement  "			return string.Format (CultureInfo.CurrentCulture' "{0} <-> {1}"' etm.TypeName.TargetsListForDisplay' StoreEntitySet.Target.LocalName.Value); " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,ModificationFunction,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\ModificationFunction.cs,PreParse,The length of the statement  "	Debug.Assert (_functionType != ModificationFunctionType.None' "_functionType should not be " + ModificationFunctionType.None); " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,ModificationFunction,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\ModificationFunction.cs,DoResolve,The length of the statement  "	if (BindingStatus.Known == FunctionName.Status && (BindingStatus.Known == RowsAffectedParameter.Status || BindingStatus.Undefined == RowsAffectedParameter.Status)) { " is 165.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,ModificationFunction,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\ModificationFunction.cs,GetModificationFunction,The length of the statement  "		Debug.Assert (null != function' typeof(ModificationFunction).Name + ".GetModificationFunction() requires non-null function"); " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,ModificationFunction,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\ModificationFunction.cs,GetModificationFunction,The length of the statement  "		Debug.Assert (null != conceptualEntityType' typeof(ModificationFunction).Name + ".GetModificationFunction() requires non-null conceptualEntityType"); " is 149.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,ModificationFunction,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\ModificationFunction.cs,GetModificationFunction,The length of the statement  "		if (mf.ModificationFunctionMapping.EntityTypeMapping.FirstBoundConceptualEntityType == conceptualEntityType && mf.FunctionType == type) { " is 137.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,AssociationSetMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\AssociationSetMapping.cs,ParseSingleElement,The length of the statement  "		Debug.Assert (_queryView == null' "There could only be 1 instance of QueryView element inside AssociationSetMapping element."); " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,AssociationSetMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\AssociationSetMapping.cs,DoResolve,The length of the statement  "	if (Name.Status == BindingStatus.Known && TypeName.Status == BindingStatus.Known && StoreEntitySet.Status == BindingStatus.Known) { " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntityTypeMappingTypeNameBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntityTypeMappingTypeNameBinding.cs,IsTypeOf,The length of the statement  "	Debug.Assert (i >= 0 && i < _isTypeOfs.Count' "i (" + i + ") should be >= 0 and <= _isTypeOfs.Count (" + _isTypeOfs.Count + ")"); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntityTypeMappingTypeNameBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntityTypeMappingTypeNameBinding.cs,UpdateRefNameUsingReplacement,The length of the statement  "		Debug.Fail ("Expected origRefNameAsNormalizedNames.Count == _isTypeOfs.Count' but got origRefNameAsNormalizedNames.Count = " + origRefNameAsNormalizedNames.Count + "' _isTypeOfs.Count = " + _isTypeOfs.Count); " is 208.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntityTypeMappingTypeNameBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntityTypeMappingTypeNameBinding.cs,UpdateRefNameUsingReplacement,The length of the statement  "		Debug.Assert (replacementString != RefName' "EntityTypeMappingTypeNameBinding.UpdateRefNameNamespaces() is about to replace the following RefName with an identical value " + RefName); " is 183.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntityTypeMappingTypeNameBinding,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntityTypeMappingTypeNameBinding.cs,UpdateRefNameUsingReplacement,The length of the statement  "		Debug.Assert (replacementString == RefName' "EntityTypeMappingTypeNameBinding.UpdateRefNameNamespaces() for RefName' " + RefName + "' is about to ignore the following replacement string which is different " + replacementString); " is 228.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,PropertyMappingColumnNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\PropertyMappingColumnNameNormalizer.cs,NameNormalizer,The length of the statement  "			if (null != set && null != set.EntityType && null != set.EntityType.Target && set.EntityType.Status == BindingStatus.Known) { " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,ProperyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\PropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "	Debug.Assert (parentItem.GetParentOfType (typeof(FunctionImportTypeMapping)) == null' "Use the FunctionImportPropertyMappingNameNormalizer to normalize children of " + parent.GetType ().FullName); " is 196.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,ProperyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\PropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "	Debug.Assert (parentItem.GetParentOfType (typeof(FunctionComplexProperty)) == null' "Use the FunctionPropertyMappingNameNormalizer to normalize children of " + parent.GetType ().FullName); " is 188.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,ProperyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\PropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "	Debug.Assert (parentItem.GetParentOfType (typeof(FunctionAssociationEnd)) == null' "Use the FunctionPropertyMappingNameNormalizer to normalize children of " + parent.GetType ().FullName); " is 187.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,ProperyMappingNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\PropertyMappingNameNormalizer.cs,NameNormalizer,The length of the statement  "		Debug.Assert (cond == null' "It is assumed that Conditions under an AssociationSetMapping cannot have their Name property set."); " is 129.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,Alias,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\Alias.cs,PostParse,The length of the statement  "		Artifact.AddParseErrorForObject (this' Resources.ModelParse_AliasElementMissingKeyAttribute' ErrorCodes.ModelParse_AliasElementMissingKeyAttribute); " is 148.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,Alias,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\Alias.cs,PostParse,The length of the statement  "		Artifact.AddParseErrorForObject (this' Resources.ModelParse_AliasElementMissingValueAttribute' ErrorCodes.ModelParse_AliasElementMissingValueAttribute); " is 152.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,Condition,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\Condition.cs,DoResolve,The length of the statement  "		var errorInfo = new ErrorInfo (ErrorInfo.Severity.ERROR' Resources.RESOLVE_CONDITION_BOUND_TO_PROP_AND_COLUMN' this' ErrorCodes.RESOLVE_CONDITION_BOUND_TO_PROP_AND_COLUMN' ErrorClass.ResolveError); " is 197.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntityContainerMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntityContainerMapping.cs,DisplayNameInternal,The length of the statement  "	return string.Format (CultureInfo.CurrentCulture' resource' CdmEntityContainer.RefName' StorageEntityContainer.RefName); " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntitySetMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntitySetMapping.cs,AddEntityTypeMapping,The length of the statement  "	Debug.Assert (etm.Parent == this' "unexpected condition.  You are trying to move an EntityTypeMapping between parents.  This is not valid.  Use EntityTypeMapping's Clone() method."); " is 182.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntitySetMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntitySetMapping.cs,AddEntityTypeMapping,The length of the statement  "	Debug.Assert (etm.Parent != null && etm.Parent.XContainer != null' "The new parent for this EntityTypeMapping does not have a valid XLinq node"); " is 145.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntitySetMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntitySetMapping.cs,AddEntityTypeMapping,The length of the statement  "		Debug.Fail ("this entity type mapping already has a Parent.  This is not valid.  Use EntityTypeMapping's Clone() method."); " is 123.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntitySetMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntitySetMapping.cs,DoParse,The length of the statement  "			var msg = String.Format (CultureInfo.CurrentCulture' Resources.ModelParse_GhostNodeNotSupportedByDesigner' EntityTypeMapping.AttributeTypeName' ElementName); " is 157.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntitySetMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntitySetMapping.cs,DoParse,The length of the statement  "			var msg = String.Format (CultureInfo.CurrentCulture' Resources.ModelParse_MutuallyExclusiveAttributeAndChildElement' EntityTypeMapping.AttributeTypeName' EntityTypeMapping.ElementName); " is 185.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntityTypeMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntityTypeMapping.cs,UsesIsTypeOf,The length of the statement  "	if (false == string.IsNullOrWhiteSpace (name) && name.StartsWith (IsTypeOf' StringComparison.OrdinalIgnoreCase) && name.EndsWith (IsTypeOfTerminal' StringComparison.OrdinalIgnoreCase)) { " is 186.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntityTypeMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntityTypeMapping.cs,DoParse,The length of the statement  "			// Add an error - we don't want to support this syntax in the designer.  This can be on an EntitySetMapping or an EntityTypeMapping node " is 136.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntityTypeMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntityTypeMapping.cs,DoParse,The length of the statement  "			var msg = String.Format (CultureInfo.CurrentCulture' Resources.ModelParse_GhostNodeNotSupportedByDesigner' MappingFragment.AttributeStoreEntitySet' elementName); " is 161.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping,EntityTypeMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\EntityTypeMapping.cs,DoParse,The length of the statement  "			var msg = String.Format (CultureInfo.CurrentCulture' Resources.ModelParse_MutuallyExclusiveAttributeAndChildElement' MappingFragment.AttributeStoreEntitySet' MappingFragment.ElementName); " is 187.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,EscherAttributeContentValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\EscherAttributeContentValidator.cs,MakeAttributePathFromString,The length of the statement  "		// assume that the last one is always an attribute with empty namespace URI.  This is a valid assumption for our csdl/ssdl/msl cases " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,EscherAttributeContentValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\EscherAttributeContentValidator.cs,BuildEdmxSchemaSet,The length of the statement  "	xmlSchemaSet.Add (SchemaManager.GetEDMXNamespaceName (EntityFrameworkVersion.Version1)' EdmxUtils.GetEDMXXsdResource (EntityFrameworkVersion.Version1)); " is 152.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,EscherAttributeContentValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\EscherAttributeContentValidator.cs,BuildEdmxSchemaSet,The length of the statement  "	xmlSchemaSet.Add (SchemaManager.GetEDMXNamespaceName (EntityFrameworkVersion.Version2)' EdmxUtils.GetEDMXXsdResource (EntityFrameworkVersion.Version2)); " is 152.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,EscherAttributeContentValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\EscherAttributeContentValidator.cs,BuildEdmxSchemaSet,The length of the statement  "	xmlSchemaSet.Add (SchemaManager.GetEDMXNamespaceName (EntityFrameworkVersion.Version3)' EdmxUtils.GetEDMXXsdResource (EntityFrameworkVersion.Version3)); " is 152.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,EscherAttributeContentValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\EscherAttributeContentValidator.cs,IsValidCsdlNamespaceName,The length of the statement  "	return modelNamespace.Length <= 512 && IsValidXmlAttributeValue (modelNamespace) && QualifiedNameRegex.IsMatch (modelNamespace); " is 128.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,EscherModelValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\EscherModelValidator.cs,IsOpenInEditorError,The length of the statement  "		if (ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_CIRCULAR_INHERITANCE || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_CIRCULAR_COMPLEX_TYPE_DEFINITION || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_ENTITY_TYPE_WITHOUT_ENTITY_SET || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_MULTIPE_ENTITY_SETS_PER_TYPE || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_ASSOCIATION_WITHOUT_ASSOCIATION_SET || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_INCLUDES_USING || ei.ErrorCode == ErrorCodes.NON_QUALIFIED_ELEMENT) { " is 502.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,EscherModelValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\EscherModelValidator.cs,IsSkipRuntimeValidationError,The length of the statement  "		if (ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_UNMAPPED_ENTITY_TYPE || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_UNMAPPED_ASSOCIATION || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_UNMAPPED_PROPERTY || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_UNMAPPED_ASSOCIATION_END || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_UNMAPPED_ASSOCIATION_END_KEY || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_CONDITION_ON_PRIMARY_KEY || ei.ErrorCode == ErrorCodes.NON_QUALIFIED_ELEMENT) { " is 476.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ValidateAndCompileMappings,The length of the statement  "	ValidateArtifactSet (artifactSet' /*forceValidation*/false' /*validateMsl*/validateMapping' /*runViewGen*/validateMapping); " is 123.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ValidateConceptualModel,The length of the statement  "		artifactSet.AddError (new ErrorInfo (ErrorInfo.Severity.ERROR' Resources.ErrorValidatingArtifact_ConceptualModelMissing' designArtifact' ErrorCodes.ErrorValidatingArtifact_ConceptualModelMissing' ErrorClass.Runtime_CSDL)); " is 222.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ValidateConceptualModel,The length of the statement  "	if (SchemaManager.GetSchemaVersion (designArtifact.ConceptualModel.XElement.Name.Namespace) > _targetEntityFrameworkRuntimeVersion) { " is 133.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ValidateConceptualModel,The length of the statement  "		artifactSet.AddError (new ErrorInfo (ErrorInfo.Severity.ERROR' Resources.ErrorValidatingArtifact_InvalidCSDLNamespaceForTargetFrameworkVersion' designArtifact.ConceptualModel' ErrorCodes.ErrorValidatingArtifact_InvalidCSDLNamespaceForTargetFrameworkVersion' ErrorClass.Runtime_CSDL)); " is 284.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ValidateStoreModel,The length of the statement  "		artifactSet.AddError (new ErrorInfo (ErrorInfo.Severity.ERROR' Resources.ErrorValidatingArtifact_StorageModelMissing' designArtifact' ErrorCodes.ErrorValidatingArtifact_StorageModelMissing' ErrorClass.Runtime_SSDL)); " is 216.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ValidateStoreModel,The length of the statement  "	if (SchemaManager.GetSchemaVersion (designArtifact.StorageModel.XElement.Name.Namespace) > _targetEntityFrameworkRuntimeVersion) { " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ValidateStoreModel,The length of the statement  "		artifactSet.AddError (new ErrorInfo (ErrorInfo.Severity.ERROR' Resources.ErrorValidatingArtifact_InvalidSSDLNamespaceForTargetFrameworkVersion' designArtifact.StorageModel' ErrorCodes.ErrorValidatingArtifact_InvalidSSDLNamespaceForTargetFrameworkVersion' ErrorClass.Runtime_CSDL)); " is 281.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ValidateStoreModel,The length of the statement  "		ProcessErrors (storeErrors.Concat (designArtifact.GetModelGenErrors () ?? Enumerable.Empty<EdmSchemaError> ())' designArtifact' ErrorClass.Runtime_SSDL); " is 153.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ValidateMapping,The length of the statement  "		artifactSet.AddError (new ErrorInfo (ErrorInfo.Severity.ERROR' Resources.ErrorValidatingArtifact_MappingModelMissing' designArtifact' ErrorCodes.ErrorValidatingArtifact_MappingModelMissing' ErrorClass.Runtime_MSL)); " is 215.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ValidateMapping,The length of the statement  "	if (SchemaManager.GetSchemaVersion (designArtifact.MappingModel.XElement.Name.Namespace) > _targetEntityFrameworkRuntimeVersion) { " is 130.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ValidateMapping,The length of the statement  "		artifactSet.AddError (new ErrorInfo (ErrorInfo.Severity.ERROR' Resources.ErrorValidatingArtifact_InvalidMSLNamespaceForTargetFrameworkVersion' designArtifact.MappingModel' ErrorCodes.ErrorValidatingArtifact_InvalidMSLNamespaceForTargetFrameworkVersion' ErrorClass.Runtime_MSL)); " is 278.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ProcessErrors,The length of the statement  "				artifactSet.AddError (new ErrorInfo (ErrorInfo.Severity.ERROR' string.Format (CultureInfo.CurrentCulture' Resources.EscherValidation_UndefinedComplexPropertyType' property.LocalName.Value)' property' ErrorCodes.ESCHER_VALIDATOR_UNDEFINED_COMPLEX_PROPERTY_TYPE' ErrorClass.Runtime_CSDL)); " is 287.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ProcessErrors,The length of the statement  "		else if (error.ErrorCode == (int)MappingErrorCode.InvalidAssociationSet && error.Severity == EdmSchemaErrorSeverity.Warning) { " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ProcessErrors,The length of the statement  "				artifactSet.AddError (new ErrorInfo (GetErrorInfoSeverity (error)' string.Format (CultureInfo.CurrentCulture' Resources.EscherValidation_IgnoreMappedFKAssociation' associationSetMapping.Name.RefName)' efObject' error.ErrorCode' errorClass)); " is 241.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,ProcessErrors,The length of the statement  "		var severity = error.ErrorCode == (int)MappingErrorCode.EmptyContainerMapping && ValidationHelper.IsStorageModelEmpty (defaultArtifactForError) ? ErrorInfo.Severity.WARNING : GetErrorInfoSeverity (error); " is 204.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,IsOpenInEditorError,The length of the statement  "		// since we can run into this problem just by adding new key Property to the EntityType that is Principal Role for some Referential Constraint " is 142.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,IsOpenInEditorError,The length of the statement  "	if (errorInfo.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_UNDEFINED_COMPLEX_PROPERTY_TYPE || (errorInfo.ErrorCode == (int)ErrorCode.NotInNamespace && o is ComplexConceptualProperty)) { " is 181.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,IsOpenInEditorError,The length of the statement  "		// don't trigger safe-mode for underfined/deleted complex property types' the user should be able to fix the problem in the designer. " is 133.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,IsOpenInEditorError,The length of the statement  "			// we allow the user to have navigation properties not bound to any association via an AssociationEnd if the Name property is defined as it's still required. " is 157.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,IsOpenInEditorError,The length of the statement  "			return string.IsNullOrEmpty (navigationProperty.LocalName.Value) /* invalid name */|| navigationProperty.Relationship.Status != BindingStatus.Undefined || navigationProperty.ToRole.Status != BindingStatus.Undefined || navigationProperty.FromRole.Status != BindingStatus.Undefined; " is 280.
Long Statement,Microsoft.Data.Entity.Design.Model.Validation,RuntimeMetadataValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\RuntimeMetadataValidator.cs,IsOpenInEditorError,The length of the statement  "	return UnrecoverableRuntimeErrors.SchemaObjectModelErrorCodes.Any (c => c == (ErrorCode)errorInfo.ErrorCode) || UnrecoverableRuntimeErrors.StorageMappingErrorCodes.Any (c => c == (MappingErrorCode)errorInfo.ErrorCode); " is 218.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationSummary.cs,TraceString,The length of the statement  "	sb.Append (" " + EFToolsTraceUtils.FormatNamedDictionary ("associationToAssociationIdentity"' _associationToAssociationIdentity' delegate (Association assoc) { " is 159.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationSummary.cs,TraceString,The length of the statement  "	sb.Append (" " + EFToolsTraceUtils.FormatNamedDictionary ("dependentEndTablesToAssociationIdentities"' _dependentEndTablesToAssociationIdentities' delegate (DatabaseObject dbObj) { " is 180.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationSummary.cs,Contains,The length of the statement  "	// Since we can’t compare an association with an RC to an association with an ASM for equality' we can’t use a HashSet<AssociationIdentity> " is 139.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationIdentityForReferentialConstraint,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationIdentityForReferentialConstraint.cs,TraceString,The length of the statement  "	return "[" + typeof(AssociationIdentityForReferentialConstraint).Name + " referentialConstraintIdentity=" + _referentialConstraintIdentity.TraceString () + "]"; " is 160.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationPropertyIdentity,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationPropertyIdentity.cs,TraceString,The length of the statement  "	sb.Append (" " + EFToolsTraceUtils.FormatNamedEnumerable ("principalColumns"' _principalColumns' delegate (DatabaseColumn dc) { " is 127.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationPropertyIdentity,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationPropertyIdentity.cs,TraceString,The length of the statement  "	sb.Append ("' " + EFToolsTraceUtils.FormatNamedEnumerable ("dependentColumns"' _dependentColumns' delegate (DatabaseColumn dc) { " is 128.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationPropertyIdentity,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationPropertyIdentity.cs,Equals,The length of the statement  "	if ((SortedListAllowDupes<DatabaseColumn>.CompareListContents (PrincipalColumns' that.PrincipalColumns) == 0) && (SortedListAllowDupes<DatabaseColumn>.CompareListContents (DependentColumns' that.DependentColumns) == 0)) { " is 221.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ReferentialConstraintIdentity,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ReferentialConstraintIdentity.cs,CreateReferentialConstraintIdentity,The length of the statement  "		rcid._propertyIdentities = AssociationPropertyIdentity.CreateIdentitiesFromReferentialConstraint (referentialConstraint); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ReferentialConstraintIdentity,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ReferentialConstraintIdentity.cs,TraceString,The length of the statement  "	sb.Append (" " + EFToolsTraceUtils.FormatNamedEnumerable ("propertyIdentities"' _propertyIdentities' delegate (AssociationPropertyIdentity assocPropId) { " is 153.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ReferentialConstraintIdentityComparer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ReferentialConstraintIdentity.cs,Compare,The length of the statement  "	return SortedListAllowDupes<AssociationPropertyIdentity>.CompareListContents (x.PropertyIdentities' y.PropertyIdentities); " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationEndIdentity,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationEndIdentity.cs,TraceString,The length of the statement  "	sb.Append (EFToolsTraceUtils.FormatNamedEnumerable ("propertyIdentities"' _propertyIdentities' delegate (AssociationPropertyIdentity assocPropId) { " is 147.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,EntityTypeIdentity,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\EntityTypeIdentity.cs,TraceString,The length of the statement  "	sb.Append (" " + EFToolsTraceUtils.FormatNamedEnumerable ("tablesAndViews"' _tablesAndViews.Keys' delegate (DatabaseObject dbObj) { " is 131.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ExistingModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ExistingModelSummary.cs,TraceString,The length of the statement  "	sb.Append (" " + EFToolsTraceUtils.FormatNamedDictionary ("cEntityTypeNameToEntityTypeIdentity"' _cEntityTypeNameToEntityTypeIdentity' delegate (Symbol symbol) { " is 161.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ExistingModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ExistingModelSummary.cs,TraceString,The length of the statement  "	sb.Append (" " + EFToolsTraceUtils.FormatNamedDictionary ("allTablesAndViews"' _allTablesAndViews' delegate (DatabaseObject dbObj) { " is 132.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ExistingModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ExistingModelSummary.cs,TraceString,The length of the statement  "	sb.Append (" " + EFToolsTraceUtils.FormatNamedDictionary ("databaseObjectColumns"' _databaseObjectColumns' delegate (DatabaseObject dbObj) { " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ExistingModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ExistingModelSummary.cs,TraceString,The length of the statement  "	sb.Append (" " + EFToolsTraceUtils.FormatNamedDictionary ("allFunctions"' _allFunctions' delegate (DatabaseObject dbObj) { " is 122.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ExistingModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ExistingModelSummary.cs,TraceString,The length of the statement  "	sb.Append (" " + EFToolsTraceUtils.FormatNamedDictionary ("cAncestorTypeDatabaseObjectMap"' _cAncestorTypeDatabaseObjectMap' delegate (DatabaseObject dbObj) { " is 158.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ExistingModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ExistingModelSummary.cs,TraceString,The length of the statement  "	sb.Append (" " + EFToolsTraceUtils.FormatNamedDictionary ("databaseObjectToCEntityTypeNamesMap"' _databaseObjectToCEntityTypeNamesMap' delegate (DatabaseObject dbObj) { " is 168.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ExistingModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ExistingModelSummary.cs,RecordEntityTypeIdentities,The length of the statement  "	UpdateModelFromDatabaseUtils.ConstructEntityMappings (entityContainerMapping' AddCEntityTypeNameToEntityTypeIdentityMapping); " is 125.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,ExistingModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\ExistingModelSummary.cs,FindClosestAncestorTypeThatMapsToDbObject,The length of the statement  "	Debug.Assert (null != _cEntityTypeNameToEntityTypeIdentity' "requires that _cEntityTypeToEntityTypeIdentity " + "is initialized for GetEntityTypeIdentityForEntityType call"); " is 174.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,UpdatedModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\UpdatedModelSummary.cs,TraceString,The length of the statement  "	sb.Append (" " + EFToolsTraceUtils.FormatNamedDictionary ("cEntityTypeToEntityTypeIdentity"' _cEntityTypeToEntityTypeIdentity' delegate (EntityType et) { " is 153.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,UpdatedModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\UpdatedModelSummary.cs,TraceString,The length of the statement  "	sb.Append (" " + EFToolsTraceUtils.FormatNamedDictionary ("databaseObjectColumns"' _databaseObjectColumns' delegate (DatabaseObject dbObj) { " is 140.
Long Statement,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,UpdatedModelSummary,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\UpdatedModelSummary.cs,RecordEntityTypeIdentities,The length of the statement  "	UpdateModelFromDatabaseUtils.ConstructEntityMappings (entityContainerMapping' AddCEntityTypeToEntityTypeIdentityMapping); " is 121.
Long Statement,Microsoft.Data.Entity.Design.Model.Visitor,VerifyDiagramModelIntegrityVisitor,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Visitor\VerifyDiagramModelIntegrityVisitor.cs,Visit,The length of the statement  "		// Diagram object is considered a duplicate if there exist another object that point to the same EFObject in the same diagram. " is 126.
Long Statement,Microsoft.Data.Entity.Design.Model.Visitor,VerifyDiagramModelIntegrityVisitor,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Visitor\VerifyDiagramModelIntegrityVisitor.cs,Visit,The length of the statement  "		// We construct the moniker for the diagramobject (combination of diagram name and target efobject name); if the moniker " is 120.
Long Statement,Microsoft.Data.Entity.Design.Model.Mapping.ChildCollectionBuilders,AssociationSetEndMappingBuilder,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\ChildCollectionBuilders\AssociationSetEndMappingBuilder.cs,Build,The length of the statement  "			if (scalarProperty != null && scalarProperty.Parent is EndProperty && scalarProperty.Name.Status == BindingStatus.Known && scalarProperty.Name.Target is Property && scalarProperty.Name.Target.Parent is EntityType) { " is 215.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,CreateMatchingFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMatchingFunctionImportCommand.cs,AddCreateComplexTypePropertyCommands,The conditional expression  "(cmdNewComplexType != null && complexType == null) || (cmdNewComplexType == null && complexType != null)"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,ChangeFunctionScalarPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeFunctionScalarPropertyCommand.cs,InvokeInternal,The conditional expression  "_propChain == null && _pointingNavProp == null && _param == null && _version != null"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,CreateAssociationSetCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateAssociationSetCommand.cs,InvokeInternal,The conditional expression  "end1 != null && end1.Type.Status == BindingStatus.Known && end2 != null && end2.Type.Status == BindingStatus.Known"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,CreateFunctionImportCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateFunctionImportCommand.cs,InvokeInternal,The conditional expression  "Container == null || (Function == null && ParameterDefinitions == null) || ReturnSingleType == null"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,CreateInheritanceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateInheritanceCommand.cs,PreInvoke,The conditional expression  "association != null && association.AssociationSet != null && association.AssociationSet.AssociationSetMapping != null && association.AssociationSet.AssociationSetMapping.XObject != null"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,CreateMappingFragmentCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMappingFragmentCommand.cs,CloneMappingFragment,The conditional expression  "sp.Name != null && sp.Name.Target != null && sp.Name.Target.LocalName != null && sp.Name.Target.LocalName.Value != null"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,CreateMappingFragmentCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateMappingFragmentCommand.cs,CloneMappingFragment,The conditional expression  "frag.StoreEntitySet != null && frag.StoreEntitySet.Target != null && frag.StoreEntitySet.Target.EntityType != null && frag.StoreEntitySet.Target.EntityType.Target != null && sp.ColumnName != null && sp.ColumnName.Target != null && sp.ColumnName.Target.LocalName != null && sp.ColumnName.Target.LocalName.Value != null"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The conditional expression  "associationSet != null && principal.Type.Status == BindingStatus.Known && dependent.Type.Status == BindingStatus.Known && associationSet.PrincipalEnd != null && associationSet.DependentEnd != null"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualConstraintOrMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualConstraintOrMapping.cs,InvokeInternal,The conditional expression  "Association != null && cpc.Artifact != null && cpc.Artifact.DesignerInfo () != null && cpc.Artifact.DesignerInfo ().TryGetDesignerInfo (OptionsDesignerInfo.ElementName' out designerInfo)"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualConstraintOrMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualConstraintOrMapping.cs,InvokeInternal,The conditional expression  "Association.IsOneToZeroOrOne || (UseReferentialConstraint && !(Association.IsZeroOrOneToZeroOrOne || Association.IsOneToOne))"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,DeleteInheritanceCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\DeleteInheritanceCommand.cs,PostInvoke,The conditional expression  "association != null && association.AssociationSet != null && association.AssociationSet.AssociationSetMapping != null && association.AssociationSet.AssociationSetMapping.XObject != null"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,InvokeInternal,The conditional expression  "existingArtifact.MappingModel != null && _newArtifactStorageEntityModel != null && _newArtifactStorageEntityModel.Namespace != null && !string.IsNullOrEmpty (_newArtifactStorageEntityModel.Namespace.Value) && !_newArtifactStorageEntityModel.Namespace.Value.Equals (previousStorageModelNamespace' StringComparison.CurrentCulture)"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,ReplaceMappingContainerRef,The conditional expression  "!string.IsNullOrEmpty (oldStorageEntityContainerName) && existingArtifact.StorageModel () != null && existingArtifact.StorageModel ().FirstEntityContainer != null && existingArtifact.MappingModel () != null && existingArtifact.MappingModel ().FirstEntityContainerMapping != null && existingArtifact.MappingModel ().FirstEntityContainerMapping.StorageEntityContainer != null && existingArtifact.MappingModel ().FirstEntityContainerMapping.StorageEntityContainer.RefName == oldStorageEntityContainerName"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,ReplaceSsdlCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ReplaceSsdlCommand.cs,UpdateOldDatabaseObjectReferencesToNewNames,The conditional expression  "newArtifactContainsDBIdentity && null != matchingNewDatabaseObject && null != matchingNewDatabaseObject.LocalName && !string.IsNullOrEmpty (matchingNewDatabaseObject.LocalName.Value) && matchingNewDatabaseObject.LocalName.Value != oldName"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The conditional expression  "!(ModelConstants.Multiplicity_One == assocEnd1.Multiplicity.Value && (ModelConstants.Multiplicity_One == assocEnd2.Multiplicity.Value || ModelConstants.Multiplicity_ZeroOrOne == assocEnd2.Multiplicity.Value)) || (ModelConstants.Multiplicity_One == assocEnd2.Multiplicity.Value && (ModelConstants.Multiplicity_One == assocEnd1.Multiplicity.Value || ModelConstants.Multiplicity_ZeroOrOne == assocEnd1.Multiplicity.Value))"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasIdenticalKeyToEntityType,The conditional expression  "null == refConstraintRole || null == refConstraintRole.Role || null == refConstraintRole.Role.Target || null == refConstraintRole.Role.Target.Type || null == refConstraintRole.Role.Target.Type.Target"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Commands,UpdateModelFromDatabaseCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateModelFromDatabaseCommand.cs,InvokeInternal,The conditional expression  "null != fim.FunctionImportName && null != fim.FunctionImportName.Target && null != fim.FunctionName && null != fim.FunctionName.Target"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectAssociationConnectorCommand,The conditional expression  "diagram.EntityTypeShapes.Where (ets => ets.EntityType.Target == end.Type.Target).Any () || shapeChangeInfoSet.Where (sc => sc.DiagramId == diagram.Id.Value && sc.ModelEFObject == end.Type.Target && sc.ChangeType == XObjectChange.Add).Any ()"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Designer,Diagrams,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Designer\Diagrams.cs,InjectInheritanceConnectorCommand,The conditional expression  "diagram.EntityTypeShapes.Where (ets => ets.EntityType.Target == entityType).Any () || shapeChangeInfoSet.Where (sc => sc.DiagramId == diagram.Id.Value && sc.ModelEFObject == entityType && sc.ChangeType == XObjectChange.Add).Any ()"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,FindNavigationPropertyForAssociationEnd,The conditional expression  "navProp.Relationship != null && navProp.Relationship.Target == assoc && navProp.FromRole != null && navProp.FromRole.Target == fromRoleEnd"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,DeterminePrincipalDependentAssociationEnds,The conditional expression  "asm != null && asm.StoreEntitySet.Target != null && end1.Type.Target != null && end2.Type.Target != null"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Entity,PropertyBase,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyBase.cs,MoveTo,The conditional expression  "a.IsNamespaceDeclaration && (a.Value == SchemaManager.GetCSDLNamespaceName (Artifact.SchemaVersion) || a.Value == SchemaManager.GetSSDLNamespaceName (Artifact.SchemaVersion) || a.Value == SchemaManager.GetAnnotationNamespaceName ())"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Entity,Association,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\Association.cs,IsMultiplicity,The conditional expression  "(End1.Multiplicity.Value == multiplicity1 && End2.Multiplicity.Value == multiplicity2) || End1.Multiplicity.Value == multiplicity2 && End2.Multiplicity.Value == multiplicity1"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Entity,EntityType,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntityType.cs,GetXLinqInsertPosition,The conditional expression  "(insertAtProperty is Property && childProperty is NavigationProperty) || (insertAtProperty is NavigationProperty && childProperty is Property)"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Integrity,PropagateStoragePropertyFacetsToConceptualModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateStoragePropertyFacetsToConceptualModel.cs,SynchronizeFacet,The conditional expression  "(null == sSideDefaultableValueDefaultValue && null == cSideDefaultableValueDefaultValue) || (null != sSideDefaultableValueDefaultValue && sSideDefaultableValueDefaultValue.Equals (cSideDefaultableValueDefaultValue))"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Integrity,CreateForeignKeyProperties,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\CreateForeignKeyProperties.cs,Invoke,The conditional expression  "principal != null && principal.Type.Target != null && dependent != null && dependent.Type.Target != null"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,ProcessModificationFunction,The conditional expression  "from != null && to != null && from.Role.Target != null && to.Role.Target != null"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,DeriveMappingPlanRecurse,The conditional expression  "info.InheritanceStrategy == InheritanceMappingStrategy.TablePerHierarchy && tableInfo.EntityTypeMappingKind == EntityTypeMappingKind.IsTypeOf && info.Conditions.Count == 0 && info.EntityType.IsConcrete"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Integrity,EnforceEntitySetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceEntitySetMappingRules.cs,DetermineFragmentPlacement,The conditional expression  "cond.ColumnName != null && cond.ColumnName.Target != null && cond.ColumnName.Target.EntityType != null && cond.ColumnName.Target.EntityType == tableInfo.Table && columns.Contains (cond.ColumnName.Target)"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,Invoke,The conditional expression  "principal != null && principal.Type.Target != null && dependent != null && dependent.Type.Target != null"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Mapping,PropertyMappingColumnNameNormalizer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\PropertyMappingColumnNameNormalizer.cs,NameNormalizer,The conditional expression  "null != set && null != set.EntityType && null != set.EntityType.Target && set.EntityType.Status == BindingStatus.Known"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Validation,EscherModelValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\EscherModelValidator.cs,IsOpenInEditorError,The conditional expression  "ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_CIRCULAR_INHERITANCE || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_CIRCULAR_COMPLEX_TYPE_DEFINITION || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_ENTITY_TYPE_WITHOUT_ENTITY_SET || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_MULTIPE_ENTITY_SETS_PER_TYPE || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_ASSOCIATION_WITHOUT_ASSOCIATION_SET || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_INCLUDES_USING || ei.ErrorCode == ErrorCodes.NON_QUALIFIED_ELEMENT"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Validation,EscherModelValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\EscherModelValidator.cs,IsSkipRuntimeValidationError,The conditional expression  "ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_UNMAPPED_ENTITY_TYPE || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_UNMAPPED_ASSOCIATION || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_UNMAPPED_PROPERTY || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_UNMAPPED_ASSOCIATION_END || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_UNMAPPED_ASSOCIATION_END_KEY || ei.ErrorCode == ErrorCodes.ESCHER_VALIDATOR_CONDITION_ON_PRIMARY_KEY || ei.ErrorCode == ErrorCodes.NON_QUALIFIED_ELEMENT"  is complex.
Complex Conditional,Microsoft.Data.Entity.Design.Model.Mapping.ChildCollectionBuilders,AssociationSetEndMappingBuilder,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Mapping\ChildCollectionBuilders\AssociationSetEndMappingBuilder.cs,Build,The conditional expression  "scalarProperty != null && scalarProperty.Parent is EndProperty && scalarProperty.Name.Status == BindingStatus.Known && scalarProperty.Name.Target is Property && scalarProperty.Name.Target.Parent is EntityType"  is complex.
Empty Catch Block,Microsoft.Data.Entity.Design.Model.Commands,CopyAnnotatableElementCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyAnnotatableElementCommand.cs,AddAnnotations,The method has an empty catch block.
Empty Catch Block,Microsoft.Data.Entity.Design.Model.Integrity,PropagateViewKeysToStorageModel,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\PropagateViewKeysToStorageModel.cs,Invoke,The method has an empty catch block.
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateDiagramItemForEFElementsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateDiagramItemForEFElementsCommand.cs,InvokeInternal,The following statement contains a magic number: if (_efElements != null) {  	foreach (var efElement in _efElements) {  		// --------------------------------------------------------------------------------  		// | EF Element Type                   | Diagram shape type                       |  		// --------------------------------------------------------------------------------  		// | Conceptual Entity Type              Entity Type Shape                        |  		// | Association                         Association Connector                    |  		// | Association Set                     Association Connector                    |  		// | Entity Set                          Entity Type Shapes for all ET in the set |  		// | Property                            Property's entity type shape             |  		// --------------------------------------------------------------------------------  		var entityType = efElement as ConceptualEntityType;  		var association = efElement as Association;  		var entitySet = efElement as EntitySet;  		var associationSet = efElement as AssociationSet;  		if (efElement is Property) {  			entityType = efElement.GetParentOfType (typeof(ConceptualEntityType)) as ConceptualEntityType;  		}  		if (associationSet != null && associationSet.Association.Status == BindingStatus.Known) {  			association = associationSet.Association.Target;  		}  		if (entityType != null) {  			CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' entityType' _createRelatedEntities);  		}  		else if (association != null) {  			Debug.Assert (association.AssociationEnds ().Count == 2' "Received incorrect number of AssociationEnds (" + association.AssociationEnds ().Count + ") for Association " + association.ToPrettyString () + " should be 2.");  			var assocEnds = association.AssociationEnds ();  			var assocEnd1 = assocEnds [0];  			var assocEnd2 = assocEnds [1];  			if (assocEnd1.Type.Status == BindingStatus.Known && assocEnd2.Type.Status == BindingStatus.Known) {  				CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' assocEnd1.Type.Target as ConceptualEntityType' _createRelatedEntities);  				// Check whether the association is self association or not.  				// If it is a self association' then we can skip creating the shape for the second associationEnd's entity type  				// since both association-ends point to the same entity type.   				if (assocEnd1.Type.Target != assocEnd2.Type.Target) {  					CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' assocEnd2.Type.Target as ConceptualEntityType' _createRelatedEntities);  				}  			}  		}  		else if (entitySet != null) {  			foreach (var et in entitySet.GetEntityTypesInTheSet ()) {  				CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' et as ConceptualEntityType' _createRelatedEntities);  			}  		}  		else {  			Debug.Fail ("Unable to create diagram shape for EFElement with type:" + efElement.GetType ().Name);  		}  	}  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateDiagramItemForEFElementsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateDiagramItemForEFElementsCommand.cs,InvokeInternal,The following statement contains a magic number: foreach (var efElement in _efElements) {  	// --------------------------------------------------------------------------------  	// | EF Element Type                   | Diagram shape type                       |  	// --------------------------------------------------------------------------------  	// | Conceptual Entity Type              Entity Type Shape                        |  	// | Association                         Association Connector                    |  	// | Association Set                     Association Connector                    |  	// | Entity Set                          Entity Type Shapes for all ET in the set |  	// | Property                            Property's entity type shape             |  	// --------------------------------------------------------------------------------  	var entityType = efElement as ConceptualEntityType;  	var association = efElement as Association;  	var entitySet = efElement as EntitySet;  	var associationSet = efElement as AssociationSet;  	if (efElement is Property) {  		entityType = efElement.GetParentOfType (typeof(ConceptualEntityType)) as ConceptualEntityType;  	}  	if (associationSet != null && associationSet.Association.Status == BindingStatus.Known) {  		association = associationSet.Association.Target;  	}  	if (entityType != null) {  		CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' entityType' _createRelatedEntities);  	}  	else if (association != null) {  		Debug.Assert (association.AssociationEnds ().Count == 2' "Received incorrect number of AssociationEnds (" + association.AssociationEnds ().Count + ") for Association " + association.ToPrettyString () + " should be 2.");  		var assocEnds = association.AssociationEnds ();  		var assocEnd1 = assocEnds [0];  		var assocEnd2 = assocEnds [1];  		if (assocEnd1.Type.Status == BindingStatus.Known && assocEnd2.Type.Status == BindingStatus.Known) {  			CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' assocEnd1.Type.Target as ConceptualEntityType' _createRelatedEntities);  			// Check whether the association is self association or not.  			// If it is a self association' then we can skip creating the shape for the second associationEnd's entity type  			// since both association-ends point to the same entity type.   			if (assocEnd1.Type.Target != assocEnd2.Type.Target) {  				CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' assocEnd2.Type.Target as ConceptualEntityType' _createRelatedEntities);  			}  		}  	}  	else if (entitySet != null) {  		foreach (var et in entitySet.GetEntityTypesInTheSet ()) {  			CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' et as ConceptualEntityType' _createRelatedEntities);  		}  	}  	else {  		Debug.Fail ("Unable to create diagram shape for EFElement with type:" + efElement.GetType ().Name);  	}  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateDiagramItemForEFElementsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateDiagramItemForEFElementsCommand.cs,InvokeInternal,The following statement contains a magic number: if (entityType != null) {  	CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' entityType' _createRelatedEntities);  }  else if (association != null) {  	Debug.Assert (association.AssociationEnds ().Count == 2' "Received incorrect number of AssociationEnds (" + association.AssociationEnds ().Count + ") for Association " + association.ToPrettyString () + " should be 2.");  	var assocEnds = association.AssociationEnds ();  	var assocEnd1 = assocEnds [0];  	var assocEnd2 = assocEnds [1];  	if (assocEnd1.Type.Status == BindingStatus.Known && assocEnd2.Type.Status == BindingStatus.Known) {  		CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' assocEnd1.Type.Target as ConceptualEntityType' _createRelatedEntities);  		// Check whether the association is self association or not.  		// If it is a self association' then we can skip creating the shape for the second associationEnd's entity type  		// since both association-ends point to the same entity type.   		if (assocEnd1.Type.Target != assocEnd2.Type.Target) {  			CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' assocEnd2.Type.Target as ConceptualEntityType' _createRelatedEntities);  		}  	}  }  else if (entitySet != null) {  	foreach (var et in entitySet.GetEntityTypesInTheSet ()) {  		CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' et as ConceptualEntityType' _createRelatedEntities);  	}  }  else {  	Debug.Fail ("Unable to create diagram shape for EFElement with type:" + efElement.GetType ().Name);  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateDiagramItemForEFElementsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateDiagramItemForEFElementsCommand.cs,InvokeInternal,The following statement contains a magic number: if (association != null) {  	Debug.Assert (association.AssociationEnds ().Count == 2' "Received incorrect number of AssociationEnds (" + association.AssociationEnds ().Count + ") for Association " + association.ToPrettyString () + " should be 2.");  	var assocEnds = association.AssociationEnds ();  	var assocEnd1 = assocEnds [0];  	var assocEnd2 = assocEnds [1];  	if (assocEnd1.Type.Status == BindingStatus.Known && assocEnd2.Type.Status == BindingStatus.Known) {  		CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' assocEnd1.Type.Target as ConceptualEntityType' _createRelatedEntities);  		// Check whether the association is self association or not.  		// If it is a self association' then we can skip creating the shape for the second associationEnd's entity type  		// since both association-ends point to the same entity type.   		if (assocEnd1.Type.Target != assocEnd2.Type.Target) {  			CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' assocEnd2.Type.Target as ConceptualEntityType' _createRelatedEntities);  		}  	}  }  else if (entitySet != null) {  	foreach (var et in entitySet.GetEntityTypesInTheSet ()) {  		CreateEntityTypeShapeCommand.CreateEntityTypeShapeAndConnectorsInDiagram (cpc' _diagram' et as ConceptualEntityType' _createRelatedEntities);  	}  }  else {  	Debug.Fail ("Unable to create diagram shape for EFElement with type:" + efElement.GetType ().Name);  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateDiagramItemForEFElementsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateDiagramItemForEFElementsCommand.cs,InvokeInternal,The following statement contains a magic number: Debug.Assert (association.AssociationEnds ().Count == 2' "Received incorrect number of AssociationEnds (" + association.AssociationEnds ().Count + ") for Association " + association.ToPrettyString () + " should be 2.");  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The following statement contains a magic number: if (clipboardAssociation.ReferentialConstraint != null) {  	EntityType principal;  	EntityType dependent;  	if (entity1 == FindEntityByClipboardName (clipboardAssociation.ReferentialConstraint.PrincipalEntityName' entitiesMap)) {  		principal = entity1;  		dependent = entity2;  	}  	else {  		Debug.Assert (entity2 == FindEntityByClipboardName (clipboardAssociation.ReferentialConstraint.PrincipalEntityName' entitiesMap)' "could not find entity using clipboard name " + clipboardAssociation.ReferentialConstraint.PrincipalEntityName);  		principal = entity2;  		dependent = entity1;  	}  	IEnumerable<Property> principalPropertyList = null;  	IEnumerable<Property> dependentPropertyList = null;  	var associationEnds = cmd.CreatedAssociation.AssociationEnds ();  	if (associationEnds.Count == 2 && (principalPropertyList = ModelHelper.FindProperties (principal' clipboardAssociation.ReferentialConstraint.PrincipalProperties)) != null && (dependentPropertyList = ModelHelper.FindProperties (dependent' clipboardAssociation.ReferentialConstraint.DependentProperties)) != null) {  		var refCmd = new CreateReferentialConstraintCommand (associationEnds [0]' associationEnds [1]' principalPropertyList' dependentPropertyList);  		CommandProcessor.InvokeSingleCommand (cpc' refCmd);  		AddAnnotations (clipboardAssociation.ReferentialConstraint' refCmd.ReferentialConstraint);  	}  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CopyEntitiesCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CopyEntitiesCommand.cs,CopyAssociation,The following statement contains a magic number: if (associationEnds.Count == 2 && (principalPropertyList = ModelHelper.FindProperties (principal' clipboardAssociation.ReferentialConstraint.PrincipalProperties)) != null && (dependentPropertyList = ModelHelper.FindProperties (dependent' clipboardAssociation.ReferentialConstraint.DependentProperties)) != null) {  	var refCmd = new CreateReferentialConstraintCommand (associationEnds [0]' associationEnds [1]' principalPropertyList' dependentPropertyList);  	CommandProcessor.InvokeSingleCommand (cpc' refCmd);  	AddAnnotations (clipboardAssociation.ReferentialConstraint' refCmd.ReferentialConstraint);  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,InvokeInternal,The following statement contains a magic number: if (nExistingTypeShapeCount == 0) {  	var shape = new EntityTypeShape (_diagram' null);  	_diagram.AddEntityTypeShape (shape);  	shape.EntityType.SetRefName (_entity);  	shape.Width.Value = DEFAULTWIDTH;  	// The DSL will set the correct locations for the shapes at a later point' but we need to provide initial values for X and Y in the meantime  	// so that we can construct the shape. We're using random numbers here to ensure that if the DSL fails for some reason' new shapes do not  	// stack directly on top of each other.  	shape.PointX.Value = _rand.NextDouble () * 12.0;  	shape.PointY.Value = _rand.NextDouble () * 32.0;  	if (_fillColor != EntityDesignerDiagramConstant.EntityTypeShapeDefaultFillColor) {  		shape.FillColor.Value = _fillColor;  	}  	XmlModelHelper.NormalizeAndResolve (shape);  	_created = shape;  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,InvokeInternal,The following statement contains a magic number: if (nExistingTypeShapeCount == 0) {  	var shape = new EntityTypeShape (_diagram' null);  	_diagram.AddEntityTypeShape (shape);  	shape.EntityType.SetRefName (_entity);  	shape.Width.Value = DEFAULTWIDTH;  	// The DSL will set the correct locations for the shapes at a later point' but we need to provide initial values for X and Y in the meantime  	// so that we can construct the shape. We're using random numbers here to ensure that if the DSL fails for some reason' new shapes do not  	// stack directly on top of each other.  	shape.PointX.Value = _rand.NextDouble () * 12.0;  	shape.PointY.Value = _rand.NextDouble () * 32.0;  	if (_fillColor != EntityDesignerDiagramConstant.EntityTypeShapeDefaultFillColor) {  		shape.FillColor.Value = _fillColor;  	}  	XmlModelHelper.NormalizeAndResolve (shape);  	_created = shape;  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,InvokeInternal,The following statement contains a magic number: shape.PointX.Value = _rand.NextDouble () * 12.0;  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateEntityTypeShapeCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateEntityTypeShapeCommand.cs,InvokeInternal,The following statement contains a magic number: shape.PointY.Value = _rand.NextDouble () * 32.0;  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The following statement contains a magic number: if (CreatedAssociation == null) {  	// This Association does not exist' create it  	base.InvokeInternal (cpc);  }  else {  	// The Association already exists' update it  	Debug.Assert (CreatedAssociation.AssociationEnds ().Count == 2' "Association element is invalid' it should always have exactly 2 ends");  	if (CreatedAssociation.AssociationEnds ().Count == 2) {  		AssociationEnd principal;  		AssociationEnd dependent;  		ModelHelper.DeterminePrincipalDependentEndsForAnyAssociationType (CreatedAssociation' out principal' out dependent);  		if (principal.Type.Target == null || !string.Equals (principal.Type.Target.Name.Value' End1Entity.LocalName.Value' StringComparison.Ordinal)) {  			principal.Type.SetRefName (End1Entity);  			principal.Role.Value = End1Entity.LocalName.Value;  		}  		if (dependent.Type.Target == null || !string.Equals (dependent.Type.Target.Name.Value' End2Entity.LocalName.Value' StringComparison.Ordinal)) {  			dependent.Type.SetRefName (End2Entity);  			var endRoleValue = End2Entity.LocalName.Value;  			if (principal.Role.Value.Equals (endRoleValue)) {  				// avoid duplicate Role values between the two ends. This will occur in self-associations.  				// Appending "1" is consistent with how model-gen chooses a unique name.  				endRoleValue = endRoleValue + "1";  			}  			dependent.Role.Value = endRoleValue;  		}  		if (!string.Equals (principal.Multiplicity.Value' End1Multiplicity' StringComparison.Ordinal)) {  			principal.Multiplicity.Value = End1Multiplicity;  		}  		if (!string.Equals (dependent.Multiplicity.Value' End2Multiplicity' StringComparison.Ordinal)) {  			dependent.Multiplicity.Value = End2Multiplicity;  		}  		// We have to resolve the association after both the principal and dependent have been updated here. The reason is because   		// if we resolve the principal and dependent separately we will end up with duplicate symbols in the symbol table because  		// the previous end didn't get removed.  		XmlModelHelper.NormalizeAndResolve (CreatedAssociation);  		// Also update the AssociationSet  		var associationSet = CreatedAssociation.AssociationSet;  		// It's possible for the association to exist but not the associationSet when a rename in the EntityDesigner is propagated  		// to the database and the resulting hydration events flow back up.  		if (associationSet == null) {  			var assocSetName = ModelHelper.GetUniqueName (typeof(AssociationSet)' cpc.Artifact.ConceptualModel ().FirstEntityContainer' Name);  			var cmd = new CreateAssociationSetCommand (assocSetName' CreatedAssociation);  			CommandProcessor.InvokeSingleCommand (cpc' cmd);  			associationSet = cmd.AssociationSet;  		}  		if (associationSet != null && principal.Type.Status == BindingStatus.Known && dependent.Type.Status == BindingStatus.Known && associationSet.PrincipalEnd != null && associationSet.DependentEnd != null) {  			associationSet.PrincipalEnd.Role.SetRefName (principal);  			associationSet.PrincipalEnd.EntitySet.SetRefName (principal.Type.Target.EntitySet);  			associationSet.DependentEnd.Role.SetRefName (dependent);  			associationSet.DependentEnd.EntitySet.SetRefName (dependent.Type.Target.EntitySet);  			XmlModelHelper.NormalizeAndResolve (associationSet);  		}  		var navProp1 = principal.GetAntiDependenciesOfType<NavigationProperty> ().FirstOrDefault (np => np.FromRole.Target == principal);  		if (navProp1 != null && ShouldCreateNavigationPropertyEnd1) {  			navProp1.Name.Value = NavigationPropertyInEnd1Entity;  		}  		var navProp2 = dependent.GetAntiDependenciesOfType<NavigationProperty> ().FirstOrDefault (np => np.FromRole.Target == dependent);  		if (navProp2 != null && ShouldCreateNavigationPropertyEnd2) {  			navProp2.Name.Value = NavigationPropertyInEnd2Entity;  		}  	}  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The following statement contains a magic number: if (CreatedAssociation == null) {  	// This Association does not exist' create it  	base.InvokeInternal (cpc);  }  else {  	// The Association already exists' update it  	Debug.Assert (CreatedAssociation.AssociationEnds ().Count == 2' "Association element is invalid' it should always have exactly 2 ends");  	if (CreatedAssociation.AssociationEnds ().Count == 2) {  		AssociationEnd principal;  		AssociationEnd dependent;  		ModelHelper.DeterminePrincipalDependentEndsForAnyAssociationType (CreatedAssociation' out principal' out dependent);  		if (principal.Type.Target == null || !string.Equals (principal.Type.Target.Name.Value' End1Entity.LocalName.Value' StringComparison.Ordinal)) {  			principal.Type.SetRefName (End1Entity);  			principal.Role.Value = End1Entity.LocalName.Value;  		}  		if (dependent.Type.Target == null || !string.Equals (dependent.Type.Target.Name.Value' End2Entity.LocalName.Value' StringComparison.Ordinal)) {  			dependent.Type.SetRefName (End2Entity);  			var endRoleValue = End2Entity.LocalName.Value;  			if (principal.Role.Value.Equals (endRoleValue)) {  				// avoid duplicate Role values between the two ends. This will occur in self-associations.  				// Appending "1" is consistent with how model-gen chooses a unique name.  				endRoleValue = endRoleValue + "1";  			}  			dependent.Role.Value = endRoleValue;  		}  		if (!string.Equals (principal.Multiplicity.Value' End1Multiplicity' StringComparison.Ordinal)) {  			principal.Multiplicity.Value = End1Multiplicity;  		}  		if (!string.Equals (dependent.Multiplicity.Value' End2Multiplicity' StringComparison.Ordinal)) {  			dependent.Multiplicity.Value = End2Multiplicity;  		}  		// We have to resolve the association after both the principal and dependent have been updated here. The reason is because   		// if we resolve the principal and dependent separately we will end up with duplicate symbols in the symbol table because  		// the previous end didn't get removed.  		XmlModelHelper.NormalizeAndResolve (CreatedAssociation);  		// Also update the AssociationSet  		var associationSet = CreatedAssociation.AssociationSet;  		// It's possible for the association to exist but not the associationSet when a rename in the EntityDesigner is propagated  		// to the database and the resulting hydration events flow back up.  		if (associationSet == null) {  			var assocSetName = ModelHelper.GetUniqueName (typeof(AssociationSet)' cpc.Artifact.ConceptualModel ().FirstEntityContainer' Name);  			var cmd = new CreateAssociationSetCommand (assocSetName' CreatedAssociation);  			CommandProcessor.InvokeSingleCommand (cpc' cmd);  			associationSet = cmd.AssociationSet;  		}  		if (associationSet != null && principal.Type.Status == BindingStatus.Known && dependent.Type.Status == BindingStatus.Known && associationSet.PrincipalEnd != null && associationSet.DependentEnd != null) {  			associationSet.PrincipalEnd.Role.SetRefName (principal);  			associationSet.PrincipalEnd.EntitySet.SetRefName (principal.Type.Target.EntitySet);  			associationSet.DependentEnd.Role.SetRefName (dependent);  			associationSet.DependentEnd.EntitySet.SetRefName (dependent.Type.Target.EntitySet);  			XmlModelHelper.NormalizeAndResolve (associationSet);  		}  		var navProp1 = principal.GetAntiDependenciesOfType<NavigationProperty> ().FirstOrDefault (np => np.FromRole.Target == principal);  		if (navProp1 != null && ShouldCreateNavigationPropertyEnd1) {  			navProp1.Name.Value = NavigationPropertyInEnd1Entity;  		}  		var navProp2 = dependent.GetAntiDependenciesOfType<NavigationProperty> ().FirstOrDefault (np => np.FromRole.Target == dependent);  		if (navProp2 != null && ShouldCreateNavigationPropertyEnd2) {  			navProp2.Name.Value = NavigationPropertyInEnd2Entity;  		}  	}  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The following statement contains a magic number: Debug.Assert (CreatedAssociation.AssociationEnds ().Count == 2' "Association element is invalid' it should always have exactly 2 ends");  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateConceptualAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateConceptualAssociationCommand.cs,InvokeInternal,The following statement contains a magic number: if (CreatedAssociation.AssociationEnds ().Count == 2) {  	AssociationEnd principal;  	AssociationEnd dependent;  	ModelHelper.DeterminePrincipalDependentEndsForAnyAssociationType (CreatedAssociation' out principal' out dependent);  	if (principal.Type.Target == null || !string.Equals (principal.Type.Target.Name.Value' End1Entity.LocalName.Value' StringComparison.Ordinal)) {  		principal.Type.SetRefName (End1Entity);  		principal.Role.Value = End1Entity.LocalName.Value;  	}  	if (dependent.Type.Target == null || !string.Equals (dependent.Type.Target.Name.Value' End2Entity.LocalName.Value' StringComparison.Ordinal)) {  		dependent.Type.SetRefName (End2Entity);  		var endRoleValue = End2Entity.LocalName.Value;  		if (principal.Role.Value.Equals (endRoleValue)) {  			// avoid duplicate Role values between the two ends. This will occur in self-associations.  			// Appending "1" is consistent with how model-gen chooses a unique name.  			endRoleValue = endRoleValue + "1";  		}  		dependent.Role.Value = endRoleValue;  	}  	if (!string.Equals (principal.Multiplicity.Value' End1Multiplicity' StringComparison.Ordinal)) {  		principal.Multiplicity.Value = End1Multiplicity;  	}  	if (!string.Equals (dependent.Multiplicity.Value' End2Multiplicity' StringComparison.Ordinal)) {  		dependent.Multiplicity.Value = End2Multiplicity;  	}  	// We have to resolve the association after both the principal and dependent have been updated here. The reason is because   	// if we resolve the principal and dependent separately we will end up with duplicate symbols in the symbol table because  	// the previous end didn't get removed.  	XmlModelHelper.NormalizeAndResolve (CreatedAssociation);  	// Also update the AssociationSet  	var associationSet = CreatedAssociation.AssociationSet;  	// It's possible for the association to exist but not the associationSet when a rename in the EntityDesigner is propagated  	// to the database and the resulting hydration events flow back up.  	if (associationSet == null) {  		var assocSetName = ModelHelper.GetUniqueName (typeof(AssociationSet)' cpc.Artifact.ConceptualModel ().FirstEntityContainer' Name);  		var cmd = new CreateAssociationSetCommand (assocSetName' CreatedAssociation);  		CommandProcessor.InvokeSingleCommand (cpc' cmd);  		associationSet = cmd.AssociationSet;  	}  	if (associationSet != null && principal.Type.Status == BindingStatus.Known && dependent.Type.Status == BindingStatus.Known && associationSet.PrincipalEnd != null && associationSet.DependentEnd != null) {  		associationSet.PrincipalEnd.Role.SetRefName (principal);  		associationSet.PrincipalEnd.EntitySet.SetRefName (principal.Type.Target.EntitySet);  		associationSet.DependentEnd.Role.SetRefName (dependent);  		associationSet.DependentEnd.EntitySet.SetRefName (dependent.Type.Target.EntitySet);  		XmlModelHelper.NormalizeAndResolve (associationSet);  	}  	var navProp1 = principal.GetAntiDependenciesOfType<NavigationProperty> ().FirstOrDefault (np => np.FromRole.Target == principal);  	if (navProp1 != null && ShouldCreateNavigationPropertyEnd1) {  		navProp1.Name.Value = NavigationPropertyInEnd1Entity;  	}  	var navProp2 = dependent.GetAntiDependenciesOfType<NavigationProperty> ().FirstOrDefault (np => np.FromRole.Target == dependent);  	if (navProp2 != null && ShouldCreateNavigationPropertyEnd2) {  		navProp2.Name.Value = NavigationPropertyInEnd2Entity;  	}  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateStorageAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateStorageAssociationCommand.cs,InvokeInternal,The following statement contains a magic number: if (association == null) {  	// If this Association does not exist' create it  	base.InvokeInternal (cpc);  }  else {  	// If the Association already exists' update it  	Debug.Assert (association.AssociationEnds ().Count == 2' "Association element is invalid' it should always have exactly 2 ends");  	if (association.AssociationEnds ().Count == 2) {  		AssociationEnd principal;  		AssociationEnd dependent;  		ModelHelper.DeterminePrincipalDependentAssociationEnds (association' out principal' out dependent' ModelHelper.DeterminePrincipalDependentAssociationEndsScenario.CreateForeignKeyProperties);  		var updatedPrincipalRoleName = ModelHelper.CreatePKAssociationEndName (PkTable.LocalName.Value);  		var principalMultiplicity = IsNullableFk ? ModelConstants.Multiplicity_ZeroOrOne : ModelConstants.Multiplicity_One;  		var updatedDependentRoleName = ModelHelper.CreateFKAssociationEndName (FkTable.LocalName.Value);  		var dependentMultiplicity = DoesFkFormPk ? ModelConstants.Multiplicity_ZeroOrOne : ModelConstants.Multiplicity_Many;  		if (string.Compare (principal.Role.Value' updatedPrincipalRoleName' StringComparison.Ordinal) != 0) {  			principal.Role.Value = updatedPrincipalRoleName;  		}  		if (string.Compare (dependent.Role.Value' updatedDependentRoleName' StringComparison.Ordinal) != 0) {  			dependent.Role.Value = updatedDependentRoleName;  		}  		principal.Type.SetRefName (PkTable);  		dependent.Type.SetRefName (FkTable);  		if (string.Compare (principal.Multiplicity.Value' principalMultiplicity' StringComparison.Ordinal) != 0) {  			principal.Multiplicity.Value = principalMultiplicity;  		}  		if (string.Compare (dependent.Multiplicity.Value' dependentMultiplicity' StringComparison.Ordinal) != 0) {  			dependent.Multiplicity.Value = dependentMultiplicity;  		}  	}  	Association = association;  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateStorageAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateStorageAssociationCommand.cs,InvokeInternal,The following statement contains a magic number: if (association == null) {  	// If this Association does not exist' create it  	base.InvokeInternal (cpc);  }  else {  	// If the Association already exists' update it  	Debug.Assert (association.AssociationEnds ().Count == 2' "Association element is invalid' it should always have exactly 2 ends");  	if (association.AssociationEnds ().Count == 2) {  		AssociationEnd principal;  		AssociationEnd dependent;  		ModelHelper.DeterminePrincipalDependentAssociationEnds (association' out principal' out dependent' ModelHelper.DeterminePrincipalDependentAssociationEndsScenario.CreateForeignKeyProperties);  		var updatedPrincipalRoleName = ModelHelper.CreatePKAssociationEndName (PkTable.LocalName.Value);  		var principalMultiplicity = IsNullableFk ? ModelConstants.Multiplicity_ZeroOrOne : ModelConstants.Multiplicity_One;  		var updatedDependentRoleName = ModelHelper.CreateFKAssociationEndName (FkTable.LocalName.Value);  		var dependentMultiplicity = DoesFkFormPk ? ModelConstants.Multiplicity_ZeroOrOne : ModelConstants.Multiplicity_Many;  		if (string.Compare (principal.Role.Value' updatedPrincipalRoleName' StringComparison.Ordinal) != 0) {  			principal.Role.Value = updatedPrincipalRoleName;  		}  		if (string.Compare (dependent.Role.Value' updatedDependentRoleName' StringComparison.Ordinal) != 0) {  			dependent.Role.Value = updatedDependentRoleName;  		}  		principal.Type.SetRefName (PkTable);  		dependent.Type.SetRefName (FkTable);  		if (string.Compare (principal.Multiplicity.Value' principalMultiplicity' StringComparison.Ordinal) != 0) {  			principal.Multiplicity.Value = principalMultiplicity;  		}  		if (string.Compare (dependent.Multiplicity.Value' dependentMultiplicity' StringComparison.Ordinal) != 0) {  			dependent.Multiplicity.Value = dependentMultiplicity;  		}  	}  	Association = association;  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateStorageAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateStorageAssociationCommand.cs,InvokeInternal,The following statement contains a magic number: Debug.Assert (association.AssociationEnds ().Count == 2' "Association element is invalid' it should always have exactly 2 ends");  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,CreateOrUpdateStorageAssociationCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateOrUpdateStorageAssociationCommand.cs,InvokeInternal,The following statement contains a magic number: if (association.AssociationEnds ().Count == 2) {  	AssociationEnd principal;  	AssociationEnd dependent;  	ModelHelper.DeterminePrincipalDependentAssociationEnds (association' out principal' out dependent' ModelHelper.DeterminePrincipalDependentAssociationEndsScenario.CreateForeignKeyProperties);  	var updatedPrincipalRoleName = ModelHelper.CreatePKAssociationEndName (PkTable.LocalName.Value);  	var principalMultiplicity = IsNullableFk ? ModelConstants.Multiplicity_ZeroOrOne : ModelConstants.Multiplicity_One;  	var updatedDependentRoleName = ModelHelper.CreateFKAssociationEndName (FkTable.LocalName.Value);  	var dependentMultiplicity = DoesFkFormPk ? ModelConstants.Multiplicity_ZeroOrOne : ModelConstants.Multiplicity_Many;  	if (string.Compare (principal.Role.Value' updatedPrincipalRoleName' StringComparison.Ordinal) != 0) {  		principal.Role.Value = updatedPrincipalRoleName;  	}  	if (string.Compare (dependent.Role.Value' updatedDependentRoleName' StringComparison.Ordinal) != 0) {  		dependent.Role.Value = updatedDependentRoleName;  	}  	principal.Type.SetRefName (PkTable);  	dependent.Type.SetRefName (FkTable);  	if (string.Compare (principal.Multiplicity.Value' principalMultiplicity' StringComparison.Ordinal) != 0) {  		principal.Multiplicity.Value = principalMultiplicity;  	}  	if (string.Compare (dependent.Multiplicity.Value' dependentMultiplicity' StringComparison.Ordinal) != 0) {  		dependent.Multiplicity.Value = dependentMultiplicity;  	}  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The following statement contains a magic number: foreach (var assocInTempArtifact in associationsToBeAdded) {  	if (assocInTempArtifact.AssociationEnds ().Count != 2) {  		throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationWrongNumberEnds' assocInTempArtifact.ToPrettyString ()' assocInTempArtifact.AssociationEnds ().Count));  	}  	// find the EntityType targets of the AssociationEnds in the temp artifact  	var end1InTempArtifact = assocInTempArtifact.AssociationEnds () [0];  	var end1EntityTypeInTempArtifact = end1InTempArtifact.Type.Target as ConceptualEntityType;  	if (null == end1EntityTypeInTempArtifact) {  		throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationEndNoTarget' end1InTempArtifact.ToPrettyString ()));  	}  	var end2InTempArtifact = assocInTempArtifact.AssociationEnds () [1];  	var end2EntityTypeInTempArtifact = end2InTempArtifact.Type.Target as ConceptualEntityType;  	if (null == end2EntityTypeInTempArtifact) {  		throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationEndNoTarget' end2InTempArtifact.ToPrettyString ()));  	}  	// locate the NavigationProperties for each AssociationEnd in the temp artifact  	var navProp1InTempArtifact = ModelHelper.FindNavigationPropertyForAssociationEnd (end1EntityTypeInTempArtifact' end1InTempArtifact);  	if (null == navProp1InTempArtifact) {  		throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationNoMatchingNavProp' end1EntityTypeInTempArtifact.ToPrettyString ()' end1InTempArtifact.ToPrettyString ()));  	}  	var navProp2InTempArtifact = ModelHelper.FindNavigationPropertyForAssociationEnd (end2EntityTypeInTempArtifact' end2InTempArtifact);  	if (null == navProp2InTempArtifact) {  		throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationNoMatchingNavProp' end2EntityTypeInTempArtifact.ToPrettyString ()' end2InTempArtifact.ToPrettyString ()));  	}  	// find the EntityTypes in the existing model which match end1EntityType & end2EntityType  	var end1EntityTypeInExistingArtifact = FindMatchingConceptualEntityTypeInExistingArtifact (end1EntityTypeInTempArtifact' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact);  	var end2EntityTypeInExistingArtifact = FindMatchingConceptualEntityTypeInExistingArtifact (end2EntityTypeInTempArtifact' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact);  	if (null == end1EntityTypeInExistingArtifact || null == end2EntityTypeInExistingArtifact) {  		// if there is no matching EntityType in the existing model  		// this means the user has deleted that EntityType in the  		// existing artifact in which case skip the attempt to   		// create the C-Side Association and its mapping  		continue;  	}  	// attempt to clone the Association' ReferentialConstraint (if available)'   	// AssociationSet and AssociationSetMapping from the temp artifact  	CloneAssociation (cpc' existingArtifact' assocInTempArtifact' end1InTempArtifact' end2InTempArtifact' navProp1InTempArtifact' navProp2InTempArtifact' end1EntityTypeInExistingArtifact' end2EntityTypeInExistingArtifact' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact);  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,AddNewConceptualAssociationsFromArtifact,The following statement contains a magic number: if (assocInTempArtifact.AssociationEnds ().Count != 2) {  	throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationWrongNumberEnds' assocInTempArtifact.ToPrettyString ()' assocInTempArtifact.AssociationEnds ().Count));  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,HasBeenReplacedByInheritanceOrSplitEntity,The following statement contains a magic number: if (2 != assoc.AssociationEnds ().Count) {  	Debug.Fail ("Received incorrect number of AssociationEnds (" + assoc.AssociationEnds ().Count + ") for Association " + assoc.ToPrettyString () + " should be 2.");  	return false;  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociationSetMapping,The following statement contains a magic number: if (2 != existingAssocSetEnds.Length) {  	throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingWrongNumberAssociationSetEnds' existingAssociationSet.ToPrettyString ()' existingAssocSetEnds.Length));  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociationSetMapping,The following statement contains a magic number: if (2 != endsToClone.Length) {  	throw new UpdateModelFromDatabaseException (string.Format (CultureInfo.CurrentCulture' Resources.UpdateFromDatabaseAssociationSetMappingWrongNumberAssociationSetEnds' existingAssociationSet.ToPrettyString ()' existingAssocSetEnds.Length));  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,UpdateConceptualAndMappingModelsCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\UpdateConceptualAndMappingModelsCommand.cs,CloneAssociationSetMapping,The following statement contains a magic number: for (var i = 0; i < 2; i++) {  	var aseInExistingArtifact = existingAssocSetEnds [i];  	var endToClone = endsToClone [i];  	CloneEndProperty (cpc' endToClone' asmInExistingArtifact' aseInExistingArtifact' tempArtifactCEntityTypeToNewCEntityTypeInExistingArtifact);  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,ChangeNavigationPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeNavigationPropertyCommand.cs,InvokeInternal,The following statement contains a magic number: if (_association != null) {  	if (_end1 == null || _end2 == null) {  		var associationEnds = _association.AssociationEnds ();  		Debug.Assert (associationEnds.Count < 3' "AssociationEnds are >= 3");  		_end1 = associationEnds.Where (r => r.Type != null && r.Type.Status == BindingStatus.Known && r.Type.Target == _property.Parent).FirstOrDefault ();  		_end2 = associationEnds.Where (r => r.Type != null && r.Type.Status == BindingStatus.Known && ((r.Type.Target != _property.Parent) || (r.Type.Target == _property.Parent && r != _end1))).FirstOrDefault ();  	}  	// updating association's multiplicity value as opposed to multiplicity itself.  	if (string.IsNullOrEmpty (_multiplicity) && _end2 != null) {  		_multiplicity = _end2.Multiplicity.Value;  	}  }  else {  	// resets end points when we get a null association  	_end1 = null;  	_end2 = null;  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,ChangeNavigationPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeNavigationPropertyCommand.cs,InvokeInternal,The following statement contains a magic number: if (_end1 == null || _end2 == null) {  	var associationEnds = _association.AssociationEnds ();  	Debug.Assert (associationEnds.Count < 3' "AssociationEnds are >= 3");  	_end1 = associationEnds.Where (r => r.Type != null && r.Type.Status == BindingStatus.Known && r.Type.Target == _property.Parent).FirstOrDefault ();  	_end2 = associationEnds.Where (r => r.Type != null && r.Type.Status == BindingStatus.Known && ((r.Type.Target != _property.Parent) || (r.Type.Target == _property.Parent && r != _end1))).FirstOrDefault ();  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Commands,ChangeNavigationPropertyCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\ChangeNavigationPropertyCommand.cs,InvokeInternal,The following statement contains a magic number: Debug.Assert (associationEnds.Count < 3' "AssociationEnds are >= 3");  
Magic Number,Microsoft.Data.Entity.Design.Model,MetadataConverterDriver,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\MetadataConverterDriver.cs,GetConverterHandler,The following statement contains a magic number: if (sourceSchemaVersion == null || targetSchemaVersion == null) {  	return null;  }  // if the versions are equal' no conversion will take place  else if (sourceSchemaVersion == targetSchemaVersion) {  	return null;  }  else {  	// check the cache first  	// the key should be Source schema Version + target Schema Version  	var key = String.Format (CultureInfo.InvariantCulture' "{0}{1}"' sourceSchemaVersion.ToString (2)' targetSchemaVersion.ToString (2));  	if (!_handlers.ContainsKey (key)) {  		_handlers [key] = CreateConverterHandler (sourceSchemaVersion' targetSchemaVersion);  	}  	return _handlers [key];  }  
Magic Number,Microsoft.Data.Entity.Design.Model,MetadataConverterDriver,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\MetadataConverterDriver.cs,GetConverterHandler,The following statement contains a magic number: if (sourceSchemaVersion == null || targetSchemaVersion == null) {  	return null;  }  // if the versions are equal' no conversion will take place  else if (sourceSchemaVersion == targetSchemaVersion) {  	return null;  }  else {  	// check the cache first  	// the key should be Source schema Version + target Schema Version  	var key = String.Format (CultureInfo.InvariantCulture' "{0}{1}"' sourceSchemaVersion.ToString (2)' targetSchemaVersion.ToString (2));  	if (!_handlers.ContainsKey (key)) {  		_handlers [key] = CreateConverterHandler (sourceSchemaVersion' targetSchemaVersion);  	}  	return _handlers [key];  }  
Magic Number,Microsoft.Data.Entity.Design.Model,MetadataConverterDriver,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\MetadataConverterDriver.cs,GetConverterHandler,The following statement contains a magic number: if (sourceSchemaVersion == targetSchemaVersion) {  	return null;  }  else {  	// check the cache first  	// the key should be Source schema Version + target Schema Version  	var key = String.Format (CultureInfo.InvariantCulture' "{0}{1}"' sourceSchemaVersion.ToString (2)' targetSchemaVersion.ToString (2));  	if (!_handlers.ContainsKey (key)) {  		_handlers [key] = CreateConverterHandler (sourceSchemaVersion' targetSchemaVersion);  	}  	return _handlers [key];  }  
Magic Number,Microsoft.Data.Entity.Design.Model,MetadataConverterDriver,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\MetadataConverterDriver.cs,GetConverterHandler,The following statement contains a magic number: if (sourceSchemaVersion == targetSchemaVersion) {  	return null;  }  else {  	// check the cache first  	// the key should be Source schema Version + target Schema Version  	var key = String.Format (CultureInfo.InvariantCulture' "{0}{1}"' sourceSchemaVersion.ToString (2)' targetSchemaVersion.ToString (2));  	if (!_handlers.ContainsKey (key)) {  		_handlers [key] = CreateConverterHandler (sourceSchemaVersion' targetSchemaVersion);  	}  	return _handlers [key];  }  
Magic Number,Microsoft.Data.Entity.Design.Model,VersionConverterHandler,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\MetadataConverter\VersionConverterHandler.cs,DoHandleConversion,The following statement contains a magic number: doc.DocumentElement.SetAttribute ("Version"' _targetSchemaVersion.ToString (2));  
Magic Number,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetUniqueNameWithNumber,The following statement contains a magic number: for (var i = 2; i <= childCountPlusOne; ++i) {  	if (IsUniqueName (type' item' uniqueName' false' out msg)) {  		break;  	}  	uniqueName = defaultName + i;  }  
Magic Number,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetMaxLengthFacetValue,The following statement contains a magic number: if (columnSize != null) {  	// Decide whether to return "Max" or the columnSize parameter value.  	// Ideally we just need to check if columnSize value is equal to Int32.MaxValue; but unfortunately this does not work for some DB unicode types for example NText.  	// For NText and other unicode type' if the columnSize is Int32.MaxValue/2' MaxLength should be set to "Max".  	// I think it is pretty safe to assume if the columnSize >= Int32.MaxValue/2 then set the MaxLength to "Max" since in SQL Server you could not set column size to be greater than 8000.  	if (columnSize >= (Int32.MaxValue / 2)) {  		maxSize = Property.MaxLengthMaxValueObject;  	}  	else {  		maxSize = new StringOrPrimitive<uint> (columnSize.Value);  	}  }  
Magic Number,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetMaxLengthFacetValue,The following statement contains a magic number: if (columnSize >= (Int32.MaxValue / 2)) {  	maxSize = Property.MaxLengthMaxValueObject;  }  else {  	maxSize = new StringOrPrimitive<uint> (columnSize.Value);  }  
Magic Number,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetMaxLengthFacetText,The following statement contains a magic number: if (columnSize == null) {  	return String.Empty;  }  // Decide whether to return "Max" or the columnSize parameter value.  // Ideally we just need to check if columnSize value is equal to Int32.MaxValue; but unfortunately this does not work for some DB unicode types for example NText.  // For NText and other unicode type' if the columnSize is Int32.MaxValue/2' MaxLength should be set to "Max".  // I think it is pretty safe to assume if the columnSize >= Int32.MaxValue/2 then set the MaxLength to "Max" since in SQL Server you could not set a column size to be greater than 8000.  else if (columnSize >= (Int32.MaxValue / 2)) {  	return Property.MaxLengthMaxValue;  }  else {  	return columnSize.ToString ();  }  
Magic Number,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetMaxLengthFacetText,The following statement contains a magic number: if (columnSize >= (Int32.MaxValue / 2)) {  	return Property.MaxLengthMaxValue;  }  else {  	return columnSize.ToString ();  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Entity,AssociationClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\AssociationClipboardFormat.cs,AssociationClipboardFormat,The following statement contains a magic number: Debug.Assert (associationEnds.Count == 2' String.Format (CultureInfo.CurrentCulture' "Invalid AssocationEnd counts for Assocation {0}"' association.DisplayName));  
Magic Number,Microsoft.Data.Entity.Design.Model.Entity,AssociationClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\AssociationClipboardFormat.cs,AssociationClipboardFormat,The following statement contains a magic number: if (associationEnds.Count == 2) {  	_multiplicity1 = associationEnds [0].Multiplicity.Value;  	_multiplicity2 = associationEnds [1].Multiplicity.Value;  	_associationEndRole1 = associationEnds [0].Role.Value;  	_associationEndRole2 = associationEnds [1].Role.Value;  	if (association.ReferentialConstraint != null) {  		_referentialConstraint = new ReferentialConstraintClipboardFormat (association.ReferentialConstraint);  	}  }  else {  	_multiplicity1 = String.Empty;  	_multiplicity2 = String.Empty;  	_associationEndRole1 = String.Empty;  	_associationEndRole2 = String.Empty;  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Entity,EntitiesClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntitiesClipboardFormat.cs,InitializeAssociationAndInheritanceClipboardObjects,The following statement contains a magic number: foreach (var association in associations) {  	var associationEnds = association.AssociationEnds ();  	if (associationEnds.Count == 2 && associationEnds [0].Type.Status == BindingStatus.Known && associationEnds [1].Type.Status == BindingStatus.Known) {  		// add contained associations only  		EntityTypeClipboardFormat clipboardEntity1' clipboardEntity2;  		if (entitiesMap.TryGetValue (associationEnds [0].Type.Target' out clipboardEntity1) && entitiesMap.TryGetValue (associationEnds [1].Type.Target' out clipboardEntity2)) {  			_associations.Add (new AssociationClipboardFormat (association' clipboardEntity1' clipboardEntity2));  		}  	}  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Entity,EntitiesClipboardFormat,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\EntitiesClipboardFormat.cs,InitializeAssociationAndInheritanceClipboardObjects,The following statement contains a magic number: if (associationEnds.Count == 2 && associationEnds [0].Type.Status == BindingStatus.Known && associationEnds [1].Type.Status == BindingStatus.Known) {  	// add contained associations only  	EntityTypeClipboardFormat clipboardEntity1' clipboardEntity2;  	if (entitiesMap.TryGetValue (associationEnds [0].Type.Target' out clipboardEntity1) && entitiesMap.TryGetValue (associationEnds [1].Type.Target' out clipboardEntity2)) {  		_associations.Add (new AssociationClipboardFormat (association' clipboardEntity1' clipboardEntity2));  	}  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Entity,PropertyRefContainer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyRefContainer.cs,GetPropertyRefsAsString,The following statement contains a magic number: if (_propertyRefs.Count == 0) {  	return String.Empty;  }  else {  	var sb = new StringBuilder ();  	foreach (var pr in _propertyRefs) {  		sb.Append (pr.Name.RefName + "' ");  	}  	// remove last comma  	sb = sb.Remove (sb.Length - 2' 2);  	return sb.ToString ();  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Entity,PropertyRefContainer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyRefContainer.cs,GetPropertyRefsAsString,The following statement contains a magic number: if (_propertyRefs.Count == 0) {  	return String.Empty;  }  else {  	var sb = new StringBuilder ();  	foreach (var pr in _propertyRefs) {  		sb.Append (pr.Name.RefName + "' ");  	}  	// remove last comma  	sb = sb.Remove (sb.Length - 2' 2);  	return sb.ToString ();  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Entity,PropertyRefContainer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyRefContainer.cs,GetPropertyRefsAsString,The following statement contains a magic number: sb = sb.Remove (sb.Length - 2' 2);  
Magic Number,Microsoft.Data.Entity.Design.Model.Entity,PropertyRefContainer,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\PropertyRefContainer.cs,GetPropertyRefsAsString,The following statement contains a magic number: sb = sb.Remove (sb.Length - 2' 2);  
Magic Number,Microsoft.Data.Entity.Design.Model.Entity,Association,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Entity\Association.cs,IsMultiplicity,The following statement contains a magic number: Debug.Assert (AssociationEnds ().Count <= 2' "Found more than two association ends for association");  
Magic Number,Microsoft.Data.Entity.Design.Model.Integrity,CreateForeignKeyProperties,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\CreateForeignKeyProperties.cs,Invoke,The following statement contains a magic number: Debug.Assert (_association.AssociationEnds ().Count == 2' "The association to be processed does not have 2 ends while trying to create foreign key properties");  
Magic Number,Microsoft.Data.Entity.Design.Model.Integrity,CreateForeignKeyProperties,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\CreateForeignKeyProperties.cs,AddRule,The following statement contains a magic number: Debug.Assert (association.AssociationEnds ().Count == 2' "association.AssociationEnds().Count(" + association.AssociationEnds ().Count + ") should be 2");  
Magic Number,Microsoft.Data.Entity.Design.Model.Integrity,EnforceAssociationSetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceAssociationSetMappingRules.cs,Invoke,The following statement contains a magic number: Debug.Assert (ends.Count == 2' "AssociationSetMapping's Association does not have 2 ends.");  
Magic Number,Microsoft.Data.Entity.Design.Model.Integrity,EnforceAssociationSetMappingRules,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\EnforceAssociationSetMappingRules.cs,Invoke,The following statement contains a magic number: if (ends.Count < 2) {  	return;  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,Invoke,The following statement contains a magic number: Debug.Assert (_association.AssociationEnds ().Count == 2' "The association to be processed does not have 2 ends while trying to infer ref constraints");  
Magic Number,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,Invoke,The following statement contains a magic number: if (principal != null && principal.Type.Target != null && dependent != null && dependent.Type.Target != null) {  	var associationSet = _association.AssociationSet;  	if (associationSet != null) {  		var asm = associationSet.AssociationSetMapping;  		if (asm != null && asm.EndProperties ().Count == 2) {  			// any commonly mapped properties will be loaded into these HashSets  			var principalPropertyRefs = new HashSet<Property> ();  			var dependentPropertyRefs = new HashSet<Property> ();  			EndProperty dependentEndProperty = null;  			EndProperty principalEndProperty = null;  			var endProp1 = asm.EndProperties () [0];  			var endProp2 = asm.EndProperties () [1];  			if (endProp1.Name.Target != null) {  				if (endProp1.Name.Target.Role.Target == dependent) {  					dependentEndProperty = endProp1;  					principalEndProperty = endProp2;  				}  				else {  					dependentEndProperty = endProp2;  					principalEndProperty = endProp1;  				}  			}  			Debug.Assert (dependentEndProperty != null && principalEndProperty != null' "Either dependent or principal EndProperty is null");  			if (dependentEndProperty != null && principalEndProperty != null) {  				// for each column that is mapped to a key property on the dependent end' determine if there is a   				// key property on the principal end that it is also mapped to. If there is' then we need a  				// ReferentialConstraint  				foreach (var dependentScalarProp in dependentEndProperty.ScalarProperties ()) {  					var principalScalarProp = principalEndProperty.ScalarProperties ().FirstOrDefault (psp => psp.ColumnName.Target == dependentScalarProp.ColumnName.Target);  					if (principalScalarProp != null) {  						principalPropertyRefs.Add (principalScalarProp.Name.Target);  						dependentPropertyRefs.Add (dependentScalarProp.Name.Target);  					}  				}  				Debug.Assert (principalPropertyRefs.Count == dependentPropertyRefs.Count' "List of keys are mismatched while trying to create a Ref Constraint");  				if (principalPropertyRefs.Count > 0 && dependentPropertyRefs.Count > 0 && principalPropertyRefs.Count == dependentPropertyRefs.Count) {  					// if the propertyRefs sets have any data in them' add the constraint  					var cmd = new CreateReferentialConstraintCommand (principal' dependent' principalPropertyRefs' dependentPropertyRefs);  					CommandProcessor.InvokeSingleCommand (_context' cmd);  				}  			}  		}  	}  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,Invoke,The following statement contains a magic number: if (associationSet != null) {  	var asm = associationSet.AssociationSetMapping;  	if (asm != null && asm.EndProperties ().Count == 2) {  		// any commonly mapped properties will be loaded into these HashSets  		var principalPropertyRefs = new HashSet<Property> ();  		var dependentPropertyRefs = new HashSet<Property> ();  		EndProperty dependentEndProperty = null;  		EndProperty principalEndProperty = null;  		var endProp1 = asm.EndProperties () [0];  		var endProp2 = asm.EndProperties () [1];  		if (endProp1.Name.Target != null) {  			if (endProp1.Name.Target.Role.Target == dependent) {  				dependentEndProperty = endProp1;  				principalEndProperty = endProp2;  			}  			else {  				dependentEndProperty = endProp2;  				principalEndProperty = endProp1;  			}  		}  		Debug.Assert (dependentEndProperty != null && principalEndProperty != null' "Either dependent or principal EndProperty is null");  		if (dependentEndProperty != null && principalEndProperty != null) {  			// for each column that is mapped to a key property on the dependent end' determine if there is a   			// key property on the principal end that it is also mapped to. If there is' then we need a  			// ReferentialConstraint  			foreach (var dependentScalarProp in dependentEndProperty.ScalarProperties ()) {  				var principalScalarProp = principalEndProperty.ScalarProperties ().FirstOrDefault (psp => psp.ColumnName.Target == dependentScalarProp.ColumnName.Target);  				if (principalScalarProp != null) {  					principalPropertyRefs.Add (principalScalarProp.Name.Target);  					dependentPropertyRefs.Add (dependentScalarProp.Name.Target);  				}  			}  			Debug.Assert (principalPropertyRefs.Count == dependentPropertyRefs.Count' "List of keys are mismatched while trying to create a Ref Constraint");  			if (principalPropertyRefs.Count > 0 && dependentPropertyRefs.Count > 0 && principalPropertyRefs.Count == dependentPropertyRefs.Count) {  				// if the propertyRefs sets have any data in them' add the constraint  				var cmd = new CreateReferentialConstraintCommand (principal' dependent' principalPropertyRefs' dependentPropertyRefs);  				CommandProcessor.InvokeSingleCommand (_context' cmd);  			}  		}  	}  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,Invoke,The following statement contains a magic number: if (asm != null && asm.EndProperties ().Count == 2) {  	// any commonly mapped properties will be loaded into these HashSets  	var principalPropertyRefs = new HashSet<Property> ();  	var dependentPropertyRefs = new HashSet<Property> ();  	EndProperty dependentEndProperty = null;  	EndProperty principalEndProperty = null;  	var endProp1 = asm.EndProperties () [0];  	var endProp2 = asm.EndProperties () [1];  	if (endProp1.Name.Target != null) {  		if (endProp1.Name.Target.Role.Target == dependent) {  			dependentEndProperty = endProp1;  			principalEndProperty = endProp2;  		}  		else {  			dependentEndProperty = endProp2;  			principalEndProperty = endProp1;  		}  	}  	Debug.Assert (dependentEndProperty != null && principalEndProperty != null' "Either dependent or principal EndProperty is null");  	if (dependentEndProperty != null && principalEndProperty != null) {  		// for each column that is mapped to a key property on the dependent end' determine if there is a   		// key property on the principal end that it is also mapped to. If there is' then we need a  		// ReferentialConstraint  		foreach (var dependentScalarProp in dependentEndProperty.ScalarProperties ()) {  			var principalScalarProp = principalEndProperty.ScalarProperties ().FirstOrDefault (psp => psp.ColumnName.Target == dependentScalarProp.ColumnName.Target);  			if (principalScalarProp != null) {  				principalPropertyRefs.Add (principalScalarProp.Name.Target);  				dependentPropertyRefs.Add (dependentScalarProp.Name.Target);  			}  		}  		Debug.Assert (principalPropertyRefs.Count == dependentPropertyRefs.Count' "List of keys are mismatched while trying to create a Ref Constraint");  		if (principalPropertyRefs.Count > 0 && dependentPropertyRefs.Count > 0 && principalPropertyRefs.Count == dependentPropertyRefs.Count) {  			// if the propertyRefs sets have any data in them' add the constraint  			var cmd = new CreateReferentialConstraintCommand (principal' dependent' principalPropertyRefs' dependentPropertyRefs);  			CommandProcessor.InvokeSingleCommand (_context' cmd);  		}  	}  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Integrity,InferReferentialConstraints,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Integrity\InferReferentialContraints.cs,AddRule,The following statement contains a magic number: Debug.Assert (association.AssociationEnds ().Count == 2' "association.AssociationEnds().Count(" + association.AssociationEnds ().Count + ") should be 2");  
Magic Number,Microsoft.Data.Entity.Design.Model.Validation,EscherAttributeContentValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\EscherAttributeContentValidator.cs,GetInstance,The following statement contains a magic number: if (_instances == null) {  	_instances = new Dictionary<Version' EscherAttributeContentValidator> (3);  }  
Magic Number,Microsoft.Data.Entity.Design.Model.Validation,EscherAttributeContentValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\EscherAttributeContentValidator.cs,GetInstance,The following statement contains a magic number: _instances = new Dictionary<Version' EscherAttributeContentValidator> (3);  
Magic Number,Microsoft.Data.Entity.Design.Model.Validation,EscherAttributeContentValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\EscherAttributeContentValidator.cs,IsValidCsdlNamespaceName,The following statement contains a magic number: return modelNamespace.Length <= 512 && IsValidXmlAttributeValue (modelNamespace) && QualifiedNameRegex.IsMatch (modelNamespace);  
Magic Number,Microsoft.Data.Entity.Design.Model.Validation,EscherAttributeContentValidator,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Validation\EscherAttributeContentValidator.cs,IsValidCsdlSimpleIdentifier,The following statement contains a magic number: return identifier.Length <= 480 && IsValidXmlAttributeValue (identifier) && SimpleIdentifierRegex.IsMatch (identifier);  
Magic Number,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationIdentityForAssociationSetMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationIdentityForAssociationSetMapping.cs,Equals,The following statement contains a magic number: if (thisEndCount != objAsAssocIdentity.EndCount) {  	return false;  }  else if (thisEndCount == 2) {  	if (_ends [0].Equals (objAsAssocIdentity._ends [0]) && _ends [1].Equals (objAsAssocIdentity._ends [1])) {  		return true;  	}  	else if (_ends [0].Equals (objAsAssocIdentity._ends [1]) && _ends [1].Equals (objAsAssocIdentity._ends [0])) {  		return true;  	}  	else {  		return false;  	}  }  else if (thisEndCount == 1) {  	if (_ends [0].Equals (objAsAssocIdentity._ends [0])) {  		return true;  	}  }  else if (thisEndCount == 0) {  	return true;  }  else {  	Debug.Assert (_ends [1] == null' "unexpected end count number " + thisEndCount + " for " + TraceString ());  	return false;  }  
Magic Number,Microsoft.Data.Entity.Design.Model.UpdateFromDatabase,AssociationIdentityForAssociationSetMapping,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\UpdateFromDatabase\AssociationIdentityForAssociationSetMapping.cs,Equals,The following statement contains a magic number: if (thisEndCount == 2) {  	if (_ends [0].Equals (objAsAssocIdentity._ends [0]) && _ends [1].Equals (objAsAssocIdentity._ends [1])) {  		return true;  	}  	else if (_ends [0].Equals (objAsAssocIdentity._ends [1]) && _ends [1].Equals (objAsAssocIdentity._ends [0])) {  		return true;  	}  	else {  		return false;  	}  }  else if (thisEndCount == 1) {  	if (_ends [0].Equals (objAsAssocIdentity._ends [0])) {  		return true;  	}  }  else if (thisEndCount == 0) {  	return true;  }  else {  	Debug.Assert (_ends [1] == null' "unexpected end count number " + thisEndCount + " for " + TraceString ());  	return false;  }  
Missing Default,Microsoft.Data.Entity.Design.Model.Commands,CreateAssociationSetCommand,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\Commands\CreateAssociationSetCommand.cs,InvokeInternal,The following switch statement is missing a default case: switch (CommandModelSpace) {  case ModelSpace.Conceptual:  	entityContainer = artifact.ConceptualModel ().FirstEntityContainer;  	break;  case ModelSpace.Storage:  	entityContainer = artifact.StorageModel ().FirstEntityContainer;  	break;  }  
Missing Default,Microsoft.Data.Entity.Design.Model,ModelHelper,C:\repos\EdocGroup_efprime\src\EFTools\EntityDesignModel\ModelHelper.cs,GetEntityModel,The following switch statement is missing a default case: switch (modelSpace) {  case Command.ModelSpace.Conceptual:  	return artifact.ConceptualModel ();  case Command.ModelSpace.Storage:  	return artifact.StorageModel ();  }  
