Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,Sort,Cyclomatic complexity of the method is 10
Long Parameter List,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CodeGen,The method has 5 parameters.
Long Parameter List,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,GenerateAsync,The method has 5 parameters.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,GenerateAsync,The length of the statement  "	this.inputDeclarations = this.semanticModel.GetDeclarationsInSpan (TextSpan.FromBounds (0' this.semanticModel.SyntaxTree.Length)' true' this.cancellationToken); " is 160.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,GenerateAsync,The length of the statement  "	var partialClass = SyntaxFactory.ClassDeclaration (applyTo.Identifier).AddModifiers (SyntaxFactory.Token (SyntaxKind.PartialKeyword)).WithMembers (SyntaxFactory.List (innerMembers)); " is 182.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,GenerateAsync,The length of the statement  "	partialClass = this.mergedFeatures.Aggregate (partialClass' (acc' feature) => feature.ProcessApplyToClassDeclaration (acc)); " is 124.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,GenerateAsync,The length of the statement  "	outerMembers = this.mergedFeatures.Aggregate (outerMembers' (acc' feature) => feature.ProcessFinalGeneratedResult (acc)); " is 121.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreatePropertyForField,The length of the statement  "	var xmldocComment = field.GetLeadingTrivia ().FirstOrDefault (t => t.IsKind (SyntaxKind.SingleLineDocumentationCommentTrivia)); " is 127.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreatePropertyForField,The length of the statement  "	var property = SyntaxFactory.PropertyDeclaration (field.Declaration.Type' variable.Identifier.ValueText.ToPascalCase ()).WithModifiers (SyntaxFactory.TokenList (SyntaxFactory.Token (SyntaxKind.PublicKeyword))).WithExpressionBody (SyntaxFactory.ArrowExpressionClause (// => this.fieldName " is 287.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreatePropertyForField,The length of the statement  "	SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' SyntaxFactory.ThisExpression ()' SyntaxFactory.IdentifierName (variable.Identifier)))).WithSemicolonToken (SyntaxFactory.Token (SyntaxKind.SemicolonToken)).WithLeadingTrivia (xmldocComment); " is 269.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,GetGenerationalMethodName,The length of the statement  "	return SyntaxFactory.IdentifierName (baseName.Identifier.ValueText + generation.ToString (CultureInfo.InvariantCulture)); " is 121.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,ReportDiagnostic,The length of the statement  "	new LocalizableResourceString (id' DiagnosticsStrings.ResourceManager' typeof(DiagnosticsStrings)' formattingArgs)' severity' severity' true' severity == DiagnosticSeverity.Warning ? 2 : 0' false' location: blamedSyntax.GetLocation ())); " is 237.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateDefaultInstanceField,The length of the statement  "	var field = SyntaxFactory.FieldDeclaration (SyntaxFactory.VariableDeclaration (SyntaxFactory.IdentifierName (this.applyTo.Identifier.ValueText)' SyntaxFactory.SingletonSeparatedList (SyntaxFactory.VariableDeclarator (DefaultInstanceFieldName.Identifier).WithInitializer (SyntaxFactory.EqualsValueClause (SyntaxFactory.InvocationExpression (GetDefaultTemplateMethodName' SyntaxFactory.ArgumentList ())))))).WithModifiers (SyntaxFactory.TokenList (SyntaxFactory.Token (SyntaxKind.PrivateKeyword)' SyntaxFactory.Token (SyntaxKind.StaticKeyword)' SyntaxFactory.Token (SyntaxKind.ReadOnlyKeyword))).WithAttributeLists (SyntaxFactory.SingletonList (SyntaxFactory.AttributeList (SyntaxFactory.SingletonSeparatedList (DebuggerBrowsableNeverAttribute)))); " is 746.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateCreateDefaultTemplatePartialMethod,The length of the statement  "	return SyntaxFactory.MethodDeclaration (SyntaxFactory.PredefinedType (SyntaxFactory.Token (SyntaxKind.VoidKeyword))' CreateDefaultTemplateMethodName.Identifier).WithParameterList (SyntaxFactory.ParameterList (SyntaxFactory.SingletonSeparatedList (SyntaxFactory.Parameter (SyntaxFactory.Identifier ("template")).WithType (NestedTemplateTypeName).WithModifiers (SyntaxFactory.TokenList (SyntaxFactory.Token (SyntaxKind.RefKeyword)))))).WithModifiers (SyntaxFactory.TokenList (SyntaxFactory.Token (SyntaxKind.StaticKeyword)' SyntaxFactory.Token (SyntaxKind.PartialKeyword))).WithSemicolonToken (SyntaxFactory.Token (SyntaxKind.SemicolonToken)); " is 641.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateGetDefaultTemplateMethod,The length of the statement  "	SyntaxFactory.LocalDeclarationStatement (SyntaxFactory.VariableDeclaration (varType' SyntaxFactory.SingletonSeparatedList (SyntaxFactory.VariableDeclarator (templateVarName.Identifier' null' SyntaxFactory.EqualsValueClause (SyntaxFactory.ObjectCreationExpression (NestedTemplateTypeName' SyntaxFactory.ArgumentList ()' null))))))' // CreateDefaultTemplate(ref template); " is 370.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateGetDefaultTemplateMethod,The length of the statement  "	SyntaxFactory.ExpressionStatement (SyntaxFactory.InvocationExpression (CreateDefaultTemplateMethodName' SyntaxFactory.ArgumentList (SyntaxFactory.SingletonSeparatedList (SyntaxFactory.Argument (null' SyntaxFactory.Token (SyntaxKind.RefKeyword)' templateVarName)))))' SyntaxFactory.ReturnStatement (SyntaxFactory.ObjectCreationExpression (SyntaxFactory.IdentifierName (applyTo.Identifier)' SyntaxFactory.ArgumentList (Syntax.JoinSyntaxNodes (SyntaxKind.CommaToken' ImmutableArray.Create (SyntaxFactory.Argument (SyntaxFactory.DefaultExpression (IdentityFieldTypeSyntax))).AddRange (this.applyToMetaType.AllFields.Select (f => SyntaxFactory.Argument (SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' templateVarName' SyntaxFactory.IdentifierName (f.Name.ToPascalCase ()))))).Add (SyntaxFactory.Argument (SyntaxFactory.NameColon (SkipValidationParameterName)' NoneToken' SyntaxFactory.LiteralExpression (SyntaxKind.TrueLiteralExpression)))))' null))); " is 978.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateGetDefaultTemplateMethod,The length of the statement  "	return SyntaxFactory.MethodDeclaration (SyntaxFactory.IdentifierName (applyTo.Identifier.ValueText)' GetDefaultTemplateMethodName.Identifier).WithModifiers (SyntaxFactory.TokenList (SyntaxFactory.Token (SyntaxKind.PrivateKeyword)' SyntaxFactory.Token (SyntaxKind.StaticKeyword))).WithBody (body); " is 296.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateTemplateStruct,The length of the statement  "	return SyntaxFactory.StructDeclaration (NestedTemplateTypeName.Identifier).WithMembers (SyntaxFactory.List<MemberDeclarationSyntax> (this.applyToMetaType.AllFields.Select (f => SyntaxFactory.FieldDeclaration (SyntaxFactory.VariableDeclaration (GetFullyQualifiedSymbolName (f.Type)' SyntaxFactory.SingletonSeparatedList (SyntaxFactory.VariableDeclarator (f.Name.ToPascalCase ())))).AddModifiers (SyntaxFactory.Token (SyntaxKind.InternalKeyword))))).AddModifiers (SyntaxFactory.Token (SyntaxKind.PrivateKeyword)).WithLeadingTrivia (SyntaxFactory.ElasticCarriageReturnLineFeed' SyntaxFactory.Trivia (SyntaxFactory.PragmaWarningDirectiveTrivia (SyntaxFactory.Token (SyntaxKind.DisableKeyword)' true).WithErrorCodes (SyntaxFactory.SingletonSeparatedList<ExpressionSyntax> (SyntaxFactory.LiteralExpression (SyntaxKind.NumericLiteralExpression' SyntaxFactory.Literal (0649).WithTrailingTrivia (SyntaxFactory.Space' SyntaxFactory.Comment ("// field initialization is optional in user code"))))).WithEndOfDirectiveToken (SyntaxFactory.Token (SyntaxFactory.TriviaList ()' SyntaxKind.EndOfDirectiveToken' SyntaxFactory.TriviaList (SyntaxFactory.ElasticCarriageReturnLineFeed))))).WithTrailingTrivia (SyntaxFactory.Trivia (SyntaxFactory.PragmaWarningDirectiveTrivia (SyntaxFactory.Token (SyntaxKind.RestoreKeyword)' true).WithErrorCodes (SyntaxFactory.SingletonSeparatedList<ExpressionSyntax> (SyntaxFactory.LiteralExpression (SyntaxKind.NumericLiteralExpression' SyntaxFactory.Literal (0649)))).WithEndOfDirectiveToken (SyntaxFactory.Token (SyntaxFactory.TriviaList ()' SyntaxKind.EndOfDirectiveToken' SyntaxFactory.TriviaList (SyntaxFactory.ElasticCarriageReturnLineFeed))))' SyntaxFactory.ElasticCarriageReturnLineFeed); " is 1711.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreatePublicCtors,The length of the statement  "		var thisArguments = this.CreateArgumentList (this.applyToMetaType.AllFields' ArgSource.ArgumentWithPascalCase).PrependArgument (SyntaxFactory.Argument (SyntaxFactory.InvocationExpression (NewIdentityMethodName' SyntaxFactory.ArgumentList ()))).AddArguments (SyntaxFactory.Argument (SyntaxFactory.NameColon (SkipValidationParameterName)' SyntaxFactory.Token (SyntaxKind.None)' SyntaxFactory.LiteralExpression (SyntaxKind.FalseLiteralExpression))); " is 446.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreatePublicCtors,The length of the statement  "		var ctor = SyntaxFactory.ConstructorDeclaration (this.applyTo.Identifier).AddModifiers (SyntaxFactory.Token (SyntaxKind.PublicKeyword)).WithParameterList (this.CreateParameterList (this.applyToMetaType.AllFields' ParameterStyle.Required' usePascalCasing: true)).AddAttributeLists (SyntaxFactory.AttributeList ().AddAttributes (ObsoletePublicCtor)).WithInitializer (SyntaxFactory.ConstructorInitializer (SyntaxKind.ThisConstructorInitializer' thisArguments)).WithBody (SyntaxFactory.Block ()); " is 492.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateNonPublicCtor,The length of the statement  "	this.GetFieldVariables ().Select (f => SyntaxFactory.ExpressionStatement (SyntaxFactory.AssignmentExpression (SyntaxKind.SimpleAssignmentExpression' Syntax.ThisDot (SyntaxFactory.IdentifierName (f.Value.Identifier))' SyntaxFactory.IdentifierName (f.Value.Identifier))))); " is 271.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateNonPublicCtor,The length of the statement  "		SyntaxFactory.ExpressionStatement (SyntaxFactory.AssignmentExpression (SyntaxKind.SimpleAssignmentExpression' Syntax.ThisDot (IdentityParameterName)' IdentityParameterName)))); " is 176.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateNonPublicCtor,The length of the statement  "		SyntaxFactory.IfStatement (SyntaxFactory.PrefixUnaryExpression (SyntaxKind.LogicalNotExpression' SkipValidationParameterName)' // this.Validate(); " is 146.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateNonPublicCtor,The length of the statement  "		SyntaxFactory.Block (SyntaxFactory.ExpressionStatement (SyntaxFactory.InvocationExpression (Syntax.ThisDot (ValidateMethodName)' SyntaxFactory.ArgumentList ()))))); " is 164.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateNonPublicCtor,The length of the statement  "	var ctor = SyntaxFactory.ConstructorDeclaration (this.applyTo.Identifier).WithParameterList (CreateParameterList (this.applyToMetaType.AllFields' ParameterStyle.Required).PrependParameter (RequiredIdentityParameter).AddParameters (SyntaxFactory.Parameter (SkipValidationParameterName.Identifier).WithType (SyntaxFactory.PredefinedType (SyntaxFactory.Token (SyntaxKind.BoolKeyword))))).WithBody (body); " is 401.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateNonPublicCtor,The length of the statement  "		ctor = ctor.WithInitializer (SyntaxFactory.ConstructorInitializer (SyntaxKind.BaseConstructorInitializer' this.CreateArgumentList (this.applyToMetaType.InheritedFields' ArgSource.Argument).PrependArgument (SyntaxFactory.Argument (SyntaxFactory.NameColon (IdentityParameterName)' NoneToken' IdentityParameterName)).AddArguments (SyntaxFactory.Argument (SyntaxFactory.NameColon (SkipValidationParameterName)' NoneToken' SkipValidationParameterName)))); " is 450.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateWithMethods,The length of the statement  "		var method = SyntaxFactory.MethodDeclaration (SyntaxFactory.IdentifierName (this.applyTo.Identifier)' GetGenerationalMethodName (WithMethodName' fieldsGroup.Key).Identifier).AddModifiers (SyntaxFactory.Token (SyntaxKind.PublicKeyword)).WithParameterList (CreateParameterList (fieldsGroup' ParameterStyle.Optional)).WithBody (SyntaxFactory.Block (SyntaxFactory.ReturnStatement (SyntaxFactory.CastExpression (SyntaxFactory.IdentifierName (this.applyTo.Identifier)' SyntaxFactory.InvocationExpression (Syntax.ThisDot (WithCoreMethodName)' this.CreateArgumentList (fieldsGroup' ArgSource.Argument)))))); " is 599.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateWithCoreMethods,The length of the statement  "		var method = SyntaxFactory.MethodDeclaration (SyntaxFactory.IdentifierName (this.applyTo.Identifier)' WithCoreMethodName.Identifier).WithParameterList (this.CreateParameterList (this.applyToMetaType.AllFields' ParameterStyle.Optional)); " is 236.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateWithCoreMethods,The length of the statement  "			method = method.AddModifiers (SyntaxFactory.Token (SyntaxKind.AbstractKeyword)).WithSemicolonToken (SyntaxFactory.Token (SyntaxKind.SemicolonToken)); " is 149.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateWithCoreMethods,The length of the statement  "			method = method.WithBody (SyntaxFactory.Block (SyntaxFactory.ReturnStatement (SyntaxFactory.InvocationExpression (Syntax.ThisDot (WithFactoryMethodName)' this.CreateArgumentList (this.applyToMetaType.AllFields' ArgSource.Argument' OptionalStyle.None).AddArguments (SyntaxFactory.Argument (SyntaxFactory.NameColon (IdentityParameterName)' NoneToken' Syntax.OptionalFor (Syntax.ThisDot (IdentityPropertyName)))))))); " is 414.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateWithCoreMethods,The length of the statement  "			var overrideMethod = SyntaxFactory.MethodDeclaration (SyntaxFactory.IdentifierName (ancestor.TypeSymbol.Name)' WithCoreMethodName.Identifier).AddModifiers (SyntaxFactory.Token (SyntaxKind.ProtectedKeyword)' SyntaxFactory.Token (SyntaxKind.OverrideKeyword)).WithParameterList (this.CreateParameterList (ancestor.AllFields' ParameterStyle.Optional)).WithBody (SyntaxFactory.Block (SyntaxFactory.ReturnStatement (SyntaxFactory.InvocationExpression (Syntax.ThisDot (WithFactoryMethodName)' this.CreateArgumentList (ancestor.AllFields' ArgSource.Argument))))); " is 555.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateWithFactoryMethod,The length of the statement  "	Func<IdentifierNameSyntax' IdentifierNameSyntax' ITypeSymbol' ExpressionSyntax> isChangedByNames = (propertyName' fieldName' fieldType) => fieldType == null || HasEqualityOperators (fieldType) ? (ExpressionSyntax)SyntaxFactory.ParenthesizedExpression (SyntaxFactory.BinaryExpression (SyntaxKind.LogicalAndExpression' Syntax.OptionalIsDefined (fieldName)' SyntaxFactory.BinaryExpression (SyntaxKind.NotEqualsExpression' Syntax.OptionalValue (fieldName)' Syntax.ThisDot (propertyName)))) : Syntax.OptionalIsDefined (fieldName); " is 525.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateWithFactoryMethod,The length of the statement  "	return SyntaxFactory.MethodDeclaration (SyntaxFactory.IdentifierName (this.applyTo.Identifier)' WithFactoryMethodName.Identifier).AddModifiers (SyntaxFactory.Token (SyntaxKind.PrivateKeyword)).WithParameterList (CreateParameterList (this.applyToMetaType.AllFields' ParameterStyle.Optional).AddParameters (OptionalIdentityParameter)).WithBody (SyntaxFactory.Block (SyntaxFactory.IfStatement (anyChangesExpression' SyntaxFactory.Block (// return new TemplateType(...) " is 465.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateWithFactoryMethod,The length of the statement  "	SyntaxFactory.ReturnStatement (SyntaxFactory.ObjectCreationExpression (SyntaxFactory.IdentifierName (applyTo.Identifier)' CreateArgumentList (this.applyToMetaType.AllFields' ArgSource.OptionalArgumentOrProperty).PrependArgument (SyntaxFactory.Argument (SyntaxFactory.NameColon (IdentityParameterName)' NoneToken' Syntax.OptionalGetValueOrDefault (SyntaxFactory.IdentifierName (IdentityParameterName.Identifier)' Syntax.ThisDot (IdentityPropertyName)))).AddArguments (DoNotSkipValidationArgument)' null)))' SyntaxFactory.ElseClause (SyntaxFactory.Block (SyntaxFactory.ReturnStatement (SyntaxFactory.ThisExpression ())))))); " is 622.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateCreateMethods,The length of the statement  "			SyntaxFactory.LocalDeclarationStatement (SyntaxFactory.VariableDeclaration (varType' SyntaxFactory.SingletonSeparatedList (SyntaxFactory.VariableDeclarator (IdentityParameterName.Identifier).WithInitializer (SyntaxFactory.EqualsValueClause (Syntax.OptionalFor (SyntaxFactory.InvocationExpression (NewIdentityMethodName' SyntaxFactory.ArgumentList ())))))))' SyntaxFactory.ReturnStatement (SyntaxFactory.InvocationExpression (SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' DefaultInstanceFieldName' WithFactoryMethodName)' CreateArgumentList (fieldsGroup' ArgSource.OptionalArgumentOrTemplate' asOptional: OptionalStyle.Always).AddArguments (SyntaxFactory.Argument (SyntaxFactory.NameColon (IdentityParameterName)' NoneToken' IdentityParameterName))))); " is 784.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateCreateMethods,The length of the statement  "		var method = SyntaxFactory.MethodDeclaration (SyntaxFactory.IdentifierName (applyTo.Identifier)' GetGenerationalMethodName (CreateMethodName' fieldsGroup.Key).Identifier).WithModifiers (SyntaxFactory.TokenList (SyntaxFactory.Token (SyntaxKind.PublicKeyword)' SyntaxFactory.Token (SyntaxKind.StaticKeyword))).WithParameterList (CreateParameterList (fieldsGroup' ParameterStyle.OptionalOrRequired)).WithBody (body); " is 413.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateCreateMethods,The length of the statement  "		if (this.applyToMetaType.Ancestors.Any (a => !a.TypeSymbol.IsAbstract && a.AllFieldsByGeneration.FirstOrDefault (g => g.Key == fieldsGroup.Key).Count () == fieldsGroup.Count ())) { " is 180.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateValidateMethod,The length of the statement  "	return SyntaxFactory.MethodDeclaration (SyntaxFactory.PredefinedType (SyntaxFactory.Token (SyntaxKind.VoidKeyword))' ValidateMethodName.Identifier).AddModifiers (SyntaxFactory.Token (SyntaxKind.PartialKeyword)).WithSemicolonToken (SyntaxFactory.Token (SyntaxKind.SemicolonToken)); " is 280.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateLastIdentityProducedField,The length of the statement  "	return SyntaxFactory.FieldDeclaration (SyntaxFactory.VariableDeclaration (SyntaxFactory.PredefinedType (SyntaxFactory.Token (SyntaxKind.IntKeyword))' SyntaxFactory.SingletonSeparatedList (SyntaxFactory.VariableDeclarator (LastIdentityProducedFieldName.Identifier)))).AddModifiers (SyntaxFactory.Token (SyntaxKind.PrivateKeyword)' SyntaxFactory.Token (SyntaxKind.StaticKeyword)); " is 378.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateIdentityField,The length of the statement  "	return SyntaxFactory.FieldDeclaration (SyntaxFactory.VariableDeclaration (IdentityFieldTypeSyntax' SyntaxFactory.SingletonSeparatedList (SyntaxFactory.VariableDeclarator (IdentityParameterName.Identifier)))).AddModifiers (SyntaxFactory.Token (SyntaxKind.PrivateKeyword)' SyntaxFactory.Token (SyntaxKind.ReadOnlyKeyword)).WithAttributeLists (SyntaxFactory.SingletonList (SyntaxFactory.AttributeList (SyntaxFactory.SingletonSeparatedList (DebuggerBrowsableNeverAttribute)))); " is 473.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateIdentityProperty,The length of the statement  "	var property = SyntaxFactory.PropertyDeclaration (IdentityFieldTypeSyntax' IdentityPropertyName.Identifier).AddModifiers (SyntaxFactory.Token (SyntaxKind.InternalKeyword)).WithExpressionBody (SyntaxFactory.ArrowExpressionClause (Syntax.ThisDot (IdentityParameterName))).WithSemicolonToken (SyntaxFactory.Token (SyntaxKind.SemicolonToken)); " is 339.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateNewIdentityMethod,The length of the statement  "	//     return (<#= templateType.RequiredIdentityField.TypeName #>)System.Threading.Interlocked.Increment(ref lastIdentityProduced); " is 131.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateNewIdentityMethod,The length of the statement  "	var method = SyntaxFactory.MethodDeclaration (IdentityFieldTypeSyntax' NewIdentityMethodName.Identifier).WithModifiers (SyntaxFactory.TokenList (SyntaxFactory.Token (SyntaxKind.StaticKeyword))).WithBody (SyntaxFactory.Block (SyntaxFactory.ReturnStatement (SyntaxFactory.CastExpression (IdentityFieldTypeSyntax' SyntaxFactory.InvocationExpression (SyntaxFactory.ParseName ("System.Threading.Interlocked.Increment")' SyntaxFactory.ArgumentList (SyntaxFactory.SingletonSeparatedList (SyntaxFactory.Argument (null' SyntaxFactory.Token (SyntaxKind.RefKeyword)' LastIdentityProducedFieldName)))))))); " is 594.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,GetFields,The length of the statement  "	return this.applyTo.ChildNodes ().OfType<FieldDeclarationSyntax> ().Where (f => f.Declaration.Variables.All (v => !IsFieldIgnored (this.semanticModel.GetDeclaredSymbol (v) as IFieldSymbol))); " is 191.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateParameterList,The length of the statement  "	Func<MetaField' bool> isOptional = f => style == ParameterStyle.Optional || (style == ParameterStyle.OptionalOrRequired && !f.IsRequired); " is 138.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateParameterList,The length of the statement  "	Func<ParameterSyntax' MetaField' ParameterSyntax> setTypeAndDefault = (p' f) => isOptional (f) ? Syntax.Optional (p.WithType (GetFullyQualifiedSymbolName (f.Type))) : p.WithType (GetFullyQualifiedSymbolName (f.Type)); " is 217.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateParameterList,The length of the statement  "	return SyntaxFactory.ParameterList (Syntax.JoinSyntaxNodes (SyntaxKind.CommaToken' fields.Select (f => setTypeAndDefault (SyntaxFactory.Parameter ((usePascalCasing ? f.NameAsProperty : f.NameAsField).Identifier)' f)))); " is 219.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateArgumentList,The length of the statement  "	Func<MetaField' ArgSource> fieldSource = f => (source == ArgSource.OptionalArgumentOrTemplate && f.IsRequired) ? ArgSource.Argument : source; " is 141.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateArgumentList,The length of the statement  "	Func<MetaField' bool> optionalWrap = f => asOptional != OptionalStyle.None && (asOptional == OptionalStyle.Always || !f.IsRequired); " is 132.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateArgumentList,The length of the statement  "			return Syntax.OptionalGetValueOrDefault (name' SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' DefaultInstanceFieldName' propertyName)); " is 167.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateArgumentList,The length of the statement  "	return SyntaxFactory.ArgumentList (Syntax.JoinSyntaxNodes (SyntaxKind.CommaToken' fields.Select (f => SyntaxFactory.Argument (SyntaxFactory.NameColon (SyntaxFactory.IdentifierName (f.Name))' NoneToken' Syntax.OptionalForIf (dereference (f)' optionalWrap (f)))))); " is 263.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,GetOptionArgumentSyntax,The length of the statement  "	var argument = attributeSyntax.ArgumentList.Arguments.FirstOrDefault (a => a.NameEquals.Name.Identifier.ValueText == parameterName); " is 132.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,GetMeaningfulConstructor,The length of the statement  "	return applyTo.Members.OfType<ConstructorDeclarationSyntax> ().Where (ctor => !ctor.Modifiers.Any (m => m.IsKind (SyntaxKind.PublicKeyword))).Single (); " is 152.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,GetFieldGeneration,The length of the statement  "	AttributeData attribute = fieldSymbol.GetAttributes ().SingleOrDefault (a => IsOrDerivesFrom<GenerationAttribute> (a.AttributeClass)); " is 134.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,GetFullyQualifiedSymbolName,The length of the statement  "		leafName = SyntaxFactory.GenericName (symbol.Name).WithTypeArgumentList (SyntaxFactory.TypeArgumentList (Syntax.JoinSyntaxNodes<TypeSyntax> (SyntaxKind.CommaToken' typeSymbol.TypeArguments.Select (GetFullyQualifiedSymbolName)))); " is 229.
Long Statement,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateIRecursiveParentOfTSyntax,The length of the statement  "	return SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (ImmutableObjectGraph))' SyntaxFactory.GenericName (SyntaxFactory.Identifier (nameof (IRecursiveParent<IRecursiveType>))' SyntaxFactory.TypeArgumentList (SyntaxFactory.SingletonSeparatedList<TypeSyntax> (recursiveType)))); " is 295.
Long Statement,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,Sort,The length of the statement  "						compareResult = string.Compare (firstName.Value.ValueText' secondName.Value.ValueText' StringComparison.CurrentCulture); " is 120.
Long Statement,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetModifiers,The length of the statement  "	SyntaxTokenList? modifiers = (member as BaseMethodDeclarationSyntax).Modifiers ?? (member as BasePropertyDeclarationSyntax).Modifiers ?? (member as BaseFieldDeclarationSyntax).Modifiers ?? (member as BaseTypeDeclarationSyntax).Modifiers; " is 237.
Long Statement,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetName,The length of the statement  "	var name = (member as MethodDeclarationSyntax).Identifier ?? (member as PropertyDeclarationSyntax).Identifier ?? (member as FieldDeclarationSyntax).Declaration.Variables.FirstOrDefault ().Identifier ?? (member as TypeDeclarationSyntax).Identifier; " is 247.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,Optional,The length of the statement  "	return parameter.WithType (OptionalOf (parameter.Type)).WithDefault (SyntaxFactory.EqualsValueClause (SyntaxFactory.DefaultExpression (OptionalOf (parameter.Type)))); " is 166.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,OptionalOf,The length of the statement  "	return SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (ImmutableObjectGraph))' SyntaxFactory.GenericName (SyntaxFactory.Identifier (nameof (Optional))' SyntaxFactory.TypeArgumentList (SyntaxFactory.SingletonSeparatedList (type)))); " is 250.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,OptionalIsDefined,The length of the statement  "	return SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' optionalOfTExpression' SyntaxFactory.IdentifierName (nameof (ImmutableObjectGraph.Optional<int>.IsDefined))); " is 195.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,OptionalGetValueOrDefault,The length of the statement  "	return SyntaxFactory.InvocationExpression (SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' optionalOfTExpression' SyntaxFactory.IdentifierName (nameof (ImmutableObjectGraph.Optional<int>.GetValueOrDefault)))' SyntaxFactory.ArgumentList (SyntaxFactory.SingletonSeparatedList (SyntaxFactory.Argument (defaultValue)))); " is 347.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,OptionalValue,The length of the statement  "	return SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' optionalOfTExpression' SyntaxFactory.IdentifierName (nameof (ImmutableObjectGraph.Optional<int>.Value))); " is 191.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,OptionalFor,The length of the statement  "	return SyntaxFactory.InvocationExpression (SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (ImmutableObjectGraph))' SyntaxFactory.IdentifierName (nameof (ImmutableObjectGraph.Optional)))' SyntaxFactory.IdentifierName (nameof (ImmutableObjectGraph.Optional.For)))' SyntaxFactory.ArgumentList (SyntaxFactory.SingletonSeparatedList (SyntaxFactory.Argument (expression)))); " is 466.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,GetTypeSyntax,The length of the statement  "	SimpleNameSyntax leafType = SyntaxFactory.IdentifierName (type.IsGenericType ? type.Name.Substring (0' type.Name.IndexOf ('`')) : type.Name); " is 141.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,GetTypeSyntax,The length of the statement  "		leafType = SyntaxFactory.GenericName (((IdentifierNameSyntax)leafType).Identifier' SyntaxFactory.TypeArgumentList (Syntax.JoinSyntaxNodes<TypeSyntax> (SyntaxKind.CommaToken' type.GenericTypeArguments.Select (GetTypeSyntax)))); " is 226.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,GetTypeSyntax,The length of the statement  "			namespaceName = namespaceName == null ? (NameSyntax)segmentName : SyntaxFactory.QualifiedName (namespaceName' SyntaxFactory.IdentifierName (segment)); " is 150.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,IEnumerableOf,The length of the statement  "	return SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (System))' SyntaxFactory.IdentifierName (nameof (System.Collections)))' SyntaxFactory.IdentifierName (nameof (System.Collections.Generic)))' SyntaxFactory.GenericName (SyntaxFactory.Identifier (nameof (IEnumerable<int>))' SyntaxFactory.TypeArgumentList (SyntaxFactory.SingletonSeparatedList (typeSyntax)))); " is 438.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,IEnumeratorOf,The length of the statement  "	return SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (System))' SyntaxFactory.IdentifierName (nameof (System.Collections)))' SyntaxFactory.IdentifierName (nameof (System.Collections.Generic)))' SyntaxFactory.GenericName (SyntaxFactory.Identifier (nameof (IEnumerator<int>))' SyntaxFactory.TypeArgumentList (SyntaxFactory.SingletonSeparatedList (typeSyntax)))); " is 438.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,IEquatableOf,The length of the statement  "	return SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (System))' SyntaxFactory.GenericName (SyntaxFactory.Identifier (nameof (IEquatable<int>))' SyntaxFactory.TypeArgumentList (SyntaxFactory.SingletonSeparatedList (typeSyntax)))); " is 249.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,IEqualityComparerOf,The length of the statement  "	return SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (System))' SyntaxFactory.IdentifierName (nameof (System.Collections)))' SyntaxFactory.IdentifierName (nameof (System.Collections.Generic)))' SyntaxFactory.GenericName (SyntaxFactory.Identifier (nameof (IEqualityComparer<int>))' SyntaxFactory.TypeArgumentList (SyntaxFactory.SingletonSeparatedList (typeSyntax)))); " is 444.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,ImmutableStackOf,The length of the statement  "	return SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (System))' SyntaxFactory.IdentifierName (nameof (System.Collections)))' SyntaxFactory.IdentifierName (nameof (System.Collections.Immutable)))' SyntaxFactory.GenericName (SyntaxFactory.Identifier (nameof (ImmutableStack<int>))' SyntaxFactory.TypeArgumentList (SyntaxFactory.SingletonSeparatedList (typeSyntax)))); " is 443.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,FuncOf,The length of the statement  "	return SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (System))' SyntaxFactory.GenericName (nameof (Func<int>)).AddTypeArgumentListArguments (typeArguments)); " is 177.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,ToList,The length of the statement  "	SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (System))' SyntaxFactory.IdentifierName (nameof (System.Linq)))' SyntaxFactory.IdentifierName (nameof (Enumerable)))' SyntaxFactory.IdentifierName (nameof (Enumerable.ToList)))' SyntaxFactory.ArgumentList (SyntaxFactory.SingletonSeparatedList (SyntaxFactory.Argument (expression)))); " is 457.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,IReadOnlyCollectionOf,The length of the statement  "	return SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (System))' SyntaxFactory.IdentifierName (nameof (System.Collections)))' SyntaxFactory.IdentifierName (nameof (System.Collections.Generic)))' SyntaxFactory.GenericName (SyntaxFactory.Identifier (nameof (IReadOnlyCollection<int>))' SyntaxFactory.TypeArgumentList (SyntaxFactory.SingletonSeparatedList (elementType)))); " is 447.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,IReadOnlyListOf,The length of the statement  "	return SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (System))' SyntaxFactory.IdentifierName (nameof (System.Collections)))' SyntaxFactory.IdentifierName (nameof (System.Collections.Generic)))' SyntaxFactory.GenericName (SyntaxFactory.Identifier (nameof (IReadOnlyList<int>))' SyntaxFactory.TypeArgumentList (SyntaxFactory.SingletonSeparatedList (elementType)))); " is 441.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,KeyValuePairOf,The length of the statement  "	return SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (System))' SyntaxFactory.IdentifierName (nameof (System.Collections)))' SyntaxFactory.IdentifierName (nameof (System.Collections.Generic)))' SyntaxFactory.GenericName (SyntaxFactory.Identifier (nameof (KeyValuePair<int' int>))' SyntaxFactory.TypeArgumentList (JoinSyntaxNodes (SyntaxKind.CommaToken' keyType' valueType)))); " is 454.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,CreateDictionary,The length of the statement  "	return SyntaxFactory.InvocationExpression (SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' GetTypeSyntax (typeof(ImmutableDictionary))' SyntaxFactory.GenericName (nameof (ImmutableDictionary.Create)).AddTypeArgumentListArguments (keyType' valueType))' SyntaxFactory.ArgumentList ()); " is 314.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,CreateImmutableStack,The length of the statement  "	var typeSyntax = SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.QualifiedName (SyntaxFactory.IdentifierName (nameof (System))' SyntaxFactory.IdentifierName (nameof (System.Collections)))' SyntaxFactory.IdentifierName (nameof (System.Collections.Immutable)))' SyntaxFactory.IdentifierName (nameof (ImmutableStack))); " is 340.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,CreateImmutableStack,The length of the statement  "	return SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' typeSyntax' elementType == null ? (SimpleNameSyntax)SyntaxFactory.IdentifierName (nameof (ImmutableStack.Create)) : SyntaxFactory.GenericName (nameof (ImmutableStack.Create)).AddTypeArgumentListArguments (elementType)); " is 305.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,PrependParameter,The length of the statement  "	return SyntaxFactory.ParameterList (SyntaxFactory.SingletonSeparatedList (parameter)).AddParameters (list.Parameters.ToArray ()); " is 129.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,PrependArgument,The length of the statement  "	return SyntaxFactory.ArgumentList (SyntaxFactory.SingletonSeparatedList (argument)).AddArguments (list.Arguments.ToArray ()); " is 125.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,ThisDot,The length of the statement  "	return SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' SyntaxFactory.ThisExpression ()' memberAccess); " is 133.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,BaseDot,The length of the statement  "	return SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' SyntaxFactory.BaseExpression ()' memberAccess); " is 133.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,ChainBinaryExpressions,The length of the statement  "	return expressions.Aggregate ((ExpressionSyntax)null' (agg' e) => agg != null ? SyntaxFactory.BinaryExpression (binaryOperator' agg' e) : e); " is 141.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,EnumerableExtension,The length of the statement  "	return SyntaxFactory.InvocationExpression (SyntaxFactory.MemberAccessExpression (SyntaxKind.SimpleMemberAccessExpression' GetTypeSyntax (typeof(Enumerable))' linqMethod)' arguments.PrependArgument (SyntaxFactory.Argument (receiver))); " is 234.
Long Statement,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,RequiresNotNull,The length of the statement  "	return SyntaxFactory.IfStatement (SyntaxFactory.BinaryExpression (SyntaxKind.EqualsExpression' parameter' SyntaxFactory.LiteralExpression (SyntaxKind.NullLiteralExpression))' SyntaxFactory.ThrowStatement (SyntaxFactory.ObjectCreationExpression (GetTypeSyntax (typeof(ArgumentNullException))).AddArgumentListArguments (SyntaxFactory.Argument (SyntaxFactory.LiteralExpression (SyntaxKind.StringLiteralExpression' SyntaxFactory.Literal (parameter.Identifier.ToString ())))))); " is 473.
Magic Number,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,ReportDiagnostic,The following statement contains a magic number: this.progress.Report (Diagnostic.Create (id' // id  string.Empty' // category  new LocalizableResourceString (id' DiagnosticsStrings.ResourceManager' typeof(DiagnosticsStrings)' formattingArgs)' severity' severity' true' severity == DiagnosticSeverity.Warning ? 2 : 0' false' location: blamedSyntax.GetLocation ()));  
Magic Number,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateTemplateStruct,The following statement contains a magic number: return SyntaxFactory.StructDeclaration (NestedTemplateTypeName.Identifier).WithMembers (SyntaxFactory.List<MemberDeclarationSyntax> (this.applyToMetaType.AllFields.Select (f => SyntaxFactory.FieldDeclaration (SyntaxFactory.VariableDeclaration (GetFullyQualifiedSymbolName (f.Type)' SyntaxFactory.SingletonSeparatedList (SyntaxFactory.VariableDeclarator (f.Name.ToPascalCase ())))).AddModifiers (SyntaxFactory.Token (SyntaxKind.InternalKeyword))))).AddModifiers (SyntaxFactory.Token (SyntaxKind.PrivateKeyword)).WithLeadingTrivia (SyntaxFactory.ElasticCarriageReturnLineFeed' SyntaxFactory.Trivia (SyntaxFactory.PragmaWarningDirectiveTrivia (SyntaxFactory.Token (SyntaxKind.DisableKeyword)' true).WithErrorCodes (SyntaxFactory.SingletonSeparatedList<ExpressionSyntax> (SyntaxFactory.LiteralExpression (SyntaxKind.NumericLiteralExpression' SyntaxFactory.Literal (0649).WithTrailingTrivia (SyntaxFactory.Space' SyntaxFactory.Comment ("// field initialization is optional in user code"))))).WithEndOfDirectiveToken (SyntaxFactory.Token (SyntaxFactory.TriviaList ()' SyntaxKind.EndOfDirectiveToken' SyntaxFactory.TriviaList (SyntaxFactory.ElasticCarriageReturnLineFeed))))).WithTrailingTrivia (SyntaxFactory.Trivia (SyntaxFactory.PragmaWarningDirectiveTrivia (SyntaxFactory.Token (SyntaxKind.RestoreKeyword)' true).WithErrorCodes (SyntaxFactory.SingletonSeparatedList<ExpressionSyntax> (SyntaxFactory.LiteralExpression (SyntaxKind.NumericLiteralExpression' SyntaxFactory.Literal (0649)))).WithEndOfDirectiveToken (SyntaxFactory.Token (SyntaxFactory.TriviaList ()' SyntaxKind.EndOfDirectiveToken' SyntaxFactory.TriviaList (SyntaxFactory.ElasticCarriageReturnLineFeed))))' SyntaxFactory.ElasticCarriageReturnLineFeed);  
Magic Number,ImmutableObjectGraph.Generation,CodeGen,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\CodeGen+BuilderGen.cs,CreateTemplateStruct,The following statement contains a magic number: return SyntaxFactory.StructDeclaration (NestedTemplateTypeName.Identifier).WithMembers (SyntaxFactory.List<MemberDeclarationSyntax> (this.applyToMetaType.AllFields.Select (f => SyntaxFactory.FieldDeclaration (SyntaxFactory.VariableDeclaration (GetFullyQualifiedSymbolName (f.Type)' SyntaxFactory.SingletonSeparatedList (SyntaxFactory.VariableDeclarator (f.Name.ToPascalCase ())))).AddModifiers (SyntaxFactory.Token (SyntaxKind.InternalKeyword))))).AddModifiers (SyntaxFactory.Token (SyntaxKind.PrivateKeyword)).WithLeadingTrivia (SyntaxFactory.ElasticCarriageReturnLineFeed' SyntaxFactory.Trivia (SyntaxFactory.PragmaWarningDirectiveTrivia (SyntaxFactory.Token (SyntaxKind.DisableKeyword)' true).WithErrorCodes (SyntaxFactory.SingletonSeparatedList<ExpressionSyntax> (SyntaxFactory.LiteralExpression (SyntaxKind.NumericLiteralExpression' SyntaxFactory.Literal (0649).WithTrailingTrivia (SyntaxFactory.Space' SyntaxFactory.Comment ("// field initialization is optional in user code"))))).WithEndOfDirectiveToken (SyntaxFactory.Token (SyntaxFactory.TriviaList ()' SyntaxKind.EndOfDirectiveToken' SyntaxFactory.TriviaList (SyntaxFactory.ElasticCarriageReturnLineFeed))))).WithTrailingTrivia (SyntaxFactory.Trivia (SyntaxFactory.PragmaWarningDirectiveTrivia (SyntaxFactory.Token (SyntaxKind.RestoreKeyword)' true).WithErrorCodes (SyntaxFactory.SingletonSeparatedList<ExpressionSyntax> (SyntaxFactory.LiteralExpression (SyntaxKind.NumericLiteralExpression' SyntaxFactory.Literal (0649)))).WithEndOfDirectiveToken (SyntaxFactory.Token (SyntaxFactory.TriviaList ()' SyntaxKind.EndOfDirectiveToken' SyntaxFactory.TriviaList (SyntaxFactory.ElasticCarriageReturnLineFeed))))' SyntaxFactory.ElasticCarriageReturnLineFeed);  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (modifiers.HasValue) {  	bool isPublic = member.HasModifier (SyntaxKind.PublicKeyword);  	bool isProtected = member.HasModifier (SyntaxKind.ProtectedKeyword);  	bool isInternal = member.HasModifier (SyntaxKind.InternalKeyword);  	bool isPrivate = member.HasModifier (SyntaxKind.PrivateKeyword);  	if (isPublic) {  		return 0;  	} else if (isProtected && isInternal) {  		return 1;  	} else if (isInternal) {  		return 2;  	} else if (isProtected) {  		return 3;  	} else if (isPrivate) {  		return 4;  	} else// assume private-level  	 {  		return 4;  	}  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (modifiers.HasValue) {  	bool isPublic = member.HasModifier (SyntaxKind.PublicKeyword);  	bool isProtected = member.HasModifier (SyntaxKind.ProtectedKeyword);  	bool isInternal = member.HasModifier (SyntaxKind.InternalKeyword);  	bool isPrivate = member.HasModifier (SyntaxKind.PrivateKeyword);  	if (isPublic) {  		return 0;  	} else if (isProtected && isInternal) {  		return 1;  	} else if (isInternal) {  		return 2;  	} else if (isProtected) {  		return 3;  	} else if (isPrivate) {  		return 4;  	} else// assume private-level  	 {  		return 4;  	}  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (modifiers.HasValue) {  	bool isPublic = member.HasModifier (SyntaxKind.PublicKeyword);  	bool isProtected = member.HasModifier (SyntaxKind.ProtectedKeyword);  	bool isInternal = member.HasModifier (SyntaxKind.InternalKeyword);  	bool isPrivate = member.HasModifier (SyntaxKind.PrivateKeyword);  	if (isPublic) {  		return 0;  	} else if (isProtected && isInternal) {  		return 1;  	} else if (isInternal) {  		return 2;  	} else if (isProtected) {  		return 3;  	} else if (isPrivate) {  		return 4;  	} else// assume private-level  	 {  		return 4;  	}  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (modifiers.HasValue) {  	bool isPublic = member.HasModifier (SyntaxKind.PublicKeyword);  	bool isProtected = member.HasModifier (SyntaxKind.ProtectedKeyword);  	bool isInternal = member.HasModifier (SyntaxKind.InternalKeyword);  	bool isPrivate = member.HasModifier (SyntaxKind.PrivateKeyword);  	if (isPublic) {  		return 0;  	} else if (isProtected && isInternal) {  		return 1;  	} else if (isInternal) {  		return 2;  	} else if (isProtected) {  		return 3;  	} else if (isPrivate) {  		return 4;  	} else// assume private-level  	 {  		return 4;  	}  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isPublic) {  	return 0;  } else if (isProtected && isInternal) {  	return 1;  } else if (isInternal) {  	return 2;  } else if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isPublic) {  	return 0;  } else if (isProtected && isInternal) {  	return 1;  } else if (isInternal) {  	return 2;  } else if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isPublic) {  	return 0;  } else if (isProtected && isInternal) {  	return 1;  } else if (isInternal) {  	return 2;  } else if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isPublic) {  	return 0;  } else if (isProtected && isInternal) {  	return 1;  } else if (isInternal) {  	return 2;  } else if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isProtected && isInternal) {  	return 1;  } else if (isInternal) {  	return 2;  } else if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isProtected && isInternal) {  	return 1;  } else if (isInternal) {  	return 2;  } else if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isProtected && isInternal) {  	return 1;  } else if (isInternal) {  	return 2;  } else if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isProtected && isInternal) {  	return 1;  } else if (isInternal) {  	return 2;  } else if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isInternal) {  	return 2;  } else if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isInternal) {  	return 2;  } else if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isInternal) {  	return 2;  } else if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isInternal) {  	return 2;  } else if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: return 2;  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isProtected) {  	return 3;  } else if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: return 3;  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: if (isPrivate) {  	return 4;  } else// assume private-level   {  	return 4;  }  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: return 4;  
Magic Number,ImmutableObjectGraph.Generation,StyleCop,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\StyleCop.cs,GetMemberDeclarationVisibilityOrder,The following statement contains a magic number: return 4;  
Magic Number,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,JoinSyntaxNodes,The following statement contains a magic number: switch (nodes.Count) {  case 0:  	return SyntaxFactory.NodeOrTokenList ();  case 1:  	return SyntaxFactory.NodeOrTokenList (nodes [0]);  default:  	var nodesOrTokens = new SyntaxNodeOrToken[(nodes.Count * 2) - 1];  	nodesOrTokens [0] = nodes [0];  	for (int i = 1; i < nodes.Count; i++) {  		int targetIndex = i * 2;  		nodesOrTokens [targetIndex - 1] = separatingToken;  		nodesOrTokens [targetIndex] = nodes [i];  	}  	return SyntaxFactory.NodeOrTokenList (nodesOrTokens);  }  
Magic Number,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,JoinSyntaxNodes,The following statement contains a magic number: switch (nodes.Count) {  case 0:  	return SyntaxFactory.NodeOrTokenList ();  case 1:  	return SyntaxFactory.NodeOrTokenList (nodes [0]);  default:  	var nodesOrTokens = new SyntaxNodeOrToken[(nodes.Count * 2) - 1];  	nodesOrTokens [0] = nodes [0];  	for (int i = 1; i < nodes.Count; i++) {  		int targetIndex = i * 2;  		nodesOrTokens [targetIndex - 1] = separatingToken;  		nodesOrTokens [targetIndex] = nodes [i];  	}  	return SyntaxFactory.NodeOrTokenList (nodesOrTokens);  }  
Magic Number,ImmutableObjectGraph.Generation,Syntax,F:\newReposMay17\AArnott_ImmutableObjectGraph\src\ImmutableObjectGraph.Generation\Syntax.cs,JoinSyntaxNodes,The following statement contains a magic number: for (int i = 1; i < nodes.Count; i++) {  	int targetIndex = i * 2;  	nodesOrTokens [targetIndex - 1] = separatingToken;  	nodesOrTokens [targetIndex] = nodes [i];  }  
