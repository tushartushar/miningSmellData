Implementation smell,Namespace,Class,File,Method,Description
Long Method,_999HRPERDOOR,SIR0_Sprite,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\SIR0.cs,Read,The method has 78 lines of code.
Complex Method,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,Cyclomatic complexity of the method is 12
Long Parameter List,_999HRPERDOOR,SIR0_Sprite,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\SIR0.cs,SIR0_Sprite,The method has 4 parameters.
Long Parameter List,_999HRPERDOOR,SIR0_Image,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\SIR0.cs,SIR0_Image,The method has 4 parameters.
Long Statement,_999HRPERDOOR,SIR0_Sprite,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\SIR0.cs,Read,The length of the statement  "	image = new RawImage (tiles' TileForm.Lineal' ColorFormat.colors256' 0x40' (int)(info.info3.tile_size / 0x40)' false' ""); " is 122.
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: if (decSize <= 4)  	return decoded;  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: while (decoded.Position < decSize) {  	// Fill the flag  	while (nbits < 17) {  		if (encoded.Position < encoded.Length)  			flags |= (uint)(encoded.ReadByte () << (int)nbits);  		nbits += 8;  	}  	int nbit;  	for (nbit = 0; nbit <= 8; nbit++)  		if ((flags & (1 << nbit)) != 0)  			break;  	if (nbit > 8) {  		throw new Exception ("ERROR: Invalid control mask");  	}  	uint n = (uint)(1 << nbit) - 1;  	n += (flags >> (nbit + 1)) & n;  	if (n == 1) {  		if (prev == -1) {  			throw new Exception ("ERROR: Unexpected control mask found");  		}  		decoded.WriteByte ((byte)prev);  		int t = prev;  		prev = code;  		code = t;  	} else {  		if (n != 0)  			prev = code;  		code = (int)((code + (n >> 1) * (1 - 2 * (n & 1))) & 0xFF);  		decoded.WriteByte ((byte)code);  	}  	flags >>= 2 * nbit + 1;  	nbits -= (uint)(2 * nbit + 1);  }  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: while (decoded.Position < decSize) {  	// Fill the flag  	while (nbits < 17) {  		if (encoded.Position < encoded.Length)  			flags |= (uint)(encoded.ReadByte () << (int)nbits);  		nbits += 8;  	}  	int nbit;  	for (nbit = 0; nbit <= 8; nbit++)  		if ((flags & (1 << nbit)) != 0)  			break;  	if (nbit > 8) {  		throw new Exception ("ERROR: Invalid control mask");  	}  	uint n = (uint)(1 << nbit) - 1;  	n += (flags >> (nbit + 1)) & n;  	if (n == 1) {  		if (prev == -1) {  			throw new Exception ("ERROR: Unexpected control mask found");  		}  		decoded.WriteByte ((byte)prev);  		int t = prev;  		prev = code;  		code = t;  	} else {  		if (n != 0)  			prev = code;  		code = (int)((code + (n >> 1) * (1 - 2 * (n & 1))) & 0xFF);  		decoded.WriteByte ((byte)code);  	}  	flags >>= 2 * nbit + 1;  	nbits -= (uint)(2 * nbit + 1);  }  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: while (decoded.Position < decSize) {  	// Fill the flag  	while (nbits < 17) {  		if (encoded.Position < encoded.Length)  			flags |= (uint)(encoded.ReadByte () << (int)nbits);  		nbits += 8;  	}  	int nbit;  	for (nbit = 0; nbit <= 8; nbit++)  		if ((flags & (1 << nbit)) != 0)  			break;  	if (nbit > 8) {  		throw new Exception ("ERROR: Invalid control mask");  	}  	uint n = (uint)(1 << nbit) - 1;  	n += (flags >> (nbit + 1)) & n;  	if (n == 1) {  		if (prev == -1) {  			throw new Exception ("ERROR: Unexpected control mask found");  		}  		decoded.WriteByte ((byte)prev);  		int t = prev;  		prev = code;  		code = t;  	} else {  		if (n != 0)  			prev = code;  		code = (int)((code + (n >> 1) * (1 - 2 * (n & 1))) & 0xFF);  		decoded.WriteByte ((byte)code);  	}  	flags >>= 2 * nbit + 1;  	nbits -= (uint)(2 * nbit + 1);  }  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: while (decoded.Position < decSize) {  	// Fill the flag  	while (nbits < 17) {  		if (encoded.Position < encoded.Length)  			flags |= (uint)(encoded.ReadByte () << (int)nbits);  		nbits += 8;  	}  	int nbit;  	for (nbit = 0; nbit <= 8; nbit++)  		if ((flags & (1 << nbit)) != 0)  			break;  	if (nbit > 8) {  		throw new Exception ("ERROR: Invalid control mask");  	}  	uint n = (uint)(1 << nbit) - 1;  	n += (flags >> (nbit + 1)) & n;  	if (n == 1) {  		if (prev == -1) {  			throw new Exception ("ERROR: Unexpected control mask found");  		}  		decoded.WriteByte ((byte)prev);  		int t = prev;  		prev = code;  		code = t;  	} else {  		if (n != 0)  			prev = code;  		code = (int)((code + (n >> 1) * (1 - 2 * (n & 1))) & 0xFF);  		decoded.WriteByte ((byte)code);  	}  	flags >>= 2 * nbit + 1;  	nbits -= (uint)(2 * nbit + 1);  }  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: while (decoded.Position < decSize) {  	// Fill the flag  	while (nbits < 17) {  		if (encoded.Position < encoded.Length)  			flags |= (uint)(encoded.ReadByte () << (int)nbits);  		nbits += 8;  	}  	int nbit;  	for (nbit = 0; nbit <= 8; nbit++)  		if ((flags & (1 << nbit)) != 0)  			break;  	if (nbit > 8) {  		throw new Exception ("ERROR: Invalid control mask");  	}  	uint n = (uint)(1 << nbit) - 1;  	n += (flags >> (nbit + 1)) & n;  	if (n == 1) {  		if (prev == -1) {  			throw new Exception ("ERROR: Unexpected control mask found");  		}  		decoded.WriteByte ((byte)prev);  		int t = prev;  		prev = code;  		code = t;  	} else {  		if (n != 0)  			prev = code;  		code = (int)((code + (n >> 1) * (1 - 2 * (n & 1))) & 0xFF);  		decoded.WriteByte ((byte)code);  	}  	flags >>= 2 * nbit + 1;  	nbits -= (uint)(2 * nbit + 1);  }  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: while (decoded.Position < decSize) {  	// Fill the flag  	while (nbits < 17) {  		if (encoded.Position < encoded.Length)  			flags |= (uint)(encoded.ReadByte () << (int)nbits);  		nbits += 8;  	}  	int nbit;  	for (nbit = 0; nbit <= 8; nbit++)  		if ((flags & (1 << nbit)) != 0)  			break;  	if (nbit > 8) {  		throw new Exception ("ERROR: Invalid control mask");  	}  	uint n = (uint)(1 << nbit) - 1;  	n += (flags >> (nbit + 1)) & n;  	if (n == 1) {  		if (prev == -1) {  			throw new Exception ("ERROR: Unexpected control mask found");  		}  		decoded.WriteByte ((byte)prev);  		int t = prev;  		prev = code;  		code = t;  	} else {  		if (n != 0)  			prev = code;  		code = (int)((code + (n >> 1) * (1 - 2 * (n & 1))) & 0xFF);  		decoded.WriteByte ((byte)code);  	}  	flags >>= 2 * nbit + 1;  	nbits -= (uint)(2 * nbit + 1);  }  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: while (decoded.Position < decSize) {  	// Fill the flag  	while (nbits < 17) {  		if (encoded.Position < encoded.Length)  			flags |= (uint)(encoded.ReadByte () << (int)nbits);  		nbits += 8;  	}  	int nbit;  	for (nbit = 0; nbit <= 8; nbit++)  		if ((flags & (1 << nbit)) != 0)  			break;  	if (nbit > 8) {  		throw new Exception ("ERROR: Invalid control mask");  	}  	uint n = (uint)(1 << nbit) - 1;  	n += (flags >> (nbit + 1)) & n;  	if (n == 1) {  		if (prev == -1) {  			throw new Exception ("ERROR: Unexpected control mask found");  		}  		decoded.WriteByte ((byte)prev);  		int t = prev;  		prev = code;  		code = t;  	} else {  		if (n != 0)  			prev = code;  		code = (int)((code + (n >> 1) * (1 - 2 * (n & 1))) & 0xFF);  		decoded.WriteByte ((byte)code);  	}  	flags >>= 2 * nbit + 1;  	nbits -= (uint)(2 * nbit + 1);  }  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: while (nbits < 17) {  	if (encoded.Position < encoded.Length)  		flags |= (uint)(encoded.ReadByte () << (int)nbits);  	nbits += 8;  }  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: while (nbits < 17) {  	if (encoded.Position < encoded.Length)  		flags |= (uint)(encoded.ReadByte () << (int)nbits);  	nbits += 8;  }  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: nbits += 8;  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: for (nbit = 0; nbit <= 8; nbit++)  	if ((flags & (1 << nbit)) != 0)  		break;  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: if (nbit > 8) {  	throw new Exception ("ERROR: Invalid control mask");  }  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: if (n == 1) {  	if (prev == -1) {  		throw new Exception ("ERROR: Unexpected control mask found");  	}  	decoded.WriteByte ((byte)prev);  	int t = prev;  	prev = code;  	code = t;  } else {  	if (n != 0)  		prev = code;  	code = (int)((code + (n >> 1) * (1 - 2 * (n & 1))) & 0xFF);  	decoded.WriteByte ((byte)code);  }  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: code = (int)((code + (n >> 1) * (1 - 2 * (n & 1))) & 0xFF);  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: flags >>= 2 * nbit + 1;  
Magic Number,_999HRPERDOOR,AT6P,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\AT6P.cs,Decode,The following statement contains a magic number: nbits -= (uint)(2 * nbit + 1);  
Magic Number,_999HRPERDOOR,SIR0_Image,D:\newReposJune17\pleonex_tinke\Plugins\999HRPERDOOR\999HRPERDOOR\SIR0.cs,Read,The following statement contains a magic number: Set_Tiles (tiles' 0x100' tiles.Length / 0x100' ColorFormat.colors256' TileForm.Lineal' false' 8);  
