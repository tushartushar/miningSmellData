Implementation smell,Namespace,Class,File,Method,Description
Long Method,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The method has 77 lines of code.
Long Method,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The method has 97 lines of code.
Long Method,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The method has 74 lines of code.
Long Method,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The method has 179 lines of code.
Long Method,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The method has 2043 lines of code.
Long Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnImport_Click,The method has 60 lines of code.
Long Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Save_NewSDAT,The method has 73 lines of code.
Long Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The method has 256 lines of code.
Long Method,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The method has 280 lines of code.
Long Method,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The method has 306 lines of code.
Long Method,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,FileSystem,The method has 72 lines of code.
Long Method,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The method has 107 lines of code.
Long Method,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The method has 61 lines of code.
Complex Method,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,Cyclomatic complexity of the method is 10
Complex Method,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,Cyclomatic complexity of the method is 12
Complex Method,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,Cyclomatic complexity of the method is 13
Complex Method,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,Cyclomatic complexity of the method is 16
Complex Method,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,Cyclomatic complexity of the method is 9
Complex Method,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,Cyclomatic complexity of the method is 113
Complex Method,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericGROUPcurrentGroup_ValueChanged,Cyclomatic complexity of the method is 12
Complex Method,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,comboBoxGROUPtype_SelectedIndexChanged,Cyclomatic complexity of the method is 12
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FormatoToImage,Cyclomatic complexity of the method is 7
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,Cyclomatic complexity of the method is 9
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,Cyclomatic complexity of the method is 8
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Set_LastFileID,Cyclomatic complexity of the method is 8
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,Cyclomatic complexity of the method is 9
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,ChangeFile,Cyclomatic complexity of the method is 7
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnExtract_Click,Cyclomatic complexity of the method is 10
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,RecursivoExtractFolder,Cyclomatic complexity of the method is 9
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnImport_Click,Cyclomatic complexity of the method is 34
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,Cyclomatic complexity of the method is 21
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnWav_Click,Cyclomatic complexity of the method is 7
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnReproducir_Click,Cyclomatic complexity of the method is 15
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnInfo_Click,Cyclomatic complexity of the method is 19
Complex Method,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,Cyclomatic complexity of the method is 20
Complex Method,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,Cyclomatic complexity of the method is 39
Complex Method,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,FileSystem,Cyclomatic complexity of the method is 26
Complex Method,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,Cyclomatic complexity of the method is 21
Complex Method,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,Cyclomatic complexity of the method is 9
Complex Method,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,Cyclomatic complexity of the method is 10
Complex Method,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,Cyclomatic complexity of the method is 8
Complex Method,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,Cyclomatic complexity of the method is 9
Complex Method,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,Cyclomatic complexity of the method is 7
Complex Method,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Write,Cyclomatic complexity of the method is 7
Complex Method,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,Cyclomatic complexity of the method is 7
Complex Method,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,Cyclomatic complexity of the method is 13
Complex Method,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,ConvertToMono,Cyclomatic complexity of the method is 13
Long Parameter List,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The method has 6 parameters.
Long Parameter List,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,The method has 5 parameters.
Long Parameter List,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Create_WAV,The method has 4 parameters.
Long Statement,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(InfoForm)); " is 129.
Long Statement,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,ReadLanguage,The length of the statement  "		System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load (Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "SDATLang.xml"); " is 176.
Long Statement,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The length of the statement  "	System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load (Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "SDATLang.xml"); " is 176.
Long Statement,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Files,The length of the statement  "		files.tag = String.Format ("{0:X}"' file.size).PadLeft (8' '0') + String.Format ("{0:X}"' file.offset).PadLeft (8' '0'); " is 120.
Long Statement,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The length of the statement  "					newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0'); " is 156.
Long Statement,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Files,The length of the statement  "			if (folder.name is string)// Comprobamos que se haya devuelto un directorio' en cuyo caso es el buscado que lo devolvemos " is 121.
Long Statement,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnExtract_Click,The length of the statement  "			xml = System.Xml.Linq.XElement.Load (Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "SDATLang.xml"); " is 151.
Long Statement,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnExtract_Click,The length of the statement  "			if (MessageBox.Show (xml.Element ("S10").Value' ""' MessageBoxButtons.YesNo' MessageBoxIcon.Question) == System.Windows.Forms.DialogResult.Yes) " is 143.
Long Statement,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnExtract_Click,The length of the statement  "	xml = System.Xml.Linq.XElement.Load (Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "SDATLang.xml"); " is 151.
Long Statement,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnUncompress_Click,The length of the statement  "	System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load (Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "SDATLang.xml"); " is 176.
Long Statement,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,The length of the statement  "	o.Filter = "STRM (*.strm)|*.strm|" + "SSEQ (*.sseq)|*.sseq|" + "SSAR (*.ssar)|*.ssar|" + "SBNK (*.sbnk)|*.sbnk|" + "SWAR (*.swar)|*.swar|" + "SWAV (*.swav)|*.swav|" + "All files (*.*)|*.*"; " is 189.
Long Statement,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Save_NewSDAT,The length of the statement  "	int file_size = (int)(sdat.cabecera.symbSize + sdat.cabecera.infoSize + sdat.cabecera.fatSize + sdat.cabecera.fileSize); " is 120.
Long Statement,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(iSDAT)); " is 126.
Long Statement,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,ReadLanguage,The length of the statement  "		System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load (Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "SDATLang.xml"); " is 176.
Long Statement,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The length of the statement  "	System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager (typeof(NewAudioOptions)); " is 136.
Long Statement,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The length of the statement  "		System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load (Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "SDATLang.xml"); " is 176.
Long Statement,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,Information,The length of the statement  "		System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load (System.Windows.Forms.Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "SDATLang.xml"); " is 197.
Long Statement,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The length of the statement  "		strm.data.leftChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' true' strm.head.waveType); " is 145.
Long Statement,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The length of the statement  "		strm.data.rightChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' false' strm.head.waveType); " is 147.
Long Statement,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The length of the statement  "		strm.data.data = MonoChannel (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' strm.head.waveType); " is 129.
Long Statement,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The length of the statement  "			resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2))); " is 136.
Long Statement,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The length of the statement  "		resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2))); " is 136.
Long Statement,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,The length of the statement  "			resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2))); " is 136.
Long Statement,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,The length of the statement  "		resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2))); " is 136.
Long Statement,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Information,The length of the statement  "		System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load (System.Windows.Forms.Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "SDATLang.xml"); " is 197.
Long Statement,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The length of the statement  "		swav [i].data.nSize = (uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint)); " is 149.
Long Statement,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The length of the statement  "		swav [i].header.nFileSize = 16 + ((uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint))); " is 162.
Long Statement,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,Information,The length of the statement  "		System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load (System.Windows.Forms.Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "SDATLang.xml"); " is 197.
Long Statement,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The length of the statement  "		swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2)); " is 149.
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if ((data [i] & 4) != 0)  	difference += stepsize;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if ((data [i] & 2) != 0)  	difference += stepsize >> 1;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if ((data [i] & 1) != 0)  	difference += stepsize >> 2;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: difference += stepsize >> 2;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: difference += stepsize >> 3;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if ((data [i] & 8) != 0)  	difference = -difference;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (newSample > 32767)  	newSample = 32767;  else if (newSample < -32768)  	newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (newSample > 32767)  	newSample = 32767;  else if (newSample < -32768)  	newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (newSample > 32767)  	newSample = 32767;  else if (newSample < -32768)  	newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (newSample > 32767)  	newSample = 32767;  else if (newSample < -32768)  	newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: newSample = 32767;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (newSample < -32768)  	newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (newSample < -32768)  	newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (index < 0)  	index = 0;  else if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (index < 0)  	index = 0;  else if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (datos.Length < 4)  	return datos;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (index < 0)  	index = 0;  else if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (index < 0)  	index = 0;  else if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: Array.Copy (datos' 4' data' 0' data.Length);  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	difference = 0;  	if ((data [i] & 4) != 0)  		difference += stepsize;  	if ((data [i] & 2) != 0)  		difference += stepsize >> 1;  	if ((data [i] & 1) != 0)  		difference += stepsize >> 2;  	difference += stepsize >> 3;  	if ((data [i] & 8) != 0)  		difference = -difference;  	newSample += difference;  	if (newSample > 32767)  		newSample = 32767;  	else if (newSample < -32768)  		newSample = -32768;  	resul.AddRange (BitConverter.GetBytes ((short)newSample));  	index += indexTable [data [i]];  	if (index < 0)  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if ((data [i] & 4) != 0)  	difference += stepsize;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if ((data [i] & 2) != 0)  	difference += stepsize >> 1;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if ((data [i] & 1) != 0)  	difference += stepsize >> 2;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: difference += stepsize >> 2;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: difference += stepsize >> 3;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if ((data [i] & 8) != 0)  	difference = -difference;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (newSample > 32767)  	newSample = 32767;  else if (newSample < -32768)  	newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (newSample > 32767)  	newSample = 32767;  else if (newSample < -32768)  	newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (newSample > 32767)  	newSample = 32767;  else if (newSample < -32768)  	newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (newSample > 32767)  	newSample = 32767;  else if (newSample < -32768)  	newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: newSample = 32767;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (newSample < -32768)  	newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (newSample < -32768)  	newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: newSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (index < 0)  	index = 0;  else if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (index < 0)  	index = 0;  else if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Decompress,The following statement contains a magic number: index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	result.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: i += 2
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if (different >= 0)// Set sign bit and find absolute value of difference   {  	newSample = 0;  	// Set sign bit (newSample[3]) to 0  } else {  	newSample = 8;  	// Set sign bit(newSample[3]) to one  	different = -different;  	// Absolute value of negative difference  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: newSample = 8;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: mask = 4;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: for (int j = 0; j < 3; j++)// Quantize difference down to four bits   {  	if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  	 {  		newSample |= mask;  		// perfom division...  		different -= tempStepsize;  		// ...through repeated subtraction  	}  	tempStepsize >>= 1;  	// adjust comparator for next iteration  	mask >>= 1;  	// adjust bit-set mask for next iteration  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if ((newSample & 4) != 0)  	// perform multiplication through repetitive addition  	different += stepsize;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if ((newSample & 2) != 0)  	different += stepsize >> 1;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if ((newSample & 1) != 0)  	different += stepsize >> 2;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: different += stepsize >> 2;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: different += stepsize >> 3;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if ((newSample & 8) != 0)  	// account for sign bit  	different = -different;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if (predictedSample > 32767)  	// check for overflow  	predictedSample = 32767;  else if (predictedSample < -32768)  	predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if (predictedSample > 32767)  	// check for overflow  	predictedSample = 32767;  else if (predictedSample < -32768)  	predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if (predictedSample > 32767)  	// check for overflow  	predictedSample = 32767;  else if (predictedSample < -32768)  	predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if (predictedSample > 32767)  	// check for overflow  	predictedSample = 32767;  else if (predictedSample < -32768)  	predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: predictedSample = 32767;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if (predictedSample < -32768)  	predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if (predictedSample < -32768)  	predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if (index < 0)  	// check for index overflow  	index = 0;  else if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if (index < 0)  	// check for index overflow  	index = 0;  else if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Compress,The following statement contains a magic number: index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	if (i % blockSize == 0) {  		if (i != 0) {  			Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  			List<byte> newBlock = new List<byte> ();  			newBlock.AddRange (block.GetRange (0' 4));  			newBlock.AddRange (blockData);  			result.Add (newBlock.ToArray ());  		}  		block = new List<byte> ();  		block.AddRange (BitConverter.GetBytes ((short)predictedSample));  		block.AddRange (BitConverter.GetBytes ((short)index));  	}  	short originalSample = BitConverter.ToInt16 (data' i);  	different = originalSample - predictedSample;  	// find difference from predicted sample  	if (different >= 0)// Set sign bit and find absolute value of difference  	 {  		newSample = 0;  		// Set sign bit (newSample[3]) to 0  	} else {  		newSample = 8;  		// Set sign bit(newSample[3]) to one  		different = -different;  		// Absolute value of negative difference  	}  	mask = 4;  	// Used to set bits in newSample  	tempStepsize = stepsize;  	// Store quantizer stepsize for later use  	for (int j = 0; j < 3; j++)// Quantize difference down to four bits  	 {  		if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  		 {  			newSample |= mask;  			// perfom division...  			different -= tempStepsize;  			// ...through repeated subtraction  		}  		tempStepsize >>= 1;  		// adjust comparator for next iteration  		mask >>= 1;  		// adjust bit-set mask for next iteration  	}  	block.Add ((byte)newSample);  	// Store 4-bit newSample  	// Compute new sample estimate predictedSample  	different = 0;  	// Calculate difference = (newSample + 1/2) * stepsize / 4  	if ((newSample & 4) != 0)  		// perform multiplication through repetitive addition  		different += stepsize;  	if ((newSample & 2) != 0)  		different += stepsize >> 1;  	if ((newSample & 1) != 0)  		different += stepsize >> 2;  	different += stepsize >> 3;  	// (newSample + 1/2) * stepsize / 4 = newSample * stepsize / 4 + stepsize / 8  	if ((newSample & 8) != 0)  		// account for sign bit  		different = -different;  	// adjust predicted sample based on calculated difference  	predictedSample += different;  	if (predictedSample > 32767)  		// check for overflow  		predictedSample = 32767;  	else if (predictedSample < -32768)  		predictedSample = -32768;  	// compute new stepsize  	index += indexTable [newSample];  	// adjust index into stepsize lookup table using newSample  	if (index < 0)  		// check for index overflow  		index = 0;  	else if (index > 88)  		index = 88;  	stepsize = stepsizeTable [index];  	// find new quantizer stepsize  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: i += 2
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (i % blockSize == 0) {  	if (i != 0) {  		Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  		List<byte> newBlock = new List<byte> ();  		newBlock.AddRange (block.GetRange (0' 4));  		newBlock.AddRange (blockData);  		result.Add (newBlock.ToArray ());  	}  	block = new List<byte> ();  	block.AddRange (BitConverter.GetBytes ((short)predictedSample));  	block.AddRange (BitConverter.GetBytes ((short)index));  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (i % blockSize == 0) {  	if (i != 0) {  		Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  		List<byte> newBlock = new List<byte> ();  		newBlock.AddRange (block.GetRange (0' 4));  		newBlock.AddRange (blockData);  		result.Add (newBlock.ToArray ());  	}  	block = new List<byte> ();  	block.AddRange (BitConverter.GetBytes ((short)predictedSample));  	block.AddRange (BitConverter.GetBytes ((short)index));  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (i % blockSize == 0) {  	if (i != 0) {  		Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  		List<byte> newBlock = new List<byte> ();  		newBlock.AddRange (block.GetRange (0' 4));  		newBlock.AddRange (blockData);  		result.Add (newBlock.ToArray ());  	}  	block = new List<byte> ();  	block.AddRange (BitConverter.GetBytes ((short)predictedSample));  	block.AddRange (BitConverter.GetBytes ((short)index));  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (i != 0) {  	Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  	List<byte> newBlock = new List<byte> ();  	newBlock.AddRange (block.GetRange (0' 4));  	newBlock.AddRange (blockData);  	result.Add (newBlock.ToArray ());  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (i != 0) {  	Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  	List<byte> newBlock = new List<byte> ();  	newBlock.AddRange (block.GetRange (0' 4));  	newBlock.AddRange (blockData);  	result.Add (newBlock.ToArray ());  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (i != 0) {  	Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  	List<byte> newBlock = new List<byte> ();  	newBlock.AddRange (block.GetRange (0' 4));  	newBlock.AddRange (blockData);  	result.Add (newBlock.ToArray ());  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: newBlock.AddRange (block.GetRange (0' 4));  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (different >= 0)// Set sign bit and find absolute value of difference   {  	newSample = 0;  	// Set sign bit (newSample[3]) to 0  } else {  	newSample = 8;  	// Set sign bit(newSample[3]) to one  	different = -different;  	// Absolute value of negative difference  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: newSample = 8;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: mask = 4;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: for (int j = 0; j < 3; j++)// Quantize difference down to four bits   {  	if (different >= tempStepsize)// newSample[2:0] = 4 * (difference / stepsize)  	 {  		newSample |= mask;  		// perfom division...  		different -= tempStepsize;  		// ...through repeated subtraction  	}  	tempStepsize >>= 1;  	// adjust comparator for next iteration  	mask >>= 1;  	// adjust bit-set mask for next iteration  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if ((newSample & 4) != 0)  	// perform multiplication through repetitive addition  	different += stepsize;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if ((newSample & 2) != 0)  	different += stepsize >> 1;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if ((newSample & 1) != 0)  	different += stepsize >> 2;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: different += stepsize >> 2;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: different += stepsize >> 3;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if ((newSample & 8) != 0)  	// account for sign bit  	different = -different;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (predictedSample > 32767)  	// check for overflow  	predictedSample = 32767;  else if (predictedSample < -32768)  	predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (predictedSample > 32767)  	// check for overflow  	predictedSample = 32767;  else if (predictedSample < -32768)  	predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (predictedSample > 32767)  	// check for overflow  	predictedSample = 32767;  else if (predictedSample < -32768)  	predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (predictedSample > 32767)  	// check for overflow  	predictedSample = 32767;  else if (predictedSample < -32768)  	predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: predictedSample = 32767;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (predictedSample < -32768)  	predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (predictedSample < -32768)  	predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: predictedSample = -32768;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (index < 0)  	// check for index overflow  	index = 0;  else if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (index < 0)  	// check for index overflow  	index = 0;  else if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (index > 88)  	index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: index = 88;  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (block.Count > 4) {  	Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  	List<byte> newBlock = new List<byte> ();  	newBlock.AddRange (block.GetRange (0' 4));  	newBlock.AddRange (blockData);  	result.Add (newBlock.ToArray ());  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (block.Count > 4) {  	Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  	List<byte> newBlock = new List<byte> ();  	newBlock.AddRange (block.GetRange (0' 4));  	newBlock.AddRange (blockData);  	result.Add (newBlock.ToArray ());  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (block.Count > 4) {  	Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  	List<byte> newBlock = new List<byte> ();  	newBlock.AddRange (block.GetRange (0' 4));  	newBlock.AddRange (blockData);  	result.Add (newBlock.ToArray ());  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: if (block.Count > 4) {  	Byte[] blockData = Bit4ToBit8 (block.GetRange (4' block.Count - 4).ToArray ());  	List<byte> newBlock = new List<byte> ();  	newBlock.AddRange (block.GetRange (0' 4));  	newBlock.AddRange (blockData);  	result.Add (newBlock.ToArray ());  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,CompressBlock,The following statement contains a magic number: newBlock.AddRange (block.GetRange (0' 4));  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Bit8ToBit4,The following statement contains a magic number: for (int i = 0; i < data.Length; i++) {  	bit4.Add ((byte)(data [i] & 0x0F));  	bit4.Add ((byte)((data [i] & 0xF0) >> 4));  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Bit8ToBit4,The following statement contains a magic number: bit4.Add ((byte)((data [i] & 0xF0) >> 4));  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Bit4ToBit8,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i += 2) {  	byte byte1 = bytes [i];  	byte byte2 = 0;  	if (i + 1 < bytes.Length)  		byte2 = (byte)(bytes [i + 1] << 4);  	bit8.Add ((byte)(byte1 + byte2));  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Bit4ToBit8,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i += 2) {  	byte byte1 = bytes [i];  	byte byte2 = 0;  	if (i + 1 < bytes.Length)  		byte2 = (byte)(bytes [i + 1] << 4);  	bit8.Add ((byte)(byte1 + byte2));  }  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Bit4ToBit8,The following statement contains a magic number: i += 2
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Bit4ToBit8,The following statement contains a magic number: if (i + 1 < bytes.Length)  	byte2 = (byte)(bytes [i + 1] << 4);  
Magic Number,SDAT,Compression_ADPCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\IMA-ADPCM.cs,Bit4ToBit8,The following statement contains a magic number: byte2 = (byte)(bytes [i + 1] << 4);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [2].nEntries != 0) {  	numericSBNKrecord.Maximum = info.block [2].nEntries - 1;  	labelSBNKtotal.Text = "of " + (info.block [2].nEntries - 1);  } else {  	numericSBNKrecord.Maximum = 0;  	labelSBNKtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [2].nEntries != 0) {  	numericSBNKrecord.Maximum = info.block [2].nEntries - 1;  	labelSBNKtotal.Text = "of " + (info.block [2].nEntries - 1);  } else {  	numericSBNKrecord.Maximum = 0;  	labelSBNKtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [2].nEntries != 0) {  	numericSBNKrecord.Maximum = info.block [2].nEntries - 1;  	labelSBNKtotal.Text = "of " + (info.block [2].nEntries - 1);  } else {  	numericSBNKrecord.Maximum = 0;  	labelSBNKtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: numericSBNKrecord.Maximum = info.block [2].nEntries - 1;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: labelSBNKtotal.Text = "of " + (info.block [2].nEntries - 1);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: ReadRecord (2);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [3].nEntries != 0) {  	numericSWARrecord.Maximum = info.block [3].nEntries - 1;  	labelSWARtotal.Text = "of " + (info.block [3].nEntries - 1);  } else {  	numericSWARrecord.Maximum = 0;  	labelSWARtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [3].nEntries != 0) {  	numericSWARrecord.Maximum = info.block [3].nEntries - 1;  	labelSWARtotal.Text = "of " + (info.block [3].nEntries - 1);  } else {  	numericSWARrecord.Maximum = 0;  	labelSWARtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [3].nEntries != 0) {  	numericSWARrecord.Maximum = info.block [3].nEntries - 1;  	labelSWARtotal.Text = "of " + (info.block [3].nEntries - 1);  } else {  	numericSWARrecord.Maximum = 0;  	labelSWARtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: numericSWARrecord.Maximum = info.block [3].nEntries - 1;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: labelSWARtotal.Text = "of " + (info.block [3].nEntries - 1);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: ReadRecord (3);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [4].nEntries != 0) {  	numericPLAYERrecord.Maximum = info.block [4].nEntries - 1;  	labelPLAYERtotal.Text = "of " + (info.block [4].nEntries - 1);  } else {  	numericPLAYERrecord.Maximum = 0;  	labelPLAYERtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [4].nEntries != 0) {  	numericPLAYERrecord.Maximum = info.block [4].nEntries - 1;  	labelPLAYERtotal.Text = "of " + (info.block [4].nEntries - 1);  } else {  	numericPLAYERrecord.Maximum = 0;  	labelPLAYERtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [4].nEntries != 0) {  	numericPLAYERrecord.Maximum = info.block [4].nEntries - 1;  	labelPLAYERtotal.Text = "of " + (info.block [4].nEntries - 1);  } else {  	numericPLAYERrecord.Maximum = 0;  	labelPLAYERtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: numericPLAYERrecord.Maximum = info.block [4].nEntries - 1;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: labelPLAYERtotal.Text = "of " + (info.block [4].nEntries - 1);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: ReadRecord (4);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [5].nEntries != 0) {  	numericGROUPrecord.Maximum = info.block [5].nEntries - 1;  	labelGROUPtotal.Text = "of " + (info.block [5].nEntries - 1);  } else {  	numericGROUPrecord.Maximum = 0;  	labelGROUPtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [5].nEntries != 0) {  	numericGROUPrecord.Maximum = info.block [5].nEntries - 1;  	labelGROUPtotal.Text = "of " + (info.block [5].nEntries - 1);  } else {  	numericGROUPrecord.Maximum = 0;  	labelGROUPtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [5].nEntries != 0) {  	numericGROUPrecord.Maximum = info.block [5].nEntries - 1;  	labelGROUPtotal.Text = "of " + (info.block [5].nEntries - 1);  } else {  	numericGROUPrecord.Maximum = 0;  	labelGROUPtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: numericGROUPrecord.Maximum = info.block [5].nEntries - 1;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: labelGROUPtotal.Text = "of " + (info.block [5].nEntries - 1);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: ReadRecord (5);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [6].nEntries != 0) {  	numericPLAYER2record.Maximum = info.block [6].nEntries - 1;  	labelPLAYER2total.Text = "of " + (info.block [6].nEntries - 1);  } else {  	numericPLAYER2record.Maximum = 0;  	labelPLAYER2total.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [6].nEntries != 0) {  	numericPLAYER2record.Maximum = info.block [6].nEntries - 1;  	labelPLAYER2total.Text = "of " + (info.block [6].nEntries - 1);  } else {  	numericPLAYER2record.Maximum = 0;  	labelPLAYER2total.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [6].nEntries != 0) {  	numericPLAYER2record.Maximum = info.block [6].nEntries - 1;  	labelPLAYER2total.Text = "of " + (info.block [6].nEntries - 1);  } else {  	numericPLAYER2record.Maximum = 0;  	labelPLAYER2total.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: numericPLAYER2record.Maximum = info.block [6].nEntries - 1;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: labelPLAYER2total.Text = "of " + (info.block [6].nEntries - 1);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: ReadRecord (6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [7].nEntries != 0) {  	numericSTRMrecord.Maximum = info.block [7].nEntries - 1;  	labelSTRMtotal.Text = "of " + (info.block [7].nEntries - 1);  } else {  	numericSTRMrecord.Maximum = 0;  	labelSTRMtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [7].nEntries != 0) {  	numericSTRMrecord.Maximum = info.block [7].nEntries - 1;  	labelSTRMtotal.Text = "of " + (info.block [7].nEntries - 1);  } else {  	numericSTRMrecord.Maximum = 0;  	labelSTRMtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: if (info.block [7].nEntries != 0) {  	numericSTRMrecord.Maximum = info.block [7].nEntries - 1;  	labelSTRMtotal.Text = "of " + (info.block [7].nEntries - 1);  } else {  	numericSTRMrecord.Maximum = 0;  	labelSTRMtotal.Text = "of none";  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: numericSTRMrecord.Maximum = info.block [7].nEntries - 1;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: labelSTRMtotal.Text = "of " + (info.block [7].nEntries - 1);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadInfo,The following statement contains a magic number: ReadRecord (7);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: if (info.block [2].nEntries == 0) {  	numericSBNKfileID.Enabled = false;  	numericSBNKunknown.Enabled = false;  	numericSBNKwa1.Enabled = false;  	numericSBNKwa2.Enabled = false;  	numericSBNKwa3.Enabled = false;  	numericSBNKwa4.Enabled = false;  	return;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericSBNKwa3.Value = sbnk.wa [2];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericSBNKwa4.Value = sbnk.wa [3];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: if (info.block [3].nEntries == 0)  	return;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: if (info.block [4].nEntries == 0) {  	btnPLAYERremove.Enabled = false;  	numericPLAYERunknown.Enabled = false;  	numericPLAYERunknown2.Enabled = false;  	return;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: if (info.block [5].nEntries == 0) {  	btnGROUPremove.Enabled = false;  	btnGROUPsubgroupAdd.Enabled = false;  	btnGROUPsubgroupRemove.Enabled = false;  	labelGROUPsubgroupTotal.Text = "no group";  	numericGROUPcurrentSubgroup.Enabled = false;  	comboBoxGROUPtype.Enabled = false;  	numericGROUPentry.Enabled = false;  	return;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: if (info.block [6].nEntries == 0) {  	btnPLAYER2remove.Enabled = false;  	numericPLAYER2count.Enabled = false;  	numericPLAYER2v1.Enabled = false;  	numericPLAYER2v2.Enabled = false;  	numericPLAYER2v3.Enabled = false;  	numericPLAYER2v4.Enabled = false;  	numericPLAYER2v5.Enabled = false;  	numericPLAYER2v6.Enabled = false;  	numericPLAYER2v7.Enabled = false;  	numericPLAYER2v8.Enabled = false;  	numericPLAYER2v9.Enabled = false;  	numericPLAYER2v10.Enabled = false;  	numericPLAYER2v11.Enabled = false;  	numericPLAYER2v12.Enabled = false;  	numericPLAYER2v13.Enabled = false;  	numericPLAYER2v14.Enabled = false;  	numericPLAYER2v15.Enabled = false;  	numericPLAYER2v16.Enabled = false;  	return;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v3.Value = player2.v [2];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v4.Value = player2.v [3];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v5.Value = player2.v [4];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v6.Value = player2.v [5];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v7.Value = player2.v [6];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v8.Value = player2.v [7];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v9.Value = player2.v [8];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v10.Value = player2.v [9];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v11.Value = player2.v [10];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v12.Value = player2.v [11];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v13.Value = player2.v [12];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v14.Value = player2.v [13];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v15.Value = player2.v [14];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: numericPLAYER2v16.Value = player2.v [15];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following statement contains a magic number: if (info.block [7].nEntries == 0) {  	numericSTRMfileID.Enabled = false;  	numericSTRMunknown.Enabled = false;  	numericSTRMpri.Enabled = false;  	numericSTRMvol.Enabled = false;  	numericSTRMply.Enabled = false;  	return;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSSEQ_ValueChanged,The following statement contains a magic number: seq.unknown2 = new byte[2];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSBNKrecord_ValueChanged,The following statement contains a magic number: ReadRecord (2);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSBNK_ValueChanged,The following statement contains a magic number: if (info.block [2].nEntries == 0)  	return;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSBNK_ValueChanged,The following statement contains a magic number: sbnk.wa = new ushort[4];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSBNK_ValueChanged,The following statement contains a magic number: sbnk.wa [2] = (ushort)numericSBNKwa3.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSBNK_ValueChanged,The following statement contains a magic number: sbnk.wa [3] = (ushort)numericSBNKwa4.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSBNK_ValueChanged,The following statement contains a magic number: info.block [2].entries [(int)numericSBNKrecord.Value] = sbnk;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSWARrecord_ValueChanged,The following statement contains a magic number: ReadRecord (3);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSWAR_ValueChanged,The following statement contains a magic number: if (info.block [3].nEntries == 0)  	return;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSWAR_ValueChanged,The following statement contains a magic number: info.block [3].entries [(int)numericSWARrecord.Value] = swar;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSTRMrecord_ValueChanged,The following statement contains a magic number: ReadRecord (7);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSTRM_ValueChanged,The following statement contains a magic number: if (info.block [7].nEntries == 0)  	return;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSTRM_ValueChanged,The following statement contains a magic number: strm.reserved = new byte[5];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericSTRM_ValueChanged,The following statement contains a magic number: info.block [7].entries [(int)numericSTRMrecord.Value] = strm;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYERrecord_ValueChanged,The following statement contains a magic number: ReadRecord (4);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER_ValueChanged,The following statement contains a magic number: if (info.block [4].nEntries == 0)  	return;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER_ValueChanged,The following statement contains a magic number: player.padding = new byte[3];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER_ValueChanged,The following statement contains a magic number: info.block [4].entries [(int)numericPLAYERrecord.Value] = player;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYERadd_Click,The following statement contains a magic number: Array.Copy (info.block [4].entries' 0' entries' 0' info.block [4].entries.Length);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYERadd_Click,The following statement contains a magic number: Array.Copy (info.block [4].entries' 0' entries' 0' info.block [4].entries.Length);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYERadd_Click,The following statement contains a magic number: info.block [4].entries = entries;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYERremove_Click,The following statement contains a magic number: for (int i = 0' j = 0; i < info.block [4].entries.Length; i++) {  	if (i == numericPLAYERrecord.Value)  		continue;  	entries [j++] = info.block [4].entries [i];  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYERremove_Click,The following statement contains a magic number: for (int i = 0' j = 0; i < info.block [4].entries.Length; i++) {  	if (i == numericPLAYERrecord.Value)  		continue;  	entries [j++] = info.block [4].entries [i];  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYERremove_Click,The following statement contains a magic number: entries [j++] = info.block [4].entries [i];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYERremove_Click,The following statement contains a magic number: info.block [4].entries = entries;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2record_ValueChanged,The following statement contains a magic number: ReadRecord (6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: if (info.block [6].nEntries == 0)  	return;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v = new byte[16];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [2] = (byte)numericPLAYER2v3.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [3] = (byte)numericPLAYER2v4.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [4] = (byte)numericPLAYER2v5.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [5] = (byte)numericPLAYER2v6.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [6] = (byte)numericPLAYER2v7.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [7] = (byte)numericPLAYER2v8.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [8] = (byte)numericPLAYER2v9.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [9] = (byte)numericPLAYER2v10.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [10] = (byte)numericPLAYER2v11.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [11] = (byte)numericPLAYER2v12.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [12] = (byte)numericPLAYER2v13.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [13] = (byte)numericPLAYER2v14.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [14] = (byte)numericPLAYER2v15.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.v [15] = (byte)numericPLAYER2v16.Value;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: player2.reserved = new byte[7];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericPLAYER2_ValueChanged,The following statement contains a magic number: info.block [6].entries [(int)numericPLAYER2record.Value] = player2;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYER2add_Click,The following statement contains a magic number: Array.Copy (info.block [6].entries' 0' entries' 0' info.block [6].entries.Length);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYER2add_Click,The following statement contains a magic number: Array.Copy (info.block [6].entries' 0' entries' 0' info.block [6].entries.Length);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYER2add_Click,The following statement contains a magic number: info.block [6].entries = entries;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYER2remove_Click,The following statement contains a magic number: for (int i = 0' j = 0; i < info.block [6].entries.Length; i++) {  	if (i == numericPLAYER2record.Value)  		continue;  	entries [j++] = info.block [6].entries [i];  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYER2remove_Click,The following statement contains a magic number: for (int i = 0' j = 0; i < info.block [6].entries.Length; i++) {  	if (i == numericPLAYER2record.Value)  		continue;  	entries [j++] = info.block [6].entries [i];  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYER2remove_Click,The following statement contains a magic number: entries [j++] = info.block [6].entries [i];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnPLAYER2remove_Click,The following statement contains a magic number: info.block [6].entries = entries;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericGROUPrecord_ValueChanged,The following statement contains a magic number: ReadRecord (5);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericGROUPcurrentGroup_ValueChanged,The following statement contains a magic number: if (info.block [5].nEntries == 0)  	return;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericGROUPcurrentGroup_ValueChanged,The following statement contains a magic number: switch (group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type) {  case 0x0700:  	comboBoxGROUPtype.SelectedIndex = 0;  	break;  case 0x0803:  	comboBoxGROUPtype.SelectedIndex = 1;  	break;  case 0x0601:  	comboBoxGROUPtype.SelectedIndex = 2;  	break;  case 0x0402:  	comboBoxGROUPtype.SelectedIndex = 3;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericGROUPcurrentGroup_ValueChanged,The following statement contains a magic number: switch (group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type) {  case 0x0700:  	comboBoxGROUPtype.SelectedIndex = 0;  	break;  case 0x0803:  	comboBoxGROUPtype.SelectedIndex = 1;  	break;  case 0x0601:  	comboBoxGROUPtype.SelectedIndex = 2;  	break;  case 0x0402:  	comboBoxGROUPtype.SelectedIndex = 3;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericGROUPcurrentGroup_ValueChanged,The following statement contains a magic number: comboBoxGROUPtype.SelectedIndex = 2;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericGROUPcurrentGroup_ValueChanged,The following statement contains a magic number: comboBoxGROUPtype.SelectedIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnGROUPentryAdd_Click,The following statement contains a magic number: info.block [5].entries [(int)numericGROUPrecord.Value] = group;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnGROUPentryRemove_Click,The following statement contains a magic number: info.block [5].entries [(int)numericGROUPrecord.Value] = group;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnGROUPadd_Click,The following statement contains a magic number: Array.Copy (info.block [5].entries' 0' entries' 0' info.block [5].entries.Length);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnGROUPadd_Click,The following statement contains a magic number: Array.Copy (info.block [5].entries' 0' entries' 0' info.block [5].entries.Length);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnGROUPadd_Click,The following statement contains a magic number: info.block [5].entries = entries;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnGROUPremove_Click,The following statement contains a magic number: for (int i = 0' j = 0; i < info.block [5].entries.Length; i++) {  	if (i == numericGROUPrecord.Value)  		continue;  	entries [j++] = info.block [5].entries [i];  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnGROUPremove_Click,The following statement contains a magic number: for (int i = 0' j = 0; i < info.block [5].entries.Length; i++) {  	if (i == numericGROUPrecord.Value)  		continue;  	entries [j++] = info.block [5].entries [i];  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnGROUPremove_Click,The following statement contains a magic number: entries [j++] = info.block [5].entries [i];  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,btnGROUPremove_Click,The following statement contains a magic number: info.block [5].entries = entries;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericGROUPentry_ValueChanged,The following statement contains a magic number: info.block [5].entries [(int)numericGROUPrecord.Value] = group;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,comboBoxGROUPtype_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxGROUPtype.SelectedIndex) {  case 0:  	group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type = 0x0700;  	break;  case 1:  	group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type = 0x0803;  	break;  case 2:  	group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type = 0x0601;  	break;  case 3:  	group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type = 0x0402;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,comboBoxGROUPtype_SelectedIndexChanged,The following statement contains a magic number: switch (comboBoxGROUPtype.SelectedIndex) {  case 0:  	group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type = 0x0700;  	break;  case 1:  	group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type = 0x0803;  	break;  case 2:  	group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type = 0x0601;  	break;  case 3:  	group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type = 0x0402;  	break;  }  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,comboBoxGROUPtype_SelectedIndexChanged,The following statement contains a magic number: info.block [5].entries [(int)numericGROUPrecord.Value] = group;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnAccept.Location = new System.Drawing.Point (285' 274);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnAccept.Location = new System.Drawing.Point (285' 274);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnAccept.Size = new System.Drawing.Size (90' 34);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnAccept.Size = new System.Drawing.Size (90' 34);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Size = new System.Drawing.Size (384' 316);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.Size = new System.Drawing.Size (384' 316);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabControl1.TabIndex = 2;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Padding = new System.Windows.Forms.Padding (3);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage1.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSSEQ.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSSEQ.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSSEQ.Size = new System.Drawing.Size (285' 204);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSSEQ.Size = new System.Drawing.Size (285' 204);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSSEQ.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQcpr.Location = new System.Drawing.Point (145' 123);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQcpr.Location = new System.Drawing.Point (145' 123);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQcpr.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQcpr.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQcpr.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQcpr.TabIndex = 17;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQppr.Location = new System.Drawing.Point (145' 149);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQppr.Location = new System.Drawing.Point (145' 149);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQppr.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQppr.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQppr.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQppr.TabIndex = 16;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQVol.Location = new System.Drawing.Point (145' 97);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQVol.Location = new System.Drawing.Point (145' 97);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQVol.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQVol.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQVol.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQVol.TabIndex = 14;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQBnk.Location = new System.Drawing.Point (145' 71);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQBnk.Location = new System.Drawing.Point (145' 71);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQBnk.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQBnk.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQBnk.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQBnk.TabIndex = 12;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQply.Location = new System.Drawing.Point (145' 175);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQply.Location = new System.Drawing.Point (145' 175);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQply.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQply.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQply.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQply.TabIndex = 11;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQunknown.Location = new System.Drawing.Point (145' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQunknown.Location = new System.Drawing.Point (145' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQunknown.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQunknown.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQunknown.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQunknown.TabIndex = 10;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQfileID.Location = new System.Drawing.Point (145' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQfileID.Location = new System.Drawing.Point (145' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQfileID.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQfileID.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQfileID.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQfileID.TabIndex = 9;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQply.Location = new System.Drawing.Point (6' 177);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQply.Location = new System.Drawing.Point (6' 177);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQply.Size = new System.Drawing.Size (30' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQply.Size = new System.Drawing.Size (30' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQply.TabIndex = 7;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQppr.Location = new System.Drawing.Point (6' 151);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQppr.Location = new System.Drawing.Point (6' 151);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQppr.Size = new System.Drawing.Size (105' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQppr.Size = new System.Drawing.Size (105' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQppr.TabIndex = 6;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQcpr.Location = new System.Drawing.Point (6' 125);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQcpr.Location = new System.Drawing.Point (6' 125);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQcpr.Size = new System.Drawing.Size (92' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQcpr.Size = new System.Drawing.Size (92' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQcpr.TabIndex = 5;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQvol.Location = new System.Drawing.Point (6' 99);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQvol.Location = new System.Drawing.Point (6' 99);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQvol.Size = new System.Drawing.Size (45' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQvol.Size = new System.Drawing.Size (45' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQvol.TabIndex = 4;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQbnk.Location = new System.Drawing.Point (6' 73);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQbnk.Location = new System.Drawing.Point (6' 73);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQbnk.Size = new System.Drawing.Size (35' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQbnk.Size = new System.Drawing.Size (35' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQbnk.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQunknown.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQunknown.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQunknown.Size = new System.Drawing.Size (56' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQunknown.Size = new System.Drawing.Size (56' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQunknown.TabIndex = 2;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQfileID.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQfileID.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQfileID.Size = new System.Drawing.Size (40' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQfileID.Size = new System.Drawing.Size (40' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQtotal.TabIndex = 2;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSEQcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSEQrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Padding = new System.Windows.Forms.Padding (3);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage2.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSSAR.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSSAR.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSSAR.Size = new System.Drawing.Size (215' 78);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSSAR.Size = new System.Drawing.Size (215' 78);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSSAR.TabIndex = 6;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARunknown.Location = new System.Drawing.Point (80' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARunknown.Location = new System.Drawing.Point (80' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARunknown.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARunknown.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARunknown.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARunknown.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARunknown.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARunknown.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARunknown.Size = new System.Drawing.Size (56' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARunknown.Size = new System.Drawing.Size (56' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARunknown.TabIndex = 2;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARfileID.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARfileID.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARfileID.Size = new System.Drawing.Size (40' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARfileID.Size = new System.Drawing.Size (40' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARfileID.Location = new System.Drawing.Point (80' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARfileID.Location = new System.Drawing.Point (80' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARfileID.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARfileID.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARfileID.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARtotal.TabIndex = 5;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSSARcurrent.TabIndex = 4;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSSARrecord.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage3.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage3.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage3.Padding = new System.Windows.Forms.Padding (3);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage3.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage3.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage3.TabIndex = 2;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSBNK.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSBNK.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSBNK.Size = new System.Drawing.Size (253' 182);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSBNK.Size = new System.Drawing.Size (253' 182);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSBNK.TabIndex = 6;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKunknown.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKunknown.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKunknown.Size = new System.Drawing.Size (53' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKunknown.Size = new System.Drawing.Size (53' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKunknown.TabIndex = 13;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKunknown.Location = new System.Drawing.Point (117' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKunknown.Location = new System.Drawing.Point (117' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKunknown.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKunknown.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKunknown.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKunknown.TabIndex = 12;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKfileID.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKfileID.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKfileID.Size = new System.Drawing.Size (40' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKfileID.Size = new System.Drawing.Size (40' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKfileID.TabIndex = 11;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKfileID.Location = new System.Drawing.Point (117' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKfileID.Location = new System.Drawing.Point (117' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKfileID.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKfileID.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKfileID.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKfileID.TabIndex = 10;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa4.Location = new System.Drawing.Point (6' 151);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa4.Location = new System.Drawing.Point (6' 151);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa4.Size = new System.Drawing.Size (106' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa4.Size = new System.Drawing.Size (106' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa4.TabIndex = 9;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa4.Location = new System.Drawing.Point (117' 149);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa4.Location = new System.Drawing.Point (117' 149);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa4.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa4.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa4.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa4.TabIndex = 8;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa3.Location = new System.Drawing.Point (6' 125);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa3.Location = new System.Drawing.Point (6' 125);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa3.Size = new System.Drawing.Size (106' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa3.Size = new System.Drawing.Size (106' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa3.TabIndex = 7;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa3.Location = new System.Drawing.Point (117' 123);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa3.Location = new System.Drawing.Point (117' 123);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa3.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa3.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa3.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa3.TabIndex = 6;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa2.Location = new System.Drawing.Point (6' 99);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa2.Location = new System.Drawing.Point (6' 99);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa2.Size = new System.Drawing.Size (106' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa2.Size = new System.Drawing.Size (106' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa2.TabIndex = 5;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa2.Location = new System.Drawing.Point (117' 97);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa2.Location = new System.Drawing.Point (117' 97);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa2.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa2.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa2.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa2.TabIndex = 4;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa1.Location = new System.Drawing.Point (6' 73);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa1.Location = new System.Drawing.Point (6' 73);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa1.Size = new System.Drawing.Size (106' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa1.Size = new System.Drawing.Size (106' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKwa1.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa1.Location = new System.Drawing.Point (117' 71);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa1.Location = new System.Drawing.Point (117' 71);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa1.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa1.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa1.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKwa1.TabIndex = 2;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKtotal.TabIndex = 5;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSBNKcurrent.TabIndex = 4;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSBNKrecord.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage4.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage4.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage4.Padding = new System.Windows.Forms.Padding (3);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage4.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage4.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage4.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSWAR.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSWAR.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSWAR.Size = new System.Drawing.Size (214' 78);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSWAR.Size = new System.Drawing.Size (214' 78);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSWAR.TabIndex = 6;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARunknown.Location = new System.Drawing.Point (81' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARunknown.Location = new System.Drawing.Point (81' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARunknown.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARunknown.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARunknown.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARunknown.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARfileID.Location = new System.Drawing.Point (81' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARfileID.Location = new System.Drawing.Point (81' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARfileID.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARfileID.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARfileID.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARfileID.TabIndex = 2;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARunknown.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARunknown.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARunknown.Size = new System.Drawing.Size (56' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARunknown.Size = new System.Drawing.Size (56' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARfileID.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARfileID.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARfileID.Size = new System.Drawing.Size (40' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARfileID.Size = new System.Drawing.Size (40' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARtotal.TabIndex = 5;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSWARcurrent.TabIndex = 4;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSWARrecord.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage5.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage5.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage5.Padding = new System.Windows.Forms.Padding (3);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage5.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage5.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage5.TabIndex = 4;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSTRM.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSTRM.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSTRM.Size = new System.Drawing.Size (234' 153);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSTRM.Size = new System.Drawing.Size (234' 153);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupSTRM.TabIndex = 6;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMply.Location = new System.Drawing.Point (95' 122);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMply.Location = new System.Drawing.Point (95' 122);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMply.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMply.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMply.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMply.TabIndex = 13;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMply.Location = new System.Drawing.Point (6' 124);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMply.Location = new System.Drawing.Point (6' 124);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMply.Size = new System.Drawing.Size (30' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMply.Size = new System.Drawing.Size (30' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMply.TabIndex = 12;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMpri.Location = new System.Drawing.Point (95' 96);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMpri.Location = new System.Drawing.Point (95' 96);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMpri.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMpri.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMpri.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMpri.TabIndex = 11;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMpri.Location = new System.Drawing.Point (6' 98);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMpri.Location = new System.Drawing.Point (6' 98);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMpri.Size = new System.Drawing.Size (41' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMpri.Size = new System.Drawing.Size (41' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMpri.TabIndex = 10;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMvol.Location = new System.Drawing.Point (95' 71);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMvol.Location = new System.Drawing.Point (95' 71);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMvol.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMvol.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMvol.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMvol.TabIndex = 9;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMvol.Location = new System.Drawing.Point (6' 73);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMvol.Location = new System.Drawing.Point (6' 73);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMvol.Size = new System.Drawing.Size (45' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMvol.Size = new System.Drawing.Size (45' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMvol.TabIndex = 8;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMunknown.Location = new System.Drawing.Point (95' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMunknown.Location = new System.Drawing.Point (95' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMunknown.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMunknown.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMunknown.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMunknown.TabIndex = 7;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMfileID.Location = new System.Drawing.Point (95' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMfileID.Location = new System.Drawing.Point (95' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMfileID.Maximum = new decimal (new int[] {  	65535'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMfileID.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMfileID.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMfileID.TabIndex = 6;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMunknown.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMunknown.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMunknown.Size = new System.Drawing.Size (56' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMunknown.Size = new System.Drawing.Size (56' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMunknown.TabIndex = 5;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMfileID.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMfileID.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMfileID.Size = new System.Drawing.Size (40' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMfileID.Size = new System.Drawing.Size (40' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMfileID.TabIndex = 4;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMtotal.TabIndex = 5;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelSTRMcurrent.TabIndex = 4;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericSTRMrecord.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage6.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage6.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage6.Padding = new System.Windows.Forms.Padding (3);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage6.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage6.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage6.TabIndex = 5;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYERremove.Location = new System.Drawing.Point (293' 37);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYERremove.Location = new System.Drawing.Point (293' 37);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYERremove.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYERremove.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYERremove.TabIndex = 10;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYERadd.Location = new System.Drawing.Point (293' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYERadd.Location = new System.Drawing.Point (293' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYERadd.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYERadd.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYERadd.TabIndex = 9;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupPLAYER.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupPLAYER.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupPLAYER.Size = new System.Drawing.Size (216' 75);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupPLAYER.Size = new System.Drawing.Size (216' 75);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupPLAYER.TabIndex = 6;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERunknown2.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERunknown2.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERunknown2.Size = new System.Drawing.Size (65' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERunknown2.Size = new System.Drawing.Size (65' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERunknown2.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERunknown2.Location = new System.Drawing.Point (81' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERunknown2.Location = new System.Drawing.Point (81' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERunknown2.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERunknown2.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERunknown2.TabIndex = 2;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERunknown.Location = new System.Drawing.Point (81' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERunknown.Location = new System.Drawing.Point (81' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERunknown.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERunknown.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERunknown.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERunknown.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERunknown.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERunknown.Size = new System.Drawing.Size (65' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERunknown.Size = new System.Drawing.Size (65' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERtotal.TabIndex = 5;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERcurrent.TabIndex = 4;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYERrecord.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage7.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage7.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage7.Padding = new System.Windows.Forms.Padding (3);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage7.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage7.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage7.TabIndex = 6;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYER2remove.Location = new System.Drawing.Point (293' 37);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYER2remove.Location = new System.Drawing.Point (293' 37);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYER2remove.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYER2remove.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYER2remove.TabIndex = 10;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYER2add.Location = new System.Drawing.Point (293' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYER2add.Location = new System.Drawing.Point (293' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYER2add.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYER2add.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnPLAYER2add.TabIndex = 9;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupPLAYER2.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupPLAYER2.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupPLAYER2.Size = new System.Drawing.Size (254' 253);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupPLAYER2.Size = new System.Drawing.Size (254' 253);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupPLAYER2.TabIndex = 6;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v9.Location = new System.Drawing.Point (182' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v9.Location = new System.Drawing.Point (182' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v9.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v9.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v9.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v9.TabIndex = 33;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v9.Location = new System.Drawing.Point (131' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v9.Location = new System.Drawing.Point (131' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v9.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v9.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v9.TabIndex = 32;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v5.Location = new System.Drawing.Point (57' 149);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v5.Location = new System.Drawing.Point (57' 149);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v5.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v5.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v5.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v5.TabIndex = 31;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv5.Location = new System.Drawing.Point (6' 151);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv5.Location = new System.Drawing.Point (6' 151);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv5.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv5.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv5.TabIndex = 30;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v4.Location = new System.Drawing.Point (57' 123);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v4.Location = new System.Drawing.Point (57' 123);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v4.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v4.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v4.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v4.TabIndex = 29;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv4.Location = new System.Drawing.Point (6' 126);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv4.Location = new System.Drawing.Point (6' 126);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv4.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv4.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv4.TabIndex = 28;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v3.Location = new System.Drawing.Point (57' 97);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v3.Location = new System.Drawing.Point (57' 97);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v3.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v3.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v3.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v3.TabIndex = 27;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v3.Location = new System.Drawing.Point (6' 99);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v3.Location = new System.Drawing.Point (6' 99);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v3.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v3.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v3.TabIndex = 26;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v1.Location = new System.Drawing.Point (57' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v1.Location = new System.Drawing.Point (57' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v1.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v1.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v1.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v1.TabIndex = 25;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v1.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v1.Location = new System.Drawing.Point (6' 47);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v1.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v1.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v1.TabIndex = 24;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v6.Location = new System.Drawing.Point (57' 175);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v6.Location = new System.Drawing.Point (57' 175);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v6.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v6.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v6.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v6.TabIndex = 23;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv6.Location = new System.Drawing.Point (6' 177);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv6.Location = new System.Drawing.Point (6' 177);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv6.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv6.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv6.TabIndex = 22;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v7.Location = new System.Drawing.Point (57' 201);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v7.Location = new System.Drawing.Point (57' 201);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v7.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v7.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v7.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v7.TabIndex = 21;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv7.Location = new System.Drawing.Point (6' 203);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv7.Location = new System.Drawing.Point (6' 203);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv7.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv7.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv7.TabIndex = 20;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v8.Location = new System.Drawing.Point (57' 227);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v8.Location = new System.Drawing.Point (57' 227);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v8.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v8.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v8.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v8.TabIndex = 19;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv8.Location = new System.Drawing.Point (6' 229);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv8.Location = new System.Drawing.Point (6' 229);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv8.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv8.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYERv8.TabIndex = 18;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v16.Location = new System.Drawing.Point (182' 201);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v16.Location = new System.Drawing.Point (182' 201);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v16.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v16.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v16.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v16.TabIndex = 17;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v15.Location = new System.Drawing.Point (132' 177);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v15.Location = new System.Drawing.Point (132' 177);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v15.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v15.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v15.TabIndex = 16;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v15.Location = new System.Drawing.Point (182' 175);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v15.Location = new System.Drawing.Point (182' 175);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v15.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v15.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v15.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v15.TabIndex = 15;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v14.Location = new System.Drawing.Point (131' 151);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v14.Location = new System.Drawing.Point (131' 151);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v14.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v14.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v14.TabIndex = 14;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v14.Location = new System.Drawing.Point (182' 149);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v14.Location = new System.Drawing.Point (182' 149);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v14.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v14.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v14.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v14.TabIndex = 13;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v16.Location = new System.Drawing.Point (131' 203);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v16.Location = new System.Drawing.Point (131' 203);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v16.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v16.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v16.TabIndex = 12;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v13.Location = new System.Drawing.Point (182' 123);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v13.Location = new System.Drawing.Point (182' 123);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v13.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v13.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v13.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v13.TabIndex = 11;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v13.Location = new System.Drawing.Point (131' 125);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v13.Location = new System.Drawing.Point (131' 125);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v13.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v13.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v13.TabIndex = 10;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v12.Location = new System.Drawing.Point (182' 97);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v12.Location = new System.Drawing.Point (182' 97);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v12.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v12.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v12.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v12.TabIndex = 9;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v12.Location = new System.Drawing.Point (131' 99);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v12.Location = new System.Drawing.Point (131' 99);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v12.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v12.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v12.TabIndex = 8;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v11.Location = new System.Drawing.Point (182' 71);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v11.Location = new System.Drawing.Point (182' 71);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v11.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v11.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v11.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v11.TabIndex = 7;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v11.Location = new System.Drawing.Point (131' 73);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v11.Location = new System.Drawing.Point (131' 73);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v11.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v11.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v11.TabIndex = 6;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v10.Location = new System.Drawing.Point (182' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v10.Location = new System.Drawing.Point (182' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v10.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v10.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v10.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v10.TabIndex = 5;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v10.Location = new System.Drawing.Point (131' 49);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v10.Location = new System.Drawing.Point (131' 49);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v10.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v10.Size = new System.Drawing.Size (29' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v10.TabIndex = 4;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v2.Location = new System.Drawing.Point (57' 71);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v2.Location = new System.Drawing.Point (57' 71);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v2.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v2.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v2.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2v2.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v2.Location = new System.Drawing.Point (6' 73);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v2.Location = new System.Drawing.Point (6' 73);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v2.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v2.Size = new System.Drawing.Size (23' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2v2.TabIndex = 2;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2count.Location = new System.Drawing.Point (57' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2count.Location = new System.Drawing.Point (57' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2count.Maximum = new decimal (new int[] {  	255'  	0'  	0'  	0  });  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2count.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2count.Size = new System.Drawing.Size (48' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2count.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2count.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2count.Size = new System.Drawing.Size (35' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2count.Size = new System.Drawing.Size (35' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2total.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2total.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2total.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2total.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2total.TabIndex = 5;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2current.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2current.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2current.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2current.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelPLAYER2current.TabIndex = 4;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2record.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2record.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2record.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2record.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericPLAYER2record.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage8.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage8.Location = new System.Drawing.Point (4' 22);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage8.Padding = new System.Windows.Forms.Padding (3);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage8.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage8.Size = new System.Drawing.Size (376' 290);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.tabPage8.TabIndex = 7;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPremove.Location = new System.Drawing.Point (293' 37);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPremove.Location = new System.Drawing.Point (293' 37);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPremove.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPremove.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPremove.TabIndex = 8;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupGROUP.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupGROUP.Location = new System.Drawing.Point (10' 32);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupGROUP.Size = new System.Drawing.Size (220' 177);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupGROUP.Size = new System.Drawing.Size (220' 177);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupGROUP.TabIndex = 6;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupGROUPsubgroup.Location = new System.Drawing.Point (9' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupGROUPsubgroup.Location = new System.Drawing.Point (9' 45);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupGROUPsubgroup.Size = new System.Drawing.Size (200' 124);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupGROUPsubgroup.Size = new System.Drawing.Size (200' 124);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.groupGROUPsubgroup.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPsubgroupRemove.Location = new System.Drawing.Point (102' 83);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPsubgroupRemove.Location = new System.Drawing.Point (102' 83);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPsubgroupRemove.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPsubgroupRemove.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPsubgroupRemove.TabIndex = 7;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPsubgroupAdd.Location = new System.Drawing.Point (18' 83);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPsubgroupAdd.Location = new System.Drawing.Point (18' 83);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPsubgroupAdd.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPsubgroupAdd.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPsubgroupAdd.TabIndex = 6;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxGROUPtype.Location = new System.Drawing.Point (61' 24);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxGROUPtype.Location = new System.Drawing.Point (61' 24);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxGROUPtype.Size = new System.Drawing.Size (121' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxGROUPtype.Size = new System.Drawing.Size (121' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.comboBoxGROUPtype.TabIndex = 4;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPentry.Location = new System.Drawing.Point (62' 51);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPentry.Location = new System.Drawing.Point (62' 51);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPentry.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPentry.Size = new System.Drawing.Size (120' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPentry.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPentry.Location = new System.Drawing.Point (6' 53);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPentry.Location = new System.Drawing.Point (6' 53);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPentry.Size = new System.Drawing.Size (34' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPentry.Size = new System.Drawing.Size (34' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPtype.Location = new System.Drawing.Point (6' 27);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPtype.Location = new System.Drawing.Point (6' 27);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPtype.Size = new System.Drawing.Size (34' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPtype.Size = new System.Drawing.Size (34' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPsubgroupTotal.Location = new System.Drawing.Point (167' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPsubgroupTotal.Location = new System.Drawing.Point (167' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPsubgroupTotal.Size = new System.Drawing.Size (19' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPsubgroupTotal.Size = new System.Drawing.Size (19' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPsubgroupTotal.TabIndex = 2;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPsubgroup.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPsubgroup.Location = new System.Drawing.Point (6' 21);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPsubgroup.Size = new System.Drawing.Size (56' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPsubgroup.Size = new System.Drawing.Size (56' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPcurrentSubgroup.Location = new System.Drawing.Point (70' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPcurrentSubgroup.Location = new System.Drawing.Point (70' 19);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPcurrentSubgroup.Size = new System.Drawing.Size (91' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPcurrentSubgroup.Size = new System.Drawing.Size (91' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPadd.Location = new System.Drawing.Point (293' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPadd.Location = new System.Drawing.Point (293' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPadd.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPadd.Size = new System.Drawing.Size (75' 25);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.btnGROUPadd.TabIndex = 7;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPtotal.Location = new System.Drawing.Point (177' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPtotal.Size = new System.Drawing.Size (16' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPtotal.TabIndex = 5;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPcurrent.Location = new System.Drawing.Point (8' 8);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPcurrent.Size = new System.Drawing.Size (77' 13);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.labelGROUPcurrent.TabIndex = 4;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPrecord.Location = new System.Drawing.Point (91' 6);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPrecord.Size = new System.Drawing.Size (80' 20);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.numericGROUPrecord.TabIndex = 3;  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (384' 316);  
Magic Number,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (384' 316);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,ReadLanguage,The following statement contains a magic number: try {  	System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load (Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "SDATLang.xml");  	xml = xml.Element (pluginHost.Get_Language ());  	xml = xml.Element ("iSDAT");  	columnCampo.Text = xml.Element ("S00").Value;  	columnValor.Text = xml.Element ("S01").Value;  	listProp.Items [0].Text = xml.Element ("S02").Value;  	listProp.Items [1].Text = xml.Element ("S03").Value;  	listProp.Items [2].Text = xml.Element ("S04").Value;  	listProp.Items [3].Text = xml.Element ("S05").Value;  	listProp.Items [4].Text = xml.Element ("S11").Value;  	checkLoop.Text = xml.Element ("S06").Value;  	btnUncompress.Text = xml.Element ("S07").Value;  	btnExtract.Text = xml.Element ("S08").Value;  	btnMidi.Text = xml.Element ("S09").Value;  	btnWav.Text = xml.Element ("S0A").Value;  	btnImport.Text = xml.Element ("S0B").Value;  	btnCreate.Text = xml.Element ("S0C").Value;  	btnChangeFile.Text = xml.Element ("S0D").Value;  	btnInfo.Text = xml.Element ("S0E").Value;  } catch {  	throw new Exception ("There was an error reading the XML file of language.");  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,ReadLanguage,The following statement contains a magic number: try {  	System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load (Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "SDATLang.xml");  	xml = xml.Element (pluginHost.Get_Language ());  	xml = xml.Element ("iSDAT");  	columnCampo.Text = xml.Element ("S00").Value;  	columnValor.Text = xml.Element ("S01").Value;  	listProp.Items [0].Text = xml.Element ("S02").Value;  	listProp.Items [1].Text = xml.Element ("S03").Value;  	listProp.Items [2].Text = xml.Element ("S04").Value;  	listProp.Items [3].Text = xml.Element ("S05").Value;  	listProp.Items [4].Text = xml.Element ("S11").Value;  	checkLoop.Text = xml.Element ("S06").Value;  	btnUncompress.Text = xml.Element ("S07").Value;  	btnExtract.Text = xml.Element ("S08").Value;  	btnMidi.Text = xml.Element ("S09").Value;  	btnWav.Text = xml.Element ("S0A").Value;  	btnImport.Text = xml.Element ("S0B").Value;  	btnCreate.Text = xml.Element ("S0C").Value;  	btnChangeFile.Text = xml.Element ("S0D").Value;  	btnInfo.Text = xml.Element ("S0E").Value;  } catch {  	throw new Exception ("There was an error reading the XML file of language.");  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,ReadLanguage,The following statement contains a magic number: try {  	System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load (Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "SDATLang.xml");  	xml = xml.Element (pluginHost.Get_Language ());  	xml = xml.Element ("iSDAT");  	columnCampo.Text = xml.Element ("S00").Value;  	columnValor.Text = xml.Element ("S01").Value;  	listProp.Items [0].Text = xml.Element ("S02").Value;  	listProp.Items [1].Text = xml.Element ("S03").Value;  	listProp.Items [2].Text = xml.Element ("S04").Value;  	listProp.Items [3].Text = xml.Element ("S05").Value;  	listProp.Items [4].Text = xml.Element ("S11").Value;  	checkLoop.Text = xml.Element ("S06").Value;  	btnUncompress.Text = xml.Element ("S07").Value;  	btnExtract.Text = xml.Element ("S08").Value;  	btnMidi.Text = xml.Element ("S09").Value;  	btnWav.Text = xml.Element ("S0A").Value;  	btnImport.Text = xml.Element ("S0B").Value;  	btnCreate.Text = xml.Element ("S0C").Value;  	btnChangeFile.Text = xml.Element ("S0D").Value;  	btnInfo.Text = xml.Element ("S0E").Value;  } catch {  	throw new Exception ("There was an error reading the XML file of language.");  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,ReadLanguage,The following statement contains a magic number: listProp.Items [2].Text = xml.Element ("S04").Value;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,ReadLanguage,The following statement contains a magic number: listProp.Items [3].Text = xml.Element ("S05").Value;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,ReadLanguage,The following statement contains a magic number: listProp.Items [4].Text = xml.Element ("S11").Value;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FormatoToImage,The following statement contains a magic number: switch (formato) {  case FormatSound.SSEQ:  	//return 2; No soportado este formato aún  	return 8;  case FormatSound.SSAR:  	//return 2; No soportado este formato aún  	return 8;  case FormatSound.SBNK:  	//return 4; No soportado este formato aún  	return 8;  case FormatSound.SWAV:  	return 1;  case FormatSound.SWAR:  	return 7;  case FormatSound.STRM:  	return 1;  default:  	return 1;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FormatoToImage,The following statement contains a magic number: switch (formato) {  case FormatSound.SSEQ:  	//return 2; No soportado este formato aún  	return 8;  case FormatSound.SSAR:  	//return 2; No soportado este formato aún  	return 8;  case FormatSound.SBNK:  	//return 4; No soportado este formato aún  	return 8;  case FormatSound.SWAV:  	return 1;  case FormatSound.SWAR:  	return 7;  case FormatSound.STRM:  	return 1;  default:  	return 1;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FormatoToImage,The following statement contains a magic number: switch (formato) {  case FormatSound.SSEQ:  	//return 2; No soportado este formato aún  	return 8;  case FormatSound.SSAR:  	//return 2; No soportado este formato aún  	return 8;  case FormatSound.SBNK:  	//return 4; No soportado este formato aún  	return 8;  case FormatSound.SWAV:  	return 1;  case FormatSound.SWAR:  	return 7;  case FormatSound.STRM:  	return 1;  default:  	return 1;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FormatoToImage,The following statement contains a magic number: switch (formato) {  case FormatSound.SSEQ:  	//return 2; No soportado este formato aún  	return 8;  case FormatSound.SSAR:  	//return 2; No soportado este formato aún  	return 8;  case FormatSound.SBNK:  	//return 4; No soportado este formato aún  	return 8;  case FormatSound.SWAV:  	return 1;  case FormatSound.SWAR:  	return 7;  case FormatSound.STRM:  	return 1;  default:  	return 1;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FormatoToImage,The following statement contains a magic number: return 8;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FormatoToImage,The following statement contains a magic number: return 8;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FormatoToImage,The following statement contains a magic number: return 8;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FormatoToImage,The following statement contains a magic number: return 7;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The following statement contains a magic number: if (listProp.Items [0].SubItems.Count == 2)  	for (int i = 0; i < listProp.Items.Count; i++)  		listProp.Items [i].SubItems.RemoveAt (1);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The following statement contains a magic number: if (id < 0x0F000) {  	Sound fileSelect = SearchFile (id' sdat.files.root);  	listProp.Items [0].SubItems.Add ("0x" + String.Format ("{0:X}"' fileSelect.id));  	listProp.Items [1].SubItems.Add (fileSelect.name);  	listProp.Items [2].SubItems.Add ("0x" + String.Format ("{0:X}"' fileSelect.offset));  	listProp.Items [3].SubItems.Add (fileSelect.size.ToString ());  	listProp.Items [4].SubItems.Add (fileSelect.path);  	btnExtract.Enabled = true;  	if (fileSelect.type == FormatSound.SWAV || fileSelect.type == FormatSound.STRM) {  		btnReproducir.Enabled = true;  		btnWav.Enabled = true;  		btnInfo.Enabled = true;  		checkLoop.Enabled = true;  		btnImport.Enabled = true;  	} else if (fileSelect.type == FormatSound.SWAR) {  		btnUncompress.Enabled = true;  		if ((String)fileSelect.tag == "Descomprimido")  			btnUncompress.Text = xml.Element ("S12").Value;  		else  			btnUncompress.Text = xml.Element ("S07").Value;  		btnInfo.Enabled = true;  	}  } else {  	Folder folSelect = SearchFolder (id' sdat.files.root);  	listProp.Items [0].SubItems.Add ("0x" + String.Format ("{0:X}"' folSelect.id));  	listProp.Items [1].SubItems.Add (folSelect.name);  	listProp.Items [2].SubItems.Add ("");  	listProp.Items [3].SubItems.Add ("");  	listProp.Items [4].SubItems.Add ("");  	btnExtract.Enabled = true;  	btnChangeFile.Enabled = false;  	if ((String)folSelect.tag == "Descomprimido") {  		btnUncompress.Enabled = true;  		btnUncompress.Text = xml.Element ("S12").Value;  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The following statement contains a magic number: if (id < 0x0F000) {  	Sound fileSelect = SearchFile (id' sdat.files.root);  	listProp.Items [0].SubItems.Add ("0x" + String.Format ("{0:X}"' fileSelect.id));  	listProp.Items [1].SubItems.Add (fileSelect.name);  	listProp.Items [2].SubItems.Add ("0x" + String.Format ("{0:X}"' fileSelect.offset));  	listProp.Items [3].SubItems.Add (fileSelect.size.ToString ());  	listProp.Items [4].SubItems.Add (fileSelect.path);  	btnExtract.Enabled = true;  	if (fileSelect.type == FormatSound.SWAV || fileSelect.type == FormatSound.STRM) {  		btnReproducir.Enabled = true;  		btnWav.Enabled = true;  		btnInfo.Enabled = true;  		checkLoop.Enabled = true;  		btnImport.Enabled = true;  	} else if (fileSelect.type == FormatSound.SWAR) {  		btnUncompress.Enabled = true;  		if ((String)fileSelect.tag == "Descomprimido")  			btnUncompress.Text = xml.Element ("S12").Value;  		else  			btnUncompress.Text = xml.Element ("S07").Value;  		btnInfo.Enabled = true;  	}  } else {  	Folder folSelect = SearchFolder (id' sdat.files.root);  	listProp.Items [0].SubItems.Add ("0x" + String.Format ("{0:X}"' folSelect.id));  	listProp.Items [1].SubItems.Add (folSelect.name);  	listProp.Items [2].SubItems.Add ("");  	listProp.Items [3].SubItems.Add ("");  	listProp.Items [4].SubItems.Add ("");  	btnExtract.Enabled = true;  	btnChangeFile.Enabled = false;  	if ((String)folSelect.tag == "Descomprimido") {  		btnUncompress.Enabled = true;  		btnUncompress.Text = xml.Element ("S12").Value;  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The following statement contains a magic number: if (id < 0x0F000) {  	Sound fileSelect = SearchFile (id' sdat.files.root);  	listProp.Items [0].SubItems.Add ("0x" + String.Format ("{0:X}"' fileSelect.id));  	listProp.Items [1].SubItems.Add (fileSelect.name);  	listProp.Items [2].SubItems.Add ("0x" + String.Format ("{0:X}"' fileSelect.offset));  	listProp.Items [3].SubItems.Add (fileSelect.size.ToString ());  	listProp.Items [4].SubItems.Add (fileSelect.path);  	btnExtract.Enabled = true;  	if (fileSelect.type == FormatSound.SWAV || fileSelect.type == FormatSound.STRM) {  		btnReproducir.Enabled = true;  		btnWav.Enabled = true;  		btnInfo.Enabled = true;  		checkLoop.Enabled = true;  		btnImport.Enabled = true;  	} else if (fileSelect.type == FormatSound.SWAR) {  		btnUncompress.Enabled = true;  		if ((String)fileSelect.tag == "Descomprimido")  			btnUncompress.Text = xml.Element ("S12").Value;  		else  			btnUncompress.Text = xml.Element ("S07").Value;  		btnInfo.Enabled = true;  	}  } else {  	Folder folSelect = SearchFolder (id' sdat.files.root);  	listProp.Items [0].SubItems.Add ("0x" + String.Format ("{0:X}"' folSelect.id));  	listProp.Items [1].SubItems.Add (folSelect.name);  	listProp.Items [2].SubItems.Add ("");  	listProp.Items [3].SubItems.Add ("");  	listProp.Items [4].SubItems.Add ("");  	btnExtract.Enabled = true;  	btnChangeFile.Enabled = false;  	if ((String)folSelect.tag == "Descomprimido") {  		btnUncompress.Enabled = true;  		btnUncompress.Text = xml.Element ("S12").Value;  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The following statement contains a magic number: if (id < 0x0F000) {  	Sound fileSelect = SearchFile (id' sdat.files.root);  	listProp.Items [0].SubItems.Add ("0x" + String.Format ("{0:X}"' fileSelect.id));  	listProp.Items [1].SubItems.Add (fileSelect.name);  	listProp.Items [2].SubItems.Add ("0x" + String.Format ("{0:X}"' fileSelect.offset));  	listProp.Items [3].SubItems.Add (fileSelect.size.ToString ());  	listProp.Items [4].SubItems.Add (fileSelect.path);  	btnExtract.Enabled = true;  	if (fileSelect.type == FormatSound.SWAV || fileSelect.type == FormatSound.STRM) {  		btnReproducir.Enabled = true;  		btnWav.Enabled = true;  		btnInfo.Enabled = true;  		checkLoop.Enabled = true;  		btnImport.Enabled = true;  	} else if (fileSelect.type == FormatSound.SWAR) {  		btnUncompress.Enabled = true;  		if ((String)fileSelect.tag == "Descomprimido")  			btnUncompress.Text = xml.Element ("S12").Value;  		else  			btnUncompress.Text = xml.Element ("S07").Value;  		btnInfo.Enabled = true;  	}  } else {  	Folder folSelect = SearchFolder (id' sdat.files.root);  	listProp.Items [0].SubItems.Add ("0x" + String.Format ("{0:X}"' folSelect.id));  	listProp.Items [1].SubItems.Add (folSelect.name);  	listProp.Items [2].SubItems.Add ("");  	listProp.Items [3].SubItems.Add ("");  	listProp.Items [4].SubItems.Add ("");  	btnExtract.Enabled = true;  	btnChangeFile.Enabled = false;  	if ((String)folSelect.tag == "Descomprimido") {  		btnUncompress.Enabled = true;  		btnUncompress.Text = xml.Element ("S12").Value;  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The following statement contains a magic number: if (id < 0x0F000) {  	Sound fileSelect = SearchFile (id' sdat.files.root);  	listProp.Items [0].SubItems.Add ("0x" + String.Format ("{0:X}"' fileSelect.id));  	listProp.Items [1].SubItems.Add (fileSelect.name);  	listProp.Items [2].SubItems.Add ("0x" + String.Format ("{0:X}"' fileSelect.offset));  	listProp.Items [3].SubItems.Add (fileSelect.size.ToString ());  	listProp.Items [4].SubItems.Add (fileSelect.path);  	btnExtract.Enabled = true;  	if (fileSelect.type == FormatSound.SWAV || fileSelect.type == FormatSound.STRM) {  		btnReproducir.Enabled = true;  		btnWav.Enabled = true;  		btnInfo.Enabled = true;  		checkLoop.Enabled = true;  		btnImport.Enabled = true;  	} else if (fileSelect.type == FormatSound.SWAR) {  		btnUncompress.Enabled = true;  		if ((String)fileSelect.tag == "Descomprimido")  			btnUncompress.Text = xml.Element ("S12").Value;  		else  			btnUncompress.Text = xml.Element ("S07").Value;  		btnInfo.Enabled = true;  	}  } else {  	Folder folSelect = SearchFolder (id' sdat.files.root);  	listProp.Items [0].SubItems.Add ("0x" + String.Format ("{0:X}"' folSelect.id));  	listProp.Items [1].SubItems.Add (folSelect.name);  	listProp.Items [2].SubItems.Add ("");  	listProp.Items [3].SubItems.Add ("");  	listProp.Items [4].SubItems.Add ("");  	btnExtract.Enabled = true;  	btnChangeFile.Enabled = false;  	if ((String)folSelect.tag == "Descomprimido") {  		btnUncompress.Enabled = true;  		btnUncompress.Text = xml.Element ("S12").Value;  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The following statement contains a magic number: if (id < 0x0F000) {  	Sound fileSelect = SearchFile (id' sdat.files.root);  	listProp.Items [0].SubItems.Add ("0x" + String.Format ("{0:X}"' fileSelect.id));  	listProp.Items [1].SubItems.Add (fileSelect.name);  	listProp.Items [2].SubItems.Add ("0x" + String.Format ("{0:X}"' fileSelect.offset));  	listProp.Items [3].SubItems.Add (fileSelect.size.ToString ());  	listProp.Items [4].SubItems.Add (fileSelect.path);  	btnExtract.Enabled = true;  	if (fileSelect.type == FormatSound.SWAV || fileSelect.type == FormatSound.STRM) {  		btnReproducir.Enabled = true;  		btnWav.Enabled = true;  		btnInfo.Enabled = true;  		checkLoop.Enabled = true;  		btnImport.Enabled = true;  	} else if (fileSelect.type == FormatSound.SWAR) {  		btnUncompress.Enabled = true;  		if ((String)fileSelect.tag == "Descomprimido")  			btnUncompress.Text = xml.Element ("S12").Value;  		else  			btnUncompress.Text = xml.Element ("S07").Value;  		btnInfo.Enabled = true;  	}  } else {  	Folder folSelect = SearchFolder (id' sdat.files.root);  	listProp.Items [0].SubItems.Add ("0x" + String.Format ("{0:X}"' folSelect.id));  	listProp.Items [1].SubItems.Add (folSelect.name);  	listProp.Items [2].SubItems.Add ("");  	listProp.Items [3].SubItems.Add ("");  	listProp.Items [4].SubItems.Add ("");  	btnExtract.Enabled = true;  	btnChangeFile.Enabled = false;  	if ((String)folSelect.tag == "Descomprimido") {  		btnUncompress.Enabled = true;  		btnUncompress.Text = xml.Element ("S12").Value;  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The following statement contains a magic number: listProp.Items [2].SubItems.Add ("0x" + String.Format ("{0:X}"' fileSelect.offset));  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The following statement contains a magic number: listProp.Items [3].SubItems.Add (fileSelect.size.ToString ());  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The following statement contains a magic number: listProp.Items [4].SubItems.Add (fileSelect.path);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The following statement contains a magic number: listProp.Items [2].SubItems.Add ("");  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The following statement contains a magic number: listProp.Items [3].SubItems.Add ("");  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,treeFiles_AfterSelect,The following statement contains a magic number: listProp.Items [4].SubItems.Add ("");  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: if (carpeta.id == id)// Archivos descomprimidos   {  	Sound folderFile = new Sound ();  	folderFile.name = carpeta.name;  	folderFile.id = carpeta.id;  	if (((String)carpeta.tag).Length != 16)  		folderFile.path = ((string)carpeta.tag).Substring (8);  	else  		folderFile.offset = Convert.ToUInt32 (((String)carpeta.tag).Substring (8)' 16);  	folderFile.size = Convert.ToUInt32 (((String)carpeta.tag).Substring (0' 8)' 16);  	folderFile.type = (carpeta.name.ToUpper ().EndsWith (".SWAR") ? FormatSound.SWAR : FormatSound.SSAR);  	folderFile.tag = "Descomprimido";  	// Tag para indicar que ya ha sido procesado  	return folderFile;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: if (carpeta.id == id)// Archivos descomprimidos   {  	Sound folderFile = new Sound ();  	folderFile.name = carpeta.name;  	folderFile.id = carpeta.id;  	if (((String)carpeta.tag).Length != 16)  		folderFile.path = ((string)carpeta.tag).Substring (8);  	else  		folderFile.offset = Convert.ToUInt32 (((String)carpeta.tag).Substring (8)' 16);  	folderFile.size = Convert.ToUInt32 (((String)carpeta.tag).Substring (0' 8)' 16);  	folderFile.type = (carpeta.name.ToUpper ().EndsWith (".SWAR") ? FormatSound.SWAR : FormatSound.SSAR);  	folderFile.tag = "Descomprimido";  	// Tag para indicar que ya ha sido procesado  	return folderFile;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: if (carpeta.id == id)// Archivos descomprimidos   {  	Sound folderFile = new Sound ();  	folderFile.name = carpeta.name;  	folderFile.id = carpeta.id;  	if (((String)carpeta.tag).Length != 16)  		folderFile.path = ((string)carpeta.tag).Substring (8);  	else  		folderFile.offset = Convert.ToUInt32 (((String)carpeta.tag).Substring (8)' 16);  	folderFile.size = Convert.ToUInt32 (((String)carpeta.tag).Substring (0' 8)' 16);  	folderFile.type = (carpeta.name.ToUpper ().EndsWith (".SWAR") ? FormatSound.SWAR : FormatSound.SSAR);  	folderFile.tag = "Descomprimido";  	// Tag para indicar que ya ha sido procesado  	return folderFile;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: if (carpeta.id == id)// Archivos descomprimidos   {  	Sound folderFile = new Sound ();  	folderFile.name = carpeta.name;  	folderFile.id = carpeta.id;  	if (((String)carpeta.tag).Length != 16)  		folderFile.path = ((string)carpeta.tag).Substring (8);  	else  		folderFile.offset = Convert.ToUInt32 (((String)carpeta.tag).Substring (8)' 16);  	folderFile.size = Convert.ToUInt32 (((String)carpeta.tag).Substring (0' 8)' 16);  	folderFile.type = (carpeta.name.ToUpper ().EndsWith (".SWAR") ? FormatSound.SWAR : FormatSound.SSAR);  	folderFile.tag = "Descomprimido";  	// Tag para indicar que ya ha sido procesado  	return folderFile;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: if (carpeta.id == id)// Archivos descomprimidos   {  	Sound folderFile = new Sound ();  	folderFile.name = carpeta.name;  	folderFile.id = carpeta.id;  	if (((String)carpeta.tag).Length != 16)  		folderFile.path = ((string)carpeta.tag).Substring (8);  	else  		folderFile.offset = Convert.ToUInt32 (((String)carpeta.tag).Substring (8)' 16);  	folderFile.size = Convert.ToUInt32 (((String)carpeta.tag).Substring (0' 8)' 16);  	folderFile.type = (carpeta.name.ToUpper ().EndsWith (".SWAR") ? FormatSound.SWAR : FormatSound.SSAR);  	folderFile.tag = "Descomprimido";  	// Tag para indicar que ya ha sido procesado  	return folderFile;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: if (carpeta.id == id)// Archivos descomprimidos   {  	Sound folderFile = new Sound ();  	folderFile.name = carpeta.name;  	folderFile.id = carpeta.id;  	if (((String)carpeta.tag).Length != 16)  		folderFile.path = ((string)carpeta.tag).Substring (8);  	else  		folderFile.offset = Convert.ToUInt32 (((String)carpeta.tag).Substring (8)' 16);  	folderFile.size = Convert.ToUInt32 (((String)carpeta.tag).Substring (0' 8)' 16);  	folderFile.type = (carpeta.name.ToUpper ().EndsWith (".SWAR") ? FormatSound.SWAR : FormatSound.SSAR);  	folderFile.tag = "Descomprimido";  	// Tag para indicar que ya ha sido procesado  	return folderFile;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: if (((String)carpeta.tag).Length != 16)  	folderFile.path = ((string)carpeta.tag).Substring (8);  else  	folderFile.offset = Convert.ToUInt32 (((String)carpeta.tag).Substring (8)' 16);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: if (((String)carpeta.tag).Length != 16)  	folderFile.path = ((string)carpeta.tag).Substring (8);  else  	folderFile.offset = Convert.ToUInt32 (((String)carpeta.tag).Substring (8)' 16);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: if (((String)carpeta.tag).Length != 16)  	folderFile.path = ((string)carpeta.tag).Substring (8);  else  	folderFile.offset = Convert.ToUInt32 (((String)carpeta.tag).Substring (8)' 16);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: if (((String)carpeta.tag).Length != 16)  	folderFile.path = ((string)carpeta.tag).Substring (8);  else  	folderFile.offset = Convert.ToUInt32 (((String)carpeta.tag).Substring (8)' 16);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: folderFile.path = ((string)carpeta.tag).Substring (8);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: folderFile.offset = Convert.ToUInt32 (((String)carpeta.tag).Substring (8)' 16);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: folderFile.offset = Convert.ToUInt32 (((String)carpeta.tag).Substring (8)' 16);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: folderFile.size = Convert.ToUInt32 (((String)carpeta.tag).Substring (0' 8)' 16);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,SearchFile,The following statement contains a magic number: folderFile.size = Convert.ToUInt32 (((String)carpeta.tag).Substring (0' 8)' 16);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Files,The following statement contains a magic number: if (file.offset != 0x00)  	// es medio archivo :)  	files.tag = String.Format ("{0:X}"' file.size).PadLeft (8' '0') + String.Format ("{0:X}"' file.offset).PadLeft (8' '0');  else  	files.tag = String.Format ("{0:X}"' file.size).PadLeft (8' '0') + file.path;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Files,The following statement contains a magic number: if (file.offset != 0x00)  	// es medio archivo :)  	files.tag = String.Format ("{0:X}"' file.size).PadLeft (8' '0') + String.Format ("{0:X}"' file.offset).PadLeft (8' '0');  else  	files.tag = String.Format ("{0:X}"' file.size).PadLeft (8' '0') + file.path;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Files,The following statement contains a magic number: if (file.offset != 0x00)  	// es medio archivo :)  	files.tag = String.Format ("{0:X}"' file.size).PadLeft (8' '0') + String.Format ("{0:X}"' file.offset).PadLeft (8' '0');  else  	files.tag = String.Format ("{0:X}"' file.size).PadLeft (8' '0') + file.path;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Files,The following statement contains a magic number: files.tag = String.Format ("{0:X}"' file.size).PadLeft (8' '0') + String.Format ("{0:X}"' file.offset).PadLeft (8' '0');  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Files,The following statement contains a magic number: files.tag = String.Format ("{0:X}"' file.size).PadLeft (8' '0') + String.Format ("{0:X}"' file.offset).PadLeft (8' '0');  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Files,The following statement contains a magic number: files.tag = String.Format ("{0:X}"' file.size).PadLeft (8' '0') + file.path;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: if (currFolder.files is List<Sound>) {  	for (int i = 0; i < currFolder.files.Count; i++) {  		if (currFolder.files [i].id == id) {  			Folder newFolder = new Folder ();  			newFolder.name = currFolder.files [i].name;  			newFolder.id = currFolder.files [i].id;  			if (currFolder.files [i].offset != 0x00)  				// es medio archivo :)  				newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  			else  				newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + currFolder.files [i].path;  			currFolder.files.RemoveAt (i);  			if (!(currFolder.folders is List<Folder>))  				currFolder.folders = new List<Folder> ();  			currFolder.folders.Add (newFolder);  			return currFolder;  		}  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: if (currFolder.files is List<Sound>) {  	for (int i = 0; i < currFolder.files.Count; i++) {  		if (currFolder.files [i].id == id) {  			Folder newFolder = new Folder ();  			newFolder.name = currFolder.files [i].name;  			newFolder.id = currFolder.files [i].id;  			if (currFolder.files [i].offset != 0x00)  				// es medio archivo :)  				newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  			else  				newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + currFolder.files [i].path;  			currFolder.files.RemoveAt (i);  			if (!(currFolder.folders is List<Folder>))  				currFolder.folders = new List<Folder> ();  			currFolder.folders.Add (newFolder);  			return currFolder;  		}  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: if (currFolder.files is List<Sound>) {  	for (int i = 0; i < currFolder.files.Count; i++) {  		if (currFolder.files [i].id == id) {  			Folder newFolder = new Folder ();  			newFolder.name = currFolder.files [i].name;  			newFolder.id = currFolder.files [i].id;  			if (currFolder.files [i].offset != 0x00)  				// es medio archivo :)  				newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  			else  				newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + currFolder.files [i].path;  			currFolder.files.RemoveAt (i);  			if (!(currFolder.folders is List<Folder>))  				currFolder.folders = new List<Folder> ();  			currFolder.folders.Add (newFolder);  			return currFolder;  		}  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: for (int i = 0; i < currFolder.files.Count; i++) {  	if (currFolder.files [i].id == id) {  		Folder newFolder = new Folder ();  		newFolder.name = currFolder.files [i].name;  		newFolder.id = currFolder.files [i].id;  		if (currFolder.files [i].offset != 0x00)  			// es medio archivo :)  			newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  		else  			newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + currFolder.files [i].path;  		currFolder.files.RemoveAt (i);  		if (!(currFolder.folders is List<Folder>))  			currFolder.folders = new List<Folder> ();  		currFolder.folders.Add (newFolder);  		return currFolder;  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: for (int i = 0; i < currFolder.files.Count; i++) {  	if (currFolder.files [i].id == id) {  		Folder newFolder = new Folder ();  		newFolder.name = currFolder.files [i].name;  		newFolder.id = currFolder.files [i].id;  		if (currFolder.files [i].offset != 0x00)  			// es medio archivo :)  			newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  		else  			newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + currFolder.files [i].path;  		currFolder.files.RemoveAt (i);  		if (!(currFolder.folders is List<Folder>))  			currFolder.folders = new List<Folder> ();  		currFolder.folders.Add (newFolder);  		return currFolder;  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: for (int i = 0; i < currFolder.files.Count; i++) {  	if (currFolder.files [i].id == id) {  		Folder newFolder = new Folder ();  		newFolder.name = currFolder.files [i].name;  		newFolder.id = currFolder.files [i].id;  		if (currFolder.files [i].offset != 0x00)  			// es medio archivo :)  			newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  		else  			newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + currFolder.files [i].path;  		currFolder.files.RemoveAt (i);  		if (!(currFolder.folders is List<Folder>))  			currFolder.folders = new List<Folder> ();  		currFolder.folders.Add (newFolder);  		return currFolder;  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: if (currFolder.files [i].id == id) {  	Folder newFolder = new Folder ();  	newFolder.name = currFolder.files [i].name;  	newFolder.id = currFolder.files [i].id;  	if (currFolder.files [i].offset != 0x00)  		// es medio archivo :)  		newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  	else  		newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + currFolder.files [i].path;  	currFolder.files.RemoveAt (i);  	if (!(currFolder.folders is List<Folder>))  		currFolder.folders = new List<Folder> ();  	currFolder.folders.Add (newFolder);  	return currFolder;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: if (currFolder.files [i].id == id) {  	Folder newFolder = new Folder ();  	newFolder.name = currFolder.files [i].name;  	newFolder.id = currFolder.files [i].id;  	if (currFolder.files [i].offset != 0x00)  		// es medio archivo :)  		newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  	else  		newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + currFolder.files [i].path;  	currFolder.files.RemoveAt (i);  	if (!(currFolder.folders is List<Folder>))  		currFolder.folders = new List<Folder> ();  	currFolder.folders.Add (newFolder);  	return currFolder;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: if (currFolder.files [i].id == id) {  	Folder newFolder = new Folder ();  	newFolder.name = currFolder.files [i].name;  	newFolder.id = currFolder.files [i].id;  	if (currFolder.files [i].offset != 0x00)  		// es medio archivo :)  		newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  	else  		newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + currFolder.files [i].path;  	currFolder.files.RemoveAt (i);  	if (!(currFolder.folders is List<Folder>))  		currFolder.folders = new List<Folder> ();  	currFolder.folders.Add (newFolder);  	return currFolder;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: if (currFolder.files [i].offset != 0x00)  	// es medio archivo :)  	newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  else  	newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + currFolder.files [i].path;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: if (currFolder.files [i].offset != 0x00)  	// es medio archivo :)  	newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  else  	newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + currFolder.files [i].path;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: if (currFolder.files [i].offset != 0x00)  	// es medio archivo :)  	newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  else  	newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + currFolder.files [i].path;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + String.Format ("{0:X}"' currFolder.files [i].offset).PadLeft (8' '0');  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,FileToFolder,The following statement contains a magic number: newFolder.tag = String.Format ("{0:X}"' currFolder.files [i].size).PadLeft (8' '0') + currFolder.files [i].path;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,ChangeFile,The following statement contains a magic number: if ((String)newFile.tag == "Descomprimido")  	newFile.tag = String.Format ("{0:X}"' newFile.size).PadLeft (8' '0') + newFile.path;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,ChangeFile,The following statement contains a magic number: newFile.tag = String.Format ("{0:X}"' newFile.size).PadLeft (8' '0') + newFile.path;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,The following statement contains a magic number: switch (selectedFile.type) {  case FormatSound.SSEQ:  	o.FilterIndex = 2;  	break;  case FormatSound.SSAR:  	o.FilterIndex = 3;  	break;  case FormatSound.SBNK:  	o.FilterIndex = 4;  	break;  case FormatSound.SWAV:  	o.FilterIndex = 6;  	break;  case FormatSound.SWAR:  	o.FilterIndex = 5;  	break;  case FormatSound.STRM:  	o.FilterIndex = 1;  	break;  default:  	o.FilterIndex = 7;  	break;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,The following statement contains a magic number: switch (selectedFile.type) {  case FormatSound.SSEQ:  	o.FilterIndex = 2;  	break;  case FormatSound.SSAR:  	o.FilterIndex = 3;  	break;  case FormatSound.SBNK:  	o.FilterIndex = 4;  	break;  case FormatSound.SWAV:  	o.FilterIndex = 6;  	break;  case FormatSound.SWAR:  	o.FilterIndex = 5;  	break;  case FormatSound.STRM:  	o.FilterIndex = 1;  	break;  default:  	o.FilterIndex = 7;  	break;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,The following statement contains a magic number: switch (selectedFile.type) {  case FormatSound.SSEQ:  	o.FilterIndex = 2;  	break;  case FormatSound.SSAR:  	o.FilterIndex = 3;  	break;  case FormatSound.SBNK:  	o.FilterIndex = 4;  	break;  case FormatSound.SWAV:  	o.FilterIndex = 6;  	break;  case FormatSound.SWAR:  	o.FilterIndex = 5;  	break;  case FormatSound.STRM:  	o.FilterIndex = 1;  	break;  default:  	o.FilterIndex = 7;  	break;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,The following statement contains a magic number: switch (selectedFile.type) {  case FormatSound.SSEQ:  	o.FilterIndex = 2;  	break;  case FormatSound.SSAR:  	o.FilterIndex = 3;  	break;  case FormatSound.SBNK:  	o.FilterIndex = 4;  	break;  case FormatSound.SWAV:  	o.FilterIndex = 6;  	break;  case FormatSound.SWAR:  	o.FilterIndex = 5;  	break;  case FormatSound.STRM:  	o.FilterIndex = 1;  	break;  default:  	o.FilterIndex = 7;  	break;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,The following statement contains a magic number: switch (selectedFile.type) {  case FormatSound.SSEQ:  	o.FilterIndex = 2;  	break;  case FormatSound.SSAR:  	o.FilterIndex = 3;  	break;  case FormatSound.SBNK:  	o.FilterIndex = 4;  	break;  case FormatSound.SWAV:  	o.FilterIndex = 6;  	break;  case FormatSound.SWAR:  	o.FilterIndex = 5;  	break;  case FormatSound.STRM:  	o.FilterIndex = 1;  	break;  default:  	o.FilterIndex = 7;  	break;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,The following statement contains a magic number: switch (selectedFile.type) {  case FormatSound.SSEQ:  	o.FilterIndex = 2;  	break;  case FormatSound.SSAR:  	o.FilterIndex = 3;  	break;  case FormatSound.SBNK:  	o.FilterIndex = 4;  	break;  case FormatSound.SWAV:  	o.FilterIndex = 6;  	break;  case FormatSound.SWAR:  	o.FilterIndex = 5;  	break;  case FormatSound.STRM:  	o.FilterIndex = 1;  	break;  default:  	o.FilterIndex = 7;  	break;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,The following statement contains a magic number: o.FilterIndex = 2;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,The following statement contains a magic number: o.FilterIndex = 3;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,The following statement contains a magic number: o.FilterIndex = 4;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,The following statement contains a magic number: o.FilterIndex = 6;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,The following statement contains a magic number: o.FilterIndex = 5;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnChangeFile_Click,The following statement contains a magic number: o.FilterIndex = 7;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnInfo_Click,The following statement contains a magic number: ven.Size = new System.Drawing.Size (260' 440);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnInfo_Click,The following statement contains a magic number: ven.Size = new System.Drawing.Size (260' 440);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnInfo_Click,The following statement contains a magic number: foreach (String value in info.Keys) {  	if (value.StartsWith ("/b")) {  		String text = value.Replace ("/b"' "");  		list.Items.Add (text' text' 0);  		list.Items [text].Font = new Font ("Microsoft Sans Serif"' 9' FontStyle.Bold);  		list.Items [text].SubItems.Add (info [value]);  	} else {  		list.Items.Add (value' value' 0);  		list.Items [value].SubItems.Add (info [value]);  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnInfo_Click,The following statement contains a magic number: if (value.StartsWith ("/b")) {  	String text = value.Replace ("/b"' "");  	list.Items.Add (text' text' 0);  	list.Items [text].Font = new Font ("Microsoft Sans Serif"' 9' FontStyle.Bold);  	list.Items [text].SubItems.Add (info [value]);  } else {  	list.Items.Add (value' value' 0);  	list.Items [value].SubItems.Add (info [value]);  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnInfo_Click,The following statement contains a magic number: list.Items [text].Font = new Font ("Microsoft Sans Serif"' 9' FontStyle.Bold);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnInfo_Click,The following statement contains a magic number: list.Size = new System.Drawing.Size (250' 430);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnInfo_Click,The following statement contains a magic number: list.Size = new System.Drawing.Size (250' 430);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [5].nEntries; i++) {  	Info.GROUP entry = (Info.GROUP)sdat.info.block [5].entries [i];  	Folder entryFld = new Folder ();  	entryFld.name = "Entry " + i.ToString ();  	entryFld.id = (uint)(0x0F008 + i);  	entryFld.files = new List<Sound> ();  	for (int n = 0; n < entry.nCount; n++) {  		switch (entry.subgroup [n].type) {  		case 0x700:  			// SSEQ  			if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x803:  			// SSAR  			if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x601:  			// SBNK  			if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x402:  			// SWAR  			if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  			break;  		default:  			break;  		}  	}  	group.folders.Add (entryFld);  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [5].nEntries; i++) {  	Info.GROUP entry = (Info.GROUP)sdat.info.block [5].entries [i];  	Folder entryFld = new Folder ();  	entryFld.name = "Entry " + i.ToString ();  	entryFld.id = (uint)(0x0F008 + i);  	entryFld.files = new List<Sound> ();  	for (int n = 0; n < entry.nCount; n++) {  		switch (entry.subgroup [n].type) {  		case 0x700:  			// SSEQ  			if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x803:  			// SSAR  			if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x601:  			// SBNK  			if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x402:  			// SWAR  			if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  			break;  		default:  			break;  		}  	}  	group.folders.Add (entryFld);  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [5].nEntries; i++) {  	Info.GROUP entry = (Info.GROUP)sdat.info.block [5].entries [i];  	Folder entryFld = new Folder ();  	entryFld.name = "Entry " + i.ToString ();  	entryFld.id = (uint)(0x0F008 + i);  	entryFld.files = new List<Sound> ();  	for (int n = 0; n < entry.nCount; n++) {  		switch (entry.subgroup [n].type) {  		case 0x700:  			// SSEQ  			if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x803:  			// SSAR  			if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x601:  			// SBNK  			if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x402:  			// SWAR  			if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  			break;  		default:  			break;  		}  	}  	group.folders.Add (entryFld);  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [5].nEntries; i++) {  	Info.GROUP entry = (Info.GROUP)sdat.info.block [5].entries [i];  	Folder entryFld = new Folder ();  	entryFld.name = "Entry " + i.ToString ();  	entryFld.id = (uint)(0x0F008 + i);  	entryFld.files = new List<Sound> ();  	for (int n = 0; n < entry.nCount; n++) {  		switch (entry.subgroup [n].type) {  		case 0x700:  			// SSEQ  			if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x803:  			// SSAR  			if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x601:  			// SBNK  			if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x402:  			// SWAR  			if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  			break;  		default:  			break;  		}  	}  	group.folders.Add (entryFld);  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [5].nEntries; i++) {  	Info.GROUP entry = (Info.GROUP)sdat.info.block [5].entries [i];  	Folder entryFld = new Folder ();  	entryFld.name = "Entry " + i.ToString ();  	entryFld.id = (uint)(0x0F008 + i);  	entryFld.files = new List<Sound> ();  	for (int n = 0; n < entry.nCount; n++) {  		switch (entry.subgroup [n].type) {  		case 0x700:  			// SSEQ  			if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x803:  			// SSAR  			if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x601:  			// SBNK  			if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x402:  			// SWAR  			if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  			break;  		default:  			break;  		}  	}  	group.folders.Add (entryFld);  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [5].nEntries; i++) {  	Info.GROUP entry = (Info.GROUP)sdat.info.block [5].entries [i];  	Folder entryFld = new Folder ();  	entryFld.name = "Entry " + i.ToString ();  	entryFld.id = (uint)(0x0F008 + i);  	entryFld.files = new List<Sound> ();  	for (int n = 0; n < entry.nCount; n++) {  		switch (entry.subgroup [n].type) {  		case 0x700:  			// SSEQ  			if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x803:  			// SSAR  			if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x601:  			// SBNK  			if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  			break;  		case 0x402:  			// SWAR  			if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  				entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  			break;  		default:  			break;  		}  	}  	group.folders.Add (entryFld);  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: for (int n = 0; n < entry.nCount; n++) {  	switch (entry.subgroup [n].type) {  	case 0x700:  		// SSEQ  		if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  		break;  	case 0x803:  		// SSAR  		if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  		break;  	case 0x601:  		// SBNK  		if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  		break;  	case 0x402:  		// SWAR  		if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  		break;  	default:  		break;  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: for (int n = 0; n < entry.nCount; n++) {  	switch (entry.subgroup [n].type) {  	case 0x700:  		// SSEQ  		if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  		break;  	case 0x803:  		// SSAR  		if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  		break;  	case 0x601:  		// SBNK  		if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  		break;  	case 0x402:  		// SWAR  		if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  		break;  	default:  		break;  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: for (int n = 0; n < entry.nCount; n++) {  	switch (entry.subgroup [n].type) {  	case 0x700:  		// SSEQ  		if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  		break;  	case 0x803:  		// SSAR  		if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  		break;  	case 0x601:  		// SBNK  		if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  		break;  	case 0x402:  		// SWAR  		if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  		break;  	default:  		break;  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: for (int n = 0; n < entry.nCount; n++) {  	switch (entry.subgroup [n].type) {  	case 0x700:  		// SSEQ  		if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  		break;  	case 0x803:  		// SSAR  		if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  		break;  	case 0x601:  		// SBNK  		if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  		break;  	case 0x402:  		// SWAR  		if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  			entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  		break;  	default:  		break;  	}  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: switch (entry.subgroup [n].type) {  case 0x700:  	// SSEQ  	if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  	break;  case 0x803:  	// SSAR  	if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  	break;  case 0x601:  	// SBNK  	if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  	break;  case 0x402:  	// SWAR  	if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  	break;  default:  	break;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: switch (entry.subgroup [n].type) {  case 0x700:  	// SSEQ  	if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  	break;  case 0x803:  	// SSAR  	if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  	break;  case 0x601:  	// SBNK  	if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  	break;  case 0x402:  	// SWAR  	if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  	break;  default:  	break;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: switch (entry.subgroup [n].type) {  case 0x700:  	// SSEQ  	if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  	break;  case 0x803:  	// SSAR  	if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  	break;  case 0x601:  	// SBNK  	if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  	break;  case 0x402:  	// SWAR  	if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  	break;  default:  	break;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: switch (entry.subgroup [n].type) {  case 0x700:  	// SSEQ  	if (sdat.files.root.folders [0].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [0].files [(int)entry.subgroup [n].nEntry]);  	break;  case 0x803:  	// SSAR  	if (sdat.files.root.folders [1].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [1].files [(int)entry.subgroup [n].nEntry]);  	break;  case 0x601:  	// SBNK  	if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  	break;  case 0x402:  	// SWAR  	if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  		entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  	break;  default:  	break;  }  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  	entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: if (sdat.files.root.folders [2].files.Count > entry.subgroup [n].nEntry)  	entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: entryFld.files.Add (sdat.files.root.folders [2].files [(int)entry.subgroup [n].nEntry]);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  	entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: if (sdat.files.root.folders [3].files.Count > entry.subgroup [n].nEntry)  	entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,Add_Group,The following statement contains a magic number: entryFld.files.Add (sdat.files.root.folders [3].files [(int)entry.subgroup [n].nEntry]);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.treeFiles.ImageIndex = 2;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.treeFiles.Size = new System.Drawing.Size (245' 510);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.treeFiles.Size = new System.Drawing.Size (245' 510);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (2' "sound.png");  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (3' "package_go.png");  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (4' "bell.png");  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (5' "resultset_next.png");  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (6' "stop.png");  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (7' "package.png");  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.imageList.Images.SetKeyName (8' "page_white.png");  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.listProp.Location = new System.Drawing.Point (251' 3);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.listProp.Location = new System.Drawing.Point (251' 3);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.listProp.Size = new System.Drawing.Size (256' 116);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.listProp.Size = new System.Drawing.Size (256' 116);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.columnCampo.Width = 118;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.columnValor.Width = 121;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnWav.ImageIndex = 5;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnWav.Location = new System.Drawing.Point (407' 472);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnWav.Location = new System.Drawing.Point (407' 472);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnWav.Size = new System.Drawing.Size (100' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnWav.Size = new System.Drawing.Size (100' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnWav.TabIndex = 4;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnMidi.Location = new System.Drawing.Point (408' 349);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnMidi.Location = new System.Drawing.Point (408' 349);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnMidi.Size = new System.Drawing.Size (99' 35);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnMidi.Size = new System.Drawing.Size (99' 35);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnMidi.TabIndex = 5;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.checkLoop.Location = new System.Drawing.Point (251' 327);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.checkLoop.Location = new System.Drawing.Point (251' 327);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.checkLoop.Size = new System.Drawing.Size (45' 17);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.checkLoop.Size = new System.Drawing.Size (45' 17);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.checkLoop.TabIndex = 8;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnCreate.Location = new System.Drawing.Point (251' 472);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnCreate.Location = new System.Drawing.Point (251' 472);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnCreate.Size = new System.Drawing.Size (100' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnCreate.Size = new System.Drawing.Size (100' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnCreate.TabIndex = 10;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnChangeFile.Location = new System.Drawing.Point (251' 350);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnChangeFile.Location = new System.Drawing.Point (251' 350);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnChangeFile.Size = new System.Drawing.Size (100' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnChangeFile.Size = new System.Drawing.Size (100' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnChangeFile.TabIndex = 11;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnInfo.Location = new System.Drawing.Point (408' 391);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnInfo.Location = new System.Drawing.Point (408' 391);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnInfo.Size = new System.Drawing.Size (99' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnInfo.Size = new System.Drawing.Size (99' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnInfo.TabIndex = 12;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnImport.Location = new System.Drawing.Point (407' 431);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnImport.Location = new System.Drawing.Point (407' 431);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnImport.Size = new System.Drawing.Size (99' 35);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnImport.Size = new System.Drawing.Size (99' 35);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnImport.TabIndex = 9;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnUncompress.Location = new System.Drawing.Point (251' 391);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnUncompress.Location = new System.Drawing.Point (251' 391);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnUncompress.Size = new System.Drawing.Size (100' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnUncompress.Size = new System.Drawing.Size (100' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnUncompress.TabIndex = 7;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnStop.ImageIndex = 6;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnStop.Location = new System.Drawing.Point (357' 432);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnStop.Location = new System.Drawing.Point (357' 432);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnStop.Size = new System.Drawing.Size (45' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnStop.Size = new System.Drawing.Size (45' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnStop.TabIndex = 6;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnReproducir.ImageIndex = 5;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnReproducir.Location = new System.Drawing.Point (357' 392);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnReproducir.Location = new System.Drawing.Point (357' 392);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnReproducir.Size = new System.Drawing.Size (45' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnReproducir.Size = new System.Drawing.Size (45' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnReproducir.TabIndex = 3;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnExtract.ImageIndex = 3;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnExtract.Location = new System.Drawing.Point (251' 431);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnExtract.Location = new System.Drawing.Point (251' 431);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnExtract.Size = new System.Drawing.Size (100' 35);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnExtract.Size = new System.Drawing.Size (100' 35);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnExtract.TabIndex = 2;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnInfoSect.Location = new System.Drawing.Point (251' 126);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnInfoSect.Location = new System.Drawing.Point (251' 126);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnInfoSect.Size = new System.Drawing.Size (100' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnInfoSect.Size = new System.Drawing.Size (100' 34);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.btnInfoSect.TabIndex = 13;  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (510' 510);  
Magic Number,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size (510' 510);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,numericLoopOffset_ValueChanged,The following statement contains a magic number: if (radioSam.Checked)  	loopOffset = (int)numericLoopOffset.Value;  else if (radioSec.Checked)  	loopOffset = (int)(numericLoopOffset.Value * sampleRate);  else if (radioMSec.Checked)  	loopOffset = (int)(numericLoopOffset.Value / 1000 * sampleRate);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,numericLoopOffset_ValueChanged,The following statement contains a magic number: if (radioSec.Checked)  	loopOffset = (int)(numericLoopOffset.Value * sampleRate);  else if (radioMSec.Checked)  	loopOffset = (int)(numericLoopOffset.Value / 1000 * sampleRate);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,numericLoopOffset_ValueChanged,The following statement contains a magic number: if (radioMSec.Checked)  	loopOffset = (int)(numericLoopOffset.Value / 1000 * sampleRate);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,numericLoopOffset_ValueChanged,The following statement contains a magic number: loopOffset = (int)(numericLoopOffset.Value / 1000 * sampleRate);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,radioMSec_CheckedChanged,The following statement contains a magic number: numericLoopOffset.Value = (decimal)((float)loopOffset / sampleRate * 1000);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.comboEncoding.Location = new System.Drawing.Point (16' 29);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.comboEncoding.Location = new System.Drawing.Point (16' 29);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.comboEncoding.Size = new System.Drawing.Size (130' 21);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.comboEncoding.Size = new System.Drawing.Size (130' 21);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point (13' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point (13' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size (26' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size (26' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.btnAccept.Location = new System.Drawing.Point (160' 275);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.btnAccept.Location = new System.Drawing.Point (160' 275);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.btnAccept.Size = new System.Drawing.Size (90' 40);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.btnAccept.Size = new System.Drawing.Size (90' 40);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.btnAccept.TabIndex = 2;  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.checkLoop.Location = new System.Drawing.Point (16' 69);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.checkLoop.Location = new System.Drawing.Point (16' 69);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.checkLoop.Size = new System.Drawing.Size (45' 17);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.checkLoop.Size = new System.Drawing.Size (45' 17);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.checkLoop.TabIndex = 3;  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.groupLoop.Location = new System.Drawing.Point (16' 93);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.groupLoop.Location = new System.Drawing.Point (16' 93);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.groupLoop.Size = new System.Drawing.Size (234' 124);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.groupLoop.Size = new System.Drawing.Size (234' 124);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.groupLoop.TabIndex = 4;  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point (6' 100);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point (6' 100);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size (26' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size (26' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 3;  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point (6' 74);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point (6' 74);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size (26' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size (26' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericLoopLength.Location = new System.Drawing.Point (158' 98);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericLoopLength.Location = new System.Drawing.Point (158' 98);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericLoopLength.Size = new System.Drawing.Size (70' 20);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericLoopLength.Size = new System.Drawing.Size (70' 20);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericLoopOffset.Location = new System.Drawing.Point (158' 72);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericLoopOffset.Location = new System.Drawing.Point (158' 72);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericLoopOffset.Size = new System.Drawing.Size (70' 20);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericLoopOffset.Size = new System.Drawing.Size (70' 20);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericBlockLen.Location = new System.Drawing.Point (174' 223);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericBlockLen.Location = new System.Drawing.Point (174' 223);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericBlockLen.Size = new System.Drawing.Size (70' 20);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericBlockLen.Size = new System.Drawing.Size (70' 20);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericBlockLen.TabIndex = 5;  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericBlockLen.Value = new decimal (new int[] {  	512'  	0'  	0'  	0  });  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point (22' 225);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point (22' 225);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size (26' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size (26' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 6;  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericVolume.Increment = new decimal (new int[] {  	10'  	0'  	0'  	0  });  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericVolume.Location = new System.Drawing.Point (174' 249);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericVolume.Location = new System.Drawing.Point (174' 249);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericVolume.Maximum = new decimal (new int[] {  	1000'  	0'  	0'  	0  });  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericVolume.Minimum = new decimal (new int[] {  	1000'  	0'  	0'  	-2147483648  });  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericVolume.Minimum = new decimal (new int[] {  	1000'  	0'  	0'  	-2147483648  });  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericVolume.Size = new System.Drawing.Size (70' 20);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericVolume.Size = new System.Drawing.Size (70' 20);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.numericVolume.TabIndex = 7;  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point (22' 251);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label5.Location = new System.Drawing.Point (22' 251);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size (26' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label5.Size = new System.Drawing.Size (26' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label5.TabIndex = 8;  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point (65' 15);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label6.Location = new System.Drawing.Point (65' 15);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size (26' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label6.Size = new System.Drawing.Size (26' 13);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.label6.TabIndex = 4;  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioSam.Location = new System.Drawing.Point (6' 50);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioSam.Location = new System.Drawing.Point (6' 50);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioSam.Size = new System.Drawing.Size (45' 17);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioSam.Size = new System.Drawing.Size (45' 17);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioSam.TabIndex = 5;  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioSec.Location = new System.Drawing.Point (6' 28);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioSec.Location = new System.Drawing.Point (6' 28);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioSec.Size = new System.Drawing.Size (45' 17);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioSec.Size = new System.Drawing.Size (45' 17);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioSec.TabIndex = 6;  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioMSec.Location = new System.Drawing.Point (136' 28);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioMSec.Location = new System.Drawing.Point (136' 28);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioMSec.Size = new System.Drawing.Size (45' 17);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioMSec.Size = new System.Drawing.Size (45' 17);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.radioMSec.TabIndex = 7;  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (262' 327);  
Magic Number,SDAT,NewAudioOptions,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\NewAudioOptions.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size (262' 327);  
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM8SignedToPCM16,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short sample = BitConverter.ToInt16 (data' i);  	short pcm16 = (short)(sample & 0x7F);  	pcm16 <<= 8;  	if ((sample >> 7) != 0)  		pcm16 -= 0x7FFF;  	resul.AddRange (BitConverter.GetBytes ((short)pcm16));  }  
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM8SignedToPCM16,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short sample = BitConverter.ToInt16 (data' i);  	short pcm16 = (short)(sample & 0x7F);  	pcm16 <<= 8;  	if ((sample >> 7) != 0)  		pcm16 -= 0x7FFF;  	resul.AddRange (BitConverter.GetBytes ((short)pcm16));  }  
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM8SignedToPCM16,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short sample = BitConverter.ToInt16 (data' i);  	short pcm16 = (short)(sample & 0x7F);  	pcm16 <<= 8;  	if ((sample >> 7) != 0)  		pcm16 -= 0x7FFF;  	resul.AddRange (BitConverter.GetBytes ((short)pcm16));  }  
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM8SignedToPCM16,The following statement contains a magic number: i += 2
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM8SignedToPCM16,The following statement contains a magic number: pcm16 <<= 8;  
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM8SignedToPCM16,The following statement contains a magic number: if ((sample >> 7) != 0)  	pcm16 -= 0x7FFF;  
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM8UnsignedToPCM16,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short sample = BitConverter.ToInt16 (data' i);  	short pcm16 = (short)(sample & 0xFF);  	pcm16 <<= 8;  	pcm16 += 0x7FFF;  	resul.AddRange (BitConverter.GetBytes ((short)pcm16));  }  
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM8UnsignedToPCM16,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short sample = BitConverter.ToInt16 (data' i);  	short pcm16 = (short)(sample & 0xFF);  	pcm16 <<= 8;  	pcm16 += 0x7FFF;  	resul.AddRange (BitConverter.GetBytes ((short)pcm16));  }  
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM8UnsignedToPCM16,The following statement contains a magic number: i += 2
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM8UnsignedToPCM16,The following statement contains a magic number: pcm16 <<= 8;  
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM16ToPCM8,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short pcm16 = BitConverter.ToInt16 (data' i);  	bool negative = (pcm16 < 0 ? true : false);  	if (negative)  		pcm16 += 0x7FFF;  	pcm16 >>= 8;  	if (negative)  		pcm16 += 0x80;  	result.Add ((byte)pcm16);  }  
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM16ToPCM8,The following statement contains a magic number: for (int i = 0; i < data.Length; i += 2) {  	short pcm16 = BitConverter.ToInt16 (data' i);  	bool negative = (pcm16 < 0 ? true : false);  	if (negative)  		pcm16 += 0x7FFF;  	pcm16 >>= 8;  	if (negative)  		pcm16 += 0x80;  	result.Add ((byte)pcm16);  }  
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM16ToPCM8,The following statement contains a magic number: i += 2
Magic Number,SDAT,PCM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\PCM.cs,PCM16ToPCM8,The following statement contains a magic number: pcm16 >>= 8;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: sdat.generico.id = br.ReadChars (4);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: sdat.cabecera.reserved = br.ReadBytes (16);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: sdat.symbol.id = br.ReadChars (4);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: sdat.symbol.reserved = br.ReadBytes (24);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: sdat.symbol.records = new Record[7];  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: info.header.id = br.ReadChars (4);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: info.header.offsetRecords = new uint[8];  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < 8; i++)  	info.header.offsetRecords [i] = br.ReadUInt32 ();  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: info.header.reserved = br.ReadBytes (24);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: info.block = new Info.Block[8];  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.header.offsetRecords [i];  	info.block [i].nEntries = br.ReadUInt32 ();  	info.block [i].offsetEntries = new uint[info.block [i].nEntries];  	info.block [i].entries = new object[info.block [i].nEntries];  	for (int j = 0; j < info.block [i].nEntries; j++)  		info.block [i].offsetEntries [j] = br.ReadUInt32 ();  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [0].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [0].offsetEntries [i];  	Info.SEQ seq = new Info.SEQ ();  	seq.fileID = br.ReadUInt16 ();  	seq.unknown = br.ReadUInt16 ();  	seq.bnk = br.ReadUInt16 ();  	seq.vol = br.ReadByte ();  	seq.cpr = br.ReadByte ();  	seq.ppr = br.ReadByte ();  	seq.ply = br.ReadByte ();  	seq.unknown2 = br.ReadBytes (2);  	info.block [0].entries [i] = seq;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: seq.unknown2 = br.ReadBytes (2);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [2].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [2].offsetEntries [i];  	Info.BANK bank = new Info.BANK ();  	bank.fileID = br.ReadUInt16 ();  	bank.unknown = br.ReadUInt16 ();  	bank.wa = new ushort[4];  	for (int j = 0; j < 4; j++)  		bank.wa [j] = br.ReadUInt16 ();  	info.block [2].entries [i] = bank;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [2].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [2].offsetEntries [i];  	Info.BANK bank = new Info.BANK ();  	bank.fileID = br.ReadUInt16 ();  	bank.unknown = br.ReadUInt16 ();  	bank.wa = new ushort[4];  	for (int j = 0; j < 4; j++)  		bank.wa [j] = br.ReadUInt16 ();  	info.block [2].entries [i] = bank;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [2].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [2].offsetEntries [i];  	Info.BANK bank = new Info.BANK ();  	bank.fileID = br.ReadUInt16 ();  	bank.unknown = br.ReadUInt16 ();  	bank.wa = new ushort[4];  	for (int j = 0; j < 4; j++)  		bank.wa [j] = br.ReadUInt16 ();  	info.block [2].entries [i] = bank;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [2].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [2].offsetEntries [i];  	Info.BANK bank = new Info.BANK ();  	bank.fileID = br.ReadUInt16 ();  	bank.unknown = br.ReadUInt16 ();  	bank.wa = new ushort[4];  	for (int j = 0; j < 4; j++)  		bank.wa [j] = br.ReadUInt16 ();  	info.block [2].entries [i] = bank;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [2].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [2].offsetEntries [i];  	Info.BANK bank = new Info.BANK ();  	bank.fileID = br.ReadUInt16 ();  	bank.unknown = br.ReadUInt16 ();  	bank.wa = new ushort[4];  	for (int j = 0; j < 4; j++)  		bank.wa [j] = br.ReadUInt16 ();  	info.block [2].entries [i] = bank;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [2].offsetEntries [i];  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: bank.wa = new ushort[4];  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int j = 0; j < 4; j++)  	bank.wa [j] = br.ReadUInt16 ();  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: info.block [2].entries [i] = bank;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [3].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [3].offsetEntries [i];  	Info.WAVEARC wave = new Info.WAVEARC ();  	wave.fileID = br.ReadUInt16 ();  	wave.unknown = br.ReadUInt16 ();  	info.block [3].entries [i] = wave;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [3].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [3].offsetEntries [i];  	Info.WAVEARC wave = new Info.WAVEARC ();  	wave.fileID = br.ReadUInt16 ();  	wave.unknown = br.ReadUInt16 ();  	info.block [3].entries [i] = wave;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [3].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [3].offsetEntries [i];  	Info.WAVEARC wave = new Info.WAVEARC ();  	wave.fileID = br.ReadUInt16 ();  	wave.unknown = br.ReadUInt16 ();  	info.block [3].entries [i] = wave;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [3].offsetEntries [i];  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: info.block [3].entries [i] = wave;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [4].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [4].offsetEntries [i];  	Info.PLAYER player = new Info.PLAYER ();  	player.unknown = br.ReadByte ();  	player.padding = br.ReadBytes (3);  	player.unknown2 = br.ReadUInt32 ();  	info.block [4].entries [i] = player;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [4].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [4].offsetEntries [i];  	Info.PLAYER player = new Info.PLAYER ();  	player.unknown = br.ReadByte ();  	player.padding = br.ReadBytes (3);  	player.unknown2 = br.ReadUInt32 ();  	info.block [4].entries [i] = player;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [4].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [4].offsetEntries [i];  	Info.PLAYER player = new Info.PLAYER ();  	player.unknown = br.ReadByte ();  	player.padding = br.ReadBytes (3);  	player.unknown2 = br.ReadUInt32 ();  	info.block [4].entries [i] = player;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [4].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [4].offsetEntries [i];  	Info.PLAYER player = new Info.PLAYER ();  	player.unknown = br.ReadByte ();  	player.padding = br.ReadBytes (3);  	player.unknown2 = br.ReadUInt32 ();  	info.block [4].entries [i] = player;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [4].offsetEntries [i];  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: player.padding = br.ReadBytes (3);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: info.block [4].entries [i] = player;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [5].nEntries; i++) {  	if (info.block [5].offsetEntries [i] == 0x00) {  		info.block [5].entries [i] = new Info.GROUP ();  		continue;  	}  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [5].offsetEntries [i];  	Info.GROUP group = new Info.GROUP ();  	group.nCount = br.ReadUInt32 ();  	group.subgroup = new Info.GROUP.Subgroup[group.nCount];  	for (int j = 0; j < group.nCount; j++) {  		group.subgroup [j].type = br.ReadUInt32 ();  		group.subgroup [j].nEntry = br.ReadUInt32 ();  	}  	info.block [5].entries [i] = group;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [5].nEntries; i++) {  	if (info.block [5].offsetEntries [i] == 0x00) {  		info.block [5].entries [i] = new Info.GROUP ();  		continue;  	}  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [5].offsetEntries [i];  	Info.GROUP group = new Info.GROUP ();  	group.nCount = br.ReadUInt32 ();  	group.subgroup = new Info.GROUP.Subgroup[group.nCount];  	for (int j = 0; j < group.nCount; j++) {  		group.subgroup [j].type = br.ReadUInt32 ();  		group.subgroup [j].nEntry = br.ReadUInt32 ();  	}  	info.block [5].entries [i] = group;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [5].nEntries; i++) {  	if (info.block [5].offsetEntries [i] == 0x00) {  		info.block [5].entries [i] = new Info.GROUP ();  		continue;  	}  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [5].offsetEntries [i];  	Info.GROUP group = new Info.GROUP ();  	group.nCount = br.ReadUInt32 ();  	group.subgroup = new Info.GROUP.Subgroup[group.nCount];  	for (int j = 0; j < group.nCount; j++) {  		group.subgroup [j].type = br.ReadUInt32 ();  		group.subgroup [j].nEntry = br.ReadUInt32 ();  	}  	info.block [5].entries [i] = group;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [5].nEntries; i++) {  	if (info.block [5].offsetEntries [i] == 0x00) {  		info.block [5].entries [i] = new Info.GROUP ();  		continue;  	}  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [5].offsetEntries [i];  	Info.GROUP group = new Info.GROUP ();  	group.nCount = br.ReadUInt32 ();  	group.subgroup = new Info.GROUP.Subgroup[group.nCount];  	for (int j = 0; j < group.nCount; j++) {  		group.subgroup [j].type = br.ReadUInt32 ();  		group.subgroup [j].nEntry = br.ReadUInt32 ();  	}  	info.block [5].entries [i] = group;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [5].nEntries; i++) {  	if (info.block [5].offsetEntries [i] == 0x00) {  		info.block [5].entries [i] = new Info.GROUP ();  		continue;  	}  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [5].offsetEntries [i];  	Info.GROUP group = new Info.GROUP ();  	group.nCount = br.ReadUInt32 ();  	group.subgroup = new Info.GROUP.Subgroup[group.nCount];  	for (int j = 0; j < group.nCount; j++) {  		group.subgroup [j].type = br.ReadUInt32 ();  		group.subgroup [j].nEntry = br.ReadUInt32 ();  	}  	info.block [5].entries [i] = group;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: if (info.block [5].offsetEntries [i] == 0x00) {  	info.block [5].entries [i] = new Info.GROUP ();  	continue;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: if (info.block [5].offsetEntries [i] == 0x00) {  	info.block [5].entries [i] = new Info.GROUP ();  	continue;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: info.block [5].entries [i] = new Info.GROUP ();  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [5].offsetEntries [i];  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: info.block [5].entries [i] = group;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [6].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [6].offsetEntries [i];  	Info.PLAYER2 player = new Info.PLAYER2 ();  	player.nCount = br.ReadByte ();  	player.v = br.ReadBytes (16);  	player.reserved = br.ReadBytes (7);  	info.block [6].entries [i] = player;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [6].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [6].offsetEntries [i];  	Info.PLAYER2 player = new Info.PLAYER2 ();  	player.nCount = br.ReadByte ();  	player.v = br.ReadBytes (16);  	player.reserved = br.ReadBytes (7);  	info.block [6].entries [i] = player;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [6].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [6].offsetEntries [i];  	Info.PLAYER2 player = new Info.PLAYER2 ();  	player.nCount = br.ReadByte ();  	player.v = br.ReadBytes (16);  	player.reserved = br.ReadBytes (7);  	info.block [6].entries [i] = player;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [6].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [6].offsetEntries [i];  	Info.PLAYER2 player = new Info.PLAYER2 ();  	player.nCount = br.ReadByte ();  	player.v = br.ReadBytes (16);  	player.reserved = br.ReadBytes (7);  	info.block [6].entries [i] = player;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [6].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [6].offsetEntries [i];  	Info.PLAYER2 player = new Info.PLAYER2 ();  	player.nCount = br.ReadByte ();  	player.v = br.ReadBytes (16);  	player.reserved = br.ReadBytes (7);  	info.block [6].entries [i] = player;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [6].offsetEntries [i];  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: player.v = br.ReadBytes (16);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: player.reserved = br.ReadBytes (7);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: info.block [6].entries [i] = player;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [7].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [7].offsetEntries [i];  	Info.STRM strm = new Info.STRM ();  	strm.fileID = br.ReadUInt16 ();  	strm.unknown = br.ReadUInt16 ();  	strm.vol = br.ReadByte ();  	strm.pri = br.ReadByte ();  	strm.ply = br.ReadByte ();  	strm.reserved = br.ReadBytes (5);  	info.block [7].entries [i] = strm;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [7].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [7].offsetEntries [i];  	Info.STRM strm = new Info.STRM ();  	strm.fileID = br.ReadUInt16 ();  	strm.unknown = br.ReadUInt16 ();  	strm.vol = br.ReadByte ();  	strm.pri = br.ReadByte ();  	strm.ply = br.ReadByte ();  	strm.reserved = br.ReadBytes (5);  	info.block [7].entries [i] = strm;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [7].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [7].offsetEntries [i];  	Info.STRM strm = new Info.STRM ();  	strm.fileID = br.ReadUInt16 ();  	strm.unknown = br.ReadUInt16 ();  	strm.vol = br.ReadByte ();  	strm.pri = br.ReadByte ();  	strm.ply = br.ReadByte ();  	strm.reserved = br.ReadBytes (5);  	info.block [7].entries [i] = strm;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < info.block [7].nEntries; i++) {  	br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [7].offsetEntries [i];  	Info.STRM strm = new Info.STRM ();  	strm.fileID = br.ReadUInt16 ();  	strm.unknown = br.ReadUInt16 ();  	strm.vol = br.ReadByte ();  	strm.pri = br.ReadByte ();  	strm.ply = br.ReadByte ();  	strm.reserved = br.ReadBytes (5);  	info.block [7].entries [i] = strm;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: br.BaseStream.Position = sdat.cabecera.infoOffset + info.block [7].offsetEntries [i];  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: strm.reserved = br.ReadBytes (5);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: info.block [7].entries [i] = strm;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: fat.header.id = br.ReadChars (4);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: for (int i = 0; i < fat.header.nRecords; i++) {  	fat.records [i].offset = br.ReadUInt32 ();  	fat.records [i].size = br.ReadUInt32 ();  	fat.records [i].reserved = br.ReadBytes (8);  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: fat.records [i].reserved = br.ReadBytes (8);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Read_SDAT,The following statement contains a magic number: sdat.files.header.id = br.ReadChars (4);  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,FileSystem,The following statement contains a magic number: for (int i = 0; i < sdat.fat.header.nRecords; i++) {  	br.BaseStream.Position = sdat.fat.records [i].offset;  	Sound sound = new Sound ();  	sound.offset = sdat.fat.records [i].offset;  	sound.size = sdat.fat.records [i].size;  	sound.internalID = (uint)i;  	string magic = new String (Encoding.ASCII.GetChars (br.ReadBytes (4)));  	switch (magic) {  	case "SSEQ":  		sound.type = FormatSound.SSEQ;  		sound.name = "SSEQ_" + i.ToString () + ".sseq";  		sseq.files.Add (sound);  		break;  	case "SSAR":  		sound.type = FormatSound.SSAR;  		sound.name = "SSAR_" + i.ToString () + ".ssar";  		ssar.files.Add (sound);  		break;  	case "SBNK":  		sound.type = FormatSound.SBNK;  		sound.name = "SBNK_" + i.ToString () + ".sbnk";  		sbnk.files.Add (sound);  		break;  	case "SWAR":  		sound.type = FormatSound.SWAR;  		sound.name = "SWAR_" + i.ToString () + ".swar";  		swar.files.Add (sound);  		break;  	case "STRM":  		sound.type = FormatSound.STRM;  		sound.name = "STRM_" + i.ToString () + ".strm";  		strm.files.Add (sound);  		break;  	}  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [2].nEntries; i++) {  	uint id = ((Info.BANK)sdat.info.block [2].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [2].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [1].entries [i] + ".SBNK";  		sdat.files.root.folders [2].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [2].nEntries; i++) {  	uint id = ((Info.BANK)sdat.info.block [2].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [2].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [1].entries [i] + ".SBNK";  		sdat.files.root.folders [2].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [2].nEntries; i++) {  	uint id = ((Info.BANK)sdat.info.block [2].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [2].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [1].entries [i] + ".SBNK";  		sdat.files.root.folders [2].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [2].nEntries; i++) {  	uint id = ((Info.BANK)sdat.info.block [2].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [2].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [1].entries [i] + ".SBNK";  		sdat.files.root.folders [2].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: if (id != 0x4E49)// Null value   {  	if (oldIDs.Contains (id))  		// If it exits  		continue;  	oldIDs.Add (id);  	Sound newSound = sdat.files.root.folders [2].files [nFile];  	newSound.id = id;  	if (sdat.cabecera.symbSize != 0x00)  		// If there is SYMBOL section  		newSound.name = sdat.symbol.records [1].entries [i] + ".SBNK";  	sdat.files.root.folders [2].files [nFile] = newSound;  } else  	continue;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: if (id != 0x4E49)// Null value   {  	if (oldIDs.Contains (id))  		// If it exits  		continue;  	oldIDs.Add (id);  	Sound newSound = sdat.files.root.folders [2].files [nFile];  	newSound.id = id;  	if (sdat.cabecera.symbSize != 0x00)  		// If there is SYMBOL section  		newSound.name = sdat.symbol.records [1].entries [i] + ".SBNK";  	sdat.files.root.folders [2].files [nFile] = newSound;  } else  	continue;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: sdat.files.root.folders [2].files [nFile] = newSound;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [3].nEntries; i++) {  	uint id = ((Info.WAVEARC)sdat.info.block [3].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [3].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [2].entries [i] + ".SWAR";  		sdat.files.root.folders [3].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [3].nEntries; i++) {  	uint id = ((Info.WAVEARC)sdat.info.block [3].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [3].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [2].entries [i] + ".SWAR";  		sdat.files.root.folders [3].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [3].nEntries; i++) {  	uint id = ((Info.WAVEARC)sdat.info.block [3].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [3].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [2].entries [i] + ".SWAR";  		sdat.files.root.folders [3].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [3].nEntries; i++) {  	uint id = ((Info.WAVEARC)sdat.info.block [3].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [3].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [2].entries [i] + ".SWAR";  		sdat.files.root.folders [3].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [3].nEntries; i++) {  	uint id = ((Info.WAVEARC)sdat.info.block [3].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [3].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [2].entries [i] + ".SWAR";  		sdat.files.root.folders [3].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: if (id != 0x4E49)// Null value   {  	if (oldIDs.Contains (id))  		// If it exits  		continue;  	oldIDs.Add (id);  	Sound newSound = sdat.files.root.folders [3].files [nFile];  	newSound.id = id;  	if (sdat.cabecera.symbSize != 0x00)  		// If there is SYMBOL section  		newSound.name = sdat.symbol.records [2].entries [i] + ".SWAR";  	sdat.files.root.folders [3].files [nFile] = newSound;  } else  	continue;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: if (id != 0x4E49)// Null value   {  	if (oldIDs.Contains (id))  		// If it exits  		continue;  	oldIDs.Add (id);  	Sound newSound = sdat.files.root.folders [3].files [nFile];  	newSound.id = id;  	if (sdat.cabecera.symbSize != 0x00)  		// If there is SYMBOL section  		newSound.name = sdat.symbol.records [2].entries [i] + ".SWAR";  	sdat.files.root.folders [3].files [nFile] = newSound;  } else  	continue;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: if (id != 0x4E49)// Null value   {  	if (oldIDs.Contains (id))  		// If it exits  		continue;  	oldIDs.Add (id);  	Sound newSound = sdat.files.root.folders [3].files [nFile];  	newSound.id = id;  	if (sdat.cabecera.symbSize != 0x00)  		// If there is SYMBOL section  		newSound.name = sdat.symbol.records [2].entries [i] + ".SWAR";  	sdat.files.root.folders [3].files [nFile] = newSound;  } else  	continue;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: if (sdat.cabecera.symbSize != 0x00)  	// If there is SYMBOL section  	newSound.name = sdat.symbol.records [2].entries [i] + ".SWAR";  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: newSound.name = sdat.symbol.records [2].entries [i] + ".SWAR";  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: sdat.files.root.folders [3].files [nFile] = newSound;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [7].nEntries; i++) {  	uint id = ((Info.STRM)sdat.info.block [7].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [4].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [6].entries [i] + ".STRM";  		sdat.files.root.folders [4].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [7].nEntries; i++) {  	uint id = ((Info.STRM)sdat.info.block [7].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [4].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [6].entries [i] + ".STRM";  		sdat.files.root.folders [4].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [7].nEntries; i++) {  	uint id = ((Info.STRM)sdat.info.block [7].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [4].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [6].entries [i] + ".STRM";  		sdat.files.root.folders [4].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [7].nEntries; i++) {  	uint id = ((Info.STRM)sdat.info.block [7].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [4].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [6].entries [i] + ".STRM";  		sdat.files.root.folders [4].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: for (int i = 0; i < sdat.info.block [7].nEntries; i++) {  	uint id = ((Info.STRM)sdat.info.block [7].entries [i]).fileID;  	if (id != 0x4E49)// Null value  	 {  		if (oldIDs.Contains (id))  			// If it exits  			continue;  		oldIDs.Add (id);  		Sound newSound = sdat.files.root.folders [4].files [nFile];  		newSound.id = id;  		if (sdat.cabecera.symbSize != 0x00)  			// If there is SYMBOL section  			newSound.name = sdat.symbol.records [6].entries [i] + ".STRM";  		sdat.files.root.folders [4].files [nFile] = newSound;  	} else  		continue;  	nFile++;  }  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: if (id != 0x4E49)// Null value   {  	if (oldIDs.Contains (id))  		// If it exits  		continue;  	oldIDs.Add (id);  	Sound newSound = sdat.files.root.folders [4].files [nFile];  	newSound.id = id;  	if (sdat.cabecera.symbSize != 0x00)  		// If there is SYMBOL section  		newSound.name = sdat.symbol.records [6].entries [i] + ".STRM";  	sdat.files.root.folders [4].files [nFile] = newSound;  } else  	continue;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: if (id != 0x4E49)// Null value   {  	if (oldIDs.Contains (id))  		// If it exits  		continue;  	oldIDs.Add (id);  	Sound newSound = sdat.files.root.folders [4].files [nFile];  	newSound.id = id;  	if (sdat.cabecera.symbSize != 0x00)  		// If there is SYMBOL section  		newSound.name = sdat.symbol.records [6].entries [i] + ".STRM";  	sdat.files.root.folders [4].files [nFile] = newSound;  } else  	continue;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: if (id != 0x4E49)// Null value   {  	if (oldIDs.Contains (id))  		// If it exits  		continue;  	oldIDs.Add (id);  	Sound newSound = sdat.files.root.folders [4].files [nFile];  	newSound.id = id;  	if (sdat.cabecera.symbSize != 0x00)  		// If there is SYMBOL section  		newSound.name = sdat.symbol.records [6].entries [i] + ".STRM";  	sdat.files.root.folders [4].files [nFile] = newSound;  } else  	continue;  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: if (sdat.cabecera.symbSize != 0x00)  	// If there is SYMBOL section  	newSound.name = sdat.symbol.records [6].entries [i] + ".STRM";  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: newSound.name = sdat.symbol.records [6].entries [i] + ".STRM";  
Magic Number,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,Set_Data,The following statement contains a magic number: sdat.files.root.folders [4].files [nFile] = newSound;  
Magic Number,SDAT,SSEQ,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SSEQ.cs,Read,The following statement contains a magic number: seq.generic.id = br.ReadChars (4);  
Magic Number,SDAT,SSEQ,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SSEQ.cs,Read,The following statement contains a magic number: seq.data.type = br.ReadChars (4);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,Read,The following statement contains a magic number: strm.cabecera.id = br.ReadChars (4);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,Read,The following statement contains a magic number: strm.head.id = br.ReadChars (4);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,Read,The following statement contains a magic number: br.ReadBytes (32);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,Read,The following statement contains a magic number: strm.data.id = br.ReadChars (4);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (strm.head.channels == 2) {  	// Get both channels and convert it to PCM-16  	strm.data.leftChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' true' strm.head.waveType);  	strm.data.rightChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' false' strm.head.waveType);  	Array.Clear (strm.data.data' 0' strm.data.data.Length);  	if (loop && strm.head.waveType == 0)  		// 8 bits per sample  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  	else if (loop && strm.head.waveType == 2)  		// 4 bits per sample  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset * 2);  	else if (loop && strm.head.waveType == 1)  		// 16 bits per sample (NO TESTED)  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  	else  		// No loop  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel);  } else if (strm.head.channels == 1) {  	// Get the channel and convert it to PCM-16  	strm.data.data = MonoChannel (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' strm.head.waveType);  	if (strm.head.waveType == 0 && loop)// 8 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 2)// 4 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  		Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	}  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (strm.head.channels == 2) {  	// Get both channels and convert it to PCM-16  	strm.data.leftChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' true' strm.head.waveType);  	strm.data.rightChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' false' strm.head.waveType);  	Array.Clear (strm.data.data' 0' strm.data.data.Length);  	if (loop && strm.head.waveType == 0)  		// 8 bits per sample  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  	else if (loop && strm.head.waveType == 2)  		// 4 bits per sample  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset * 2);  	else if (loop && strm.head.waveType == 1)  		// 16 bits per sample (NO TESTED)  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  	else  		// No loop  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel);  } else if (strm.head.channels == 1) {  	// Get the channel and convert it to PCM-16  	strm.data.data = MonoChannel (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' strm.head.waveType);  	if (strm.head.waveType == 0 && loop)// 8 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 2)// 4 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  		Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	}  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (strm.head.channels == 2) {  	// Get both channels and convert it to PCM-16  	strm.data.leftChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' true' strm.head.waveType);  	strm.data.rightChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' false' strm.head.waveType);  	Array.Clear (strm.data.data' 0' strm.data.data.Length);  	if (loop && strm.head.waveType == 0)  		// 8 bits per sample  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  	else if (loop && strm.head.waveType == 2)  		// 4 bits per sample  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset * 2);  	else if (loop && strm.head.waveType == 1)  		// 16 bits per sample (NO TESTED)  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  	else  		// No loop  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel);  } else if (strm.head.channels == 1) {  	// Get the channel and convert it to PCM-16  	strm.data.data = MonoChannel (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' strm.head.waveType);  	if (strm.head.waveType == 0 && loop)// 8 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 2)// 4 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  		Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	}  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (strm.head.channels == 2) {  	// Get both channels and convert it to PCM-16  	strm.data.leftChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' true' strm.head.waveType);  	strm.data.rightChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' false' strm.head.waveType);  	Array.Clear (strm.data.data' 0' strm.data.data.Length);  	if (loop && strm.head.waveType == 0)  		// 8 bits per sample  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  	else if (loop && strm.head.waveType == 2)  		// 4 bits per sample  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset * 2);  	else if (loop && strm.head.waveType == 1)  		// 16 bits per sample (NO TESTED)  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  	else  		// No loop  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel);  } else if (strm.head.channels == 1) {  	// Get the channel and convert it to PCM-16  	strm.data.data = MonoChannel (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' strm.head.waveType);  	if (strm.head.waveType == 0 && loop)// 8 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 2)// 4 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  		Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	}  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (strm.head.channels == 2) {  	// Get both channels and convert it to PCM-16  	strm.data.leftChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' true' strm.head.waveType);  	strm.data.rightChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' false' strm.head.waveType);  	Array.Clear (strm.data.data' 0' strm.data.data.Length);  	if (loop && strm.head.waveType == 0)  		// 8 bits per sample  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  	else if (loop && strm.head.waveType == 2)  		// 4 bits per sample  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset * 2);  	else if (loop && strm.head.waveType == 1)  		// 16 bits per sample (NO TESTED)  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  	else  		// No loop  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel);  } else if (strm.head.channels == 1) {  	// Get the channel and convert it to PCM-16  	strm.data.data = MonoChannel (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' strm.head.waveType);  	if (strm.head.waveType == 0 && loop)// 8 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 2)// 4 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  		Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	}  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (strm.head.channels == 2) {  	// Get both channels and convert it to PCM-16  	strm.data.leftChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' true' strm.head.waveType);  	strm.data.rightChannel = DivideChannels (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' false' strm.head.waveType);  	Array.Clear (strm.data.data' 0' strm.data.data.Length);  	if (loop && strm.head.waveType == 0)  		// 8 bits per sample  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  	else if (loop && strm.head.waveType == 2)  		// 4 bits per sample  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset * 2);  	else if (loop && strm.head.waveType == 1)  		// 16 bits per sample (NO TESTED)  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  	else  		// No loop  		strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel);  } else if (strm.head.channels == 1) {  	// Get the channel and convert it to PCM-16  	strm.data.data = MonoChannel (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' strm.head.waveType);  	if (strm.head.waveType == 0 && loop)// 8 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 2)// 4 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  		Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	}  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (loop && strm.head.waveType == 0)  	// 8 bits per sample  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  else if (loop && strm.head.waveType == 2)  	// 4 bits per sample  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset * 2);  else if (loop && strm.head.waveType == 1)  	// 16 bits per sample (NO TESTED)  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  else  	// No loop  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (loop && strm.head.waveType == 0)  	// 8 bits per sample  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  else if (loop && strm.head.waveType == 2)  	// 4 bits per sample  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset * 2);  else if (loop && strm.head.waveType == 1)  	// 16 bits per sample (NO TESTED)  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  else  	// No loop  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (loop && strm.head.waveType == 2)  	// 4 bits per sample  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset * 2);  else if (loop && strm.head.waveType == 1)  	// 16 bits per sample (NO TESTED)  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  else  	// No loop  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (loop && strm.head.waveType == 2)  	// 4 bits per sample  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset * 2);  else if (loop && strm.head.waveType == 1)  	// 16 bits per sample (NO TESTED)  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset);  else  	// No loop  	strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: strm.data.data = MergeChannels (strm.data.leftChannel' strm.data.rightChannel' (int)strm.head.loopOffset * 2);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (strm.head.channels == 1) {  	// Get the channel and convert it to PCM-16  	strm.data.data = MonoChannel (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' strm.head.waveType);  	if (strm.head.waveType == 0 && loop)// 8 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 2)// 4 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  		Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	}  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (strm.head.channels == 1) {  	// Get the channel and convert it to PCM-16  	strm.data.data = MonoChannel (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' strm.head.waveType);  	if (strm.head.waveType == 0 && loop)// 8 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 2)// 4 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  		Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	}  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (strm.head.channels == 1) {  	// Get the channel and convert it to PCM-16  	strm.data.data = MonoChannel (strm.data.data' strm.head.nBlocks' strm.head.blockLen' strm.head.lastBlocklen' strm.head.waveType);  	if (strm.head.waveType == 0 && loop)// 8 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 2)// 4 bits per sample  	 {  		Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  		Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  		strm.data.data = data;  	} else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)  	 {  		Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  		Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  		strm.data.data = data;  	}  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (strm.head.waveType == 0 && loop)// 8 bits per sample   {  	Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  	Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  	strm.data.data = data;  } else if (loop && strm.head.waveType == 2)// 4 bits per sample   {  	Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  	Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  	strm.data.data = data;  } else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)   {  	Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  	Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  	strm.data.data = data;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (strm.head.waveType == 0 && loop)// 8 bits per sample   {  	Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  	Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  	strm.data.data = data;  } else if (loop && strm.head.waveType == 2)// 4 bits per sample   {  	Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  	Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  	strm.data.data = data;  } else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)   {  	Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  	Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  	strm.data.data = data;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (strm.head.waveType == 0 && loop)// 8 bits per sample   {  	Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  	Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  	strm.data.data = data;  } else if (loop && strm.head.waveType == 2)// 4 bits per sample   {  	Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  	Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  	strm.data.data = data;  } else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)   {  	Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  	Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  	strm.data.data = data;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (loop && strm.head.waveType == 2)// 4 bits per sample   {  	Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  	Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  	strm.data.data = data;  } else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)   {  	Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  	Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  	strm.data.data = data;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (loop && strm.head.waveType == 2)// 4 bits per sample   {  	Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  	Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  	strm.data.data = data;  } else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)   {  	Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  	Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  	strm.data.data = data;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: if (loop && strm.head.waveType == 2)// 4 bits per sample   {  	Byte[] data = new Byte[strm.data.data.Length - ((int)strm.head.loopOffset * 2)];  	Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  	strm.data.data = data;  } else if (loop && strm.head.waveType == 1)// 16-bits per sample (NO TESTED)   {  	Byte[] data = new Byte[strm.data.data.Length - (int)strm.head.loopOffset];  	Array.Copy (strm.data.data' strm.head.loopOffset' data' 0' data.Length);  	strm.data.data = data;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: Array.Copy (strm.data.data' strm.head.loopOffset * 2' data' 0' data.Length);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToWAV,The following statement contains a magic number: wav = WAV.Create_WAV (strm.head.channels' strm.head.sampleRate' 16' strm.data.data);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 2) {  	blockSize -= 4;  	// compression info  	blockSize *= 4;  	// 4-bit  } else if (waveType == 0)  	blockSize *= 2;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 2) {  	blockSize -= 4;  	// compression info  	blockSize *= 4;  	// 4-bit  } else if (waveType == 0)  	blockSize *= 2;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 2) {  	blockSize -= 4;  	// compression info  	blockSize *= 4;  	// 4-bit  } else if (waveType == 0)  	blockSize *= 2;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 2) {  	blockSize -= 4;  	// compression info  	blockSize *= 4;  	// 4-bit  } else if (waveType == 0)  	blockSize *= 2;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: blockSize -= 4;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: blockSize *= 4;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 0)  	blockSize *= 2;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: blockSize *= 2;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: strm.head.time = (ushort)(1.0 / strm.head.sampleRate * 1.6756991e+7 / 32);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: strm.head.time = (ushort)(1.0 / strm.head.sampleRate * 1.6756991e+7 / 32);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: strm.head.reserved = new Byte[32];  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (wav.wave.fmt.numChannels == 2) {  	strm.data.leftChannel = DivideChannels (wav.wave.data.data' true);  	strm.data.rightChannel = DivideChannels (wav.wave.data.data' false);  	byte[][] leftBlock = CreateBlocks (strm.data.leftChannel' blockSize' waveType);  	byte[][] rigthBlock = CreateBlocks (strm.data.rightChannel' blockSize' waveType);  	strm.data.data = MergeBlocks (leftBlock' rigthBlock);  	strm.head.blockLen = (uint)leftBlock [0].Length;  	strm.head.lastBlocklen = (uint)leftBlock [leftBlock.Length - 1].Length;  	strm.head.nBlocks = (uint)leftBlock.Length;  } else {  	byte[][] blocks = CreateBlocks (wav.wave.data.data' blockSize' waveType);  	List<byte> data = new List<byte> ();  	for (int i = 0; i < blocks.Length; i++)  		data.AddRange (blocks [i]);  	strm.data.data = data.ToArray ();  	strm.head.blockLen = (uint)blocks [0].Length;  	strm.head.lastBlocklen = (uint)blocks [blocks.Length - 1].Length;  	strm.head.nBlocks = (uint)blocks.Length;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 2) {  	strm.head.blockSample = (strm.head.blockLen - 4) * 2;  	strm.head.lastBlockSample = (strm.head.lastBlocklen - 4) * 2;  } else if (waveType == 1) {  	strm.head.blockSample = strm.head.blockLen / 2;  	strm.head.lastBlockSample = strm.head.lastBlocklen / 2;  } else if (waveType == 0) {  	strm.head.blockSample = strm.head.blockLen;  	strm.head.lastBlockSample = strm.head.lastBlocklen;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 2) {  	strm.head.blockSample = (strm.head.blockLen - 4) * 2;  	strm.head.lastBlockSample = (strm.head.lastBlocklen - 4) * 2;  } else if (waveType == 1) {  	strm.head.blockSample = strm.head.blockLen / 2;  	strm.head.lastBlockSample = strm.head.lastBlocklen / 2;  } else if (waveType == 0) {  	strm.head.blockSample = strm.head.blockLen;  	strm.head.lastBlockSample = strm.head.lastBlocklen;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 2) {  	strm.head.blockSample = (strm.head.blockLen - 4) * 2;  	strm.head.lastBlockSample = (strm.head.lastBlocklen - 4) * 2;  } else if (waveType == 1) {  	strm.head.blockSample = strm.head.blockLen / 2;  	strm.head.lastBlockSample = strm.head.lastBlocklen / 2;  } else if (waveType == 0) {  	strm.head.blockSample = strm.head.blockLen;  	strm.head.lastBlockSample = strm.head.lastBlocklen;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 2) {  	strm.head.blockSample = (strm.head.blockLen - 4) * 2;  	strm.head.lastBlockSample = (strm.head.lastBlocklen - 4) * 2;  } else if (waveType == 1) {  	strm.head.blockSample = strm.head.blockLen / 2;  	strm.head.lastBlockSample = strm.head.lastBlocklen / 2;  } else if (waveType == 0) {  	strm.head.blockSample = strm.head.blockLen;  	strm.head.lastBlockSample = strm.head.lastBlocklen;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 2) {  	strm.head.blockSample = (strm.head.blockLen - 4) * 2;  	strm.head.lastBlockSample = (strm.head.lastBlocklen - 4) * 2;  } else if (waveType == 1) {  	strm.head.blockSample = strm.head.blockLen / 2;  	strm.head.lastBlockSample = strm.head.lastBlocklen / 2;  } else if (waveType == 0) {  	strm.head.blockSample = strm.head.blockLen;  	strm.head.lastBlockSample = strm.head.lastBlocklen;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 2) {  	strm.head.blockSample = (strm.head.blockLen - 4) * 2;  	strm.head.lastBlockSample = (strm.head.lastBlocklen - 4) * 2;  } else if (waveType == 1) {  	strm.head.blockSample = strm.head.blockLen / 2;  	strm.head.lastBlockSample = strm.head.lastBlocklen / 2;  } else if (waveType == 0) {  	strm.head.blockSample = strm.head.blockLen;  	strm.head.lastBlockSample = strm.head.lastBlocklen;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 2) {  	strm.head.blockSample = (strm.head.blockLen - 4) * 2;  	strm.head.lastBlockSample = (strm.head.lastBlocklen - 4) * 2;  } else if (waveType == 1) {  	strm.head.blockSample = strm.head.blockLen / 2;  	strm.head.lastBlockSample = strm.head.lastBlocklen / 2;  } else if (waveType == 0) {  	strm.head.blockSample = strm.head.blockLen;  	strm.head.lastBlockSample = strm.head.lastBlocklen;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: strm.head.blockSample = (strm.head.blockLen - 4) * 2;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: strm.head.blockSample = (strm.head.blockLen - 4) * 2;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: strm.head.lastBlockSample = (strm.head.lastBlocklen - 4) * 2;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: strm.head.lastBlockSample = (strm.head.lastBlocklen - 4) * 2;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 1) {  	strm.head.blockSample = strm.head.blockLen / 2;  	strm.head.lastBlockSample = strm.head.lastBlocklen / 2;  } else if (waveType == 0) {  	strm.head.blockSample = strm.head.blockLen;  	strm.head.lastBlockSample = strm.head.lastBlocklen;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: if (waveType == 1) {  	strm.head.blockSample = strm.head.blockLen / 2;  	strm.head.lastBlockSample = strm.head.lastBlocklen / 2;  } else if (waveType == 0) {  	strm.head.blockSample = strm.head.blockLen;  	strm.head.lastBlockSample = strm.head.lastBlocklen;  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: strm.head.blockSample = strm.head.blockLen / 2;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,ConvertToSTRM,The following statement contains a magic number: strm.head.lastBlockSample = strm.head.lastBlocklen / 2;  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: for (int i = 0; i < nBlocks - 1; i++) {  	blockData = new byte[(int)blockLen];  	datos.CopyTo (i * (int)blockLen * 2 + j' blockData' 0' (int)blockLen);  	if (waveType == 2)  		resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  	else if (waveType == 1)  		resultado.AddRange (blockData);  	else if (waveType == 0)  		resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: for (int i = 0; i < nBlocks - 1; i++) {  	blockData = new byte[(int)blockLen];  	datos.CopyTo (i * (int)blockLen * 2 + j' blockData' 0' (int)blockLen);  	if (waveType == 2)  		resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  	else if (waveType == 1)  		resultado.AddRange (blockData);  	else if (waveType == 0)  		resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: for (int i = 0; i < nBlocks - 1; i++) {  	blockData = new byte[(int)blockLen];  	datos.CopyTo (i * (int)blockLen * 2 + j' blockData' 0' (int)blockLen);  	if (waveType == 2)  		resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  	else if (waveType == 1)  		resultado.AddRange (blockData);  	else if (waveType == 0)  		resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: datos.CopyTo (i * (int)blockLen * 2 + j' blockData' 0' (int)blockLen);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: if (waveType == 2)  	resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  else if (waveType == 1)  	resultado.AddRange (blockData);  else if (waveType == 0)  	resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: if (waveType == 2)  	resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  else if (waveType == 1)  	resultado.AddRange (blockData);  else if (waveType == 0)  	resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: datos.CopyTo ((int)(nBlocks - 1) * (int)blockLen * 2 + j' blockData' 0' (int)lastBlockLen);  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: if (waveType == 2)  	resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  else if (waveType == 1)  	resultado.AddRange (blockData);  else if (waveType == 0)  	resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: if (waveType == 2)  	resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  else if (waveType == 1)  	resultado.AddRange (blockData);  else if (waveType == 0)  	resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MergeChannels,The following statement contains a magic number: for (int i = loopSample; i < leftChannel.Length; i += 2) {  	resultado.Add (leftChannel [i]);  	if (i + 1 < leftChannel.Length)  		resultado.Add (leftChannel [i + 1]);  	resultado.Add (rightChannel [i]);  	if (i + 1 < leftChannel.Length)  		resultado.Add (rightChannel [i + 1]);  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MergeChannels,The following statement contains a magic number: i += 2
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,The following statement contains a magic number: for (int i = 0; i < nBlocks - 1; i++) {  	blockData = new byte[(int)blockLen];  	datos.CopyTo (i * (int)blockLen' blockData' 0' (int)blockLen);  	if (waveType == 2)  		resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  	else if (waveType == 1)  		resultado.AddRange (blockData);  	else if (waveType == 0)  		resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,The following statement contains a magic number: for (int i = 0; i < nBlocks - 1; i++) {  	blockData = new byte[(int)blockLen];  	datos.CopyTo (i * (int)blockLen' blockData' 0' (int)blockLen);  	if (waveType == 2)  		resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  	else if (waveType == 1)  		resultado.AddRange (blockData);  	else if (waveType == 0)  		resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,The following statement contains a magic number: if (waveType == 2)  	resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  else if (waveType == 1)  	resultado.AddRange (blockData);  else if (waveType == 0)  	resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,The following statement contains a magic number: if (waveType == 2)  	resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  else if (waveType == 1)  	resultado.AddRange (blockData);  else if (waveType == 0)  	resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,The following statement contains a magic number: resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,The following statement contains a magic number: if (waveType == 2) {  	if (blockData.Length < 4)// Archivos sin sonido  	 {  		resultado.AddRange (blockData);  		return resultado.ToArray ();  	}  	resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  } else if (waveType == 1)  	resultado.AddRange (blockData);  else if (waveType == 0)  	resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,The following statement contains a magic number: if (waveType == 2) {  	if (blockData.Length < 4)// Archivos sin sonido  	 {  		resultado.AddRange (blockData);  		return resultado.ToArray ();  	}  	resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  } else if (waveType == 1)  	resultado.AddRange (blockData);  else if (waveType == 0)  	resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,The following statement contains a magic number: if (waveType == 2) {  	if (blockData.Length < 4)// Archivos sin sonido  	 {  		resultado.AddRange (blockData);  		return resultado.ToArray ();  	}  	resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  } else if (waveType == 1)  	resultado.AddRange (blockData);  else if (waveType == 0)  	resultado.AddRange (PCM.PCM8SignedToPCM16 (blockData));  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,The following statement contains a magic number: if (blockData.Length < 4)// Archivos sin sonido   {  	resultado.AddRange (blockData);  	return resultado.ToArray ();  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,MonoChannel,The following statement contains a magic number: resultado.AddRange (Compression_ADPCM.Decompress (blockData' BitConverter.ToInt16 (blockData' 0)' BitConverter.ToInt16 (blockData' 2)));  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: for (int i = (leftChannel ? 0 : 2); i < data.Length; i += 4) {  	channel.Add (data [i]);  	channel.Add (data [i + 1]);  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: for (int i = (leftChannel ? 0 : 2); i < data.Length; i += 4) {  	channel.Add (data [i]);  	channel.Add (data [i + 1]);  }  
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,DivideChannels,The following statement contains a magic number: i += 4
Magic Number,SDAT,STRM,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\STRM.cs,CreateBlocks,The following statement contains a magic number: if (waveType == 2)  	return Compression_ADPCM.CompressBlock (channel' blockSize);  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: try {  	fs = new System.IO.FileStream (path' System.IO.FileMode.Open);  	br = new System.IO.BinaryReader (fs);  	// Common header  	swar.header.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swar.header.magic = br.ReadUInt32 ();  	swar.header.nFileSize = br.ReadUInt32 ();  	swar.header.nSize = br.ReadUInt16 ();  	swar.header.nBlock = br.ReadUInt16 ();  	// DATA section  	swar.data.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swar.data.nSize = br.ReadUInt32 ();  	swar.data.reserved = new uint[8];  	for (int i = 0; i < 8; i++) {  		swar.data.reserved [i] = br.ReadUInt32 ();  	}  	swar.data.nSample = br.ReadUInt32 ();  	swar.data.nOffset = new uint[swar.data.nSample];  	for (int i = 0; i < swar.data.nSample; i++) {  		swar.data.nOffset [i] = br.ReadUInt32 ();  	}  	swar.data.samples = new sSWAR.Data.Sample[swar.data.nSample];  	for (uint i = 0; i < swar.data.nSample; i++) {  		// INFO structure  		swar.data.samples [i].info.nWaveType = br.ReadByte ();  		swar.data.samples [i].info.bLoop = br.ReadByte ();  		swar.data.samples [i].info.nSampleRate = br.ReadUInt16 ();  		swar.data.samples [i].info.nTime = br.ReadUInt16 ();  		swar.data.samples [i].info.nLoopOffset = br.ReadUInt16 ();  		swar.data.samples [i].info.nNonLoopLen = br.ReadUInt32 ();  		// Calculation of data size  		if (i < swar.data.nOffset.Length - 1) {  			swar.data.samples [i].data = new byte[swar.data.nOffset [i + 1] - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  		} else {  			swar.data.samples [i].data = new byte[br.BaseStream.Length - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  		}  		// Read DATA  		for (uint j = 0; j < swar.data.samples [i].data.Length; j++) {  			swar.data.samples [i].data [j] = br.ReadByte ();  		}  	}  } catch (Exception ex) {  	System.Console.WriteLine (ex.Message.ToString ());  } finally {  	if (fs != null)  		fs.Close ();  	if (br != null)  		br.Close ();  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: try {  	fs = new System.IO.FileStream (path' System.IO.FileMode.Open);  	br = new System.IO.BinaryReader (fs);  	// Common header  	swar.header.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swar.header.magic = br.ReadUInt32 ();  	swar.header.nFileSize = br.ReadUInt32 ();  	swar.header.nSize = br.ReadUInt16 ();  	swar.header.nBlock = br.ReadUInt16 ();  	// DATA section  	swar.data.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swar.data.nSize = br.ReadUInt32 ();  	swar.data.reserved = new uint[8];  	for (int i = 0; i < 8; i++) {  		swar.data.reserved [i] = br.ReadUInt32 ();  	}  	swar.data.nSample = br.ReadUInt32 ();  	swar.data.nOffset = new uint[swar.data.nSample];  	for (int i = 0; i < swar.data.nSample; i++) {  		swar.data.nOffset [i] = br.ReadUInt32 ();  	}  	swar.data.samples = new sSWAR.Data.Sample[swar.data.nSample];  	for (uint i = 0; i < swar.data.nSample; i++) {  		// INFO structure  		swar.data.samples [i].info.nWaveType = br.ReadByte ();  		swar.data.samples [i].info.bLoop = br.ReadByte ();  		swar.data.samples [i].info.nSampleRate = br.ReadUInt16 ();  		swar.data.samples [i].info.nTime = br.ReadUInt16 ();  		swar.data.samples [i].info.nLoopOffset = br.ReadUInt16 ();  		swar.data.samples [i].info.nNonLoopLen = br.ReadUInt32 ();  		// Calculation of data size  		if (i < swar.data.nOffset.Length - 1) {  			swar.data.samples [i].data = new byte[swar.data.nOffset [i + 1] - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  		} else {  			swar.data.samples [i].data = new byte[br.BaseStream.Length - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  		}  		// Read DATA  		for (uint j = 0; j < swar.data.samples [i].data.Length; j++) {  			swar.data.samples [i].data [j] = br.ReadByte ();  		}  	}  } catch (Exception ex) {  	System.Console.WriteLine (ex.Message.ToString ());  } finally {  	if (fs != null)  		fs.Close ();  	if (br != null)  		br.Close ();  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: try {  	fs = new System.IO.FileStream (path' System.IO.FileMode.Open);  	br = new System.IO.BinaryReader (fs);  	// Common header  	swar.header.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swar.header.magic = br.ReadUInt32 ();  	swar.header.nFileSize = br.ReadUInt32 ();  	swar.header.nSize = br.ReadUInt16 ();  	swar.header.nBlock = br.ReadUInt16 ();  	// DATA section  	swar.data.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swar.data.nSize = br.ReadUInt32 ();  	swar.data.reserved = new uint[8];  	for (int i = 0; i < 8; i++) {  		swar.data.reserved [i] = br.ReadUInt32 ();  	}  	swar.data.nSample = br.ReadUInt32 ();  	swar.data.nOffset = new uint[swar.data.nSample];  	for (int i = 0; i < swar.data.nSample; i++) {  		swar.data.nOffset [i] = br.ReadUInt32 ();  	}  	swar.data.samples = new sSWAR.Data.Sample[swar.data.nSample];  	for (uint i = 0; i < swar.data.nSample; i++) {  		// INFO structure  		swar.data.samples [i].info.nWaveType = br.ReadByte ();  		swar.data.samples [i].info.bLoop = br.ReadByte ();  		swar.data.samples [i].info.nSampleRate = br.ReadUInt16 ();  		swar.data.samples [i].info.nTime = br.ReadUInt16 ();  		swar.data.samples [i].info.nLoopOffset = br.ReadUInt16 ();  		swar.data.samples [i].info.nNonLoopLen = br.ReadUInt32 ();  		// Calculation of data size  		if (i < swar.data.nOffset.Length - 1) {  			swar.data.samples [i].data = new byte[swar.data.nOffset [i + 1] - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  		} else {  			swar.data.samples [i].data = new byte[br.BaseStream.Length - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  		}  		// Read DATA  		for (uint j = 0; j < swar.data.samples [i].data.Length; j++) {  			swar.data.samples [i].data [j] = br.ReadByte ();  		}  	}  } catch (Exception ex) {  	System.Console.WriteLine (ex.Message.ToString ());  } finally {  	if (fs != null)  		fs.Close ();  	if (br != null)  		br.Close ();  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: try {  	fs = new System.IO.FileStream (path' System.IO.FileMode.Open);  	br = new System.IO.BinaryReader (fs);  	// Common header  	swar.header.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swar.header.magic = br.ReadUInt32 ();  	swar.header.nFileSize = br.ReadUInt32 ();  	swar.header.nSize = br.ReadUInt16 ();  	swar.header.nBlock = br.ReadUInt16 ();  	// DATA section  	swar.data.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swar.data.nSize = br.ReadUInt32 ();  	swar.data.reserved = new uint[8];  	for (int i = 0; i < 8; i++) {  		swar.data.reserved [i] = br.ReadUInt32 ();  	}  	swar.data.nSample = br.ReadUInt32 ();  	swar.data.nOffset = new uint[swar.data.nSample];  	for (int i = 0; i < swar.data.nSample; i++) {  		swar.data.nOffset [i] = br.ReadUInt32 ();  	}  	swar.data.samples = new sSWAR.Data.Sample[swar.data.nSample];  	for (uint i = 0; i < swar.data.nSample; i++) {  		// INFO structure  		swar.data.samples [i].info.nWaveType = br.ReadByte ();  		swar.data.samples [i].info.bLoop = br.ReadByte ();  		swar.data.samples [i].info.nSampleRate = br.ReadUInt16 ();  		swar.data.samples [i].info.nTime = br.ReadUInt16 ();  		swar.data.samples [i].info.nLoopOffset = br.ReadUInt16 ();  		swar.data.samples [i].info.nNonLoopLen = br.ReadUInt32 ();  		// Calculation of data size  		if (i < swar.data.nOffset.Length - 1) {  			swar.data.samples [i].data = new byte[swar.data.nOffset [i + 1] - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  		} else {  			swar.data.samples [i].data = new byte[br.BaseStream.Length - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  		}  		// Read DATA  		for (uint j = 0; j < swar.data.samples [i].data.Length; j++) {  			swar.data.samples [i].data [j] = br.ReadByte ();  		}  	}  } catch (Exception ex) {  	System.Console.WriteLine (ex.Message.ToString ());  } finally {  	if (fs != null)  		fs.Close ();  	if (br != null)  		br.Close ();  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: try {  	fs = new System.IO.FileStream (path' System.IO.FileMode.Open);  	br = new System.IO.BinaryReader (fs);  	// Common header  	swar.header.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swar.header.magic = br.ReadUInt32 ();  	swar.header.nFileSize = br.ReadUInt32 ();  	swar.header.nSize = br.ReadUInt16 ();  	swar.header.nBlock = br.ReadUInt16 ();  	// DATA section  	swar.data.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swar.data.nSize = br.ReadUInt32 ();  	swar.data.reserved = new uint[8];  	for (int i = 0; i < 8; i++) {  		swar.data.reserved [i] = br.ReadUInt32 ();  	}  	swar.data.nSample = br.ReadUInt32 ();  	swar.data.nOffset = new uint[swar.data.nSample];  	for (int i = 0; i < swar.data.nSample; i++) {  		swar.data.nOffset [i] = br.ReadUInt32 ();  	}  	swar.data.samples = new sSWAR.Data.Sample[swar.data.nSample];  	for (uint i = 0; i < swar.data.nSample; i++) {  		// INFO structure  		swar.data.samples [i].info.nWaveType = br.ReadByte ();  		swar.data.samples [i].info.bLoop = br.ReadByte ();  		swar.data.samples [i].info.nSampleRate = br.ReadUInt16 ();  		swar.data.samples [i].info.nTime = br.ReadUInt16 ();  		swar.data.samples [i].info.nLoopOffset = br.ReadUInt16 ();  		swar.data.samples [i].info.nNonLoopLen = br.ReadUInt32 ();  		// Calculation of data size  		if (i < swar.data.nOffset.Length - 1) {  			swar.data.samples [i].data = new byte[swar.data.nOffset [i + 1] - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  		} else {  			swar.data.samples [i].data = new byte[br.BaseStream.Length - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  		}  		// Read DATA  		for (uint j = 0; j < swar.data.samples [i].data.Length; j++) {  			swar.data.samples [i].data [j] = br.ReadByte ();  		}  	}  } catch (Exception ex) {  	System.Console.WriteLine (ex.Message.ToString ());  } finally {  	if (fs != null)  		fs.Close ();  	if (br != null)  		br.Close ();  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: try {  	fs = new System.IO.FileStream (path' System.IO.FileMode.Open);  	br = new System.IO.BinaryReader (fs);  	// Common header  	swar.header.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swar.header.magic = br.ReadUInt32 ();  	swar.header.nFileSize = br.ReadUInt32 ();  	swar.header.nSize = br.ReadUInt16 ();  	swar.header.nBlock = br.ReadUInt16 ();  	// DATA section  	swar.data.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swar.data.nSize = br.ReadUInt32 ();  	swar.data.reserved = new uint[8];  	for (int i = 0; i < 8; i++) {  		swar.data.reserved [i] = br.ReadUInt32 ();  	}  	swar.data.nSample = br.ReadUInt32 ();  	swar.data.nOffset = new uint[swar.data.nSample];  	for (int i = 0; i < swar.data.nSample; i++) {  		swar.data.nOffset [i] = br.ReadUInt32 ();  	}  	swar.data.samples = new sSWAR.Data.Sample[swar.data.nSample];  	for (uint i = 0; i < swar.data.nSample; i++) {  		// INFO structure  		swar.data.samples [i].info.nWaveType = br.ReadByte ();  		swar.data.samples [i].info.bLoop = br.ReadByte ();  		swar.data.samples [i].info.nSampleRate = br.ReadUInt16 ();  		swar.data.samples [i].info.nTime = br.ReadUInt16 ();  		swar.data.samples [i].info.nLoopOffset = br.ReadUInt16 ();  		swar.data.samples [i].info.nNonLoopLen = br.ReadUInt32 ();  		// Calculation of data size  		if (i < swar.data.nOffset.Length - 1) {  			swar.data.samples [i].data = new byte[swar.data.nOffset [i + 1] - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  		} else {  			swar.data.samples [i].data = new byte[br.BaseStream.Length - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  		}  		// Read DATA  		for (uint j = 0; j < swar.data.samples [i].data.Length; j++) {  			swar.data.samples [i].data [j] = br.ReadByte ();  		}  	}  } catch (Exception ex) {  	System.Console.WriteLine (ex.Message.ToString ());  } finally {  	if (fs != null)  		fs.Close ();  	if (br != null)  		br.Close ();  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: swar.header.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: swar.data.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: swar.data.reserved = new uint[8];  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: for (int i = 0; i < 8; i++) {  	swar.data.reserved [i] = br.ReadUInt32 ();  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: for (uint i = 0; i < swar.data.nSample; i++) {  	// INFO structure  	swar.data.samples [i].info.nWaveType = br.ReadByte ();  	swar.data.samples [i].info.bLoop = br.ReadByte ();  	swar.data.samples [i].info.nSampleRate = br.ReadUInt16 ();  	swar.data.samples [i].info.nTime = br.ReadUInt16 ();  	swar.data.samples [i].info.nLoopOffset = br.ReadUInt16 ();  	swar.data.samples [i].info.nNonLoopLen = br.ReadUInt32 ();  	// Calculation of data size  	if (i < swar.data.nOffset.Length - 1) {  		swar.data.samples [i].data = new byte[swar.data.nOffset [i + 1] - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  	} else {  		swar.data.samples [i].data = new byte[br.BaseStream.Length - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  	}  	// Read DATA  	for (uint j = 0; j < swar.data.samples [i].data.Length; j++) {  		swar.data.samples [i].data [j] = br.ReadByte ();  	}  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: for (uint i = 0; i < swar.data.nSample; i++) {  	// INFO structure  	swar.data.samples [i].info.nWaveType = br.ReadByte ();  	swar.data.samples [i].info.bLoop = br.ReadByte ();  	swar.data.samples [i].info.nSampleRate = br.ReadUInt16 ();  	swar.data.samples [i].info.nTime = br.ReadUInt16 ();  	swar.data.samples [i].info.nLoopOffset = br.ReadUInt16 ();  	swar.data.samples [i].info.nNonLoopLen = br.ReadUInt32 ();  	// Calculation of data size  	if (i < swar.data.nOffset.Length - 1) {  		swar.data.samples [i].data = new byte[swar.data.nOffset [i + 1] - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  	} else {  		swar.data.samples [i].data = new byte[br.BaseStream.Length - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  	}  	// Read DATA  	for (uint j = 0; j < swar.data.samples [i].data.Length; j++) {  		swar.data.samples [i].data [j] = br.ReadByte ();  	}  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: if (i < swar.data.nOffset.Length - 1) {  	swar.data.samples [i].data = new byte[swar.data.nOffset [i + 1] - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  } else {  	swar.data.samples [i].data = new byte[br.BaseStream.Length - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: if (i < swar.data.nOffset.Length - 1) {  	swar.data.samples [i].data = new byte[swar.data.nOffset [i + 1] - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  } else {  	swar.data.samples [i].data = new byte[br.BaseStream.Length - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: swar.data.samples [i].data = new byte[swar.data.nOffset [i + 1] - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Read,The following statement contains a magic number: swar.data.samples [i].data = new byte[br.BaseStream.Length - swar.data.nOffset [i] - /*SWAVInfo size ->*/12];  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,Write,The following statement contains a magic number: for (int i = 0; i < 8; i++)  	bw.Write ((uint)0x00);  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: for (int i = 0; i < swav.Length; i++) {  	swav [i] = new sSWAV ();  	swav [i].data.data = swar.data.samples [i].data;  	swav [i].data.info = swar.data.samples [i].info;  	swav [i].data.type = new char[] {  		'D''  		'A''  		'T''  		'A'  	};  	swav [i].data.nSize = (uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint));  	swav [i].header.type = new char[] {  		'S''  		'W''  		'A''  		'V'  	};  	swav [i].header.magic = 0x0100feff;  	swav [i].header.nSize = 16;  	swav [i].header.nBlock = 1;  	swav [i].header.nFileSize = 16 + ((uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint)));  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: for (int i = 0; i < swav.Length; i++) {  	swav [i] = new sSWAV ();  	swav [i].data.data = swar.data.samples [i].data;  	swav [i].data.info = swar.data.samples [i].info;  	swav [i].data.type = new char[] {  		'D''  		'A''  		'T''  		'A'  	};  	swav [i].data.nSize = (uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint));  	swav [i].header.type = new char[] {  		'S''  		'W''  		'A''  		'V'  	};  	swav [i].header.magic = 0x0100feff;  	swav [i].header.nSize = 16;  	swav [i].header.nBlock = 1;  	swav [i].header.nFileSize = 16 + ((uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint)));  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: for (int i = 0; i < swav.Length; i++) {  	swav [i] = new sSWAV ();  	swav [i].data.data = swar.data.samples [i].data;  	swav [i].data.info = swar.data.samples [i].info;  	swav [i].data.type = new char[] {  		'D''  		'A''  		'T''  		'A'  	};  	swav [i].data.nSize = (uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint));  	swav [i].header.type = new char[] {  		'S''  		'W''  		'A''  		'V'  	};  	swav [i].header.magic = 0x0100feff;  	swav [i].header.nSize = 16;  	swav [i].header.nBlock = 1;  	swav [i].header.nFileSize = 16 + ((uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint)));  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: for (int i = 0; i < swav.Length; i++) {  	swav [i] = new sSWAV ();  	swav [i].data.data = swar.data.samples [i].data;  	swav [i].data.info = swar.data.samples [i].info;  	swav [i].data.type = new char[] {  		'D''  		'A''  		'T''  		'A'  	};  	swav [i].data.nSize = (uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint));  	swav [i].header.type = new char[] {  		'S''  		'W''  		'A''  		'V'  	};  	swav [i].header.magic = 0x0100feff;  	swav [i].header.nSize = 16;  	swav [i].header.nBlock = 1;  	swav [i].header.nFileSize = 16 + ((uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint)));  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: for (int i = 0; i < swav.Length; i++) {  	swav [i] = new sSWAV ();  	swav [i].data.data = swar.data.samples [i].data;  	swav [i].data.info = swar.data.samples [i].info;  	swav [i].data.type = new char[] {  		'D''  		'A''  		'T''  		'A'  	};  	swav [i].data.nSize = (uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint));  	swav [i].header.type = new char[] {  		'S''  		'W''  		'A''  		'V'  	};  	swav [i].header.magic = 0x0100feff;  	swav [i].header.nSize = 16;  	swav [i].header.nBlock = 1;  	swav [i].header.nFileSize = 16 + ((uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint)));  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: for (int i = 0; i < swav.Length; i++) {  	swav [i] = new sSWAV ();  	swav [i].data.data = swar.data.samples [i].data;  	swav [i].data.info = swar.data.samples [i].info;  	swav [i].data.type = new char[] {  		'D''  		'A''  		'T''  		'A'  	};  	swav [i].data.nSize = (uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint));  	swav [i].header.type = new char[] {  		'S''  		'W''  		'A''  		'V'  	};  	swav [i].header.magic = 0x0100feff;  	swav [i].header.nSize = 16;  	swav [i].header.nBlock = 1;  	swav [i].header.nFileSize = 16 + ((uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint)));  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: for (int i = 0; i < swav.Length; i++) {  	swav [i] = new sSWAV ();  	swav [i].data.data = swar.data.samples [i].data;  	swav [i].data.info = swar.data.samples [i].info;  	swav [i].data.type = new char[] {  		'D''  		'A''  		'T''  		'A'  	};  	swav [i].data.nSize = (uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint));  	swav [i].header.type = new char[] {  		'S''  		'W''  		'A''  		'V'  	};  	swav [i].header.magic = 0x0100feff;  	swav [i].header.nSize = 16;  	swav [i].header.nBlock = 1;  	swav [i].header.nFileSize = 16 + ((uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint)));  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: for (int i = 0; i < swav.Length; i++) {  	swav [i] = new sSWAV ();  	swav [i].data.data = swar.data.samples [i].data;  	swav [i].data.info = swar.data.samples [i].info;  	swav [i].data.type = new char[] {  		'D''  		'A''  		'T''  		'A'  	};  	swav [i].data.nSize = (uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint));  	swav [i].header.type = new char[] {  		'S''  		'W''  		'A''  		'V'  	};  	swav [i].header.magic = 0x0100feff;  	swav [i].header.nSize = 16;  	swav [i].header.nBlock = 1;  	swav [i].header.nFileSize = 16 + ((uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint)));  }  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: swav [i].data.nSize = (uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint));  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: swav [i].data.nSize = (uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint));  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: swav [i].data.nSize = (uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint));  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: swav [i].header.nSize = 16;  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: swav [i].header.nFileSize = 16 + ((uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint)));  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: swav [i].header.nFileSize = 16 + ((uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint)));  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: swav [i].header.nFileSize = 16 + ((uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint)));  
Magic Number,SDAT,SWAR,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAR.cs,ConvertToSWAV,The following statement contains a magic number: swav [i].header.nFileSize = 16 + ((uint)swav [i].data.data.Length + 1 * sizeof(uint) + 4 * sizeof(byte) + (2 * sizeof(byte) + 3 * sizeof(ushort) + sizeof(uint)));  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,Read,The following statement contains a magic number: try {  	fs = new System.IO.FileStream (path' System.IO.FileMode.Open);  	br = new System.IO.BinaryReader (fs);  	//Leer Header  	swav.header.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swav.header.magic = br.ReadUInt32 ();  	swav.header.nFileSize = br.ReadUInt32 ();  	swav.header.nSize = br.ReadUInt16 ();  	swav.header.nBlock = br.ReadUInt16 ();  	//Leer Data  	swav.data.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swav.data.nSize = br.ReadUInt32 ();  	{  		//Leer Info  		swav.data.info.nWaveType = br.ReadByte ();  		swav.data.info.bLoop = br.ReadByte ();  		swav.data.info.nSampleRate = br.ReadUInt16 ();  		swav.data.info.nTime = br.ReadUInt16 ();  		swav.data.info.nLoopOffset = br.ReadUInt16 ();  		swav.data.info.nNonLoopLen = br.ReadUInt32 ();  	//Leer resto de Data  	}  	uint tamañoDatos = (uint)(br.BaseStream.Length - br.BaseStream.Position);  	swav.data.data = br.ReadBytes ((int)tamañoDatos);  } catch (Exception ex) {  	System.Console.WriteLine (ex.Message.ToString ());  } finally {  	if (fs != null)  		fs.Close ();  	if (br != null)  		br.Close ();  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,Read,The following statement contains a magic number: try {  	fs = new System.IO.FileStream (path' System.IO.FileMode.Open);  	br = new System.IO.BinaryReader (fs);  	//Leer Header  	swav.header.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swav.header.magic = br.ReadUInt32 ();  	swav.header.nFileSize = br.ReadUInt32 ();  	swav.header.nSize = br.ReadUInt16 ();  	swav.header.nBlock = br.ReadUInt16 ();  	//Leer Data  	swav.data.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  	swav.data.nSize = br.ReadUInt32 ();  	{  		//Leer Info  		swav.data.info.nWaveType = br.ReadByte ();  		swav.data.info.bLoop = br.ReadByte ();  		swav.data.info.nSampleRate = br.ReadUInt16 ();  		swav.data.info.nTime = br.ReadUInt16 ();  		swav.data.info.nLoopOffset = br.ReadUInt16 ();  		swav.data.info.nNonLoopLen = br.ReadUInt32 ();  	//Leer resto de Data  	}  	uint tamañoDatos = (uint)(br.BaseStream.Length - br.BaseStream.Position);  	swav.data.data = br.ReadBytes ((int)tamañoDatos);  } catch (Exception ex) {  	System.Console.WriteLine (ex.Message.ToString ());  } finally {  	if (fs != null)  		fs.Close ();  	if (br != null)  		br.Close ();  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,Read,The following statement contains a magic number: swav.header.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,Read,The following statement contains a magic number: swav.data.type = Encoding.ASCII.GetChars (br.ReadBytes (4));  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType == 0)// 8 Bits per sample' PCM-8   {  	swav.data.data = PCM.PCM8SignedToPCM16 (swav.data.data);  	if (loop) {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType == 1)// 16 Bits per sample' PCM-16   {  	if (loop)// NO TESTED  	 {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType == 0)// 8 Bits per sample' PCM-8   {  	swav.data.data = PCM.PCM8SignedToPCM16 (swav.data.data);  	if (loop) {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType == 1)// 16 Bits per sample' PCM-16   {  	if (loop)// NO TESTED  	 {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType == 0)// 8 Bits per sample' PCM-8   {  	swav.data.data = PCM.PCM8SignedToPCM16 (swav.data.data);  	if (loop) {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType == 1)// 16 Bits per sample' PCM-16   {  	if (loop)// NO TESTED  	 {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType == 0)// 8 Bits per sample' PCM-8   {  	swav.data.data = PCM.PCM8SignedToPCM16 (swav.data.data);  	if (loop) {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType == 1)// 16 Bits per sample' PCM-16   {  	if (loop)// NO TESTED  	 {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType == 0)// 8 Bits per sample' PCM-8   {  	swav.data.data = PCM.PCM8SignedToPCM16 (swav.data.data);  	if (loop) {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType == 1)// 16 Bits per sample' PCM-16   {  	if (loop)// NO TESTED  	 {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType == 0)// 8 Bits per sample' PCM-8   {  	swav.data.data = PCM.PCM8SignedToPCM16 (swav.data.data);  	if (loop) {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType == 1)// 16 Bits per sample' PCM-16   {  	if (loop)// NO TESTED  	 {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType == 0)// 8 Bits per sample' PCM-8   {  	swav.data.data = PCM.PCM8SignedToPCM16 (swav.data.data);  	if (loop) {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType == 1)// 16 Bits per sample' PCM-16   {  	if (loop)// NO TESTED  	 {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType == 1)// 16 Bits per sample' PCM-16   {  	if (loop)// NO TESTED  	 {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType == 1)// 16 Bits per sample' PCM-16   {  	if (loop)// NO TESTED  	 {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType == 1)// 16 Bits per sample' PCM-16   {  	if (loop)// NO TESTED  	 {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType == 1)// 16 Bits per sample' PCM-16   {  	if (loop)// NO TESTED  	 {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType == 1)// 16 Bits per sample' PCM-16   {  	if (loop)// NO TESTED  	 {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType == 1)// 16 Bits per sample' PCM-16   {  	if (loop)// NO TESTED  	 {  		Byte[] data = new Byte[(int)swav.data.info.nNonLoopLen];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  } else if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (swav.data.info.nWaveType >= 2)// 4 Bits per sample' IMA-ADPCM   {  	swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  	if (loop) {  		Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  		Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  		swav.data.data = data;  	}  	wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: swav.data.data = Compression_ADPCM.Decompress (swav.data.data' BitConverter.ToUInt16 (swav.data.data' 0)' BitConverter.ToUInt16 (swav.data.data' 2));  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (loop) {  	Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  	Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  	swav.data.data = data;  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: if (loop) {  	Byte[] data = new Byte[swav.data.data.Length - ((int)swav.data.info.nLoopOffset * 2)];  	Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  	swav.data.data = data;  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: Array.Copy (swav.data.data' swav.data.info.nLoopOffset * 2' data' 0' data.Length);  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToWAV,The following statement contains a magic number: wav = WAV.Create_WAV (1' swav.data.info.nSampleRate' 16' swav.data.data);  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToSWAV,The following statement contains a magic number: swav.data.info.nTime = (ushort)(1.6756991e+7 / wav.wave.fmt.sampleRate);  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToSWAV,The following statement contains a magic number: if (waveType == 0)  	swav.data.data = PCM.PCM16ToPCM8 (wav.wave.data.data);  else if (waveType == 2) {  	List<byte> temp = new List<byte> ();  	temp.AddRange (new Byte[] {  		0x00'  		0x00'  		0x00'  		0x00  	});  	temp.AddRange (Compression_ADPCM.Compress (wav.wave.data.data));  	swav.data.data = temp.ToArray ();  } else  	swav.data.data = wav.wave.data.data;  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ConvertToSWAV,The following statement contains a magic number: if (waveType == 2) {  	List<byte> temp = new List<byte> ();  	temp.AddRange (new Byte[] {  		0x00'  		0x00'  		0x00'  		0x00  	});  	temp.AddRange (Compression_ADPCM.Compress (wav.wave.data.data));  	swav.data.data = temp.ToArray ();  } else  	swav.data.data = wav.wave.data.data;  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,The following statement contains a magic number: for (int i = 0; i < data.Length; i += bps / 8) {  	int sample' p;  	switch (bps) {  	case 8:  		sample = (SByte)data [i];  		p = sample * volume / 100;  		sample += p;  		result.Add ((byte)sample);  		break;  	case 16:  		sample = BitConverter.ToInt16 (data' i);  		p = sample * volume / 100;  		sample += p;  		result.AddRange (BitConverter.GetBytes ((short)sample));  		break;  	}  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,The following statement contains a magic number: for (int i = 0; i < data.Length; i += bps / 8) {  	int sample' p;  	switch (bps) {  	case 8:  		sample = (SByte)data [i];  		p = sample * volume / 100;  		sample += p;  		result.Add ((byte)sample);  		break;  	case 16:  		sample = BitConverter.ToInt16 (data' i);  		p = sample * volume / 100;  		sample += p;  		result.AddRange (BitConverter.GetBytes ((short)sample));  		break;  	}  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,The following statement contains a magic number: for (int i = 0; i < data.Length; i += bps / 8) {  	int sample' p;  	switch (bps) {  	case 8:  		sample = (SByte)data [i];  		p = sample * volume / 100;  		sample += p;  		result.Add ((byte)sample);  		break;  	case 16:  		sample = BitConverter.ToInt16 (data' i);  		p = sample * volume / 100;  		sample += p;  		result.AddRange (BitConverter.GetBytes ((short)sample));  		break;  	}  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,The following statement contains a magic number: for (int i = 0; i < data.Length; i += bps / 8) {  	int sample' p;  	switch (bps) {  	case 8:  		sample = (SByte)data [i];  		p = sample * volume / 100;  		sample += p;  		result.Add ((byte)sample);  		break;  	case 16:  		sample = BitConverter.ToInt16 (data' i);  		p = sample * volume / 100;  		sample += p;  		result.AddRange (BitConverter.GetBytes ((short)sample));  		break;  	}  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,The following statement contains a magic number: for (int i = 0; i < data.Length; i += bps / 8) {  	int sample' p;  	switch (bps) {  	case 8:  		sample = (SByte)data [i];  		p = sample * volume / 100;  		sample += p;  		result.Add ((byte)sample);  		break;  	case 16:  		sample = BitConverter.ToInt16 (data' i);  		p = sample * volume / 100;  		sample += p;  		result.AddRange (BitConverter.GetBytes ((short)sample));  		break;  	}  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,The following statement contains a magic number: i += bps / 8
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,The following statement contains a magic number: switch (bps) {  case 8:  	sample = (SByte)data [i];  	p = sample * volume / 100;  	sample += p;  	result.Add ((byte)sample);  	break;  case 16:  	sample = BitConverter.ToInt16 (data' i);  	p = sample * volume / 100;  	sample += p;  	result.AddRange (BitConverter.GetBytes ((short)sample));  	break;  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,The following statement contains a magic number: switch (bps) {  case 8:  	sample = (SByte)data [i];  	p = sample * volume / 100;  	sample += p;  	result.Add ((byte)sample);  	break;  case 16:  	sample = BitConverter.ToInt16 (data' i);  	p = sample * volume / 100;  	sample += p;  	result.AddRange (BitConverter.GetBytes ((short)sample));  	break;  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,The following statement contains a magic number: switch (bps) {  case 8:  	sample = (SByte)data [i];  	p = sample * volume / 100;  	sample += p;  	result.Add ((byte)sample);  	break;  case 16:  	sample = BitConverter.ToInt16 (data' i);  	p = sample * volume / 100;  	sample += p;  	result.AddRange (BitConverter.GetBytes ((short)sample));  	break;  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,The following statement contains a magic number: switch (bps) {  case 8:  	sample = (SByte)data [i];  	p = sample * volume / 100;  	sample += p;  	result.Add ((byte)sample);  	break;  case 16:  	sample = BitConverter.ToInt16 (data' i);  	p = sample * volume / 100;  	sample += p;  	result.AddRange (BitConverter.GetBytes ((short)sample));  	break;  }  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,The following statement contains a magic number: p = sample * volume / 100;  
Magic Number,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,The following statement contains a magic number: p = sample * volume / 100;  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Read,The following statement contains a magic number: wav.chunkID = br.ReadChars (4);  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Read,The following statement contains a magic number: wav.format = br.ReadChars (4);  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Read,The following statement contains a magic number: wav.wave.fmt.chunkID = br.ReadChars (4);  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Read,The following statement contains a magic number: while (dataID != "data") {  	br.BaseStream.Position += br.ReadUInt32 () + 0x04;  	dataID = new String (br.ReadChars (4));  }  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Read,The following statement contains a magic number: dataID = new String (br.ReadChars (4));  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Read,The following statement contains a magic number: br.BaseStream.Position -= 4;  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Read,The following statement contains a magic number: wav.wave.data.chunkID = br.ReadChars (4);  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Read,The following statement contains a magic number: if (wav.wave.fmt.audioFormat == WaveFormat.WAVE_FORMAT_PCM && wav.wave.fmt.bitsPerSample == 0x08)// PCM8   {  	wav.wave.fmt.bitsPerSample = 0x10;  	wav.wave.fmt.blockAlign = (ushort)(wav.wave.fmt.numChannels * wav.wave.fmt.bitsPerSample / (ushort)(8));  	wav.wave.fmt.byteRate = wav.wave.fmt.sampleRate * wav.wave.fmt.bitsPerSample * wav.wave.fmt.numChannels / 8;  	wav.wave.data.data = PCM.PCM8UnsignedToPCM16 (wav.wave.data.data);  }  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Read,The following statement contains a magic number: if (wav.wave.fmt.audioFormat == WaveFormat.WAVE_FORMAT_PCM && wav.wave.fmt.bitsPerSample == 0x08)// PCM8   {  	wav.wave.fmt.bitsPerSample = 0x10;  	wav.wave.fmt.blockAlign = (ushort)(wav.wave.fmt.numChannels * wav.wave.fmt.bitsPerSample / (ushort)(8));  	wav.wave.fmt.byteRate = wav.wave.fmt.sampleRate * wav.wave.fmt.bitsPerSample * wav.wave.fmt.numChannels / 8;  	wav.wave.data.data = PCM.PCM8UnsignedToPCM16 (wav.wave.data.data);  }  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Read,The following statement contains a magic number: wav.wave.fmt.blockAlign = (ushort)(wav.wave.fmt.numChannels * wav.wave.fmt.bitsPerSample / (ushort)(8));  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Read,The following statement contains a magic number: wav.wave.fmt.byteRate = wav.wave.fmt.sampleRate * wav.wave.fmt.bitsPerSample * wav.wave.fmt.numChannels / 8;  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Create_WAV,The following statement contains a magic number: wav.wave.fmt.chunkSize = 16;  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Create_WAV,The following statement contains a magic number: wav.wave.fmt.byteRate = wav.wave.fmt.sampleRate * wav.wave.fmt.bitsPerSample * wav.wave.fmt.numChannels / 8;  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,Create_WAV,The following statement contains a magic number: wav.wave.fmt.blockAlign = (ushort)(wav.wave.fmt.numChannels * wav.wave.fmt.bitsPerSample / (ushort)(8));  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,ConvertToMono,The following statement contains a magic number: for (int i = 0; i < data.Length; i += bitsPerSample / 8) {  	int rChannel' lChannel;  	switch (bitsPerSample) {  	case 8:  		rChannel = data [i];  		i += 1;  		lChannel = data [i];  		mono.Add ((byte)((sbyte)rChannel + (sbyte)lChannel));  		break;  	case 16:  		rChannel = BitConverter.ToInt16 (data' i);  		i += 2;  		lChannel = BitConverter.ToInt16 (data' i);  		mono.AddRange (BitConverter.GetBytes ((short)((short)rChannel + (short)lChannel)));  		break;  	}  }  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,ConvertToMono,The following statement contains a magic number: for (int i = 0; i < data.Length; i += bitsPerSample / 8) {  	int rChannel' lChannel;  	switch (bitsPerSample) {  	case 8:  		rChannel = data [i];  		i += 1;  		lChannel = data [i];  		mono.Add ((byte)((sbyte)rChannel + (sbyte)lChannel));  		break;  	case 16:  		rChannel = BitConverter.ToInt16 (data' i);  		i += 2;  		lChannel = BitConverter.ToInt16 (data' i);  		mono.AddRange (BitConverter.GetBytes ((short)((short)rChannel + (short)lChannel)));  		break;  	}  }  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,ConvertToMono,The following statement contains a magic number: for (int i = 0; i < data.Length; i += bitsPerSample / 8) {  	int rChannel' lChannel;  	switch (bitsPerSample) {  	case 8:  		rChannel = data [i];  		i += 1;  		lChannel = data [i];  		mono.Add ((byte)((sbyte)rChannel + (sbyte)lChannel));  		break;  	case 16:  		rChannel = BitConverter.ToInt16 (data' i);  		i += 2;  		lChannel = BitConverter.ToInt16 (data' i);  		mono.AddRange (BitConverter.GetBytes ((short)((short)rChannel + (short)lChannel)));  		break;  	}  }  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,ConvertToMono,The following statement contains a magic number: for (int i = 0; i < data.Length; i += bitsPerSample / 8) {  	int rChannel' lChannel;  	switch (bitsPerSample) {  	case 8:  		rChannel = data [i];  		i += 1;  		lChannel = data [i];  		mono.Add ((byte)((sbyte)rChannel + (sbyte)lChannel));  		break;  	case 16:  		rChannel = BitConverter.ToInt16 (data' i);  		i += 2;  		lChannel = BitConverter.ToInt16 (data' i);  		mono.AddRange (BitConverter.GetBytes ((short)((short)rChannel + (short)lChannel)));  		break;  	}  }  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,ConvertToMono,The following statement contains a magic number: i += bitsPerSample / 8
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,ConvertToMono,The following statement contains a magic number: switch (bitsPerSample) {  case 8:  	rChannel = data [i];  	i += 1;  	lChannel = data [i];  	mono.Add ((byte)((sbyte)rChannel + (sbyte)lChannel));  	break;  case 16:  	rChannel = BitConverter.ToInt16 (data' i);  	i += 2;  	lChannel = BitConverter.ToInt16 (data' i);  	mono.AddRange (BitConverter.GetBytes ((short)((short)rChannel + (short)lChannel)));  	break;  }  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,ConvertToMono,The following statement contains a magic number: switch (bitsPerSample) {  case 8:  	rChannel = data [i];  	i += 1;  	lChannel = data [i];  	mono.Add ((byte)((sbyte)rChannel + (sbyte)lChannel));  	break;  case 16:  	rChannel = BitConverter.ToInt16 (data' i);  	i += 2;  	lChannel = BitConverter.ToInt16 (data' i);  	mono.AddRange (BitConverter.GetBytes ((short)((short)rChannel + (short)lChannel)));  	break;  }  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,ConvertToMono,The following statement contains a magic number: switch (bitsPerSample) {  case 8:  	rChannel = data [i];  	i += 1;  	lChannel = data [i];  	mono.Add ((byte)((sbyte)rChannel + (sbyte)lChannel));  	break;  case 16:  	rChannel = BitConverter.ToInt16 (data' i);  	i += 2;  	lChannel = BitConverter.ToInt16 (data' i);  	mono.AddRange (BitConverter.GetBytes ((short)((short)rChannel + (short)lChannel)));  	break;  }  
Magic Number,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,ConvertToMono,The following statement contains a magic number: i += 2;  
Missing Default,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,ReadRecord,The following switch statement is missing a default case: switch (page) {  case 0:  	if (info.block [0].nEntries == 0) {  		numericSSEQfileID.Enabled = false;  		numericSSEQunknown.Enabled = false;  		numericSSEQBnk.Enabled = false;  		numericSSEQVol.Enabled = false;  		numericSSEQcpr.Enabled = false;  		numericSSEQppr.Enabled = false;  		numericSSEQply.Enabled = false;  		return;  	}  	Info.SEQ seq = (Info.SEQ)info.block [0].entries [(int)numericSSEQrecord.Value];  	numericSSEQfileID.Value = seq.fileID;  	numericSSEQunknown.Value = seq.unknown;  	numericSSEQBnk.Value = seq.bnk;  	numericSSEQVol.Value = seq.vol;  	numericSSEQcpr.Value = seq.cpr;  	numericSSEQppr.Value = seq.ppr;  	numericSSEQply.Value = seq.ply;  	break;  case 1:  	if (info.block [1].nEntries == 0) {  		numericSSARfileID.Enabled = false;  		numericSSARunknown.Enabled = false;  		return;  	}  	Info.SEQARC ssar = (Info.SEQARC)info.block [1].entries [(int)numericSSARrecord.Value];  	numericSSARfileID.Value = ssar.fileID;  	numericSSARunknown.Value = ssar.unknown;  	break;  case 2:  	if (info.block [2].nEntries == 0) {  		numericSBNKfileID.Enabled = false;  		numericSBNKunknown.Enabled = false;  		numericSBNKwa1.Enabled = false;  		numericSBNKwa2.Enabled = false;  		numericSBNKwa3.Enabled = false;  		numericSBNKwa4.Enabled = false;  		return;  	}  	Info.BANK sbnk = (Info.BANK)info.block [2].entries [(int)numericSBNKrecord.Value];  	numericSBNKfileID.Value = sbnk.fileID;  	numericSBNKunknown.Value = sbnk.unknown;  	numericSBNKwa1.Value = sbnk.wa [0];  	numericSBNKwa2.Value = sbnk.wa [1];  	numericSBNKwa3.Value = sbnk.wa [2];  	numericSBNKwa4.Value = sbnk.wa [3];  	break;  case 3:  	if (info.block [3].nEntries == 0)  		return;  	Info.WAVEARC swar = (Info.WAVEARC)info.block [3].entries [(int)numericSWARrecord.Value];  	numericSWARfileID.Value = swar.fileID;  	numericSWARunknown.Value = swar.unknown;  	break;  case 4:  	if (info.block [4].nEntries == 0) {  		btnPLAYERremove.Enabled = false;  		numericPLAYERunknown.Enabled = false;  		numericPLAYERunknown2.Enabled = false;  		return;  	}  	btnPLAYERremove.Enabled = true;  	numericPLAYERunknown.Enabled = true;  	numericPLAYERunknown2.Enabled = true;  	Info.PLAYER player = (Info.PLAYER)info.block [4].entries [(int)numericPLAYERrecord.Value];  	numericPLAYERunknown.Value = player.unknown;  	numericPLAYERunknown2.Value = player.unknown2;  	break;  case 5:  	if (info.block [5].nEntries == 0) {  		btnGROUPremove.Enabled = false;  		btnGROUPsubgroupAdd.Enabled = false;  		btnGROUPsubgroupRemove.Enabled = false;  		labelGROUPsubgroupTotal.Text = "no group";  		numericGROUPcurrentSubgroup.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		return;  	}  	btnGROUPremove.Enabled = true;  	btnGROUPsubgroupRemove.Enabled = true;  	btnGROUPsubgroupAdd.Enabled = true;  	numericGROUPcurrentSubgroup.Enabled = true;  	comboBoxGROUPtype.Enabled = true;  	numericGROUPentry.Enabled = true;  	Info.GROUP group = (Info.GROUP)info.block [5].entries [(int)numericGROUPrecord.Value];  	if (group.nCount == 0) {  		btnGROUPsubgroupRemove.Enabled = false;  		comboBoxGROUPtype.Enabled = false;  		numericGROUPentry.Enabled = false;  		labelGROUPsubgroupTotal.Text = "of none";  		numericGROUPcurrentSubgroup.Enabled = false;  		return;  	}  	labelGROUPsubgroupTotal.Text = "of " + (group.nCount - 1);  	numericGROUPcurrentSubgroup.Maximum = group.nCount - 1;  	numericGROUPcurrentSubgroup.Value = 0;  	numericGROUPcurrentGroup_ValueChanged (null' null);  	break;  case 6:  	if (info.block [6].nEntries == 0) {  		btnPLAYER2remove.Enabled = false;  		numericPLAYER2count.Enabled = false;  		numericPLAYER2v1.Enabled = false;  		numericPLAYER2v2.Enabled = false;  		numericPLAYER2v3.Enabled = false;  		numericPLAYER2v4.Enabled = false;  		numericPLAYER2v5.Enabled = false;  		numericPLAYER2v6.Enabled = false;  		numericPLAYER2v7.Enabled = false;  		numericPLAYER2v8.Enabled = false;  		numericPLAYER2v9.Enabled = false;  		numericPLAYER2v10.Enabled = false;  		numericPLAYER2v11.Enabled = false;  		numericPLAYER2v12.Enabled = false;  		numericPLAYER2v13.Enabled = false;  		numericPLAYER2v14.Enabled = false;  		numericPLAYER2v15.Enabled = false;  		numericPLAYER2v16.Enabled = false;  		return;  	}  	btnPLAYER2remove.Enabled = true;  	numericPLAYER2count.Enabled = true;  	numericPLAYER2v1.Enabled = true;  	numericPLAYER2v2.Enabled = true;  	numericPLAYER2v3.Enabled = true;  	numericPLAYER2v4.Enabled = true;  	numericPLAYER2v5.Enabled = true;  	numericPLAYER2v6.Enabled = true;  	numericPLAYER2v7.Enabled = true;  	numericPLAYER2v8.Enabled = true;  	numericPLAYER2v9.Enabled = true;  	numericPLAYER2v10.Enabled = true;  	numericPLAYER2v11.Enabled = true;  	numericPLAYER2v12.Enabled = true;  	numericPLAYER2v13.Enabled = true;  	numericPLAYER2v14.Enabled = true;  	numericPLAYER2v15.Enabled = true;  	numericPLAYER2v16.Enabled = true;  	Info.PLAYER2 player2 = (Info.PLAYER2)info.block [6].entries [(int)numericPLAYER2record.Value];  	numericPLAYER2count.Value = player2.nCount;  	numericPLAYER2v1.Value = player2.v [0];  	numericPLAYER2v2.Value = player2.v [1];  	numericPLAYER2v3.Value = player2.v [2];  	numericPLAYER2v4.Value = player2.v [3];  	numericPLAYER2v5.Value = player2.v [4];  	numericPLAYER2v6.Value = player2.v [5];  	numericPLAYER2v7.Value = player2.v [6];  	numericPLAYER2v8.Value = player2.v [7];  	numericPLAYER2v9.Value = player2.v [8];  	numericPLAYER2v10.Value = player2.v [9];  	numericPLAYER2v11.Value = player2.v [10];  	numericPLAYER2v12.Value = player2.v [11];  	numericPLAYER2v13.Value = player2.v [12];  	numericPLAYER2v14.Value = player2.v [13];  	numericPLAYER2v15.Value = player2.v [14];  	numericPLAYER2v16.Value = player2.v [15];  	break;  case 7:  	if (info.block [7].nEntries == 0) {  		numericSTRMfileID.Enabled = false;  		numericSTRMunknown.Enabled = false;  		numericSTRMpri.Enabled = false;  		numericSTRMvol.Enabled = false;  		numericSTRMply.Enabled = false;  		return;  	}  	Info.STRM strm = (Info.STRM)info.block [7].entries [(int)numericSTRMrecord.Value];  	numericSTRMfileID.Value = strm.fileID;  	numericSTRMunknown.Value = strm.unknown;  	numericSTRMpri.Value = strm.pri;  	numericSTRMvol.Value = strm.vol;  	numericSTRMply.Value = strm.ply;  	break;  }  
Missing Default,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,numericGROUPcurrentGroup_ValueChanged,The following switch statement is missing a default case: switch (group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type) {  case 0x0700:  	comboBoxGROUPtype.SelectedIndex = 0;  	break;  case 0x0803:  	comboBoxGROUPtype.SelectedIndex = 1;  	break;  case 0x0601:  	comboBoxGROUPtype.SelectedIndex = 2;  	break;  case 0x0402:  	comboBoxGROUPtype.SelectedIndex = 3;  	break;  }  
Missing Default,SDAT,InfoForm,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\InfoForm.cs,comboBoxGROUPtype_SelectedIndexChanged,The following switch statement is missing a default case: switch (comboBoxGROUPtype.SelectedIndex) {  case 0:  	group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type = 0x0700;  	break;  case 1:  	group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type = 0x0803;  	break;  case 2:  	group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type = 0x0601;  	break;  case 3:  	group.subgroup [(int)numericGROUPcurrentSubgroup.Value].type = 0x0402;  	break;  }  
Missing Default,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnWav_Click,The following switch statement is missing a default case: switch (SearchFile ().type) {  case FormatSound.SWAV:  	WAV.Write (SWAV.ConvertToWAV (SWAV.Read (sound)' false)' wavSaved);  	break;  case FormatSound.STRM:  	WAV.Write (STRM.ConvertToWAV (STRM.Read (sound)' false)' wavSaved);  	break;  }  
Missing Default,SDAT,iSDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\iSDAT.cs,btnReproducir_Click,The following switch statement is missing a default case: switch (SearchFile ().type) {  case FormatSound.SWAV:  	WAV.Write (SWAV.ConvertToWAV (SWAV.Read (sound)' false)' wavFile);  	if (checkLoop.Checked)  		WAV.Write (SWAV.ConvertToWAV (SWAV.Read (sound)' true)' loopFile);  	break;  case FormatSound.STRM:  	WAV.Write (STRM.ConvertToWAV (STRM.Read (sound)' false)' wavFile);  	if (checkLoop.Checked)  		WAV.Write (STRM.ConvertToWAV (STRM.Read (sound)' true)' loopFile);  	break;  }  
Missing Default,SDAT,SDAT,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SDAT.cs,FileSystem,The following switch statement is missing a default case: switch (magic) {  case "SSEQ":  	sound.type = FormatSound.SSEQ;  	sound.name = "SSEQ_" + i.ToString () + ".sseq";  	sseq.files.Add (sound);  	break;  case "SSAR":  	sound.type = FormatSound.SSAR;  	sound.name = "SSAR_" + i.ToString () + ".ssar";  	ssar.files.Add (sound);  	break;  case "SBNK":  	sound.type = FormatSound.SBNK;  	sound.name = "SBNK_" + i.ToString () + ".sbnk";  	sbnk.files.Add (sound);  	break;  case "SWAR":  	sound.type = FormatSound.SWAR;  	sound.name = "SWAR_" + i.ToString () + ".swar";  	swar.files.Add (sound);  	break;  case "STRM":  	sound.type = FormatSound.STRM;  	sound.name = "STRM_" + i.ToString () + ".strm";  	strm.files.Add (sound);  	break;  }  
Missing Default,SDAT,SWAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\SWAV.cs,ChangeVolume,The following switch statement is missing a default case: switch (bps) {  case 8:  	sample = (SByte)data [i];  	p = sample * volume / 100;  	sample += p;  	result.Add ((byte)sample);  	break;  case 16:  	sample = BitConverter.ToInt16 (data' i);  	p = sample * volume / 100;  	sample += p;  	result.AddRange (BitConverter.GetBytes ((short)sample));  	break;  }  
Missing Default,SDAT,WAV,D:\newReposJune17\pleonex_tinke\Plugins\SDAT\SDAT\WAV.cs,ConvertToMono,The following switch statement is missing a default case: switch (bitsPerSample) {  case 8:  	rChannel = data [i];  	i += 1;  	lChannel = data [i];  	mono.Add ((byte)((sbyte)rChannel + (sbyte)lChannel));  	break;  case 16:  	rChannel = BitConverter.ToInt16 (data' i);  	i += 2;  	lChannel = BitConverter.ToInt16 (data' i);  	mono.AddRange (BitConverter.GetBytes ((short)((short)rChannel + (short)lChannel)));  	break;  }  
