Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,Cyclomatic complexity of the method is 11
Complex Method,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Pack,Cyclomatic complexity of the method is 9
Long Parameter List,SF_FEATHER,CGx,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\CGx.cs,CGx,The method has 4 parameters.
Magic Number,SF_FEATHER,CGx,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\CGx.cs,Read,The following statement contains a magic number: cgx.type = br.ReadChars (4);  
Magic Number,SF_FEATHER,CGx,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\CGx.cs,Read,The following statement contains a magic number: if (depth == Ekona.Images.ColorFormat.colors16)  	Height *= 2;  
Magic Number,SF_FEATHER,CGx,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\CGx.cs,Read,The following statement contains a magic number: Height *= 2;  
Magic Number,SF_FEATHER,CGx,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\CGx.cs,Read,The following statement contains a magic number: if (depth == Ekona.Images.ColorFormat.colors16) {  	colors = new Color[cgx.palColors / 0x10][];  	for (int i = 0; i < colors.Length; i++)  		colors [i] = Actions.BGR555ToColor (br.ReadBytes (32));  } else {  	colors = new Color[1][];  	colors [0] = Actions.BGR555ToColor (br.ReadBytes ((int)cgx.palColors * 2));  }  
Magic Number,SF_FEATHER,CGx,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\CGx.cs,Read,The following statement contains a magic number: if (depth == Ekona.Images.ColorFormat.colors16) {  	colors = new Color[cgx.palColors / 0x10][];  	for (int i = 0; i < colors.Length; i++)  		colors [i] = Actions.BGR555ToColor (br.ReadBytes (32));  } else {  	colors = new Color[1][];  	colors [0] = Actions.BGR555ToColor (br.ReadBytes ((int)cgx.palColors * 2));  }  
Magic Number,SF_FEATHER,CGx,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\CGx.cs,Read,The following statement contains a magic number: for (int i = 0; i < colors.Length; i++)  	colors [i] = Actions.BGR555ToColor (br.ReadBytes (32));  
Magic Number,SF_FEATHER,CGx,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\CGx.cs,Read,The following statement contains a magic number: colors [i] = Actions.BGR555ToColor (br.ReadBytes (32));  
Magic Number,SF_FEATHER,CGx,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\CGx.cs,Read,The following statement contains a magic number: colors [0] = Actions.BGR555ToColor (br.ReadBytes ((int)cgx.palColors * 2));  
Magic Number,SF_FEATHER,CGx,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\CGx.cs,Write,The following statement contains a magic number: cgx.unknonwnOffset = cgx.palOffset + cgx.palColors * 2;  
Magic Number,SF_FEATHER,Main,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\Main.cs,Get_Format,The following statement contains a magic number: if (file.name.EndsWith (".pac") && (magic [2] == 0x01 && magic [3] == 0x00))  	return Format.Pack;  
Magic Number,SF_FEATHER,Main,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\Main.cs,Get_Format,The following statement contains a magic number: if (file.name.EndsWith (".pac") && (magic [2] == 0x01 && magic [3] == 0x00))  	return Format.Pack;  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: for (int i = 0; i < num_element; i++) {  	sFile newFile = new sFile ();  	newFile.name = name + '_' + i.ToString ();  	newFile.offset = br.ReadUInt32 () * 0x10;  	newFile.size = br.ReadUInt32 () * 0x10;  	newFile.path = file;  	// Extension check  	if (newFile.size != 0x00) {  		bool compressed = false;  		// Check if this file is pac' it searches the extension  		long currPos = br.BaseStream.Position;  		br.BaseStream.Position = newFile.offset;  		byte cInd = br.ReadByte ();  		uint cSize = br.ReadUInt32 ();  		if ((cInd == 0x11 || cInd == 0x10) && cSize < 0x2000000)  			compressed = true;  		// Search the indicator of the pac file  		if (compressed)  			br.BaseStream.Position = newFile.offset + 9;  		else  			br.BaseStream.Position = newFile.offset + 4;  		uint currType = br.ReadUInt32 ();  		if (currType == 0x04)  			newFile.name += ".pac";  		else {  			// Search for the header extension  			if (compressed)  				br.BaseStream.Position = newFile.offset + 5;  			else  				br.BaseStream.Position = newFile.offset;  			currType = br.ReadUInt32 ();  			char[] ext = Encoding.ASCII.GetChars (BitConverter.GetBytes (currType));  			String extS = ".";  			for (int s = 0; s < 4; s++)  				if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  					extS += ext [s];  			if (extS != "." && extS.Length == 5)  				newFile.name += extS;  			else  				newFile.name += ".bin";  		}  		br.BaseStream.Position = currPos;  	} else  		continue;  	unpacked.files.Add (newFile);  }  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: for (int i = 0; i < num_element; i++) {  	sFile newFile = new sFile ();  	newFile.name = name + '_' + i.ToString ();  	newFile.offset = br.ReadUInt32 () * 0x10;  	newFile.size = br.ReadUInt32 () * 0x10;  	newFile.path = file;  	// Extension check  	if (newFile.size != 0x00) {  		bool compressed = false;  		// Check if this file is pac' it searches the extension  		long currPos = br.BaseStream.Position;  		br.BaseStream.Position = newFile.offset;  		byte cInd = br.ReadByte ();  		uint cSize = br.ReadUInt32 ();  		if ((cInd == 0x11 || cInd == 0x10) && cSize < 0x2000000)  			compressed = true;  		// Search the indicator of the pac file  		if (compressed)  			br.BaseStream.Position = newFile.offset + 9;  		else  			br.BaseStream.Position = newFile.offset + 4;  		uint currType = br.ReadUInt32 ();  		if (currType == 0x04)  			newFile.name += ".pac";  		else {  			// Search for the header extension  			if (compressed)  				br.BaseStream.Position = newFile.offset + 5;  			else  				br.BaseStream.Position = newFile.offset;  			currType = br.ReadUInt32 ();  			char[] ext = Encoding.ASCII.GetChars (BitConverter.GetBytes (currType));  			String extS = ".";  			for (int s = 0; s < 4; s++)  				if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  					extS += ext [s];  			if (extS != "." && extS.Length == 5)  				newFile.name += extS;  			else  				newFile.name += ".bin";  		}  		br.BaseStream.Position = currPos;  	} else  		continue;  	unpacked.files.Add (newFile);  }  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: for (int i = 0; i < num_element; i++) {  	sFile newFile = new sFile ();  	newFile.name = name + '_' + i.ToString ();  	newFile.offset = br.ReadUInt32 () * 0x10;  	newFile.size = br.ReadUInt32 () * 0x10;  	newFile.path = file;  	// Extension check  	if (newFile.size != 0x00) {  		bool compressed = false;  		// Check if this file is pac' it searches the extension  		long currPos = br.BaseStream.Position;  		br.BaseStream.Position = newFile.offset;  		byte cInd = br.ReadByte ();  		uint cSize = br.ReadUInt32 ();  		if ((cInd == 0x11 || cInd == 0x10) && cSize < 0x2000000)  			compressed = true;  		// Search the indicator of the pac file  		if (compressed)  			br.BaseStream.Position = newFile.offset + 9;  		else  			br.BaseStream.Position = newFile.offset + 4;  		uint currType = br.ReadUInt32 ();  		if (currType == 0x04)  			newFile.name += ".pac";  		else {  			// Search for the header extension  			if (compressed)  				br.BaseStream.Position = newFile.offset + 5;  			else  				br.BaseStream.Position = newFile.offset;  			currType = br.ReadUInt32 ();  			char[] ext = Encoding.ASCII.GetChars (BitConverter.GetBytes (currType));  			String extS = ".";  			for (int s = 0; s < 4; s++)  				if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  					extS += ext [s];  			if (extS != "." && extS.Length == 5)  				newFile.name += extS;  			else  				newFile.name += ".bin";  		}  		br.BaseStream.Position = currPos;  	} else  		continue;  	unpacked.files.Add (newFile);  }  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: for (int i = 0; i < num_element; i++) {  	sFile newFile = new sFile ();  	newFile.name = name + '_' + i.ToString ();  	newFile.offset = br.ReadUInt32 () * 0x10;  	newFile.size = br.ReadUInt32 () * 0x10;  	newFile.path = file;  	// Extension check  	if (newFile.size != 0x00) {  		bool compressed = false;  		// Check if this file is pac' it searches the extension  		long currPos = br.BaseStream.Position;  		br.BaseStream.Position = newFile.offset;  		byte cInd = br.ReadByte ();  		uint cSize = br.ReadUInt32 ();  		if ((cInd == 0x11 || cInd == 0x10) && cSize < 0x2000000)  			compressed = true;  		// Search the indicator of the pac file  		if (compressed)  			br.BaseStream.Position = newFile.offset + 9;  		else  			br.BaseStream.Position = newFile.offset + 4;  		uint currType = br.ReadUInt32 ();  		if (currType == 0x04)  			newFile.name += ".pac";  		else {  			// Search for the header extension  			if (compressed)  				br.BaseStream.Position = newFile.offset + 5;  			else  				br.BaseStream.Position = newFile.offset;  			currType = br.ReadUInt32 ();  			char[] ext = Encoding.ASCII.GetChars (BitConverter.GetBytes (currType));  			String extS = ".";  			for (int s = 0; s < 4; s++)  				if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  					extS += ext [s];  			if (extS != "." && extS.Length == 5)  				newFile.name += extS;  			else  				newFile.name += ".bin";  		}  		br.BaseStream.Position = currPos;  	} else  		continue;  	unpacked.files.Add (newFile);  }  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: for (int i = 0; i < num_element; i++) {  	sFile newFile = new sFile ();  	newFile.name = name + '_' + i.ToString ();  	newFile.offset = br.ReadUInt32 () * 0x10;  	newFile.size = br.ReadUInt32 () * 0x10;  	newFile.path = file;  	// Extension check  	if (newFile.size != 0x00) {  		bool compressed = false;  		// Check if this file is pac' it searches the extension  		long currPos = br.BaseStream.Position;  		br.BaseStream.Position = newFile.offset;  		byte cInd = br.ReadByte ();  		uint cSize = br.ReadUInt32 ();  		if ((cInd == 0x11 || cInd == 0x10) && cSize < 0x2000000)  			compressed = true;  		// Search the indicator of the pac file  		if (compressed)  			br.BaseStream.Position = newFile.offset + 9;  		else  			br.BaseStream.Position = newFile.offset + 4;  		uint currType = br.ReadUInt32 ();  		if (currType == 0x04)  			newFile.name += ".pac";  		else {  			// Search for the header extension  			if (compressed)  				br.BaseStream.Position = newFile.offset + 5;  			else  				br.BaseStream.Position = newFile.offset;  			currType = br.ReadUInt32 ();  			char[] ext = Encoding.ASCII.GetChars (BitConverter.GetBytes (currType));  			String extS = ".";  			for (int s = 0; s < 4; s++)  				if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  					extS += ext [s];  			if (extS != "." && extS.Length == 5)  				newFile.name += extS;  			else  				newFile.name += ".bin";  		}  		br.BaseStream.Position = currPos;  	} else  		continue;  	unpacked.files.Add (newFile);  }  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: if (newFile.size != 0x00) {  	bool compressed = false;  	// Check if this file is pac' it searches the extension  	long currPos = br.BaseStream.Position;  	br.BaseStream.Position = newFile.offset;  	byte cInd = br.ReadByte ();  	uint cSize = br.ReadUInt32 ();  	if ((cInd == 0x11 || cInd == 0x10) && cSize < 0x2000000)  		compressed = true;  	// Search the indicator of the pac file  	if (compressed)  		br.BaseStream.Position = newFile.offset + 9;  	else  		br.BaseStream.Position = newFile.offset + 4;  	uint currType = br.ReadUInt32 ();  	if (currType == 0x04)  		newFile.name += ".pac";  	else {  		// Search for the header extension  		if (compressed)  			br.BaseStream.Position = newFile.offset + 5;  		else  			br.BaseStream.Position = newFile.offset;  		currType = br.ReadUInt32 ();  		char[] ext = Encoding.ASCII.GetChars (BitConverter.GetBytes (currType));  		String extS = ".";  		for (int s = 0; s < 4; s++)  			if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  				extS += ext [s];  		if (extS != "." && extS.Length == 5)  			newFile.name += extS;  		else  			newFile.name += ".bin";  	}  	br.BaseStream.Position = currPos;  } else  	continue;  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: if (newFile.size != 0x00) {  	bool compressed = false;  	// Check if this file is pac' it searches the extension  	long currPos = br.BaseStream.Position;  	br.BaseStream.Position = newFile.offset;  	byte cInd = br.ReadByte ();  	uint cSize = br.ReadUInt32 ();  	if ((cInd == 0x11 || cInd == 0x10) && cSize < 0x2000000)  		compressed = true;  	// Search the indicator of the pac file  	if (compressed)  		br.BaseStream.Position = newFile.offset + 9;  	else  		br.BaseStream.Position = newFile.offset + 4;  	uint currType = br.ReadUInt32 ();  	if (currType == 0x04)  		newFile.name += ".pac";  	else {  		// Search for the header extension  		if (compressed)  			br.BaseStream.Position = newFile.offset + 5;  		else  			br.BaseStream.Position = newFile.offset;  		currType = br.ReadUInt32 ();  		char[] ext = Encoding.ASCII.GetChars (BitConverter.GetBytes (currType));  		String extS = ".";  		for (int s = 0; s < 4; s++)  			if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  				extS += ext [s];  		if (extS != "." && extS.Length == 5)  			newFile.name += extS;  		else  			newFile.name += ".bin";  	}  	br.BaseStream.Position = currPos;  } else  	continue;  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: if (newFile.size != 0x00) {  	bool compressed = false;  	// Check if this file is pac' it searches the extension  	long currPos = br.BaseStream.Position;  	br.BaseStream.Position = newFile.offset;  	byte cInd = br.ReadByte ();  	uint cSize = br.ReadUInt32 ();  	if ((cInd == 0x11 || cInd == 0x10) && cSize < 0x2000000)  		compressed = true;  	// Search the indicator of the pac file  	if (compressed)  		br.BaseStream.Position = newFile.offset + 9;  	else  		br.BaseStream.Position = newFile.offset + 4;  	uint currType = br.ReadUInt32 ();  	if (currType == 0x04)  		newFile.name += ".pac";  	else {  		// Search for the header extension  		if (compressed)  			br.BaseStream.Position = newFile.offset + 5;  		else  			br.BaseStream.Position = newFile.offset;  		currType = br.ReadUInt32 ();  		char[] ext = Encoding.ASCII.GetChars (BitConverter.GetBytes (currType));  		String extS = ".";  		for (int s = 0; s < 4; s++)  			if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  				extS += ext [s];  		if (extS != "." && extS.Length == 5)  			newFile.name += extS;  		else  			newFile.name += ".bin";  	}  	br.BaseStream.Position = currPos;  } else  	continue;  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: if (newFile.size != 0x00) {  	bool compressed = false;  	// Check if this file is pac' it searches the extension  	long currPos = br.BaseStream.Position;  	br.BaseStream.Position = newFile.offset;  	byte cInd = br.ReadByte ();  	uint cSize = br.ReadUInt32 ();  	if ((cInd == 0x11 || cInd == 0x10) && cSize < 0x2000000)  		compressed = true;  	// Search the indicator of the pac file  	if (compressed)  		br.BaseStream.Position = newFile.offset + 9;  	else  		br.BaseStream.Position = newFile.offset + 4;  	uint currType = br.ReadUInt32 ();  	if (currType == 0x04)  		newFile.name += ".pac";  	else {  		// Search for the header extension  		if (compressed)  			br.BaseStream.Position = newFile.offset + 5;  		else  			br.BaseStream.Position = newFile.offset;  		currType = br.ReadUInt32 ();  		char[] ext = Encoding.ASCII.GetChars (BitConverter.GetBytes (currType));  		String extS = ".";  		for (int s = 0; s < 4; s++)  			if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  				extS += ext [s];  		if (extS != "." && extS.Length == 5)  			newFile.name += extS;  		else  			newFile.name += ".bin";  	}  	br.BaseStream.Position = currPos;  } else  	continue;  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: if (newFile.size != 0x00) {  	bool compressed = false;  	// Check if this file is pac' it searches the extension  	long currPos = br.BaseStream.Position;  	br.BaseStream.Position = newFile.offset;  	byte cInd = br.ReadByte ();  	uint cSize = br.ReadUInt32 ();  	if ((cInd == 0x11 || cInd == 0x10) && cSize < 0x2000000)  		compressed = true;  	// Search the indicator of the pac file  	if (compressed)  		br.BaseStream.Position = newFile.offset + 9;  	else  		br.BaseStream.Position = newFile.offset + 4;  	uint currType = br.ReadUInt32 ();  	if (currType == 0x04)  		newFile.name += ".pac";  	else {  		// Search for the header extension  		if (compressed)  			br.BaseStream.Position = newFile.offset + 5;  		else  			br.BaseStream.Position = newFile.offset;  		currType = br.ReadUInt32 ();  		char[] ext = Encoding.ASCII.GetChars (BitConverter.GetBytes (currType));  		String extS = ".";  		for (int s = 0; s < 4; s++)  			if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  				extS += ext [s];  		if (extS != "." && extS.Length == 5)  			newFile.name += extS;  		else  			newFile.name += ".bin";  	}  	br.BaseStream.Position = currPos;  } else  	continue;  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: if (compressed)  	br.BaseStream.Position = newFile.offset + 9;  else  	br.BaseStream.Position = newFile.offset + 4;  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: if (compressed)  	br.BaseStream.Position = newFile.offset + 9;  else  	br.BaseStream.Position = newFile.offset + 4;  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: br.BaseStream.Position = newFile.offset + 9;  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: br.BaseStream.Position = newFile.offset + 4;  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: if (currType == 0x04)  	newFile.name += ".pac";  else {  	// Search for the header extension  	if (compressed)  		br.BaseStream.Position = newFile.offset + 5;  	else  		br.BaseStream.Position = newFile.offset;  	currType = br.ReadUInt32 ();  	char[] ext = Encoding.ASCII.GetChars (BitConverter.GetBytes (currType));  	String extS = ".";  	for (int s = 0; s < 4; s++)  		if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  			extS += ext [s];  	if (extS != "." && extS.Length == 5)  		newFile.name += extS;  	else  		newFile.name += ".bin";  }  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: if (currType == 0x04)  	newFile.name += ".pac";  else {  	// Search for the header extension  	if (compressed)  		br.BaseStream.Position = newFile.offset + 5;  	else  		br.BaseStream.Position = newFile.offset;  	currType = br.ReadUInt32 ();  	char[] ext = Encoding.ASCII.GetChars (BitConverter.GetBytes (currType));  	String extS = ".";  	for (int s = 0; s < 4; s++)  		if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  			extS += ext [s];  	if (extS != "." && extS.Length == 5)  		newFile.name += extS;  	else  		newFile.name += ".bin";  }  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: if (currType == 0x04)  	newFile.name += ".pac";  else {  	// Search for the header extension  	if (compressed)  		br.BaseStream.Position = newFile.offset + 5;  	else  		br.BaseStream.Position = newFile.offset;  	currType = br.ReadUInt32 ();  	char[] ext = Encoding.ASCII.GetChars (BitConverter.GetBytes (currType));  	String extS = ".";  	for (int s = 0; s < 4; s++)  		if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  			extS += ext [s];  	if (extS != "." && extS.Length == 5)  		newFile.name += extS;  	else  		newFile.name += ".bin";  }  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: if (compressed)  	br.BaseStream.Position = newFile.offset + 5;  else  	br.BaseStream.Position = newFile.offset;  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: br.BaseStream.Position = newFile.offset + 5;  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: for (int s = 0; s < 4; s++)  	if (Char.IsLetterOrDigit (ext [s]) || ext [s] == 0x20)  		extS += ext [s];  
Magic Number,SF_FEATHER,PAC,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\PAC.cs,Unpack,The following statement contains a magic number: if (extS != "." && extS.Length == 5)  	newFile.name += extS;  else  	newFile.name += ".bin";  
Magic Number,SF_FEATHER,SCx,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\SCx.cs,Read,The following statement contains a magic number: scx.type = br.ReadChars (4);  
Magic Number,SF_FEATHER,SCx,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\SCx.cs,Write,The following statement contains a magic number: bw.Write (Map.Length * 2);  
Magic Number,SF_FEATHER,SCx,D:\newReposJune17\pleonex_tinke\Plugins\SF FEATHER\SF FEATHER\SCx.cs,Write,The following statement contains a magic number: bw.Write (Map.Length * 2);  
