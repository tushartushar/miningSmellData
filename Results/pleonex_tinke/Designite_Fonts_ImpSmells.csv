Implementation smell,Namespace,Class,File,Method,Description
Long Method,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The method has 182 lines of code.
Long Method,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The method has 247 lines of code.
Long Method,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The method has 226 lines of code.
Long Method,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Read,The method has 118 lines of code.
Long Method,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The method has 123 lines of code.
Complex Method,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,Cyclomatic complexity of the method is 16
Long Parameter List,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,CharControl,The method has 9 parameters. Parameters: lang' charCode' tileInfo' tiles' depth' width' height' rotateMode' palette
Long Parameter List,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Get_Char,The method has 7 parameters. Parameters: tiles' depth' width' height' rotateMode' palette' zoom
Long Parameter List,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,ToImage,The method has 7 parameters. Parameters: font' palette' charWidth' charHeight' numRows' numColumns' zoom
Long Statement,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,ReadLanguage,The length of the statement  "                System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load(Application.StartupPath + System.IO.Path.DirectorySeparatorChar + " is 126.
Long Statement,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,ReadLanguage,The length of the statement  "                System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load(Application.StartupPath + System.IO.Path.DirectorySeparatorChar + " is 126.
Long Statement,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,ReadLanguage,The length of the statement  "                System.Xml.Linq.XElement xml = System.Xml.Linq.XElement.Load(Application.StartupPath + System.IO.Path.DirectorySeparatorChar + " is 126.
Long Statement,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MapChar)); " is 127.
Long Statement,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The length of the statement  "            this.dataGridMapInfo.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize; " is 121.
Long Statement,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The length of the statement  "            this.dataGridMapInfo.CellEndEdit += new System.Windows.Forms.DataGridViewCellEventHandler(this.dataGridMapInfo_CellEndEdit); " is 124.
Long Statement,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Get_Char,The length of the statement  "            return Get_Char(font.plgc.tiles[id]' font.plgc.depth' font.plgc.tile_width' font.plgc.tile_height' font.plgc.rotateMode' palette' zoom); " is 136.
Complex Conditional,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,picFont_MouseMove,The conditional expression  "!mouseDown || e.X + 3 >= picFont.Width || e.Y + 3 >= picFont.Height || e.X < 0 || e.Y < 0"  is complex.
Empty Catch Block,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,Fill_CharTile,The method has an empty catch block.
Empty Catch Block,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,Fill_CharTile,The method has an empty catch block.
Empty Catch Block,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,Fill_CharTile,The method has an empty catch block.
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,CharControl,The following statement contains a magic number: trackPalette.Maximum = Convert.ToByte(new String('1'' depth)' 2);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,Draw_Char,The following statement contains a magic number: Bitmap image = NFTR.Get_Char(tiles' depth' width' height' rotateMode' palette' 10);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,Draw_Char,The following statement contains a magic number: for (int h = 0; h < height * 10; h += 10)                  graphic.DrawLine(Pens.Red' 0' h' width * 10' h);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,Draw_Char,The following statement contains a magic number: for (int h = 0; h < height * 10; h += 10)                  graphic.DrawLine(Pens.Red' 0' h' width * 10' h);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,Draw_Char,The following statement contains a magic number: for (int h = 0; h < height * 10; h += 10)                  graphic.DrawLine(Pens.Red' 0' h' width * 10' h);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,Draw_Char,The following statement contains a magic number: for (int w = 0; w < width * 10; w += 10)                  graphic.DrawLine(Pens.Red' w' 0' w' height * 10);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,Draw_Char,The following statement contains a magic number: for (int w = 0; w < width * 10; w += 10)                  graphic.DrawLine(Pens.Red' w' 0' w' height * 10);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,Draw_Char,The following statement contains a magic number: for (int w = 0; w < width * 10; w += 10)                  graphic.DrawLine(Pens.Red' w' 0' w' height * 10);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,picFont_MouseDown,The following statement contains a magic number: Point location_pixel = new Point(e.X / 10' e.Y / 10);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,picFont_MouseDown,The following statement contains a magic number: Point location_pixel = new Point(e.X / 10' e.Y / 10);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,picFont_MouseMove,The following statement contains a magic number: if (!mouseDown || e.X + 3 >= picFont.Width || e.Y + 3 >= picFont.Height || e.X < 0 || e.Y < 0)                  return;
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,picFont_MouseMove,The following statement contains a magic number: if (!mouseDown || e.X + 3 >= picFont.Width || e.Y + 3 >= picFont.Height || e.X < 0 || e.Y < 0)                  return;
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,picFont_MouseMove,The following statement contains a magic number: Point location_pixel = new Point(e.X / 10' e.Y / 10);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,picFont_MouseMove,The following statement contains a magic number: Point location_pixel = new Point(e.X / 10' e.Y / 10);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.picFont.Size = new System.Drawing.Size(243' 200);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.picFont.Size = new System.Drawing.Size(243' 200);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericWidth.Location = new System.Drawing.Point(55' 207);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericWidth.Location = new System.Drawing.Point(55' 207);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericWidth.Maximum = new decimal(new int[] {              65535'              0'              0'              0});
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericWidth.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericWidth.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericLength.Location = new System.Drawing.Point(55' 234);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericLength.Location = new System.Drawing.Point(55' 234);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericLength.Maximum = new decimal(new int[] {              65535'              0'              0'              0});
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericLength.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericLength.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericLength.TabIndex = 2;
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericStart.Location = new System.Drawing.Point(190' 206);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericStart.Location = new System.Drawing.Point(190' 206);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericStart.Maximum = new decimal(new int[] {              127'              0'              0'              0});
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericStart.Minimum = new decimal(new int[] {              128'              0'              0'              -2147483648});
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericStart.Minimum = new decimal(new int[] {              128'              0'              0'              -2147483648});
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericStart.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericStart.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.numericStart.TabIndex = 3;
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.trackPalette.Location = new System.Drawing.Point(55' 260);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.trackPalette.Location = new System.Drawing.Point(55' 260);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.trackPalette.Size = new System.Drawing.Size(104' 45);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.trackPalette.Size = new System.Drawing.Size(104' 45);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.trackPalette.TabIndex = 5;
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.picPaletteColour.Location = new System.Drawing.Point(4' 260);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.picPaletteColour.Location = new System.Drawing.Point(4' 260);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.picPaletteColour.Size = new System.Drawing.Size(45' 45);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.picPaletteColour.Size = new System.Drawing.Size(45' 45);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.picPaletteColour.TabIndex = 6;
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.txtCharCode.Location = new System.Drawing.Point(190' 233);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.txtCharCode.Location = new System.Drawing.Point(190' 233);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.txtCharCode.Size = new System.Drawing.Size(49' 20);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.txtCharCode.Size = new System.Drawing.Size(49' 20);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.txtCharCode.TabIndex = 7;
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(3' 209);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(3' 209);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 8;
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(3' 236);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(3' 236);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 9;
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(113' 209);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(113' 209);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 10;
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(113' 236);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(113' 236);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 11;
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.panelPic.Size = new System.Drawing.Size(243' 203);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.panelPic.Size = new System.Drawing.Size(243' 203);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.panelPic.TabIndex = 12;
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(243' 308);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(243' 308);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(243' 308);
Magic Number,Fonts,CharControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\CharControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(243' 308);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,txtBox_TextChanged,The following statement contains a magic number: for (int i = 0; i < txtBox.Text.Length; i++)              {                  if (txtBox.Text[i] == '\n')                  {                      width = 0;                      height += font.plgc.tile_height;                      continue;                  }                    byte[] codes = new byte[1];                  if (comboEncoding.SelectedIndex == 2)                      codes = Encoding.GetEncoding("shift_jis").GetBytes(new char[] { txtBox.Text[i] }).Reverse().ToArray();                  else if (comboEncoding.SelectedIndex == 1)                      codes = Encoding.GetEncoding("utf-16").GetBytes(new char[] { txtBox.Text[i] });                  else if (comboEncoding.SelectedIndex == 0)                      codes = Encoding.UTF8.GetBytes(new char[] { txtBox.Text[i] });                  else if (comboEncoding.SelectedIndex == 3)                      codes = Encoding.GetEncoding(1252).GetBytes(new char[] { txtBox.Text[i] });                    int charCode = (codes.Length == 2 ? BitConverter.ToUInt16(codes' 0) : codes[0]);                    int tileCode;                  if (!charTile.TryGetValue(charCode' out tileCode))                  {                      width += font.plgc.tile_width;                      continue;                  }                    width += font.hdwc.info[tileCode].pixel_start;                  Bitmap charImage = NFTR.Get_Char(font' tileCode' palette);                  charImage.MakeTransparent(this.palette[0]);                  graphic.DrawImageUnscaled(charImage' width' height);                  width += font.hdwc.info[tileCode].pixel_length - font.hdwc.info[tileCode].pixel_start;                    if (width + font.plgc.tile_width > image.Width)                  {                      width = 0;                      height += font.plgc.tile_height;                  }              }
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,txtBox_TextChanged,The following statement contains a magic number: for (int i = 0; i < txtBox.Text.Length; i++)              {                  if (txtBox.Text[i] == '\n')                  {                      width = 0;                      height += font.plgc.tile_height;                      continue;                  }                    byte[] codes = new byte[1];                  if (comboEncoding.SelectedIndex == 2)                      codes = Encoding.GetEncoding("shift_jis").GetBytes(new char[] { txtBox.Text[i] }).Reverse().ToArray();                  else if (comboEncoding.SelectedIndex == 1)                      codes = Encoding.GetEncoding("utf-16").GetBytes(new char[] { txtBox.Text[i] });                  else if (comboEncoding.SelectedIndex == 0)                      codes = Encoding.UTF8.GetBytes(new char[] { txtBox.Text[i] });                  else if (comboEncoding.SelectedIndex == 3)                      codes = Encoding.GetEncoding(1252).GetBytes(new char[] { txtBox.Text[i] });                    int charCode = (codes.Length == 2 ? BitConverter.ToUInt16(codes' 0) : codes[0]);                    int tileCode;                  if (!charTile.TryGetValue(charCode' out tileCode))                  {                      width += font.plgc.tile_width;                      continue;                  }                    width += font.hdwc.info[tileCode].pixel_start;                  Bitmap charImage = NFTR.Get_Char(font' tileCode' palette);                  charImage.MakeTransparent(this.palette[0]);                  graphic.DrawImageUnscaled(charImage' width' height);                  width += font.hdwc.info[tileCode].pixel_length - font.hdwc.info[tileCode].pixel_start;                    if (width + font.plgc.tile_width > image.Width)                  {                      width = 0;                      height += font.plgc.tile_height;                  }              }
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,txtBox_TextChanged,The following statement contains a magic number: for (int i = 0; i < txtBox.Text.Length; i++)              {                  if (txtBox.Text[i] == '\n')                  {                      width = 0;                      height += font.plgc.tile_height;                      continue;                  }                    byte[] codes = new byte[1];                  if (comboEncoding.SelectedIndex == 2)                      codes = Encoding.GetEncoding("shift_jis").GetBytes(new char[] { txtBox.Text[i] }).Reverse().ToArray();                  else if (comboEncoding.SelectedIndex == 1)                      codes = Encoding.GetEncoding("utf-16").GetBytes(new char[] { txtBox.Text[i] });                  else if (comboEncoding.SelectedIndex == 0)                      codes = Encoding.UTF8.GetBytes(new char[] { txtBox.Text[i] });                  else if (comboEncoding.SelectedIndex == 3)                      codes = Encoding.GetEncoding(1252).GetBytes(new char[] { txtBox.Text[i] });                    int charCode = (codes.Length == 2 ? BitConverter.ToUInt16(codes' 0) : codes[0]);                    int tileCode;                  if (!charTile.TryGetValue(charCode' out tileCode))                  {                      width += font.plgc.tile_width;                      continue;                  }                    width += font.hdwc.info[tileCode].pixel_start;                  Bitmap charImage = NFTR.Get_Char(font' tileCode' palette);                  charImage.MakeTransparent(this.palette[0]);                  graphic.DrawImageUnscaled(charImage' width' height);                  width += font.hdwc.info[tileCode].pixel_length - font.hdwc.info[tileCode].pixel_start;                    if (width + font.plgc.tile_width > image.Width)                  {                      width = 0;                      height += font.plgc.tile_height;                  }              }
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,txtBox_TextChanged,The following statement contains a magic number: for (int i = 0; i < txtBox.Text.Length; i++)              {                  if (txtBox.Text[i] == '\n')                  {                      width = 0;                      height += font.plgc.tile_height;                      continue;                  }                    byte[] codes = new byte[1];                  if (comboEncoding.SelectedIndex == 2)                      codes = Encoding.GetEncoding("shift_jis").GetBytes(new char[] { txtBox.Text[i] }).Reverse().ToArray();                  else if (comboEncoding.SelectedIndex == 1)                      codes = Encoding.GetEncoding("utf-16").GetBytes(new char[] { txtBox.Text[i] });                  else if (comboEncoding.SelectedIndex == 0)                      codes = Encoding.UTF8.GetBytes(new char[] { txtBox.Text[i] });                  else if (comboEncoding.SelectedIndex == 3)                      codes = Encoding.GetEncoding(1252).GetBytes(new char[] { txtBox.Text[i] });                    int charCode = (codes.Length == 2 ? BitConverter.ToUInt16(codes' 0) : codes[0]);                    int tileCode;                  if (!charTile.TryGetValue(charCode' out tileCode))                  {                      width += font.plgc.tile_width;                      continue;                  }                    width += font.hdwc.info[tileCode].pixel_start;                  Bitmap charImage = NFTR.Get_Char(font' tileCode' palette);                  charImage.MakeTransparent(this.palette[0]);                  graphic.DrawImageUnscaled(charImage' width' height);                  width += font.hdwc.info[tileCode].pixel_length - font.hdwc.info[tileCode].pixel_start;                    if (width + font.plgc.tile_width > image.Width)                  {                      width = 0;                      height += font.plgc.tile_height;                  }              }
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,picFont_MouseClick,The following statement contains a magic number: int totalX = MAX_WIDTH / (font.plgc.tile_width * ZOOM + 2 * NFTR.BORDER_WIDTH);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,btnPalette_Click,The following statement contains a magic number: int depth = Convert.ToByte(new String('1'' font.plgc.depth)' 2);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,btnAddChar_Click,The following statement contains a magic number: newInfo.pixel_width = 9;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,btnAddChar_Click,The following statement contains a magic number: newInfo.pixel_length = 9;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,btnAddChar_Click,The following statement contains a magic number: Byte[] newChar = new byte[8 * font.plgc.tile_length];
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.comboChar.Location = new System.Drawing.Point(388' 3);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.comboChar.Location = new System.Drawing.Point(388' 3);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.comboChar.Size = new System.Drawing.Size(121' 21);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.comboChar.Size = new System.Drawing.Size(121' 21);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.comboChar.TabIndex = 3;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.txtBox.Location = new System.Drawing.Point(0' 371);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.txtBox.Size = new System.Drawing.Size(509' 50);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.txtBox.Size = new System.Drawing.Size(509' 50);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.panelPicImage.Location = new System.Drawing.Point(2' 29);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.panelPicImage.Location = new System.Drawing.Point(2' 29);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.panelPicImage.MaximumSize = new System.Drawing.Size(263' 310);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.panelPicImage.MaximumSize = new System.Drawing.Size(263' 310);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.panelPicImage.Size = new System.Drawing.Size(263' 310);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.panelPicImage.Size = new System.Drawing.Size(263' 310);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.panelPicImage.TabIndex = 14;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.picFont.Size = new System.Drawing.Size(260' 310);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.picFont.Size = new System.Drawing.Size(260' 310);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnApply.Location = new System.Drawing.Point(432' 290);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnApply.Location = new System.Drawing.Point(432' 290);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnApply.Size = new System.Drawing.Size(75' 46);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnApply.Size = new System.Drawing.Size(75' 46);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnApply.TabIndex = 4;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.panelCharEdit.Location = new System.Drawing.Point(266' 29);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.panelCharEdit.Location = new System.Drawing.Point(266' 29);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.panelCharEdit.Size = new System.Drawing.Size(243' 310);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.panelCharEdit.Size = new System.Drawing.Size(243' 310);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.panelCharEdit.TabIndex = 15;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(165' 6);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(165' 6);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 13;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.comboEncoding.Location = new System.Drawing.Point(230' 4);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.comboEncoding.Location = new System.Drawing.Point(230' 4);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.comboEncoding.Size = new System.Drawing.Size(121' 21);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.comboEncoding.Size = new System.Drawing.Size(121' 21);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.comboEncoding.TabIndex = 11;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnPalette.Location = new System.Drawing.Point(4' 483);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnPalette.Location = new System.Drawing.Point(4' 483);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnPalette.Size = new System.Drawing.Size(149' 26);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnPalette.Size = new System.Drawing.Size(149' 26);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnPalette.TabIndex = 10;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnSave.Size = new System.Drawing.Size(163' 26);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnSave.Size = new System.Drawing.Size(163' 26);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnSave.TabIndex = 12;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.picText.Location = new System.Drawing.Point(2' 427);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.picText.Location = new System.Drawing.Point(2' 427);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.picText.Size = new System.Drawing.Size(505' 50);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.picText.Size = new System.Drawing.Size(505' 50);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.picText.TabIndex = 4;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnChangeMap.Location = new System.Drawing.Point(159' 483);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnChangeMap.Location = new System.Drawing.Point(159' 483);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnChangeMap.Size = new System.Drawing.Size(142' 26);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnChangeMap.Size = new System.Drawing.Size(142' 26);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnChangeMap.TabIndex = 9;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnAddChar.Location = new System.Drawing.Point(2' 342);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnAddChar.Location = new System.Drawing.Point(2' 342);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnAddChar.Size = new System.Drawing.Size(130' 23);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnAddChar.Size = new System.Drawing.Size(130' 23);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnAddChar.TabIndex = 5;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveChar.Location = new System.Drawing.Point(135' 342);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveChar.Location = new System.Drawing.Point(135' 342);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveChar.Size = new System.Drawing.Size(130' 23);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveChar.Size = new System.Drawing.Size(130' 23);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveChar.TabIndex = 6;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnExportInfo.Location = new System.Drawing.Point(379' 342);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnExportInfo.Location = new System.Drawing.Point(379' 342);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnExportInfo.Size = new System.Drawing.Size(130' 23);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnExportInfo.Size = new System.Drawing.Size(130' 23);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnExportInfo.TabIndex = 8;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnToImage.Location = new System.Drawing.Point(415' 483);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnToImage.Location = new System.Drawing.Point(415' 483);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnToImage.Size = new System.Drawing.Size(92' 26);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnToImage.Size = new System.Drawing.Size(92' 26);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnToImage.TabIndex = 2;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnFromImage.Location = new System.Drawing.Point(307' 483);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnFromImage.Location = new System.Drawing.Point(307' 483);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnFromImage.Size = new System.Drawing.Size(102' 26);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnFromImage.Size = new System.Drawing.Size(102' 26);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnInversePalette.Location = new System.Drawing.Point(266' 342);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnInversePalette.Location = new System.Drawing.Point(266' 342);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnInversePalette.Size = new System.Drawing.Size(107' 23);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnInversePalette.Size = new System.Drawing.Size(107' 23);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.btnInversePalette.TabIndex = 7;
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(512' 512);
Magic Number,Fonts,FontControl,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\FontControl.cs,InitializeComponent,The following statement contains a magic number: this.Size = new System.Drawing.Size(512' 512);
Magic Number,Fonts,Main,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\Main.cs,Show_Info,The following statement contains a magic number: string ext = new String(br.ReadChars(4));
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,MapInfo,The following statement contains a magic number: switch (map.type_section)              {                  case 0:                      sNFTR.PAMC.Type0 type0 = (sNFTR.PAMC.Type0)map.info;                      dataGridMapInfo.Rows.Add(type0.fist_char_code.ToString()' "0");                      break;                    case 1:                      sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)map.info;                      for (int i = 0; i < type1.char_code.Length; i++)                          dataGridMapInfo.Rows.Add(type1.char_code[i].ToString()' i.ToString());                      break;                    case 2:                      sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)map.info;                      for (int i = 0; i < type2.num_chars; i++)                          dataGridMapInfo.Rows.Add(type2.charInfo[i].chars.ToString()' type2.charInfo[i].chars_code.ToString());                      break;              }
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,Recalculate_Size,The following statement contains a magic number: for (int i = 0; i < maps.Count; i++)              {                  sNFTR.PAMC map = maps[i];                  uint size = 0x14;                    switch (map.type_section)                  {                      case 0:                          size += 2;                          break;                        case 1:                          sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)map.info;                          size += (uint)type1.char_code.Length * 2;                          break;                        case 2:                          sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)map.info;                          size += 2;                          size += (uint)type2.charInfo.Length * 4;                          break;                  }                  size += 2;  // 0x00 terminator                    map.block_size = size;                  maps[i] = map;              }
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,Recalculate_Size,The following statement contains a magic number: for (int i = 0; i < maps.Count; i++)              {                  sNFTR.PAMC map = maps[i];                  uint size = 0x14;                    switch (map.type_section)                  {                      case 0:                          size += 2;                          break;                        case 1:                          sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)map.info;                          size += (uint)type1.char_code.Length * 2;                          break;                        case 2:                          sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)map.info;                          size += 2;                          size += (uint)type2.charInfo.Length * 4;                          break;                  }                  size += 2;  // 0x00 terminator                    map.block_size = size;                  maps[i] = map;              }
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,Recalculate_Size,The following statement contains a magic number: for (int i = 0; i < maps.Count; i++)              {                  sNFTR.PAMC map = maps[i];                  uint size = 0x14;                    switch (map.type_section)                  {                      case 0:                          size += 2;                          break;                        case 1:                          sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)map.info;                          size += (uint)type1.char_code.Length * 2;                          break;                        case 2:                          sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)map.info;                          size += 2;                          size += (uint)type2.charInfo.Length * 4;                          break;                  }                  size += 2;  // 0x00 terminator                    map.block_size = size;                  maps[i] = map;              }
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,Recalculate_Size,The following statement contains a magic number: for (int i = 0; i < maps.Count; i++)              {                  sNFTR.PAMC map = maps[i];                  uint size = 0x14;                    switch (map.type_section)                  {                      case 0:                          size += 2;                          break;                        case 1:                          sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)map.info;                          size += (uint)type1.char_code.Length * 2;                          break;                        case 2:                          sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)map.info;                          size += 2;                          size += (uint)type2.charInfo.Length * 4;                          break;                  }                  size += 2;  // 0x00 terminator                    map.block_size = size;                  maps[i] = map;              }
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,Recalculate_Size,The following statement contains a magic number: for (int i = 0; i < maps.Count; i++)              {                  sNFTR.PAMC map = maps[i];                  uint size = 0x14;                    switch (map.type_section)                  {                      case 0:                          size += 2;                          break;                        case 1:                          sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)map.info;                          size += (uint)type1.char_code.Length * 2;                          break;                        case 2:                          sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)map.info;                          size += 2;                          size += (uint)type2.charInfo.Length * 4;                          break;                  }                  size += 2;  // 0x00 terminator                    map.block_size = size;                  maps[i] = map;              }
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,Recalculate_Size,The following statement contains a magic number: for (int i = 0; i < maps.Count; i++)              {                  sNFTR.PAMC map = maps[i];                  uint size = 0x14;                    switch (map.type_section)                  {                      case 0:                          size += 2;                          break;                        case 1:                          sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)map.info;                          size += (uint)type1.char_code.Length * 2;                          break;                        case 2:                          sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)map.info;                          size += 2;                          size += (uint)type2.charInfo.Length * 4;                          break;                  }                  size += 2;  // 0x00 terminator                    map.block_size = size;                  maps[i] = map;              }
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,MapChar_Resize,The following statement contains a magic number: groupBox1.Height = this.Height - 80;
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,MapChar_Resize,The following statement contains a magic number: btnSave.Location = new Point(this.Width - 91' 7);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,MapChar_Resize,The following statement contains a magic number: btnSave.Location = new Point(this.Width - 91' 7);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,MapChar_Resize,The following statement contains a magic number: dataGridMapInfo.Height = groupBox1.Height - 82;
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,btnAddSect_Click,The following statement contains a magic number: map.type_section = 2;
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,dataGridMapInfo_CellEndEdit,The following statement contains a magic number: if (map.type_section == 2)              {                  sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)map.info;                  if (e.ColumnIndex == 0)                   {                      if ((e.RowIndex + 1) > type2.charInfo.Length)                        {                          List<sNFTR.PAMC.Type2.CharInfo> values = new List<sNFTR.PAMC.Type2.CharInfo>();                          sNFTR.PAMC.Type2.CharInfo info = new sNFTR.PAMC.Type2.CharInfo();                          info.chars = Convert.ToUInt16(dataGridMapInfo.Rows[e.RowIndex].Cells[0].Value);                          info.chars_code = 0;                            values.AddRange(type2.charInfo);                          values.Add(info);                          type2.charInfo = values.ToArray();                            type2.num_chars++;                      }                      else if (dataGridMapInfo.RowCount < type2.charInfo.Length)                      {                          List<sNFTR.PAMC.Type2.CharInfo> values = new List<sNFTR.PAMC.Type2.CharInfo>();                            values.AddRange(type2.charInfo);                          values.RemoveAt(e.RowIndex);                          type2.charInfo = values.ToArray();                            type2.num_chars--;                      }                      else                          type2.charInfo[e.RowIndex].chars = Convert.ToUInt16(dataGridMapInfo.Rows[e.RowIndex].Cells[0].Value);                    }                  else if (e.ColumnIndex == 1)                    {                      if ((e.RowIndex + 1) > type2.charInfo.Length)                      {                          List<sNFTR.PAMC.Type2.CharInfo> values = new List<sNFTR.PAMC.Type2.CharInfo>();                            sNFTR.PAMC.Type2.CharInfo info = new sNFTR.PAMC.Type2.CharInfo();                          info.chars_code = Convert.ToUInt16(dataGridMapInfo.Rows[e.RowIndex].Cells[1].Value);                          info.chars = 0;                            values.AddRange(type2.charInfo);                          values.Add(info);                          type2.charInfo = values.ToArray();                            type2.num_chars++;                      }                      else if (dataGridMapInfo.RowCount < type2.charInfo.Length)                      {                          List<sNFTR.PAMC.Type2.CharInfo> values = new List<sNFTR.PAMC.Type2.CharInfo>();                            values.AddRange(type2.charInfo);                          values.RemoveAt(e.RowIndex);                          type2.charInfo = values.ToArray();                            type2.num_chars--;                      }                      else                          type2.charInfo[e.RowIndex].chars_code = Convert.ToUInt16(dataGridMapInfo.Rows[e.RowIndex].Cells[1].Value);                  }                  map.info = type2;              }              else if (map.type_section == 1)              {                  sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)map.info;                    if (e.ColumnIndex == 0)                  {                      if ((e.RowIndex + 1) > type1.char_code.Length)                      {                          List<ushort> values = new List<ushort>();                          values.AddRange(type1.char_code);                          values.Add(Convert.ToUInt16(dataGridMapInfo.Rows[e.RowIndex].Cells[0].Value));                          type1.char_code = values.ToArray();                      }                      else if (dataGridMapInfo.RowCount < type1.char_code.Length)                      {                          List<ushort> values = new List<ushort>();                          values.AddRange(type1.char_code);                          values.RemoveAt(e.RowIndex);                          type1.char_code = values.ToArray();                      }                      else                          type1.char_code[e.RowIndex] = Convert.ToUInt16(dataGridMapInfo.Rows[e.RowIndex].Cells[0].Value);                  }                    map.info = type1;              }              else              {                  sNFTR.PAMC.Type0 type0 = (sNFTR.PAMC.Type0)map.info;                    if (e.ColumnIndex == 0 && e.RowIndex == 0 && dataGridMapInfo.RowCount > 0)                  {                      type0.fist_char_code = Convert.ToUInt16(dataGridMapInfo.Rows[e.RowIndex].Cells[0].Value);                  }                    map.info = type0;              }
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnSave.Location = new System.Drawing.Point(305' 7);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnSave.Location = new System.Drawing.Point(305' 7);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnSave.Size = new System.Drawing.Size(75' 23);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnSave.Size = new System.Drawing.Size(75' 23);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericSection.Location = new System.Drawing.Point(64' 7);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericSection.Location = new System.Drawing.Point(64' 7);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericSection.Maximum = new decimal(new int[] {              65535'              0'              0'              0});
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericSection.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericSection.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Location = new System.Drawing.Point(0' 36);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(380' 207);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.Size = new System.Drawing.Size(380' 207);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.groupBox1.TabIndex = 2;
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.dataGridMapInfo.Location = new System.Drawing.Point(3' 79);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.dataGridMapInfo.Location = new System.Drawing.Point(3' 79);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.dataGridMapInfo.Size = new System.Drawing.Size(374' 125);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.dataGridMapInfo.Size = new System.Drawing.Size(374' 125);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.dataGridMapInfo.TabIndex = 11;
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnAddSect.Location = new System.Drawing.Point(165' 50);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnAddSect.Location = new System.Drawing.Point(165' 50);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnAddSect.Size = new System.Drawing.Size(100' 23);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnAddSect.Size = new System.Drawing.Size(100' 23);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnAddSect.TabIndex = 10;
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveSec.Location = new System.Drawing.Point(268' 50);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveSec.Location = new System.Drawing.Point(268' 50);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveSec.Size = new System.Drawing.Size(100' 23);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveSec.Size = new System.Drawing.Size(100' 23);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.btnRemoveSec.TabIndex = 9;
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(235' 26);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label4.Location = new System.Drawing.Point(235' 26);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label4.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label4.TabIndex = 5;
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericLastChar.Location = new System.Drawing.Point(318' 24);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericLastChar.Location = new System.Drawing.Point(318' 24);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericLastChar.Maximum = new decimal(new int[] {              65535'              0'              0'              0});
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericLastChar.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericLastChar.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericLastChar.TabIndex = 4;
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericFirstChar.Location = new System.Drawing.Point(183' 24);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericFirstChar.Location = new System.Drawing.Point(183' 24);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericFirstChar.Maximum = new decimal(new int[] {              65535'              0'              0'              0});
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericFirstChar.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericFirstChar.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericFirstChar.TabIndex = 3;
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(98' 26);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(98' 26);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 2;
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericType.Location = new System.Drawing.Point(46' 24);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericType.Location = new System.Drawing.Point(46' 24);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericType.Maximum = new decimal(new int[] {              2'              0'              0'              0});
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericType.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.numericType.Size = new System.Drawing.Size(50' 20);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(6' 26);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(6' 26);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 9);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(12' 9);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.label1.TabIndex = 3;
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.lblTotalSec.Location = new System.Drawing.Point(120' 9);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.lblTotalSec.Location = new System.Drawing.Point(120' 9);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.lblTotalSec.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.lblTotalSec.Size = new System.Drawing.Size(26' 13);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.lblTotalSec.TabIndex = 4;
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(380' 243);
Magic Number,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(380' 243);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Read,The following statement contains a magic number: font.header.type = br.ReadChars(4);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Read,The following statement contains a magic number: font.fnif.type = br.ReadChars(4);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Read,The following statement contains a magic number: font.plgc.type = br.ReadChars(4);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Read,The following statement contains a magic number: for (int i = 0; i < font.plgc.tiles.Length; i++)              {                  font.plgc.tiles[i] = BytesToBits(br.ReadBytes(font.plgc.tile_length));                  if (font.plgc.rotateMode == 2)                      font.plgc.tiles[i] = Rotate270(font.plgc.tiles[i]' font.plgc.tile_width' font.plgc.tile_height' font.plgc.depth);                  else if (font.plgc.rotateMode == 1)                      font.plgc.tiles[i] = Rotate90(font.plgc.tiles[i]' font.plgc.tile_width' font.plgc.tile_height' font.plgc.depth);                  else if (font.plgc.rotateMode == 3)                      font.plgc.tiles[i] = Rotate180(font.plgc.tiles[i]' font.plgc.tile_width' font.plgc.tile_height' font.plgc.depth);                }
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Read,The following statement contains a magic number: for (int i = 0; i < font.plgc.tiles.Length; i++)              {                  font.plgc.tiles[i] = BytesToBits(br.ReadBytes(font.plgc.tile_length));                  if (font.plgc.rotateMode == 2)                      font.plgc.tiles[i] = Rotate270(font.plgc.tiles[i]' font.plgc.tile_width' font.plgc.tile_height' font.plgc.depth);                  else if (font.plgc.rotateMode == 1)                      font.plgc.tiles[i] = Rotate90(font.plgc.tiles[i]' font.plgc.tile_width' font.plgc.tile_height' font.plgc.depth);                  else if (font.plgc.rotateMode == 3)                      font.plgc.tiles[i] = Rotate180(font.plgc.tiles[i]' font.plgc.tile_width' font.plgc.tile_height' font.plgc.depth);                }
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Read,The following statement contains a magic number: font.hdwc.type = br.ReadChars(4);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Read,The following statement contains a magic number: do              {                  sNFTR.PAMC pamc = new sNFTR.PAMC();                  pamc.type = br.ReadChars(4);                  pamc.block_size = br.ReadUInt32();                  pamc.first_char = br.ReadUInt16();                  pamc.last_char = br.ReadUInt16();                  pamc.type_section = br.ReadUInt32();                  nextOffset = br.ReadUInt32();                  pamc.next_section = nextOffset;                    switch (pamc.type_section)                  {                      case 0:                          sNFTR.PAMC.Type0 type0 = new sNFTR.PAMC.Type0();                          type0.fist_char_code = br.ReadUInt16();                          pamc.info = type0;                          break;                      case 1:                          sNFTR.PAMC.Type1 type1 = new sNFTR.PAMC.Type1();                          type1.char_code = new ushort[pamc.last_char - pamc.first_char + 1];                          for (int i = 0; i < type1.char_code.Length; i++)                              type1.char_code[i] = br.ReadUInt16();                            pamc.info = type1;                          break;                      case 2:                          sNFTR.PAMC.Type2 type2 = new sNFTR.PAMC.Type2();                          type2.num_chars = br.ReadUInt16();                          type2.charInfo = new sNFTR.PAMC.Type2.CharInfo[type2.num_chars];                            for (int i = 0; i < type2.num_chars; i++)                          {                              type2.charInfo[i].chars_code = br.ReadUInt16();                              type2.charInfo[i].chars = br.ReadUInt16();                          }                          pamc.info = type2;                          break;                  }                    font.pamc.Add(pamc);                  br.BaseStream.Position = nextOffset - 0x08;              } while (nextOffset != 0x00 && (nextOffset - 0x08) < br.BaseStream.Length);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Read,The following statement contains a magic number: do              {                  sNFTR.PAMC pamc = new sNFTR.PAMC();                  pamc.type = br.ReadChars(4);                  pamc.block_size = br.ReadUInt32();                  pamc.first_char = br.ReadUInt16();                  pamc.last_char = br.ReadUInt16();                  pamc.type_section = br.ReadUInt32();                  nextOffset = br.ReadUInt32();                  pamc.next_section = nextOffset;                    switch (pamc.type_section)                  {                      case 0:                          sNFTR.PAMC.Type0 type0 = new sNFTR.PAMC.Type0();                          type0.fist_char_code = br.ReadUInt16();                          pamc.info = type0;                          break;                      case 1:                          sNFTR.PAMC.Type1 type1 = new sNFTR.PAMC.Type1();                          type1.char_code = new ushort[pamc.last_char - pamc.first_char + 1];                          for (int i = 0; i < type1.char_code.Length; i++)                              type1.char_code[i] = br.ReadUInt16();                            pamc.info = type1;                          break;                      case 2:                          sNFTR.PAMC.Type2 type2 = new sNFTR.PAMC.Type2();                          type2.num_chars = br.ReadUInt16();                          type2.charInfo = new sNFTR.PAMC.Type2.CharInfo[type2.num_chars];                            for (int i = 0; i < type2.num_chars; i++)                          {                              type2.charInfo[i].chars_code = br.ReadUInt16();                              type2.charInfo[i].chars = br.ReadUInt16();                          }                          pamc.info = type2;                          break;                  }                    font.pamc.Add(pamc);                  br.BaseStream.Position = nextOffset - 0x08;              } while (nextOffset != 0x00 && (nextOffset - 0x08) < br.BaseStream.Length);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: if (font.plgc.block_size % 4 != 0)  // Padding                  font.plgc.block_size += (4 - (font.plgc.block_size % 4));
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: if (font.plgc.block_size % 4 != 0)  // Padding                  font.plgc.block_size += (4 - (font.plgc.block_size % 4));
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: if (font.plgc.block_size % 4 != 0)  // Padding                  font.plgc.block_size += (4 - (font.plgc.block_size % 4));
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: font.hdwc.block_size = (uint)(0x10 + font.hdwc.info.Count * 3);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: if (font.hdwc.block_size % 4 != 0)  // Padding                  font.hdwc.block_size += (4 - (font.hdwc.block_size % 4));
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: if (font.hdwc.block_size % 4 != 0)  // Padding                  font.hdwc.block_size += (4 - (font.hdwc.block_size % 4));
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: if (font.hdwc.block_size % 4 != 0)  // Padding                  font.hdwc.block_size += (4 - (font.hdwc.block_size % 4));
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: int rem = (int)bw.BaseStream.Position % 4;
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: if (rem != 0)                  for (; rem < 4; rem++)                      bw.Write((byte)0x00);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: rem = (int)bw.BaseStream.Position % 4;
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: if (rem != 0)                  for (; rem < 4; rem++)                      bw.Write((byte)0x00);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: rem = (int)bw.BaseStream.Position % 4;
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: if (rem != 0)                  for (; rem < 4; rem++)                      bw.Write((byte)0x00);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following statement contains a magic number: for (int i = 0; i < font.pamc.Count; i++)              {                  long currPos = bw.BaseStream.Position;                  uint next_section = (uint)(currPos + font.pamc[i].block_size) + 0x08;                  if (i + 1 == font.pamc.Count)                      next_section = 0;                  bw.Write(font.pamc[i].type);                  bw.Write(font.pamc[i].block_size);                  bw.Write(font.pamc[i].first_char);                  bw.Write(font.pamc[i].last_char);                  bw.Write(font.pamc[i].type_section);                  bw.Write(next_section);                    switch (font.pamc[i].type_section)                  {                      case 0:                          sNFTR.PAMC.Type0 type0 = (sNFTR.PAMC.Type0)font.pamc[i].info;                          bw.Write(type0.fist_char_code);                          break;                      case 1:                          sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)font.pamc[i].info;                          for (int j = 0; j < type1.char_code.Length; j++)                              bw.Write(type1.char_code[j]);                          break;                      case 2:                          sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)font.pamc[i].info;                          bw.Write(type2.num_chars);                          for (int j = 0; j < type2.num_chars; j++)                          {                              bw.Write(type2.charInfo[j].chars_code);                              bw.Write(type2.charInfo[j].chars);                          }                          break;                  }                  bw.Write((ushort)0x00);              }
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,WriteInfo,The following statement contains a magic number: try              {                  XElement xml = XElement.Load(System.Windows.Forms.Application.StartupPath + Path.DirectorySeparatorChar +                      "Plugins" + Path.DirectorySeparatorChar + "FontLang.xml");                  xml = xml.Element(lang).Element("NFTR");                    Console.WriteLine(xml.Element("S00").Value);                  Console.WriteLine("<pre>");                  Console.WriteLine(xml.Element("S01").Value' font.header.num_blocks.ToString());                      Console.WriteLine("<b>" + xml.Element("S02").Value + "</b>"' new String(font.fnif.type));                  Console.WriteLine(xml.Element("S03").Value' font.fnif.block_size.ToString("x"));                  Console.WriteLine(xml.Element("S04").Value' font.fnif.unknown1.ToString("x"));                  Console.WriteLine(xml.Element("S1E").Value' font.fnif.height.ToString("x"));                  Console.WriteLine("Null char index: " + font.fnif.nullCharIndex.ToString());                  Console.WriteLine(xml.Element("S20").Value' font.fnif.unknown4.ToString("x"));                  Console.WriteLine(xml.Element("S21").Value' font.fnif.width.ToString("x"));                  Console.WriteLine(xml.Element("S22").Value' font.fnif.width_bis.ToString("x"));                  Console.WriteLine(xml.Element("S23").Value' font.fnif.encoding.ToString("x"));                  Console.WriteLine(xml.Element("S06").Value' font.fnif.offset_plgc.ToString("x"));                  Console.WriteLine(xml.Element("S07").Value' font.fnif.offset_hdwc.ToString("x"));                  Console.WriteLine(xml.Element("S08").Value' font.fnif.offset_pamc.ToString("x"));                  if (font.fnif.block_size == 0x20)                  {                      Console.WriteLine(xml.Element("S24").Value' font.fnif.height_font.ToString("x"));                      Console.WriteLine(xml.Element("S25").Value' font.fnif.widht_font.ToString("x"));                      Console.WriteLine(xml.Element("S26").Value' font.fnif.bearing_y.ToString("x"));                      Console.WriteLine(xml.Element("S09").Value' font.fnif.bearing_x.ToString("x"));                  }                      Console.WriteLine("<b>" + xml.Element("S02").Value + "</b>"' new String(font.plgc.type));                  Console.WriteLine(xml.Element("S03").Value' font.plgc.block_size.ToString("x"));                  Console.WriteLine(xml.Element("S0A").Value' font.plgc.tile_width.ToString());                  Console.WriteLine(xml.Element("S0B").Value' font.plgc.tile_height.ToString());                  Console.WriteLine(xml.Element("S0C").Value' font.plgc.tile_length.ToString());                  Console.WriteLine(xml.Element("S0D").Value' font.plgc.unknown.ToString("x"));                  Console.WriteLine(xml.Element("S0E").Value' font.plgc.depth.ToString());                  Console.WriteLine(xml.Element("S0F").Value' font.plgc.rotateMode.ToString());                  //Console.WriteLine(xml.Element("S10").Value' font.plgc.unknown2.ToString());                    Console.WriteLine("<b>" + xml.Element("S02").Value + "</b>"' new String(font.hdwc.type));                  Console.WriteLine(xml.Element("S03").Value' font.hdwc.block_size.ToString("x"));                  Console.WriteLine(xml.Element("S11").Value' font.hdwc.fist_code.ToString("x"));                  Console.WriteLine(xml.Element("S12").Value' font.hdwc.last_code.ToString("x"));                  Console.WriteLine(xml.Element("S13").Value' font.hdwc.unknown1.ToString("x"));                    Console.WriteLine("<b>" + xml.Element("S02").Value + "</b>"' "PAMC");                  for (int i = 0; i < font.pamc.Count; i++)                  {                      sNFTR.PAMC pamc = font.pamc[i];                      Console.WriteLine("<u>" + xml.Element("S02").Value + "</u>"' i.ToString());                      Console.WriteLine("  |__" + xml.Element("S03").Value' pamc.block_size.ToString("x"));                      Console.WriteLine("  |_" + xml.Element("S14").Value' pamc.first_char.ToString("x"));                      Console.WriteLine("  |_" + xml.Element("S15").Value' pamc.last_char.ToString("x"));                      Console.WriteLine("  |_" + xml.Element("S16").Value' pamc.type_section.ToString());                        switch (pamc.type_section)                      {                          case 0:                              sNFTR.PAMC.Type0 type0 = (sNFTR.PAMC.Type0)pamc.info;                              Console.WriteLine("    \\_" + xml.Element("S17").Value' 0);                              Console.WriteLine("    \\_" + xml.Element("S18").Value' type0.fist_char_code.ToString("x"));                              break;                            case 1:                              sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)pamc.info;                              Console.WriteLine("    \\_" + xml.Element("S17").Value' 1);                              Console.WriteLine("    \\_" + xml.Element("S19").Value' type1.char_code.Length.ToString());                              for (int j = 0; j < type1.char_code.Length; j++)                                  Console.WriteLine("    |_" + xml.Element("S1A").Value' j.ToString()' type1.char_code[j].ToString("x")'                                          Encoding.GetEncoding("shift-jis").GetChars(                                          BitConverter.GetBytes(pamc.first_char + j).Reverse().ToArray()).Reverse().ToArray()[0]);                              break;                            case 2:                              sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)pamc.info;                              Console.WriteLine("    \\_" + xml.Element("S17").Value' 2);                              Console.WriteLine("    \\_" + xml.Element("S1B").Value' type2.num_chars.ToString());                              for (int j = 0; j < type2.num_chars; j++)                              {                                  Console.WriteLine("    |_" + xml.Element("S1C").Value' j.ToString()' type2.charInfo[j].chars_code.ToString("x"));                                  Console.WriteLine("    |_" + xml.Element("S1D").Value' j.ToString()' type2.charInfo[j].chars.ToString());                              }                              break;                      }                  }                    Console.WriteLine("EOF</pre>");              }              catch { throw new NotSupportedException("There was an error reading the language file"); }
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,WriteInfo,The following statement contains a magic number: try              {                  XElement xml = XElement.Load(System.Windows.Forms.Application.StartupPath + Path.DirectorySeparatorChar +                      "Plugins" + Path.DirectorySeparatorChar + "FontLang.xml");                  xml = xml.Element(lang).Element("NFTR");                    Console.WriteLine(xml.Element("S00").Value);                  Console.WriteLine("<pre>");                  Console.WriteLine(xml.Element("S01").Value' font.header.num_blocks.ToString());                      Console.WriteLine("<b>" + xml.Element("S02").Value + "</b>"' new String(font.fnif.type));                  Console.WriteLine(xml.Element("S03").Value' font.fnif.block_size.ToString("x"));                  Console.WriteLine(xml.Element("S04").Value' font.fnif.unknown1.ToString("x"));                  Console.WriteLine(xml.Element("S1E").Value' font.fnif.height.ToString("x"));                  Console.WriteLine("Null char index: " + font.fnif.nullCharIndex.ToString());                  Console.WriteLine(xml.Element("S20").Value' font.fnif.unknown4.ToString("x"));                  Console.WriteLine(xml.Element("S21").Value' font.fnif.width.ToString("x"));                  Console.WriteLine(xml.Element("S22").Value' font.fnif.width_bis.ToString("x"));                  Console.WriteLine(xml.Element("S23").Value' font.fnif.encoding.ToString("x"));                  Console.WriteLine(xml.Element("S06").Value' font.fnif.offset_plgc.ToString("x"));                  Console.WriteLine(xml.Element("S07").Value' font.fnif.offset_hdwc.ToString("x"));                  Console.WriteLine(xml.Element("S08").Value' font.fnif.offset_pamc.ToString("x"));                  if (font.fnif.block_size == 0x20)                  {                      Console.WriteLine(xml.Element("S24").Value' font.fnif.height_font.ToString("x"));                      Console.WriteLine(xml.Element("S25").Value' font.fnif.widht_font.ToString("x"));                      Console.WriteLine(xml.Element("S26").Value' font.fnif.bearing_y.ToString("x"));                      Console.WriteLine(xml.Element("S09").Value' font.fnif.bearing_x.ToString("x"));                  }                      Console.WriteLine("<b>" + xml.Element("S02").Value + "</b>"' new String(font.plgc.type));                  Console.WriteLine(xml.Element("S03").Value' font.plgc.block_size.ToString("x"));                  Console.WriteLine(xml.Element("S0A").Value' font.plgc.tile_width.ToString());                  Console.WriteLine(xml.Element("S0B").Value' font.plgc.tile_height.ToString());                  Console.WriteLine(xml.Element("S0C").Value' font.plgc.tile_length.ToString());                  Console.WriteLine(xml.Element("S0D").Value' font.plgc.unknown.ToString("x"));                  Console.WriteLine(xml.Element("S0E").Value' font.plgc.depth.ToString());                  Console.WriteLine(xml.Element("S0F").Value' font.plgc.rotateMode.ToString());                  //Console.WriteLine(xml.Element("S10").Value' font.plgc.unknown2.ToString());                    Console.WriteLine("<b>" + xml.Element("S02").Value + "</b>"' new String(font.hdwc.type));                  Console.WriteLine(xml.Element("S03").Value' font.hdwc.block_size.ToString("x"));                  Console.WriteLine(xml.Element("S11").Value' font.hdwc.fist_code.ToString("x"));                  Console.WriteLine(xml.Element("S12").Value' font.hdwc.last_code.ToString("x"));                  Console.WriteLine(xml.Element("S13").Value' font.hdwc.unknown1.ToString("x"));                    Console.WriteLine("<b>" + xml.Element("S02").Value + "</b>"' "PAMC");                  for (int i = 0; i < font.pamc.Count; i++)                  {                      sNFTR.PAMC pamc = font.pamc[i];                      Console.WriteLine("<u>" + xml.Element("S02").Value + "</u>"' i.ToString());                      Console.WriteLine("  |__" + xml.Element("S03").Value' pamc.block_size.ToString("x"));                      Console.WriteLine("  |_" + xml.Element("S14").Value' pamc.first_char.ToString("x"));                      Console.WriteLine("  |_" + xml.Element("S15").Value' pamc.last_char.ToString("x"));                      Console.WriteLine("  |_" + xml.Element("S16").Value' pamc.type_section.ToString());                        switch (pamc.type_section)                      {                          case 0:                              sNFTR.PAMC.Type0 type0 = (sNFTR.PAMC.Type0)pamc.info;                              Console.WriteLine("    \\_" + xml.Element("S17").Value' 0);                              Console.WriteLine("    \\_" + xml.Element("S18").Value' type0.fist_char_code.ToString("x"));                              break;                            case 1:                              sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)pamc.info;                              Console.WriteLine("    \\_" + xml.Element("S17").Value' 1);                              Console.WriteLine("    \\_" + xml.Element("S19").Value' type1.char_code.Length.ToString());                              for (int j = 0; j < type1.char_code.Length; j++)                                  Console.WriteLine("    |_" + xml.Element("S1A").Value' j.ToString()' type1.char_code[j].ToString("x")'                                          Encoding.GetEncoding("shift-jis").GetChars(                                          BitConverter.GetBytes(pamc.first_char + j).Reverse().ToArray()).Reverse().ToArray()[0]);                              break;                            case 2:                              sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)pamc.info;                              Console.WriteLine("    \\_" + xml.Element("S17").Value' 2);                              Console.WriteLine("    \\_" + xml.Element("S1B").Value' type2.num_chars.ToString());                              for (int j = 0; j < type2.num_chars; j++)                              {                                  Console.WriteLine("    |_" + xml.Element("S1C").Value' j.ToString()' type2.charInfo[j].chars_code.ToString("x"));                                  Console.WriteLine("    |_" + xml.Element("S1D").Value' j.ToString()' type2.charInfo[j].chars.ToString());                              }                              break;                      }                  }                    Console.WriteLine("EOF</pre>");              }              catch { throw new NotSupportedException("There was an error reading the language file"); }
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,CalculatePalette,The following statement contains a magic number: for (int i = 0; i < palette.Length; i++)              {                  int colorIndex = i *  (255 / (palette.Length - 1));                  if (inverse) colorIndex = 255 - colorIndex;                  palette[i] = Color.FromArgb(255' colorIndex' colorIndex' colorIndex);              }
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,CalculatePalette,The following statement contains a magic number: for (int i = 0; i < palette.Length; i++)              {                  int colorIndex = i *  (255 / (palette.Length - 1));                  if (inverse) colorIndex = 255 - colorIndex;                  palette[i] = Color.FromArgb(255' colorIndex' colorIndex' colorIndex);              }
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,CalculatePalette,The following statement contains a magic number: for (int i = 0; i < palette.Length; i++)              {                  int colorIndex = i *  (255 / (palette.Length - 1));                  if (inverse) colorIndex = 255 - colorIndex;                  palette[i] = Color.FromArgb(255' colorIndex' colorIndex' colorIndex);              }
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,BytesToBits,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++)                  for (int j = 7; j >= 0; j--)                      bits.Add((byte)((bytes[i] >> j) & 1));
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,BitsToBytes,The following statement contains a magic number: for (int i = 0; i < bits.Length; i += 8)              {                  Byte newByte = 0;                  int b = 0;                  for (int j = 7; j >= 0; j--' b++)                  {                      newByte += (byte)(bits[i + b] << j);                  }                  bytes.Add(newByte);              }
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,BitsToBytes,The following statement contains a magic number: for (int i = 0; i < bits.Length; i += 8)              {                  Byte newByte = 0;                  int b = 0;                  for (int j = 7; j >= 0; j--' b++)                  {                      newByte += (byte)(bits[i + b] << j);                  }                  bytes.Add(newByte);              }
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,ExportInfo,The following statement contains a magic number: if (font.fnif.encoding == 2)                  enc_name = "shift_jis";              else if (font.fnif.encoding == 1)                  enc_name = "utf-16";              else if (font.fnif.encoding == 0)                  enc_name = "utf-8";              else if (font.fnif.encoding == 3)                  enc_name = Encoding.GetEncoding(1252).EncodingName;
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,ExportInfo,The following statement contains a magic number: if (font.fnif.encoding == 2)                  enc_name = "shift_jis";              else if (font.fnif.encoding == 1)                  enc_name = "utf-16";              else if (font.fnif.encoding == 0)                  enc_name = "utf-8";              else if (font.fnif.encoding == 3)                  enc_name = Encoding.GetEncoding(1252).EncodingName;
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,ExportInfo,The following statement contains a magic number: if (font.fnif.encoding == 2)                  enc_name = "shift_jis";              else if (font.fnif.encoding == 1)                  enc_name = "utf-16";              else if (font.fnif.encoding == 0)                  enc_name = "utf-8";              else if (font.fnif.encoding == 3)                  enc_name = Encoding.GetEncoding(1252).EncodingName;
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,ExportFullInfo,The following statement contains a magic number: switch (font.fnif.encoding)  	        {                  case 0: encName = "utf-8"; break;                  case 1: encName = "utf-16"; break;                  case 2: encName = "shift_jis"; break;                  case 3: encName = Encoding.GetEncoding(1252).EncodingName; break;  	        }
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,ExportFullInfo,The following statement contains a magic number: switch (font.fnif.encoding)  	        {                  case 0: encName = "utf-8"; break;                  case 1: encName = "utf-16"; break;                  case 2: encName = "shift_jis"; break;                  case 3: encName = Encoding.GetEncoding(1252).EncodingName; break;  	        }
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,ExportFullInfo,The following statement contains a magic number: switch (font.fnif.encoding)  	        {                  case 0: encName = "utf-8"; break;                  case 1: encName = "utf-16"; break;                  case 2: encName = "shift_jis"; break;                  case 3: encName = Encoding.GetEncoding(1252).EncodingName; break;  	        }
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,SetChar,The following statement contains a magic number: if (numBits % 8 != 0)                  numBits += 8 - (numBits % 8);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,SetChar,The following statement contains a magic number: if (numBits % 8 != 0)                  numBits += 8 - (numBits % 8);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,SetChar,The following statement contains a magic number: if (numBits % 8 != 0)                  numBits += 8 - (numBits % 8);
Magic Number,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,ToImage,The following statement contains a magic number: for (int i = 0; i < numRows; i++)              {                  for (int j = 0; j < numColumns; j++)                  {                      int index = i * numColumns + j;                      if (index >= numChars)                          break;                        int x = j * charWidth + BORDER_WIDTH;                      int y = i * charHeight + BORDER_WIDTH;                        int align = BORDER_WIDTH - (BORDER_WIDTH / 2);                      graphic.DrawRectangle(BORDER' x - align' y - align' charWidth' charHeight);                      graphic.DrawImage(Get_Char(font' index' palette' zoom)' x' y);                  }              }
Missing Default,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,MapInfo,The following switch statement is missing a default case: switch (map.type_section)              {                  case 0:                      sNFTR.PAMC.Type0 type0 = (sNFTR.PAMC.Type0)map.info;                      dataGridMapInfo.Rows.Add(type0.fist_char_code.ToString()' "0");                      break;                    case 1:                      sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)map.info;                      for (int i = 0; i < type1.char_code.Length; i++)                          dataGridMapInfo.Rows.Add(type1.char_code[i].ToString()' i.ToString());                      break;                    case 2:                      sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)map.info;                      for (int i = 0; i < type2.num_chars; i++)                          dataGridMapInfo.Rows.Add(type2.charInfo[i].chars.ToString()' type2.charInfo[i].chars_code.ToString());                      break;              }
Missing Default,Fonts,MapChar,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\MapChar.cs,Recalculate_Size,The following switch statement is missing a default case: switch (map.type_section)                  {                      case 0:                          size += 2;                          break;                        case 1:                          sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)map.info;                          size += (uint)type1.char_code.Length * 2;                          break;                        case 2:                          sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)map.info;                          size += 2;                          size += (uint)type2.charInfo.Length * 4;                          break;                  }
Missing Default,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Read,The following switch statement is missing a default case: switch (pamc.type_section)                  {                      case 0:                          sNFTR.PAMC.Type0 type0 = new sNFTR.PAMC.Type0();                          type0.fist_char_code = br.ReadUInt16();                          pamc.info = type0;                          break;                      case 1:                          sNFTR.PAMC.Type1 type1 = new sNFTR.PAMC.Type1();                          type1.char_code = new ushort[pamc.last_char - pamc.first_char + 1];                          for (int i = 0; i < type1.char_code.Length; i++)                              type1.char_code[i] = br.ReadUInt16();                            pamc.info = type1;                          break;                      case 2:                          sNFTR.PAMC.Type2 type2 = new sNFTR.PAMC.Type2();                          type2.num_chars = br.ReadUInt16();                          type2.charInfo = new sNFTR.PAMC.Type2.CharInfo[type2.num_chars];                            for (int i = 0; i < type2.num_chars; i++)                          {                              type2.charInfo[i].chars_code = br.ReadUInt16();                              type2.charInfo[i].chars = br.ReadUInt16();                          }                          pamc.info = type2;                          break;                  }
Missing Default,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,Write,The following switch statement is missing a default case: switch (font.pamc[i].type_section)                  {                      case 0:                          sNFTR.PAMC.Type0 type0 = (sNFTR.PAMC.Type0)font.pamc[i].info;                          bw.Write(type0.fist_char_code);                          break;                      case 1:                          sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)font.pamc[i].info;                          for (int j = 0; j < type1.char_code.Length; j++)                              bw.Write(type1.char_code[j]);                          break;                      case 2:                          sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)font.pamc[i].info;                          bw.Write(type2.num_chars);                          for (int j = 0; j < type2.num_chars; j++)                          {                              bw.Write(type2.charInfo[j].chars_code);                              bw.Write(type2.charInfo[j].chars);                          }                          break;                  }
Missing Default,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,WriteInfo,The following switch statement is missing a default case: switch (pamc.type_section)                      {                          case 0:                              sNFTR.PAMC.Type0 type0 = (sNFTR.PAMC.Type0)pamc.info;                              Console.WriteLine("    \\_" + xml.Element("S17").Value' 0);                              Console.WriteLine("    \\_" + xml.Element("S18").Value' type0.fist_char_code.ToString("x"));                              break;                            case 1:                              sNFTR.PAMC.Type1 type1 = (sNFTR.PAMC.Type1)pamc.info;                              Console.WriteLine("    \\_" + xml.Element("S17").Value' 1);                              Console.WriteLine("    \\_" + xml.Element("S19").Value' type1.char_code.Length.ToString());                              for (int j = 0; j < type1.char_code.Length; j++)                                  Console.WriteLine("    |_" + xml.Element("S1A").Value' j.ToString()' type1.char_code[j].ToString("x")'                                          Encoding.GetEncoding("shift-jis").GetChars(                                          BitConverter.GetBytes(pamc.first_char + j).Reverse().ToArray()).Reverse().ToArray()[0]);                              break;                            case 2:                              sNFTR.PAMC.Type2 type2 = (sNFTR.PAMC.Type2)pamc.info;                              Console.WriteLine("    \\_" + xml.Element("S17").Value' 2);                              Console.WriteLine("    \\_" + xml.Element("S1B").Value' type2.num_chars.ToString());                              for (int j = 0; j < type2.num_chars; j++)                              {                                  Console.WriteLine("    |_" + xml.Element("S1C").Value' j.ToString()' type2.charInfo[j].chars_code.ToString("x"));                                  Console.WriteLine("    |_" + xml.Element("S1D").Value' j.ToString()' type2.charInfo[j].chars.ToString());                              }                              break;                      }
Missing Default,Fonts,NFTR,C:\repos\pleonex_tinke\Plugins\Fonts\Fonts\NFTR.cs,ExportFullInfo,The following switch statement is missing a default case: switch (font.fnif.encoding)  	        {                  case 0: encName = "utf-8"; break;                  case 1: encName = "utf-16"; break;                  case 2: encName = "shift_jis"; break;                  case 3: encName = Encoding.GetEncoding(1252).EncodingName; break;  	        }
