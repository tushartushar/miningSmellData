Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NotManagedNetPlugins,Helper,D:\newReposJune17\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\Helper.cs,Recursive_GetDirectories,Cyclomatic complexity of the method is 8
Complex Method,NotManagedNetPlugins,Helper,D:\newReposJune17\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\Helper.cs,StringToFormat,Cyclomatic complexity of the method is 16
Long Parameter List,NotManagedNetPlugins,GamePlugins,D:\newReposJune17\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\GamePlugins.cs,XDecompress,The method has 5 parameters.
Long Parameter List,NotManagedNetPlugins,Helper,D:\newReposJune17\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\Helper.cs,Recursive_GetDirectories,The method has 4 parameters.
Long Statement,NotManagedNetPlugins,GamePlugins,D:\newReposJune17\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\GamePlugins.cs,IsCompatible,The length of the statement  "	if (File.Exists (Application.StartupPath + Path.DirectorySeparatorChar + "Plugins" + Path.DirectorySeparatorChar + "LufiaCurseSinistrals.dll")) { " is 145.
Long Statement,NotManagedNetPlugins,GamePlugins,D:\newReposJune17\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\GamePlugins.cs,Unpack,The length of the statement  "			bool b = XDecompress (file.path' pluginHost.Search_File (0x16)' pluginHost.Search_File (0x17)' file.id.ToString ()' &num); " is 122.
Magic Number,NotManagedNetPlugins,Helper,D:\newReposJune17\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\Helper.cs,Recursive_GetDirectories,The following statement contains a magic number: if (directoryPath.Replace (relativePath' "") == pathFolder) {  	sFile newFile = new sFile ();  	newFile.name = Path.GetFileName (file);  	newFile.offset = 0x00;  	newFile.path = file;  	newFile.size = (uint)new FileInfo (file).Length;  	if (!(currFolder.files is List<sFile>))  		currFolder.files = new List<sFile> ();  	currFolder.files.Add (newFile);  	return currFolder;  } else {  	sFolder newFolder = new sFolder ();  	;  	if (currFolder.folders is List<sFolder>) {  		string folderName = file.Replace (relativePath + pathFolder' "");  		folderName = folderName.Substring (1' folderName.Substring (2).IndexOf (Path.DirectorySeparatorChar) + 1);  		int i;  		for (i = 0; i < currFolder.folders.Count; i++) {  			if (currFolder.folders [i].name == folderName) {  				newFolder = currFolder.folders [i];  				break;  			}  		}  		if (!(newFolder.name is String))  			goto Create_Folder;  		pathFolder += Path.DirectorySeparatorChar + newFolder.name;  		newFolder = Recursive_GetDirectories (file' newFolder' pathFolder' relativePath);  		currFolder.folders [i] = newFolder;  		return currFolder;  	}  	Create_Folder:  	newFolder.name = file.Replace (relativePath + pathFolder' "");  	newFolder.name = newFolder.name.Substring (1' newFolder.name.Substring (2).IndexOf (Path.DirectorySeparatorChar) + 1);  	if (!(currFolder.folders is List<sFolder>))  		currFolder.folders = new List<sFolder> ();  	pathFolder += Path.DirectorySeparatorChar + newFolder.name;  	newFolder = Recursive_GetDirectories (file' newFolder' pathFolder' relativePath);  	currFolder.folders.Add (newFolder);  	return currFolder;  }  
Magic Number,NotManagedNetPlugins,Helper,D:\newReposJune17\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\Helper.cs,Recursive_GetDirectories,The following statement contains a magic number: if (directoryPath.Replace (relativePath' "") == pathFolder) {  	sFile newFile = new sFile ();  	newFile.name = Path.GetFileName (file);  	newFile.offset = 0x00;  	newFile.path = file;  	newFile.size = (uint)new FileInfo (file).Length;  	if (!(currFolder.files is List<sFile>))  		currFolder.files = new List<sFile> ();  	currFolder.files.Add (newFile);  	return currFolder;  } else {  	sFolder newFolder = new sFolder ();  	;  	if (currFolder.folders is List<sFolder>) {  		string folderName = file.Replace (relativePath + pathFolder' "");  		folderName = folderName.Substring (1' folderName.Substring (2).IndexOf (Path.DirectorySeparatorChar) + 1);  		int i;  		for (i = 0; i < currFolder.folders.Count; i++) {  			if (currFolder.folders [i].name == folderName) {  				newFolder = currFolder.folders [i];  				break;  			}  		}  		if (!(newFolder.name is String))  			goto Create_Folder;  		pathFolder += Path.DirectorySeparatorChar + newFolder.name;  		newFolder = Recursive_GetDirectories (file' newFolder' pathFolder' relativePath);  		currFolder.folders [i] = newFolder;  		return currFolder;  	}  	Create_Folder:  	newFolder.name = file.Replace (relativePath + pathFolder' "");  	newFolder.name = newFolder.name.Substring (1' newFolder.name.Substring (2).IndexOf (Path.DirectorySeparatorChar) + 1);  	if (!(currFolder.folders is List<sFolder>))  		currFolder.folders = new List<sFolder> ();  	pathFolder += Path.DirectorySeparatorChar + newFolder.name;  	newFolder = Recursive_GetDirectories (file' newFolder' pathFolder' relativePath);  	currFolder.folders.Add (newFolder);  	return currFolder;  }  
Magic Number,NotManagedNetPlugins,Helper,D:\newReposJune17\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\Helper.cs,Recursive_GetDirectories,The following statement contains a magic number: if (currFolder.folders is List<sFolder>) {  	string folderName = file.Replace (relativePath + pathFolder' "");  	folderName = folderName.Substring (1' folderName.Substring (2).IndexOf (Path.DirectorySeparatorChar) + 1);  	int i;  	for (i = 0; i < currFolder.folders.Count; i++) {  		if (currFolder.folders [i].name == folderName) {  			newFolder = currFolder.folders [i];  			break;  		}  	}  	if (!(newFolder.name is String))  		goto Create_Folder;  	pathFolder += Path.DirectorySeparatorChar + newFolder.name;  	newFolder = Recursive_GetDirectories (file' newFolder' pathFolder' relativePath);  	currFolder.folders [i] = newFolder;  	return currFolder;  }  
Magic Number,NotManagedNetPlugins,Helper,D:\newReposJune17\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\Helper.cs,Recursive_GetDirectories,The following statement contains a magic number: folderName = folderName.Substring (1' folderName.Substring (2).IndexOf (Path.DirectorySeparatorChar) + 1);  
Magic Number,NotManagedNetPlugins,Helper,D:\newReposJune17\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\Helper.cs,Recursive_GetDirectories,The following statement contains a magic number: newFolder.name = newFolder.name.Substring (1' newFolder.name.Substring (2).IndexOf (Path.DirectorySeparatorChar) + 1);  
Missing Default,NotManagedNetPlugins,GamePlugins,D:\newReposJune17\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\GamePlugins.cs,Get_Format,The following switch statement is missing a default case: switch (pluginLoaded) {  case 0:  	IntPtr p = XGetFormat (file.name' file.id);  	string c = Marshal.PtrToStringAnsi (p);  	return Helper.StringToFormat (c);  }  
Missing Default,NotManagedNetPlugins,GamePlugins,D:\newReposJune17\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\GamePlugins.cs,Unpack,The following switch statement is missing a default case: switch (pluginLoaded) {  case 0:  	if (file.id == 0x15) {  		int num = 0;  		bool b = XDecompress (file.path' pluginHost.Search_File (0x16)' pluginHost.Search_File (0x17)' file.id.ToString ()' &num);  		String txtfile = pluginHost.Get_TempFolder () + Path.DirectorySeparatorChar + "tinke_file_list.txt";  		sFolder decompressedFolder = Helper.Get_DecompressedFiles (txtfile' num' pluginHost);  		return decompressedFolder;  	}  	break;  }  
