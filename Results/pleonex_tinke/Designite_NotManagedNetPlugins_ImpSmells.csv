Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NotManagedNetPlugins,Helper,C:\research\architectureSmells\repos\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\Helper.cs,Recursive_GetDirectories,Cyclomatic complexity of the method is 8
Complex Method,NotManagedNetPlugins,Helper,C:\research\architectureSmells\repos\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\Helper.cs,StringToFormat,Cyclomatic complexity of the method is 16
Long Parameter List,NotManagedNetPlugins,GamePlugins,C:\research\architectureSmells\repos\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\GamePlugins.cs,XDecompress,The method has 5 parameters. Parameters: file1' file2' file3' id' num_files
Missing Default,NotManagedNetPlugins,GamePlugins,C:\research\architectureSmells\repos\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\GamePlugins.cs,Get_Format,The following switch statement is missing a default case: switch (pluginLoaded)              {                  case 0:                      IntPtr p = XGetFormat(file.name' file.id);                      string c = Marshal.PtrToStringAnsi(p);                      return Helper.StringToFormat(c);              }
Missing Default,NotManagedNetPlugins,GamePlugins,C:\research\architectureSmells\repos\pleonex_tinke\Plugins\NotManagedNetPlugins\NotManagedNetPlugins\GamePlugins.cs,Unpack,The following switch statement is missing a default case: switch (pluginLoaded)              {                  case 0:                      if (file.id == 0x15)                      {                          int num = 0;                          bool b = XDecompress(file.path' pluginHost.Search_File(0x16)' pluginHost.Search_File(0x17)' file.id.ToString()' &num);                            String txtfile = pluginHost.Get_TempFolder() + Path.DirectorySeparatorChar + "tinke_file_list.txt";                          sFolder decompressedFolder = Helper.Get_DecompressedFiles(txtfile' num' pluginHost);                            return decompressedFolder;                      }                      break;              }
