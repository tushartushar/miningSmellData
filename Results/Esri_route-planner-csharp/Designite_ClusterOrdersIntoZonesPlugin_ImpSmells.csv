Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ClusterOrdersIntoZonesPlugin,ClusterOrdersIntoZonesCmd,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ClusterOrdersIntoZonesCmd.cs,Execute,Cyclomatic complexity of the method is 17
Complex Method,ClusterOrdersIntoZonesPlugin,ClusterOrdersIntoZonesCmd,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ClusterOrdersIntoZonesCmd.cs,cluster,Cyclomatic complexity of the method is 16
Complex Method,ClusterOrdersIntoZonesPlugin,ConvexPolygon,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ConvexPolygon.cs,sort,Cyclomatic complexity of the method is 8
Long Statement,ClusterOrdersIntoZonesPlugin,ClusterOrdersIntoZonesCmd,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ClusterOrdersIntoZonesCmd.cs,Execute,The length of the statement  "	foreach (ESRI.ArcLogistics.DomainObjects.Schedule s in App.Current.Project.Schedules.Search (App.Current.CurrentDate)) { " is 120.
Long Statement,ClusterOrdersIntoZonesPlugin,ClusterOrdersIntoZonesCmd,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ClusterOrdersIntoZonesCmd.cs,Execute,The length of the statement  "		List<ESRI.ArcLogistics.DomainObjects.Order> oList = App.Current.Project.Orders.Search (App.Current.CurrentDate).ToList (); " is 122.
Magic Number,ClusterOrdersIntoZonesPlugin,ClusterOrdersIntoZonesCmd,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ClusterOrdersIntoZonesCmd.cs,Execute,The following statement contains a magic number: if (numRoutes > 0 && numOrders > numRoutes) {  	/////////////////////////////////  	// Create Dataset  	/////////////////////////////////  	Point2[] data = new Point2[numOrders];  	Point2[] centres = new Point2[numRoutes];  	List<ESRI.ArcLogistics.DomainObjects.Order> oList = App.Current.Project.Orders.Search (App.Current.CurrentDate).ToList ();  	for (int i = 0; i < numOrders; i++) {  		ESRI.ArcLogistics.DomainObjects.Order o = oList.ElementAt (i);  		Point2 p2 = new Point2 (0' o.GeoLocation.Value.X' o.GeoLocation.Value.Y);  		data [i] = p2;  	}  	/////////////////////////////////  	// Perform Clustering  	/////////////////////////////////  	int iterations = cluster (ref data' ref centres);  	/////////////////////////////////  	// Delete all previous zones from the project  	/////////////////////////////////  	for (int c = App.Current.Project.Zones.Count - 1; c >= 0; c--) {  		ESRI.ArcLogistics.DomainObjects.Zone z = App.Current.Project.Zones.ElementAt (c);  		App.Current.Project.Zones.Remove (z);  	}  	/////////////////////////////////  	// Delete all previous zones from the current day's routes  	/////////////////////////////////  	for (int j = 0; j < numRoutes; j++) {  		for (int c = schedule.Routes [j].Zones.Count - 1; c >= 0; c--) {  			ESRI.ArcLogistics.DomainObjects.Zone z = schedule.Routes [j].Zones.ElementAt (c);  			schedule.Routes [j].Zones.Remove (z);  		}  	}  	/////////////////////////////////  	// Find Convex Hull' create Soft Zones and assign them to routes  	/////////////////////////////////  	List<Point3>[] DataList = new List<Point3>[numRoutes];  	for (int j = 0; j < numRoutes; j++)  		DataList [j] = new List<Point3> ();  	for (int i = 0; i < numOrders; i++) {  		Point3 p3 = new Point3 (data [i].X' data [i].Y);  		DataList [data [i].cluster].Add (p3);  	}  	for (int j = 0; j < numRoutes; j++) {  		// Dont create zones for less than 3 orders   		if (DataList [j].Count <= 2)  			continue;  		// Get Convex Hull  		Point3[] chpts = ConvexPolygon.getConvexPolygon (DataList [j].ToArray ());  		// Convert Point3 array to Geometry Point array   		ESRI.ArcLogistics.Geometry.Point[] polyPoints = new ESRI.ArcLogistics.Geometry.Point[chpts.Length];  		for (int k = 0; k < chpts.Length; k++) {  			Point3 p3 = chpts [k];  			ESRI.ArcLogistics.Geometry.Point geoP = new ESRI.ArcLogistics.Geometry.Point ();  			geoP.X = p3.x;  			geoP.Y = p3.y;  			polyPoints [k] = geoP;  		}  		// Create soft zone' and add to Project and to a Route  		ESRI.ArcLogistics.Geometry.Polygon p = new ESRI.ArcLogistics.Geometry.Polygon (polyPoints);  		ESRI.ArcLogistics.DomainObjects.Zone z = new ESRI.ArcLogistics.DomainObjects.Zone ();  		z.CreationTime = DateTime.Now.Ticks;  		z.Geometry = p;  		z.Name = String.Format ("Zone {0}"' j + 1);  		App.Current.Project.Zones.Add (z);  		schedule.Routes [j].Zones.Add (z);  		schedule.Routes [j].HardZones = false;  	}  	App.Current.Project.Save ();  	statusMessage = "Finished clustering orders.";  	App.Current.Messenger.AddInfo (statusMessage);  } else {  	statusMessage = "";  	if (numOrders == 0)  		statusMessage = "No Orders found.";  	else if (numRoutes == 0)  		statusMessage = "No Routes found.";  	else if (numRoutes > numOrders)  		statusMessage = "Insufficient number of orders.";  	App.Current.Messenger.AddError (statusMessage);  }  
Magic Number,ClusterOrdersIntoZonesPlugin,ClusterOrdersIntoZonesCmd,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ClusterOrdersIntoZonesCmd.cs,Execute,The following statement contains a magic number: for (int j = 0; j < numRoutes; j++) {  	// Dont create zones for less than 3 orders   	if (DataList [j].Count <= 2)  		continue;  	// Get Convex Hull  	Point3[] chpts = ConvexPolygon.getConvexPolygon (DataList [j].ToArray ());  	// Convert Point3 array to Geometry Point array   	ESRI.ArcLogistics.Geometry.Point[] polyPoints = new ESRI.ArcLogistics.Geometry.Point[chpts.Length];  	for (int k = 0; k < chpts.Length; k++) {  		Point3 p3 = chpts [k];  		ESRI.ArcLogistics.Geometry.Point geoP = new ESRI.ArcLogistics.Geometry.Point ();  		geoP.X = p3.x;  		geoP.Y = p3.y;  		polyPoints [k] = geoP;  	}  	// Create soft zone' and add to Project and to a Route  	ESRI.ArcLogistics.Geometry.Polygon p = new ESRI.ArcLogistics.Geometry.Polygon (polyPoints);  	ESRI.ArcLogistics.DomainObjects.Zone z = new ESRI.ArcLogistics.DomainObjects.Zone ();  	z.CreationTime = DateTime.Now.Ticks;  	z.Geometry = p;  	z.Name = String.Format ("Zone {0}"' j + 1);  	App.Current.Project.Zones.Add (z);  	schedule.Routes [j].Zones.Add (z);  	schedule.Routes [j].HardZones = false;  }  
Magic Number,ClusterOrdersIntoZonesPlugin,ClusterOrdersIntoZonesCmd,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ClusterOrdersIntoZonesCmd.cs,Execute,The following statement contains a magic number: if (DataList [j].Count <= 2)  	continue;  
Magic Number,ClusterOrdersIntoZonesPlugin,ClusterOrdersIntoZonesCmd,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ClusterOrdersIntoZonesCmd.cs,cluster,The following statement contains a magic number: while (reiterate) {  	iterations++;  	if (iterations > 100)  		break;  	reiterate = false;  	for (int j = 0; j < Means.Length; j++) {  		sums [j].X = 0.0;  		sums [j].Y = 0.0;  		sums [j].count = 0;  	}  	int i;  	for (i = 0; i < data.Length; i++) {  		for (int j = 0; j < Means.Length; j++) {  			Dist [j] = Distance (data [i]' Means [j]);  		}  		for (int j = 0; j < Means.Length; j++) {  			if (Dist [j].Equals ((double)Dist.Min ()) && data [i].cluster != j) {  				reiterate = true;  				data [i].cluster = j;  				break;  			}  		}  		sums [data [i].cluster].X += data [i].X;  		sums [data [i].cluster].Y += data [i].Y;  		sums [data [i].cluster].count++;  	}  	for (int j = 0; j < Means.Length; j++) {  		if (sums [j].count > 0) {  			Means [j].X = sums [j].X / sums [j].count;  			Means [j].Y = sums [j].Y / sums [j].count;  			Means [j].count = sums [j].count;  		}  	}  }  
Magic Number,ClusterOrdersIntoZonesPlugin,ClusterOrdersIntoZonesCmd,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ClusterOrdersIntoZonesCmd.cs,cluster,The following statement contains a magic number: if (iterations > 100)  	break;  
Magic Number,ClusterOrdersIntoZonesPlugin,ClusterOrdersIntoZonesCmd,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ClusterOrdersIntoZonesCmd.cs,Distance,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((P2.Y - P1.Y)' 2) + Math.Pow ((P2.X - P1.X)' 2));  
Magic Number,ClusterOrdersIntoZonesPlugin,ClusterOrdersIntoZonesCmd,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ClusterOrdersIntoZonesCmd.cs,Distance,The following statement contains a magic number: return Math.Sqrt (Math.Pow ((P2.Y - P1.Y)' 2) + Math.Pow ((P2.X - P1.X)' 2));  
Magic Number,ClusterOrdersIntoZonesPlugin,ConvexPolygon,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ConvexPolygon.cs,sort,The following statement contains a magic number: if (start < end) {  	int i = start;  	int j = end;  	Point3 x = Points [(i + j) / 2];  	do {  		while (Points [i].Smaller (x))  			i++;  		while (x.Smaller (Points [j]))  			j--;  		if (i <= j) {  			Point3 temp = Points [i];  			Points [i] = Points [j];  			Points [j] = temp;  			i++;  			j--;  		}  	} while (i <= j);  	sort (ref Points' start' j);  	sort (ref Points' i' end);  }  
Magic Number,ClusterOrdersIntoZonesPlugin,ConvexPolygon,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ConvexPolygon.cs,increase1pc,The following statement contains a magic number: for (int i = 0; i < points.Length; i++) {  	points [i].x += (points [i].x - cent.x) * .01;  	points [i].y += (points [i].y - cent.y) * .01;  }  
Magic Number,ClusterOrdersIntoZonesPlugin,ConvexPolygon,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ConvexPolygon.cs,increase1pc,The following statement contains a magic number: for (int i = 0; i < points.Length; i++) {  	points [i].x += (points [i].x - cent.x) * .01;  	points [i].y += (points [i].y - cent.y) * .01;  }  
Magic Number,ClusterOrdersIntoZonesPlugin,ConvexPolygon,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ConvexPolygon.cs,increase1pc,The following statement contains a magic number: points [i].x += (points [i].x - cent.x) * .01;  
Magic Number,ClusterOrdersIntoZonesPlugin,ConvexPolygon,F:\newReposMay17\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\ClusterOrdersIntoZonesPlugin\Source\ConvexPolygon.cs,increase1pc,The following statement contains a magic number: points [i].y += (points [i].y - cent.y) * .01;  
