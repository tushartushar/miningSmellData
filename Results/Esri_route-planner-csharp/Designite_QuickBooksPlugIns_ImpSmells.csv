Implementation smell,Namespace,Class,File,Method,Description
Long Method,QuickBooksPlugIns,ImportOrdersFromInvoicesCmd,D:\research\architectureSmells\repos\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\QuickBooksPlugin\Source\ImportOrdersFromInvoicesCmd.cs,MakeOrderFromInvoice,The method has 122 lines of code.
Complex Method,QuickBooksPlugIns,ImportOrdersFromInvoicesCmd,D:\research\architectureSmells\repos\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\QuickBooksPlugin\Source\ImportOrdersFromInvoicesCmd.cs,MakeOrderFromInvoice,Cyclomatic complexity of the method is 20
Long Statement,QuickBooksPlugIns,ImportOrdersFromInvoicesCmd,D:\research\architectureSmells\repos\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\QuickBooksPlugin\Source\ImportOrdersFromInvoicesCmd.cs,QueryInvoices,The length of the statement  "            pInvFilter.ORDateRangeFilter.TxnDateRangeFilter.ORTxnDateRangeFilter.TxnDateFilter.FromTxnDate.SetValue(m_application.CurrentDate); " is 131.
Long Statement,QuickBooksPlugIns,ImportOrdersFromInvoicesCmd,D:\research\architectureSmells\repos\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\QuickBooksPlugin\Source\ImportOrdersFromInvoicesCmd.cs,QueryInvoices,The length of the statement  "            pInvFilter.ORDateRangeFilter.TxnDateRangeFilter.ORTxnDateRangeFilter.TxnDateFilter.ToTxnDate.SetValue(m_application.CurrentDate); " is 129.
Long Statement,QuickBooksPlugIns,ImportOrdersFromInvoicesCmd,D:\research\architectureSmells\repos\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\QuickBooksPlugin\Source\ImportOrdersFromInvoicesCmd.cs,getLatestMsgSetRequest,The length of the statement  "                // MessageBox.Show("It seems that you are running QuickBooks 2002 Release 1. We strongly recommend that you use QuickBooks' online update feature to obtain the latest fixes and enhancements"); " is 192.
Magic Number,QuickBooksPlugIns,ImportOrdersFromInvoicesCmd,D:\research\architectureSmells\repos\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\QuickBooksPlugin\Source\ImportOrdersFromInvoicesCmd.cs,getLatestMsgSetRequest,The following statement contains a magic number: qbXMLMajorVer = 6;
Magic Number,QuickBooksPlugIns,ImportOrdersFromInvoicesCmd,D:\research\architectureSmells\repos\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\QuickBooksPlugin\Source\ImportOrdersFromInvoicesCmd.cs,getLatestMsgSetRequest,The following statement contains a magic number: supportedVersion >= 6.0
Missing Default,QuickBooksPlugIns,ImportOrdersFromInvoicesCmd,D:\research\architectureSmells\repos\Esri_route-planner-csharp\RoutePlanner_DeveloperTools\Plugin SDK 1.10\Sample Plugins\QuickBooksPlugin\Source\ImportOrdersFromInvoicesCmd.cs,MakeOrderFromInvoice,The following switch statement is missing a default case: switch (orItemRet.ortype)                          {                              case ENORItemRet.orirItemServiceRet:                                  {                                      // orir prefix comes from OR + Item + Ret                                      IItemServiceRet ItemServiceRet = orItemRet.ItemServiceRet;                                      custItemFieldsRetList = ItemServiceRet.DataExtRetList;                                  }                                  break;                              case ENORItemRet.orirItemInventoryRet:                                  {                                      IItemInventoryRet ItemInventoryRet = orItemRet.ItemInventoryRet;                                      custItemFieldsRetList = ItemInventoryRet.DataExtRetList;                                  }                                  break;                              case ENORItemRet.orirItemNonInventoryRet:                                  {                                      IItemNonInventoryRet ItemNonInventoryRet = orItemRet.ItemNonInventoryRet;                                      custItemFieldsRetList = ItemNonInventoryRet.DataExtRetList;                                  }                                  break;                          }
