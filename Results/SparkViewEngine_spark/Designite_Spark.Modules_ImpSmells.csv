Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Spark.Modules,WebPackageManager,C:\repos\SparkViewEngine_spark\src\Samples\Modules\Spark.Modules\WebPackageManager.cs,LocatePackages,The length of the statement  "            foreach(var assemblyName in Directory.GetFiles(searchPath' "*.dll").Select(path=>Path.GetFileNameWithoutExtension(path))) " is 121.
Magic Number,Spark.Modules,EmbeddedContentHttpHandler,C:\repos\SparkViewEngine_spark\src\Samples\Modules\Spark.Modules\EmbeddedContentRouteHandler.cs,ProcessRequest,The following statement contains a magic number: using (var stream = _routeHandler.GetStream(resource))                  {                      var buffer = new byte[1024];                      for (; ; )                      {                          var size = stream.Read(buffer' 0' buffer.Length);                          if (size == 0)                              break;                          context.Response.OutputStream.Write(buffer' 0' size);                      }                  }
Missing Default,Spark.Modules,EmbeddedContentHttpHandler,C:\repos\SparkViewEngine_spark\src\Samples\Modules\Spark.Modules\EmbeddedContentRouteHandler.cs,ProcessRequest,The following switch statement is missing a default case: switch (Path.GetExtension(resource))                  {                      case ".css":                          context.Response.ContentType = "text/css";                          break;                      case ".js":                          context.Response.ContentType = "application/x-javascript";                          break;                      case ".png":                          context.Response.ContentType = "image/png";                          break;                      case ".gif":                          context.Response.ContentType = "image/gif";                          break;                      case ".jpg":                          context.Response.ContentType = "image/jpeg";                          break;                      case ".bmp":                          context.Response.ContentType = "image/bmp";                          break;                  }
