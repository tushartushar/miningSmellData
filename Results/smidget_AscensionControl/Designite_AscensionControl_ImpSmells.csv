Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToMultipleFiles,Cyclomatic complexity of the method is 10
Complex Method,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToMultipleFiles,Cyclomatic complexity of the method is 9
Complex Method,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToCSVOneFile,Cyclomatic complexity of the method is 10
Complex Method,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToCSVOneFile,Cyclomatic complexity of the method is 9
Long Parameter List,AscensionControl,Trial_PreMongo,C:\repos\smidget_AscensionControl\AscensionControl\Trial_PreMongo.cs,Trial_PreMongo,The method has 5 parameters.
Long Parameter List,AscensionControl,DataPoint,C:\repos\smidget_AscensionControl\AscensionControl\DataPoint.cs,DataPoint,The method has 8 parameters.
Long Parameter List,AscensionControl,SensorReading,C:\repos\smidget_AscensionControl\AscensionControl\SensorReading.cs,SensorReading,The method has 6 parameters.
Long Parameter List,AscensionControl,Trial,C:\repos\smidget_AscensionControl\AscensionControl\Trial.cs,Trial,The method has 5 parameters.
Long Parameter List,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The method has 5 parameters.
Long Statement,AscensionControl,DatabaseControl,C:\repos\smidget_AscensionControl\AscensionControl\DatabaseControl.cs,GetSubjects,The length of the statement  "	ObservableCollection<Subject> subjectsSort = new ObservableCollection<Subject> (subjects.OrderBy (subject => subject.id)); " is 122.
Long Statement,AscensionControl,DatabaseControl,C:\repos\smidget_AscensionControl\AscensionControl\DatabaseControl.cs,GetSessions,The length of the statement  "	ObservableCollection<Session> sessionsSort = new ObservableCollection<Session> (sessions.OrderBy (session => session.name)); " is 124.
Long Statement,AscensionControl,DatabaseControl,C:\repos\smidget_AscensionControl\AscensionControl\DatabaseControl.cs,GetTrials,The length of the statement  "	var query = Query.And (Query.EQ ("study._id"' session.study._Id)' Query.EQ ("subject._id"' session.subject._Id)' Query.EQ ("session._id"' session._Id)); " is 152.
Long Statement,AscensionControl,DatabaseControl,C:\repos\smidget_AscensionControl\AscensionControl\DatabaseControl.cs,RemoveTrial,The length of the statement  "	var query = Query.And (Query.EQ ("study._id"' trial.study._Id)' Query.EQ ("subject._id"' trial.subject._Id)' Query.EQ ("session._id"' trial.session._Id)' Query.EQ ("trial._id"' trial._Id)); " is 189.
Long Statement,AscensionControl,DatabaseControl,C:\repos\smidget_AscensionControl\AscensionControl\DatabaseControl.cs,GetSensorReadings,The length of the statement  "	var query = Query.And (Query.EQ ("study._id"' trial.study._Id)' Query.EQ ("subject._id"' trial.subject._Id)' Query.EQ ("session._id"' trial.session._Id)' Query.EQ ("trial._id"' trial._Id)); " is 189.
Long Statement,AscensionControl,DatabaseControl,C:\repos\smidget_AscensionControl\AscensionControl\DatabaseControl.cs,AddSensorReading,The length of the statement  "	logfile.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' sub.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off)); " is 187.
Long Statement,AscensionControl,DatabaseControl,C:\repos\smidget_AscensionControl\AscensionControl\DatabaseControl.cs,AddSensorReading,The length of the statement  "			logfile.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time)); " is 266.
Long Statement,AscensionControl,DatabaseControl,C:\repos\smidget_AscensionControl\AscensionControl\DatabaseControl.cs,RemoveSensorReading,The length of the statement  "	var query = Query.And (Query.EQ ("study._id"' s.study._Id)' Query.EQ ("subject._id"' s.subject._Id)' Query.EQ ("session._id"' s.session._Id)' Query.EQ ("trial._id"' s.trial._Id)); " is 179.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToMultipleFiles,The length of the statement  "	string header = "StudyName'SubjectID'SessionName'SessionDate'TrialName'SessionSync1.Onset'SessionSync1.Offset'SessionSync2.Onset'SessionSync2.Offset'"; " is 151.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToMultipleFiles,The length of the statement  "		header += string.Format ("Sensor{0}.ID'Sensor{0}.Time'Sensor{0}.Switch'Sensor{0}.X'Sensor{0}.Y'Sensor{0}.Z'Sensor{0}.Pitch'Sensor{0}.Roll'Sensor{0}.Yaw'Sensor{0}.quality'"' i); " is 176.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToMultipleFiles,The length of the statement  "						file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' sub.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off)); " is 184.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToMultipleFiles,The length of the statement  "								file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time)); " is 263.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToMultipleFiles,The length of the statement  "	string header = "StudyName'SubjectID'SessionName'SessionDate'TrialName'SessionSync1.Onset'SessionSync1.Offset'SessionSync2.Onset'SessionSync2.Offset'"; " is 151.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToMultipleFiles,The length of the statement  "		header += string.Format ("Sensor{0}.ID'Sensor{0}.Time'Sensor{0}.Switch'Sensor{0}.X'Sensor{0}.Y'Sensor{0}.Z'Sensor{0}.Pitch'Sensor{0}.Roll'Sensor{0}.Yaw'Sensor{0}.quality'"' i); " is 176.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToMultipleFiles,The length of the statement  "					file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' subject.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off)); " is 188.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToMultipleFiles,The length of the statement  "							file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time)); " is 263.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToCSVOneFile,The length of the statement  "	string header = "StudyName'SubjectID'SessionName'SessionDate'TrialName'SessionSync1.Onset'SessionSync1.Offset'SessionSync2.Onset'SessionSync2.Offset'"; " is 151.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToCSVOneFile,The length of the statement  "		header += string.Format ("Sensor{0}.ID'Sensor{0}.Time'Sensor{0}.Switch'Sensor{0}.X'Sensor{0}.Y'Sensor{0}.Z'Sensor{0}.Pitch'Sensor{0}.Roll'Sensor{0}.Yaw'Sensor{0}.quality'"' i); " is 176.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToCSVOneFile,The length of the statement  "						file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' sub.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off)); " is 184.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToCSVOneFile,The length of the statement  "								file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time)); " is 263.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToCSVOneFile,The length of the statement  "	string header = "StudyName'SubjectID'SessionName'SessionDate'TrialName'SessionSync1.Onset'SessionSync1.Offset'SessionSync2.Onset'SessionSync2.Offset'"; " is 151.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToCSVOneFile,The length of the statement  "		header += string.Format ("Sensor{0}.ID'Sensor{0}.Time'Sensor{0}.Switch'Sensor{0}.X'Sensor{0}.Y'Sensor{0}.Z'Sensor{0}.Pitch'Sensor{0}.Roll'Sensor{0}.Yaw'Sensor{0}.quality'"' i); " is 176.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToCSVOneFile,The length of the statement  "					file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' subject.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off)); " is 188.
Long Statement,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToCSVOneFile,The length of the statement  "							file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time)); " is 263.
Long Statement,AscensionControl,SensorReading,C:\repos\smidget_AscensionControl\AscensionControl\SensorReading.cs,ToString,The length of the statement  "			s += string.Format ("SENSOR {0} | BUT: {8} | X: {1:0.00} | Y: {2:0.00} | Z: {3:0.00} | PITCH: {4:0.00} | ROLL: {5:0.00} | YAW: {6:0.00} | QUALITY: {7}\n"' i' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].button); " is 298.
Long Statement,AscensionControl,SensorReading,C:\repos\smidget_AscensionControl\AscensionControl\SensorReading.cs,ToString,The length of the statement  "		double d = Math.Sqrt (Math.Pow (sensors [1].x - sensors [0].x' 2) + Math.Pow (sensors [1].y - sensors [0].y' 2) + Math.Pow (sensors [1].z - sensors [0].z' 2)); " is 159.
Long Statement,AscensionControl,SensorReading,C:\repos\smidget_AscensionControl\AscensionControl\SensorReading.cs,ToCSV,The length of the statement  "			s += string.Format ("{0}'{1:0.00}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7}'"' i' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality); " is 209.
Long Statement,AscensionControl,TrackerInterface,C:\repos\smidget_AscensionControl\AscensionControl\TrackerInterface.cs,InitializeTrackerWrapper,The length of the statement  "	//    Console.WriteLine("{3} X: {0} Y: {1} Z: {2}' Q: {4}' P: {5}' YAW: {6}' R: {7}' T: {8}"' record.x[0]' record.y[0]' record.z[0]' record.idnum' record.quality[0]' record.pitch[0]' record.yaw[0]' record.roll[0]' record.time[0]); " is 230.
Long Statement,AscensionControl,TrackerInterface,C:\repos\smidget_AscensionControl\AscensionControl\TrackerInterface.cs,InitializeTrackerWrapper,The length of the statement  "	//Console.WriteLine("Records per sec: {0}\nTotal Time: {1}"'  1000.0 / (sw.ElapsedMilliseconds / 1000.0)' sw.ElapsedMilliseconds / 1000.0); " is 139.
Long Statement,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,removeStudy_Click,The length of the statement  "		DialogResult result = MessageBox.Show ("Are you sure you want to delete this study?"' "Remove Study"' MessageBoxButtons.YesNo); " is 127.
Long Statement,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,addNewSubject_Click,The length of the statement  "		DialogResult result = MainInterface.InputBox3 ("New Subject"' "New Subject ID:"' "New Subject Birthdate:"' "New Subject Gender:"' ref values); " is 142.
Long Statement,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,removeSubject_Click,The length of the statement  "		DialogResult result = MessageBox.Show ("Are you sure you want to delete this subject?"' "Remove Subject"' MessageBoxButtons.YesNo); " is 131.
Long Statement,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,loadTracker_Click,The length of the statement  "	trackerinterface = new TrackerInterface (Convert.ToDouble (samplingFreq.Text) / 3.0' Convert.ToDouble (radiusSettings.SelectedValue)' this); " is 140.
Long Statement,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,nextTrial_Click,The length of the statement  "		Trial t = new Trial (Convert.ToString (numVal + 1)' DateTime.Now.ToString ("H:mm:ss")' currentStudy' currentSubject' currentSession); " is 133.
Long Statement,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,removeSession_Click,The length of the statement  "		DialogResult result = MessageBox.Show ("Are you sure you want to delete this session?"' "Remove Session"' MessageBoxButtons.YesNo); " is 131.
Long Statement,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,removeTrial_Click,The length of the statement  "		DialogResult result = MessageBox.Show ("Are you sure you want to delete this trial?"' "Remove Session"' MessageBoxButtons.YesNo); " is 129.
Long Statement,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,exportSubjectByTrialButton_Click,The length of the statement  "			bw.DoWork += (_sender' _e) => _e.Result = runExportSubjectByTrial (database' currentStudy' currentSubject' sp.SelectedPath); " is 124.
Magic Number,AscensionControl,DatabaseControl,C:\repos\smidget_AscensionControl\AscensionControl\DatabaseControl.cs,DatabaseControl,The following statement contains a magic number: for (int i = 0; i < 16; i++) {  	header += string.Format ("Sensor{0}.ID'Sensor{0}.Time'Sensor{0}.Switch'Sensor{0}.X'Sensor{0}.Y'Sensor{0}.Z'Sensor{0}.Pitch'Sensor{0}.Roll'Sensor{0}.yaw'Sensor{0}.quality'"' i);  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToMultipleFiles,The following statement contains a magic number: for (int i = 0; i < 15; i++) {  	header += string.Format ("Sensor{0}.ID'Sensor{0}.Time'Sensor{0}.Switch'Sensor{0}.X'Sensor{0}.Y'Sensor{0}.Z'Sensor{0}.Pitch'Sensor{0}.Roll'Sensor{0}.Yaw'Sensor{0}.quality'"' i);  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToMultipleFiles,The following statement contains a magic number: foreach (Subject sub in db.GetSubjects (study)) {  	foreach (Session sess in db.GetSessions (sub)) {  		foreach (Trial trial in db.GetTrials (sess)) {  			Console.WriteLine ("Dumping trial : " + trial.name);  			string filename = directory + "\\" + study.name + "-" + sub.id + "-" + sess.name + "-" + trial.name + ".csv";  			status = string.Format ("{0} - {1} - {2} - {3}"' study.name' sub.id' sess.name' trial.name);  			using (System.IO.StreamWriter file = new System.IO.StreamWriter (@filename)) {  				file.Write (header + "\n");  				int total = db.GetSensorReadings (trial).Count ();  				int count = 0;  				foreach (SensorReading pt in db.GetSensorReadings (trial)) {  					count++;  					percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  					Sensor[] sensors = pt.sensors;  					// Append study/sub/sess/trial data  					file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' sub.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  					for (int i = 0; i < sensors.Length; i++) {  						if (sensors [i].active == 1) {  							// Append sensor data whether sensor is active or not  							file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  						}  						else {  							// If the sensor wasn't active then append a blank filler  							file.Write ("''''''''''");  						}  					}  					file.Write ("\n");  				}  			}  			percent = 0;  		}  	}  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToMultipleFiles,The following statement contains a magic number: foreach (Session sess in db.GetSessions (sub)) {  	foreach (Trial trial in db.GetTrials (sess)) {  		Console.WriteLine ("Dumping trial : " + trial.name);  		string filename = directory + "\\" + study.name + "-" + sub.id + "-" + sess.name + "-" + trial.name + ".csv";  		status = string.Format ("{0} - {1} - {2} - {3}"' study.name' sub.id' sess.name' trial.name);  		using (System.IO.StreamWriter file = new System.IO.StreamWriter (@filename)) {  			file.Write (header + "\n");  			int total = db.GetSensorReadings (trial).Count ();  			int count = 0;  			foreach (SensorReading pt in db.GetSensorReadings (trial)) {  				count++;  				percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  				Sensor[] sensors = pt.sensors;  				// Append study/sub/sess/trial data  				file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' sub.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  				for (int i = 0; i < sensors.Length; i++) {  					if (sensors [i].active == 1) {  						// Append sensor data whether sensor is active or not  						file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  					}  					else {  						// If the sensor wasn't active then append a blank filler  						file.Write ("''''''''''");  					}  				}  				file.Write ("\n");  			}  		}  		percent = 0;  	}  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToMultipleFiles,The following statement contains a magic number: foreach (Trial trial in db.GetTrials (sess)) {  	Console.WriteLine ("Dumping trial : " + trial.name);  	string filename = directory + "\\" + study.name + "-" + sub.id + "-" + sess.name + "-" + trial.name + ".csv";  	status = string.Format ("{0} - {1} - {2} - {3}"' study.name' sub.id' sess.name' trial.name);  	using (System.IO.StreamWriter file = new System.IO.StreamWriter (@filename)) {  		file.Write (header + "\n");  		int total = db.GetSensorReadings (trial).Count ();  		int count = 0;  		foreach (SensorReading pt in db.GetSensorReadings (trial)) {  			count++;  			percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  			Sensor[] sensors = pt.sensors;  			// Append study/sub/sess/trial data  			file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' sub.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  			for (int i = 0; i < sensors.Length; i++) {  				if (sensors [i].active == 1) {  					// Append sensor data whether sensor is active or not  					file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  				}  				else {  					// If the sensor wasn't active then append a blank filler  					file.Write ("''''''''''");  				}  			}  			file.Write ("\n");  		}  	}  	percent = 0;  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToMultipleFiles,The following statement contains a magic number: using (System.IO.StreamWriter file = new System.IO.StreamWriter (@filename)) {  	file.Write (header + "\n");  	int total = db.GetSensorReadings (trial).Count ();  	int count = 0;  	foreach (SensorReading pt in db.GetSensorReadings (trial)) {  		count++;  		percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  		Sensor[] sensors = pt.sensors;  		// Append study/sub/sess/trial data  		file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' sub.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  		for (int i = 0; i < sensors.Length; i++) {  			if (sensors [i].active == 1) {  				// Append sensor data whether sensor is active or not  				file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  			}  			else {  				// If the sensor wasn't active then append a blank filler  				file.Write ("''''''''''");  			}  		}  		file.Write ("\n");  	}  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToMultipleFiles,The following statement contains a magic number: foreach (SensorReading pt in db.GetSensorReadings (trial)) {  	count++;  	percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  	Sensor[] sensors = pt.sensors;  	// Append study/sub/sess/trial data  	file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' sub.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  	for (int i = 0; i < sensors.Length; i++) {  		if (sensors [i].active == 1) {  			// Append sensor data whether sensor is active or not  			file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  		}  		else {  			// If the sensor wasn't active then append a blank filler  			file.Write ("''''''''''");  		}  	}  	file.Write ("\n");  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToMultipleFiles,The following statement contains a magic number: percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToMultipleFiles,The following statement contains a magic number: for (int i = 0; i < 15; i++) {  	header += string.Format ("Sensor{0}.ID'Sensor{0}.Time'Sensor{0}.Switch'Sensor{0}.X'Sensor{0}.Y'Sensor{0}.Z'Sensor{0}.Pitch'Sensor{0}.Roll'Sensor{0}.Yaw'Sensor{0}.quality'"' i);  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToMultipleFiles,The following statement contains a magic number: foreach (Session sess in db.GetSessions (subject)) {  	foreach (Trial trial in db.GetTrials (sess)) {  		Console.WriteLine ("Dumping trial : " + trial.name);  		string filename = directory + "\\" + study.name + "-" + subject.id + "-" + sess.name + "-" + trial.name + ".csv";  		status = string.Format ("{0} - {1} - {2} - {3}"' study.name' subject.id' sess.name' trial.name);  		using (System.IO.StreamWriter file = new System.IO.StreamWriter (@filename)) {  			file.Write (header + "\n");  			int total = db.GetSensorReadings (trial).Count ();  			int count = 0;  			foreach (SensorReading pt in db.GetSensorReadings (trial)) {  				count++;  				percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  				Sensor[] sensors = pt.sensors;  				// Append study/sub/sess/trial data  				file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' subject.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  				for (int i = 0; i < sensors.Length; i++) {  					if (sensors [i].active == 1) {  						// Append sensor data whether sensor is active or not  						file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  					}  					else {  						// If the sensor wasn't active then append a blank filler  						file.Write ("''''''''''");  					}  				}  				file.Write ("\n");  			}  		}  		percent = 0;  	}  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToMultipleFiles,The following statement contains a magic number: foreach (Trial trial in db.GetTrials (sess)) {  	Console.WriteLine ("Dumping trial : " + trial.name);  	string filename = directory + "\\" + study.name + "-" + subject.id + "-" + sess.name + "-" + trial.name + ".csv";  	status = string.Format ("{0} - {1} - {2} - {3}"' study.name' subject.id' sess.name' trial.name);  	using (System.IO.StreamWriter file = new System.IO.StreamWriter (@filename)) {  		file.Write (header + "\n");  		int total = db.GetSensorReadings (trial).Count ();  		int count = 0;  		foreach (SensorReading pt in db.GetSensorReadings (trial)) {  			count++;  			percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  			Sensor[] sensors = pt.sensors;  			// Append study/sub/sess/trial data  			file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' subject.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  			for (int i = 0; i < sensors.Length; i++) {  				if (sensors [i].active == 1) {  					// Append sensor data whether sensor is active or not  					file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  				}  				else {  					// If the sensor wasn't active then append a blank filler  					file.Write ("''''''''''");  				}  			}  			file.Write ("\n");  		}  	}  	percent = 0;  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToMultipleFiles,The following statement contains a magic number: using (System.IO.StreamWriter file = new System.IO.StreamWriter (@filename)) {  	file.Write (header + "\n");  	int total = db.GetSensorReadings (trial).Count ();  	int count = 0;  	foreach (SensorReading pt in db.GetSensorReadings (trial)) {  		count++;  		percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  		Sensor[] sensors = pt.sensors;  		// Append study/sub/sess/trial data  		file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' subject.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  		for (int i = 0; i < sensors.Length; i++) {  			if (sensors [i].active == 1) {  				// Append sensor data whether sensor is active or not  				file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  			}  			else {  				// If the sensor wasn't active then append a blank filler  				file.Write ("''''''''''");  			}  		}  		file.Write ("\n");  	}  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToMultipleFiles,The following statement contains a magic number: foreach (SensorReading pt in db.GetSensorReadings (trial)) {  	count++;  	percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  	Sensor[] sensors = pt.sensors;  	// Append study/sub/sess/trial data  	file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' subject.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  	for (int i = 0; i < sensors.Length; i++) {  		if (sensors [i].active == 1) {  			// Append sensor data whether sensor is active or not  			file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  		}  		else {  			// If the sensor wasn't active then append a blank filler  			file.Write ("''''''''''");  		}  	}  	file.Write ("\n");  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToMultipleFiles,The following statement contains a magic number: percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToCSVOneFile,The following statement contains a magic number: for (int i = 0; i < 15; i++) {  	header += string.Format ("Sensor{0}.ID'Sensor{0}.Time'Sensor{0}.Switch'Sensor{0}.X'Sensor{0}.Y'Sensor{0}.Z'Sensor{0}.Pitch'Sensor{0}.Roll'Sensor{0}.Yaw'Sensor{0}.quality'"' i);  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToCSVOneFile,The following statement contains a magic number: using (System.IO.StreamWriter file = new System.IO.StreamWriter (@filename)) {  	file.Write (header + "\n");  	foreach (Subject sub in db.GetSubjects (study)) {  		foreach (Session sess in db.GetSessions (sub)) {  			foreach (Trial trial in db.GetTrials (sess)) {  				Console.WriteLine ("Dumping trial : " + trial.name);  				status = string.Format ("{0} - {1} - {2} - {3}"' study.name' sub.id' sess.name' trial.name);  				int total = db.GetSensorReadings (trial).Count ();  				int count = 0;  				foreach (SensorReading pt in db.GetSensorReadings (trial)) {  					count++;  					percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  					Sensor[] sensors = pt.sensors;  					// Append study/sub/sess/trial data  					file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' sub.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  					for (int i = 0; i < sensors.Length; i++) {  						if (sensors [i].active == 1) {  							// Append sensor data whether sensor is active or not  							file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  						}  						else {  							// If the sensor wasn't active then append a blank filler  							file.Write ("''''''''''");  						}  					}  					file.Write ("\n");  				}  				percent = 0;  			}  		}  	}  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToCSVOneFile,The following statement contains a magic number: foreach (Subject sub in db.GetSubjects (study)) {  	foreach (Session sess in db.GetSessions (sub)) {  		foreach (Trial trial in db.GetTrials (sess)) {  			Console.WriteLine ("Dumping trial : " + trial.name);  			status = string.Format ("{0} - {1} - {2} - {3}"' study.name' sub.id' sess.name' trial.name);  			int total = db.GetSensorReadings (trial).Count ();  			int count = 0;  			foreach (SensorReading pt in db.GetSensorReadings (trial)) {  				count++;  				percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  				Sensor[] sensors = pt.sensors;  				// Append study/sub/sess/trial data  				file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' sub.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  				for (int i = 0; i < sensors.Length; i++) {  					if (sensors [i].active == 1) {  						// Append sensor data whether sensor is active or not  						file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  					}  					else {  						// If the sensor wasn't active then append a blank filler  						file.Write ("''''''''''");  					}  				}  				file.Write ("\n");  			}  			percent = 0;  		}  	}  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToCSVOneFile,The following statement contains a magic number: foreach (Session sess in db.GetSessions (sub)) {  	foreach (Trial trial in db.GetTrials (sess)) {  		Console.WriteLine ("Dumping trial : " + trial.name);  		status = string.Format ("{0} - {1} - {2} - {3}"' study.name' sub.id' sess.name' trial.name);  		int total = db.GetSensorReadings (trial).Count ();  		int count = 0;  		foreach (SensorReading pt in db.GetSensorReadings (trial)) {  			count++;  			percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  			Sensor[] sensors = pt.sensors;  			// Append study/sub/sess/trial data  			file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' sub.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  			for (int i = 0; i < sensors.Length; i++) {  				if (sensors [i].active == 1) {  					// Append sensor data whether sensor is active or not  					file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  				}  				else {  					// If the sensor wasn't active then append a blank filler  					file.Write ("''''''''''");  				}  			}  			file.Write ("\n");  		}  		percent = 0;  	}  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToCSVOneFile,The following statement contains a magic number: foreach (Trial trial in db.GetTrials (sess)) {  	Console.WriteLine ("Dumping trial : " + trial.name);  	status = string.Format ("{0} - {1} - {2} - {3}"' study.name' sub.id' sess.name' trial.name);  	int total = db.GetSensorReadings (trial).Count ();  	int count = 0;  	foreach (SensorReading pt in db.GetSensorReadings (trial)) {  		count++;  		percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  		Sensor[] sensors = pt.sensors;  		// Append study/sub/sess/trial data  		file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' sub.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  		for (int i = 0; i < sensors.Length; i++) {  			if (sensors [i].active == 1) {  				// Append sensor data whether sensor is active or not  				file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  			}  			else {  				// If the sensor wasn't active then append a blank filler  				file.Write ("''''''''''");  			}  		}  		file.Write ("\n");  	}  	percent = 0;  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToCSVOneFile,The following statement contains a magic number: foreach (SensorReading pt in db.GetSensorReadings (trial)) {  	count++;  	percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  	Sensor[] sensors = pt.sensors;  	// Append study/sub/sess/trial data  	file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' sub.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  	for (int i = 0; i < sensors.Length; i++) {  		if (sensors [i].active == 1) {  			// Append sensor data whether sensor is active or not  			file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  		}  		else {  			// If the sensor wasn't active then append a blank filler  			file.Write ("''''''''''");  		}  	}  	file.Write ("\n");  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportStudyToCSVOneFile,The following statement contains a magic number: percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToCSVOneFile,The following statement contains a magic number: for (int i = 0; i < 15; i++) {  	header += string.Format ("Sensor{0}.ID'Sensor{0}.Time'Sensor{0}.Switch'Sensor{0}.X'Sensor{0}.Y'Sensor{0}.Z'Sensor{0}.Pitch'Sensor{0}.Roll'Sensor{0}.Yaw'Sensor{0}.quality'"' i);  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToCSVOneFile,The following statement contains a magic number: using (System.IO.StreamWriter file = new System.IO.StreamWriter (@filename)) {  	file.Write (header + "\n");  	foreach (Session sess in db.GetSessions (subject)) {  		foreach (Trial trial in db.GetTrials (sess)) {  			Console.WriteLine ("Dumping trial : " + trial.name);  			status = string.Format ("{0} - {1} - {2} - {3}"' study.name' subject.id' sess.name' trial.name);  			int total = db.GetSensorReadings (trial).Count ();  			int count = 0;  			foreach (SensorReading pt in db.GetSensorReadings (trial)) {  				count++;  				percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  				Sensor[] sensors = pt.sensors;  				// Append study/sub/sess/trial data  				file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' subject.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  				for (int i = 0; i < sensors.Length; i++) {  					if (sensors [i].active == 1) {  						// Append sensor data whether sensor is active or not  						file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  					}  					else {  						// If the sensor wasn't active then append a blank filler  						file.Write ("''''''''''");  					}  				}  				file.Write ("\n");  			}  			percent = 0;  		}  	}  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToCSVOneFile,The following statement contains a magic number: foreach (Session sess in db.GetSessions (subject)) {  	foreach (Trial trial in db.GetTrials (sess)) {  		Console.WriteLine ("Dumping trial : " + trial.name);  		status = string.Format ("{0} - {1} - {2} - {3}"' study.name' subject.id' sess.name' trial.name);  		int total = db.GetSensorReadings (trial).Count ();  		int count = 0;  		foreach (SensorReading pt in db.GetSensorReadings (trial)) {  			count++;  			percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  			Sensor[] sensors = pt.sensors;  			// Append study/sub/sess/trial data  			file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' subject.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  			for (int i = 0; i < sensors.Length; i++) {  				if (sensors [i].active == 1) {  					// Append sensor data whether sensor is active or not  					file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  				}  				else {  					// If the sensor wasn't active then append a blank filler  					file.Write ("''''''''''");  				}  			}  			file.Write ("\n");  		}  		percent = 0;  	}  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToCSVOneFile,The following statement contains a magic number: foreach (Trial trial in db.GetTrials (sess)) {  	Console.WriteLine ("Dumping trial : " + trial.name);  	status = string.Format ("{0} - {1} - {2} - {3}"' study.name' subject.id' sess.name' trial.name);  	int total = db.GetSensorReadings (trial).Count ();  	int count = 0;  	foreach (SensorReading pt in db.GetSensorReadings (trial)) {  		count++;  		percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  		Sensor[] sensors = pt.sensors;  		// Append study/sub/sess/trial data  		file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' subject.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  		for (int i = 0; i < sensors.Length; i++) {  			if (sensors [i].active == 1) {  				// Append sensor data whether sensor is active or not  				file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  			}  			else {  				// If the sensor wasn't active then append a blank filler  				file.Write ("''''''''''");  			}  		}  		file.Write ("\n");  	}  	percent = 0;  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToCSVOneFile,The following statement contains a magic number: foreach (SensorReading pt in db.GetSensorReadings (trial)) {  	count++;  	percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  	Sensor[] sensors = pt.sensors;  	// Append study/sub/sess/trial data  	file.Write (string.Format ("{0}'{1}'{2}'{3}'{4}'{5}'{6}'{7}'{8}"' study.name' subject.id' sess.name' sess.tdate' trial.name' sess.sync1_on' sess.sync1_off' sess.sync2_on' sess.sync2_off));  	for (int i = 0; i < sensors.Length; i++) {  		if (sensors [i].active == 1) {  			// Append sensor data whether sensor is active or not  			file.Write (string.Format ("'{0}'{9}'{1}'{2:0.00}'{3:0.00}'{4:0.00}'{5:0.00}'{6:0.00}'{7:0.00}'{8}"' i' sensors [i].button' sensors [i].x' sensors [i].y' sensors [i].z' sensors [i].pitch' sensors [i].roll' sensors [i].yaw' sensors [i].quality' sensors [i].time));  		}  		else {  			// If the sensor wasn't active then append a blank filler  			file.Write ("''''''''''");  		}  	}  	file.Write ("\n");  }  
Magic Number,AscensionControl,Exporter,C:\repos\smidget_AscensionControl\AscensionControl\Exporter.cs,ExportSubjectToCSVOneFile,The following statement contains a magic number: percent = Convert.ToInt32 (Math.Ceiling ((float)count / (float)total * 100.0));  
Magic Number,AscensionControl,SensorReading,C:\repos\smidget_AscensionControl\AscensionControl\SensorReading.cs,SensorReading,The following statement contains a magic number: sensors = new Sensor[32];  
Magic Number,AscensionControl,SensorReading,C:\repos\smidget_AscensionControl\AscensionControl\SensorReading.cs,SensorReading,The following statement contains a magic number: sensors = new Sensor[32];  
Magic Number,AscensionControl,SensorReading,C:\repos\smidget_AscensionControl\AscensionControl\SensorReading.cs,ToString,The following statement contains a magic number: if (sensors [0].active == 1 && sensors [1].active == 1) {  	double d = Math.Sqrt (Math.Pow (sensors [1].x - sensors [0].x' 2) + Math.Pow (sensors [1].y - sensors [0].y' 2) + Math.Pow (sensors [1].z - sensors [0].z' 2));  	s += string.Format ("\nDistance between 0 and 1: {0}\n"' d);  }  
Magic Number,AscensionControl,SensorReading,C:\repos\smidget_AscensionControl\AscensionControl\SensorReading.cs,ToString,The following statement contains a magic number: if (sensors [0].active == 1 && sensors [1].active == 1) {  	double d = Math.Sqrt (Math.Pow (sensors [1].x - sensors [0].x' 2) + Math.Pow (sensors [1].y - sensors [0].y' 2) + Math.Pow (sensors [1].z - sensors [0].z' 2));  	s += string.Format ("\nDistance between 0 and 1: {0}\n"' d);  }  
Magic Number,AscensionControl,SensorReading,C:\repos\smidget_AscensionControl\AscensionControl\SensorReading.cs,ToString,The following statement contains a magic number: if (sensors [0].active == 1 && sensors [1].active == 1) {  	double d = Math.Sqrt (Math.Pow (sensors [1].x - sensors [0].x' 2) + Math.Pow (sensors [1].y - sensors [0].y' 2) + Math.Pow (sensors [1].z - sensors [0].z' 2));  	s += string.Format ("\nDistance between 0 and 1: {0}\n"' d);  }  
Magic Number,AscensionControl,TrackerInterface,C:\repos\smidget_AscensionControl\AscensionControl\TrackerInterface.cs,GetRecord,The following statement contains a magic number: if (recordnum % 20 == 0 && sr != null) {  	m.sensorInfo.Invoke (new MainInterface.UpdateSensorInfoCallBack (m.UpdateSensorInfo)' new object[] {  		sr.ToString ()  	});  	m.qualityChart.Invoke (new MainInterface.UpdateQualityChartInfoCallBack (m.UpdateQualityChart)' new object[] {  		sr.GetActiveSensors ()'  		sr.GetQualityScores ()  	});  	m.syncstatus.Invoke (new MainInterface.UpdateSyncInfoCallBack (m.UpdateSyncInfo)' new object[] {  		sync  	});  }  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: label.SetBounds (9' 20' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: label.SetBounds (9' 20' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: label.SetBounds (9' 20' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: label.SetBounds (9' 20' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: textBox.SetBounds (12' 36' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: textBox.SetBounds (12' 36' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: textBox.SetBounds (12' 36' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: textBox.SetBounds (12' 36' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: buttonOk.SetBounds (228' 72' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: buttonOk.SetBounds (228' 72' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: buttonOk.SetBounds (228' 72' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: buttonOk.SetBounds (228' 72' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: buttonCancel.SetBounds (309' 72' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: buttonCancel.SetBounds (309' 72' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: buttonCancel.SetBounds (309' 72' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: buttonCancel.SetBounds (309' 72' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: form.ClientSize = new Size (396' 107);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: form.ClientSize = new Size (396' 107);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: form.ClientSize = new Size (Math.Max (300' label.Right + 10)' form.ClientSize.Height);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox,The following statement contains a magic number: form.ClientSize = new Size (Math.Max (300' label.Right + 10)' form.ClientSize.Height);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: label1.SetBounds (9' 20' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: label1.SetBounds (9' 20' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: label1.SetBounds (9' 20' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: label1.SetBounds (9' 20' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: textBox1.SetBounds (12' 36' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: textBox1.SetBounds (12' 36' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: textBox1.SetBounds (12' 36' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: textBox1.SetBounds (12' 36' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: label2.SetBounds (9' 60' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: label2.SetBounds (9' 60' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: label2.SetBounds (9' 60' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: label2.SetBounds (9' 60' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: textBox2.SetBounds (12' 76' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: textBox2.SetBounds (12' 76' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: textBox2.SetBounds (12' 76' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: textBox2.SetBounds (12' 76' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: buttonOk.SetBounds (228' 120' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: buttonOk.SetBounds (228' 120' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: buttonOk.SetBounds (228' 120' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: buttonOk.SetBounds (228' 120' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: buttonCancel.SetBounds (309' 120' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: buttonCancel.SetBounds (309' 120' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: buttonCancel.SetBounds (309' 120' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: buttonCancel.SetBounds (309' 120' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: form.ClientSize = new Size (396' 170);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: form.ClientSize = new Size (396' 170);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: form.ClientSize = new Size (Math.Max (300' label2.Right + 10)' form.ClientSize.Height);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox2,The following statement contains a magic number: form.ClientSize = new Size (Math.Max (300' label2.Right + 10)' form.ClientSize.Height);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: label1.SetBounds (9' 20' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: label1.SetBounds (9' 20' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: label1.SetBounds (9' 20' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: label1.SetBounds (9' 20' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: textBox1.SetBounds (12' 36' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: textBox1.SetBounds (12' 36' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: textBox1.SetBounds (12' 36' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: textBox1.SetBounds (12' 36' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: label2.SetBounds (9' 60' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: label2.SetBounds (9' 60' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: label2.SetBounds (9' 60' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: label2.SetBounds (9' 60' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: textBox2.SetBounds (12' 76' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: textBox2.SetBounds (12' 76' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: textBox2.SetBounds (12' 76' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: textBox2.SetBounds (12' 76' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: label3.SetBounds (9' 100' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: label3.SetBounds (9' 100' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: label3.SetBounds (9' 100' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: label3.SetBounds (9' 100' 372' 13);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: textBox3.SetBounds (12' 116' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: textBox3.SetBounds (12' 116' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: textBox3.SetBounds (12' 116' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: textBox3.SetBounds (12' 116' 372' 20);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: buttonOk.SetBounds (228' 150' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: buttonOk.SetBounds (228' 150' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: buttonOk.SetBounds (228' 150' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: buttonOk.SetBounds (228' 150' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: buttonCancel.SetBounds (309' 150' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: buttonCancel.SetBounds (309' 150' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: buttonCancel.SetBounds (309' 150' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: buttonCancel.SetBounds (309' 150' 75' 23);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: form.ClientSize = new Size (396' 200);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: form.ClientSize = new Size (396' 200);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: form.ClientSize = new Size (Math.Max (300' label2.Right + 10)' form.ClientSize.Height);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,InputBox3,The following statement contains a magic number: form.ClientSize = new Size (Math.Max (300' label2.Right + 10)' form.ClientSize.Height);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,addNewSubject_Click,The following statement contains a magic number: if (studyDisplay.SelectedIndex > -1) {  	DialogResult result = MainInterface.InputBox3 ("New Subject"' "New Subject ID:"' "New Subject Birthdate:"' "New Subject Gender:"' ref values);  	if (result == DialogResult.OK && values.Count > 0) {  		Subject s = new Subject (values [0]' values [1]' values [2]' currentStudy);  		database.AddSubject (s);  		subjectDisplay.DataSource = null;  		subjectDisplay.DataSource = database.GetSubjects (currentStudy);  		subjectDisplay.ClearSelected ();  		subjectDisplay.SetSelected (database.GetSubjectIndex (s)' true);  	}  	else if (result == DialogResult.OK) {  		MessageBox.Show ("Invalid study name.");  	}  }  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,addNewSubject_Click,The following statement contains a magic number: if (result == DialogResult.OK && values.Count > 0) {  	Subject s = new Subject (values [0]' values [1]' values [2]' currentStudy);  	database.AddSubject (s);  	subjectDisplay.DataSource = null;  	subjectDisplay.DataSource = database.GetSubjects (currentStudy);  	subjectDisplay.ClearSelected ();  	subjectDisplay.SetSelected (database.GetSubjectIndex (s)' true);  }  else if (result == DialogResult.OK) {  	MessageBox.Show ("Invalid study name.");  }  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,loadTracker_Click,The following statement contains a magic number: trackerinterface = new TrackerInterface (Convert.ToDouble (samplingFreq.Text) / 3.0' Convert.ToDouble (radiusSettings.SelectedValue)' this);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,ExportStudyButton_Click,The following statement contains a magic number: if (sp.ShowDialog () == DialogResult.OK) {  	// TODO: Commit task to BGWOrker  	ExportingProgress ep = new ExportingProgress ();  	ep.Show ();  	bw.DoWork += (_sender' _e) => _e.Result = runExportStudyByTrial (database' currentStudy' sp.SelectedPath);  	bw.RunWorkerAsync ();  	//exporter.ExportSubjectToCSVOneFile(database' currentStudy' currentSubject' sp.FileName);  	while (bw.IsBusy) {  		Thread.Sleep (100);  		ep.currentFileLabel.Text = exporter.status;  		ep.exportProgressBar.Update ();  		ep.exportProgressBar.Value = exporter.percent;  		ep.Update ();  		Application.DoEvents ();  	}  	ep.Hide ();  }  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,ExportStudyButton_Click,The following statement contains a magic number: while (bw.IsBusy) {  	Thread.Sleep (100);  	ep.currentFileLabel.Text = exporter.status;  	ep.exportProgressBar.Update ();  	ep.exportProgressBar.Value = exporter.percent;  	ep.Update ();  	Application.DoEvents ();  }  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,ExportStudyButton_Click,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,exportStudyOneFileButton_Click,The following statement contains a magic number: if (sp.ShowDialog () == DialogResult.OK) {  	// TODO: Commit task to BGWOrker  	ExportingProgress ep = new ExportingProgress ();  	ep.Show ();  	bw.DoWork += (_sender' _e) => _e.Result = runExportStudy (database' currentStudy' sp.FileName);  	bw.RunWorkerAsync ();  	//exporter.ExportSubjectToCSVOneFile(database' currentStudy' currentSubject' sp.FileName);  	while (bw.IsBusy) {  		Thread.Sleep (100);  		ep.exportProgressBar.Value = exporter.percent;  		ep.currentFileLabel.Text = exporter.status;  		ep.exportProgressBar.Update ();  		ep.Update ();  		Application.DoEvents ();  	}  	ep.Hide ();  }  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,exportStudyOneFileButton_Click,The following statement contains a magic number: while (bw.IsBusy) {  	Thread.Sleep (100);  	ep.exportProgressBar.Value = exporter.percent;  	ep.currentFileLabel.Text = exporter.status;  	ep.exportProgressBar.Update ();  	ep.Update ();  	Application.DoEvents ();  }  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,exportStudyOneFileButton_Click,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,exportSubjectByTrialButton_Click,The following statement contains a magic number: if (currentSubject != null) {  	FolderBrowserDialog sp = new FolderBrowserDialog ();  	sp.RootFolder = Environment.SpecialFolder.Desktop;  	if (sp.ShowDialog () == DialogResult.OK) {  		// TODO: Commit task to BGWOrker  		ExportingProgress ep = new ExportingProgress ();  		ep.Show ();  		ep.exportProgressBar.Style = ProgressBarStyle.Continuous;  		bw.DoWork += (_sender' _e) => _e.Result = runExportSubjectByTrial (database' currentStudy' currentSubject' sp.SelectedPath);  		bw.RunWorkerAsync ();  		//exporter.ExportSubjectToCSVOneFile(database' currentStudy' currentSubject' sp.FileName);  		while (bw.IsBusy) {  			Thread.Sleep (100);  			ep.currentFileLabel.Text = exporter.status;  			ep.exportProgressBar.Value = exporter.percent;  			ep.exportProgressBar.Update ();  			ep.Update ();  			Application.DoEvents ();  		}  		ep.Hide ();  	}  }  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,exportSubjectByTrialButton_Click,The following statement contains a magic number: if (sp.ShowDialog () == DialogResult.OK) {  	// TODO: Commit task to BGWOrker  	ExportingProgress ep = new ExportingProgress ();  	ep.Show ();  	ep.exportProgressBar.Style = ProgressBarStyle.Continuous;  	bw.DoWork += (_sender' _e) => _e.Result = runExportSubjectByTrial (database' currentStudy' currentSubject' sp.SelectedPath);  	bw.RunWorkerAsync ();  	//exporter.ExportSubjectToCSVOneFile(database' currentStudy' currentSubject' sp.FileName);  	while (bw.IsBusy) {  		Thread.Sleep (100);  		ep.currentFileLabel.Text = exporter.status;  		ep.exportProgressBar.Value = exporter.percent;  		ep.exportProgressBar.Update ();  		ep.Update ();  		Application.DoEvents ();  	}  	ep.Hide ();  }  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,exportSubjectByTrialButton_Click,The following statement contains a magic number: while (bw.IsBusy) {  	Thread.Sleep (100);  	ep.currentFileLabel.Text = exporter.status;  	ep.exportProgressBar.Value = exporter.percent;  	ep.exportProgressBar.Update ();  	ep.Update ();  	Application.DoEvents ();  }  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,exportSubjectByTrialButton_Click,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,exportSubjectButton_Click,The following statement contains a magic number: if (currentSubject != null) {  	SaveFileDialog sp = new SaveFileDialog ();  	sp.InitialDirectory = Environment.SpecialFolder.Desktop.ToString ();  	sp.Filter = "CSV File|*.csv";  	sp.Title = "Save study as one file.";  	if (sp.ShowDialog () == DialogResult.OK) {  		// TODO: Commit task to BGWOrker  		ExportingProgress ep = new ExportingProgress ();  		ep.Show ();  		bw.DoWork += (_sender' _e) => _e.Result = runExportSubject (database' currentStudy' currentSubject' sp.FileName);  		bw.RunWorkerAsync ();  		//exporter.ExportSubjectToCSVOneFile(database' currentStudy' currentSubject' sp.FileName);  		while (bw.IsBusy) {  			Thread.Sleep (100);  			ep.currentFileLabel.Text = exporter.status;  			ep.exportProgressBar.Value = exporter.percent;  			ep.exportProgressBar.Update ();  			ep.Update ();  			Application.DoEvents ();  		}  		ep.Hide ();  	}  }  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,exportSubjectButton_Click,The following statement contains a magic number: if (sp.ShowDialog () == DialogResult.OK) {  	// TODO: Commit task to BGWOrker  	ExportingProgress ep = new ExportingProgress ();  	ep.Show ();  	bw.DoWork += (_sender' _e) => _e.Result = runExportSubject (database' currentStudy' currentSubject' sp.FileName);  	bw.RunWorkerAsync ();  	//exporter.ExportSubjectToCSVOneFile(database' currentStudy' currentSubject' sp.FileName);  	while (bw.IsBusy) {  		Thread.Sleep (100);  		ep.currentFileLabel.Text = exporter.status;  		ep.exportProgressBar.Value = exporter.percent;  		ep.exportProgressBar.Update ();  		ep.Update ();  		Application.DoEvents ();  	}  	ep.Hide ();  }  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,exportSubjectButton_Click,The following statement contains a magic number: while (bw.IsBusy) {  	Thread.Sleep (100);  	ep.currentFileLabel.Text = exporter.status;  	ep.exportProgressBar.Value = exporter.percent;  	ep.exportProgressBar.Update ();  	ep.Update ();  	Application.DoEvents ();  }  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,exportSubjectButton_Click,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,runExportStudy,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,runExportStudyByTrial,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,runExportSubject,The following statement contains a magic number: Thread.Sleep (100);  
Magic Number,AscensionControl,MainInterface,C:\repos\smidget_AscensionControl\AscensionControl\MainInterface.cs,runExportSubjectByTrial,The following statement contains a magic number: Thread.Sleep (100);  
