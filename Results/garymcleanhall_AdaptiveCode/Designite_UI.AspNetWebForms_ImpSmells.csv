Implementation smell,Namespace,Class,File,Method,Description
Long Statement,UI.AspNetWebForms.Account,Manage,C:\repos\garymcleanhall_AdaptiveCode\Chapter9\ch9-composition-roots\DependencyInjectionWpf\UI.AspNetWebForms\Account\Manage.aspx.cs,Page_Load,The length of the statement  "                string localUserName = IdentityConfig.Logins.GetProviderKey(User.Identity.GetUserId()' IdentityConfig.LocalLoginProvider); " is 122.
Long Statement,UI.AspNetWebForms.Account,OpenAuthProviders,C:\repos\garymcleanhall_AdaptiveCode\Chapter9\ch9-composition-roots\DependencyInjectionWpf\UI.AspNetWebForms\Account\OpenAuthProviders.ascx.cs,Page_Load,The length of the statement  "                Context.Challenge(new string[] { provider }' new AuthenticationExtra() { RedirectUrl = "/Account/RegisterExternalLogin?providerName=" + provider }); " is 148.
Long Statement,UI.AspNetWebForms.Account,Register,C:\repos\garymcleanhall_AdaptiveCode\Chapter9\ch9-composition-roots\DependencyInjectionWpf\UI.AspNetWebForms\Account\Register.aspx.cs,CreateUser_Click,The length of the statement  "                ErrorMessage.Text = "User name already exists:" + ex.EntityValidationErrors.First().ValidationErrors.First().ErrorMessage; " is 122.
Long Statement,UI.AspNetWebForms,IdentityConfig,C:\repos\garymcleanhall_AdaptiveCode\Chapter9\ch9-composition-roots\DependencyInjectionWpf\UI.AspNetWebForms\App_Start\IdentityConfig.cs,IsLocalUrl,The length of the statement  "            return !string.IsNullOrEmpty(url) && ((url[0] == '/' && (url.Length == 1 || (url[1] != '/' && url[1] != '\\'))) || (url.Length > 1 && url[0] == '~' && url[1] == '/')); " is 167.
Long Statement,UI.AspNetWebForms,IdentityConfig,C:\repos\garymcleanhall_AdaptiveCode\Chapter9\ch9-composition-roots\DependencyInjectionWpf\UI.AspNetWebForms\App_Start\IdentityConfig.cs,GetExternalIdentity,The length of the statement  "            return await context.Authenticate(Microsoft.Owin.Security.Forms.FormsAuthenticationDefaults.ExternalAuthenticationType); " is 120.
Long Statement,UI.AspNetWebForms,Startup,C:\repos\garymcleanhall_AdaptiveCode\Chapter9\ch9-composition-roots\DependencyInjectionWpf\UI.AspNetWebForms\App_Start\Startup.Auth.cs,ConfigureAuth,The length of the statement  "            // Enable the application to use a cookie to temporarily store information about a user logging in with a third party login provider " is 132.
Long Statement,Microsoft.AspNet.Identity,IdentityConfig,C:\repos\garymcleanhall_AdaptiveCode\Chapter9\ch9-composition-roots\DependencyInjectionWpf\UI.AspNetWebForms\App_Start\IdentityConfig.cs,IsLocalUrl,The length of the statement  "            return !string.IsNullOrEmpty(url) && ((url[0] == '/' && (url.Length == 1 || (url[1] != '/' && url[1] != '\\'))) || (url.Length > 1 && url[0] == '~' && url[1] == '/')); " is 167.
Long Statement,Microsoft.AspNet.Identity,IdentityConfig,C:\repos\garymcleanhall_AdaptiveCode\Chapter9\ch9-composition-roots\DependencyInjectionWpf\UI.AspNetWebForms\App_Start\IdentityConfig.cs,GetExternalIdentity,The length of the statement  "            return await context.Authenticate(Microsoft.Owin.Security.Forms.FormsAuthenticationDefaults.ExternalAuthenticationType); " is 120.
Magic Number,UI.AspNetWebForms.Account,OpenAuthProviders,C:\repos\garymcleanhall_AdaptiveCode\Chapter9\ch9-composition-roots\DependencyInjectionWpf\UI.AspNetWebForms\Account\OpenAuthProviders.ascx.cs,Page_Load,The following statement contains a magic number: if (IsPostBack)              {                  var provider = Request.Form["provider"];                  if (provider == null)                  {                      return;                  }                  // Request a redirect to the external login provider                  Context.Challenge(new string[] { provider }' new AuthenticationExtra() { RedirectUrl = "/Account/RegisterExternalLogin?providerName=" + provider });                  Response.StatusCode = 401;                  Response.End();              }
