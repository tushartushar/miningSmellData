Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ReceiveCallback,Cyclomatic complexity of the method is 10
Complex Method,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,SecureReceiveCallback,Cyclomatic complexity of the method is 10
Complex Method,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ValidateRemoteCert,Cyclomatic complexity of the method is 25
Long Parameter List,AvayaMoagentClient,AvayaDialer,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\AvayaDialer.cs,SetCallback,The method has 5 parameters.
Long Parameter List,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ValidateRemoteCert,The method has 5 parameters.
Long Parameter List,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,clientCertificateSelectionCallback,The method has 5 parameters.
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,BuildMessage,The following statement contains a magic number: msg.Append (Command.PadRight (20' ' '));  
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,BuildMessage,The following statement contains a magic number: msg.Append (OrigId.PadRight (20' ' '));  
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,BuildMessage,The following statement contains a magic number: msg.Append (ProcessId.PadRight (6' ' '));  
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,BuildMessage,The following statement contains a magic number: msg.Append (InvokeId.PadRight (4' ' '));  
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,BuildMessage,The following statement contains a magic number: msg.Append (msgContentsSize.ToString ().PadRight (4' ' '));  
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,ParseMessage,The following statement contains a magic number: ret.Command = raw.Substring (0' 20).Trim ();  
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,ParseMessage,The following statement contains a magic number: ret.Type = (MessageType)char.Parse (raw.Substring (20' 1));  
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,ParseMessage,The following statement contains a magic number: ret.OrigId = raw.Substring (21' 20).Trim ();  
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,ParseMessage,The following statement contains a magic number: ret.OrigId = raw.Substring (21' 20).Trim ();  
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,ParseMessage,The following statement contains a magic number: ret.ProcessId = raw.Substring (41' 6).Trim ();  
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,ParseMessage,The following statement contains a magic number: ret.ProcessId = raw.Substring (41' 6).Trim ();  
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,ParseMessage,The following statement contains a magic number: ret.InvokeId = raw.Substring (47' 4).Trim ();  
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,ParseMessage,The following statement contains a magic number: ret.InvokeId = raw.Substring (47' 4).Trim ();  
Magic Number,AvayaMoagentClient,Message,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\Message.cs,ParseMessage,The following statement contains a magic number: foreach (var data in raw.Substring (55).Replace (_END_OF_LINE.ToString ()' string.Empty).Split (_RECORD_SEPERATOR)) {  	if (!string.IsNullOrEmpty (data))  		ret.Contents.Add (data);  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ReceiveCallback,The following statement contains a magic number: try {  	// Retrieve the state object and the client socket   	// from the asynchronous state object.  	var state = (StateObject)ar.AsyncState;  	var handler = state.Stream;  	Message lastMsg = null;  	if (handler.Connected) {  		// Read data from the remote device.  		int bytesRead = handler.EndReceive (ar);  		if (bytesRead > 0) {  			// There  might be more data' so store the data received so far.  			state.sb.Append (Encoding.ASCII.GetString (state.Buffer' 0' bytesRead));  			// Check for end-of-file tag. If it is not there' read more data.  			content = state.sb.ToString ();  			if (content.IndexOf ((char)3) > -1) {  				var msgs = new List<string> ();  				var msg = new StringBuilder ();  				foreach (var ch in content) {  					if (ch != (char)3)  						msg.Append (ch);  					else {  						msg.Append (ch);  						msgs.Add (msg.ToString ());  						msg.Length = 0;  					}  				}  				state.sb.Length = 0;  				state.sb.Append (msg.ToString ());  				lastMsg = _LogMessagesReceived (msgs);  			}  		}  		if (!(lastMsg != null && lastMsg.Type == Message.MessageType.Response && lastMsg.Command.Trim () == "AGTLogoff"))  			handler.BeginReceive (state.Buffer' 0' StateObject.BufferSize' 0' ReceiveCallback' state);  	}  }  catch (IOException) {  	//something in the transport leyer has failed' such as the network connection died  	//TODO: log the exception details?  	Disconnect ();  }  catch (ObjectDisposedException) {  	//we've been disconnected  	//TODO: log the exception details?  	Disconnect ();  }  catch (Exception) {  	Debugger.Break ();  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ReceiveCallback,The following statement contains a magic number: try {  	// Retrieve the state object and the client socket   	// from the asynchronous state object.  	var state = (StateObject)ar.AsyncState;  	var handler = state.Stream;  	Message lastMsg = null;  	if (handler.Connected) {  		// Read data from the remote device.  		int bytesRead = handler.EndReceive (ar);  		if (bytesRead > 0) {  			// There  might be more data' so store the data received so far.  			state.sb.Append (Encoding.ASCII.GetString (state.Buffer' 0' bytesRead));  			// Check for end-of-file tag. If it is not there' read more data.  			content = state.sb.ToString ();  			if (content.IndexOf ((char)3) > -1) {  				var msgs = new List<string> ();  				var msg = new StringBuilder ();  				foreach (var ch in content) {  					if (ch != (char)3)  						msg.Append (ch);  					else {  						msg.Append (ch);  						msgs.Add (msg.ToString ());  						msg.Length = 0;  					}  				}  				state.sb.Length = 0;  				state.sb.Append (msg.ToString ());  				lastMsg = _LogMessagesReceived (msgs);  			}  		}  		if (!(lastMsg != null && lastMsg.Type == Message.MessageType.Response && lastMsg.Command.Trim () == "AGTLogoff"))  			handler.BeginReceive (state.Buffer' 0' StateObject.BufferSize' 0' ReceiveCallback' state);  	}  }  catch (IOException) {  	//something in the transport leyer has failed' such as the network connection died  	//TODO: log the exception details?  	Disconnect ();  }  catch (ObjectDisposedException) {  	//we've been disconnected  	//TODO: log the exception details?  	Disconnect ();  }  catch (Exception) {  	Debugger.Break ();  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ReceiveCallback,The following statement contains a magic number: if (handler.Connected) {  	// Read data from the remote device.  	int bytesRead = handler.EndReceive (ar);  	if (bytesRead > 0) {  		// There  might be more data' so store the data received so far.  		state.sb.Append (Encoding.ASCII.GetString (state.Buffer' 0' bytesRead));  		// Check for end-of-file tag. If it is not there' read more data.  		content = state.sb.ToString ();  		if (content.IndexOf ((char)3) > -1) {  			var msgs = new List<string> ();  			var msg = new StringBuilder ();  			foreach (var ch in content) {  				if (ch != (char)3)  					msg.Append (ch);  				else {  					msg.Append (ch);  					msgs.Add (msg.ToString ());  					msg.Length = 0;  				}  			}  			state.sb.Length = 0;  			state.sb.Append (msg.ToString ());  			lastMsg = _LogMessagesReceived (msgs);  		}  	}  	if (!(lastMsg != null && lastMsg.Type == Message.MessageType.Response && lastMsg.Command.Trim () == "AGTLogoff"))  		handler.BeginReceive (state.Buffer' 0' StateObject.BufferSize' 0' ReceiveCallback' state);  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ReceiveCallback,The following statement contains a magic number: if (handler.Connected) {  	// Read data from the remote device.  	int bytesRead = handler.EndReceive (ar);  	if (bytesRead > 0) {  		// There  might be more data' so store the data received so far.  		state.sb.Append (Encoding.ASCII.GetString (state.Buffer' 0' bytesRead));  		// Check for end-of-file tag. If it is not there' read more data.  		content = state.sb.ToString ();  		if (content.IndexOf ((char)3) > -1) {  			var msgs = new List<string> ();  			var msg = new StringBuilder ();  			foreach (var ch in content) {  				if (ch != (char)3)  					msg.Append (ch);  				else {  					msg.Append (ch);  					msgs.Add (msg.ToString ());  					msg.Length = 0;  				}  			}  			state.sb.Length = 0;  			state.sb.Append (msg.ToString ());  			lastMsg = _LogMessagesReceived (msgs);  		}  	}  	if (!(lastMsg != null && lastMsg.Type == Message.MessageType.Response && lastMsg.Command.Trim () == "AGTLogoff"))  		handler.BeginReceive (state.Buffer' 0' StateObject.BufferSize' 0' ReceiveCallback' state);  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ReceiveCallback,The following statement contains a magic number: if (bytesRead > 0) {  	// There  might be more data' so store the data received so far.  	state.sb.Append (Encoding.ASCII.GetString (state.Buffer' 0' bytesRead));  	// Check for end-of-file tag. If it is not there' read more data.  	content = state.sb.ToString ();  	if (content.IndexOf ((char)3) > -1) {  		var msgs = new List<string> ();  		var msg = new StringBuilder ();  		foreach (var ch in content) {  			if (ch != (char)3)  				msg.Append (ch);  			else {  				msg.Append (ch);  				msgs.Add (msg.ToString ());  				msg.Length = 0;  			}  		}  		state.sb.Length = 0;  		state.sb.Append (msg.ToString ());  		lastMsg = _LogMessagesReceived (msgs);  	}  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ReceiveCallback,The following statement contains a magic number: if (bytesRead > 0) {  	// There  might be more data' so store the data received so far.  	state.sb.Append (Encoding.ASCII.GetString (state.Buffer' 0' bytesRead));  	// Check for end-of-file tag. If it is not there' read more data.  	content = state.sb.ToString ();  	if (content.IndexOf ((char)3) > -1) {  		var msgs = new List<string> ();  		var msg = new StringBuilder ();  		foreach (var ch in content) {  			if (ch != (char)3)  				msg.Append (ch);  			else {  				msg.Append (ch);  				msgs.Add (msg.ToString ());  				msg.Length = 0;  			}  		}  		state.sb.Length = 0;  		state.sb.Append (msg.ToString ());  		lastMsg = _LogMessagesReceived (msgs);  	}  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ReceiveCallback,The following statement contains a magic number: if (content.IndexOf ((char)3) > -1) {  	var msgs = new List<string> ();  	var msg = new StringBuilder ();  	foreach (var ch in content) {  		if (ch != (char)3)  			msg.Append (ch);  		else {  			msg.Append (ch);  			msgs.Add (msg.ToString ());  			msg.Length = 0;  		}  	}  	state.sb.Length = 0;  	state.sb.Append (msg.ToString ());  	lastMsg = _LogMessagesReceived (msgs);  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ReceiveCallback,The following statement contains a magic number: if (content.IndexOf ((char)3) > -1) {  	var msgs = new List<string> ();  	var msg = new StringBuilder ();  	foreach (var ch in content) {  		if (ch != (char)3)  			msg.Append (ch);  		else {  			msg.Append (ch);  			msgs.Add (msg.ToString ());  			msg.Length = 0;  		}  	}  	state.sb.Length = 0;  	state.sb.Append (msg.ToString ());  	lastMsg = _LogMessagesReceived (msgs);  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ReceiveCallback,The following statement contains a magic number: foreach (var ch in content) {  	if (ch != (char)3)  		msg.Append (ch);  	else {  		msg.Append (ch);  		msgs.Add (msg.ToString ());  		msg.Length = 0;  	}  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ReceiveCallback,The following statement contains a magic number: if (ch != (char)3)  	msg.Append (ch);  else {  	msg.Append (ch);  	msgs.Add (msg.ToString ());  	msg.Length = 0;  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,SecureReceiveCallback,The following statement contains a magic number: try {  	// Retrieve the state object and the client socket   	// from the asynchronous state object.  	var state = (StateObject)ar.AsyncState;  	var handler = state.SecureStream;  	Message lastMsg = null;  	if (handler.CanRead) {  		// Read data from the remote device.  		int bytesRead = handler.EndRead (ar);  		//int bytesRead = handler.EndReceive(ar);  		if (bytesRead > 0) {  			// There  might be more data' so store the data received so far.  			state.sb.Append (Encoding.ASCII.GetString (state.Buffer' 0' bytesRead));  			// Check for end-of-file tag. If it is not there' read more data.  			content = state.sb.ToString ();  			if (content.IndexOf ((char)3) > -1) {  				var msgs = new List<string> ();  				var msg = new StringBuilder ();  				foreach (var ch in content) {  					if (ch != (char)3)  						msg.Append (ch);  					else {  						msg.Append (ch);  						msgs.Add (msg.ToString ());  						msg.Length = 0;  					}  				}  				state.sb.Length = 0;  				state.sb.Append (msg.ToString ());  				lastMsg = _LogMessagesReceived (msgs);  			}  		}  		if (!(lastMsg != null && lastMsg.Type == Message.MessageType.Response && lastMsg.Command.Trim () == "AGTLogoff"))  			handler.BeginRead (state.Buffer' 0' StateObject.BufferSize' SecureReceiveCallback' state);  	}  }  catch (IOException e) {  	//something in the transport leyer has failed' such as the network connection died  	//TODO: log the exception details?  	Disconnect ();  }  catch (ObjectDisposedException e) {  	//we've been disconnected  	//TODO: log the exception details?  	Disconnect ();  }  catch (Exception) {  	Debugger.Break ();  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,SecureReceiveCallback,The following statement contains a magic number: try {  	// Retrieve the state object and the client socket   	// from the asynchronous state object.  	var state = (StateObject)ar.AsyncState;  	var handler = state.SecureStream;  	Message lastMsg = null;  	if (handler.CanRead) {  		// Read data from the remote device.  		int bytesRead = handler.EndRead (ar);  		//int bytesRead = handler.EndReceive(ar);  		if (bytesRead > 0) {  			// There  might be more data' so store the data received so far.  			state.sb.Append (Encoding.ASCII.GetString (state.Buffer' 0' bytesRead));  			// Check for end-of-file tag. If it is not there' read more data.  			content = state.sb.ToString ();  			if (content.IndexOf ((char)3) > -1) {  				var msgs = new List<string> ();  				var msg = new StringBuilder ();  				foreach (var ch in content) {  					if (ch != (char)3)  						msg.Append (ch);  					else {  						msg.Append (ch);  						msgs.Add (msg.ToString ());  						msg.Length = 0;  					}  				}  				state.sb.Length = 0;  				state.sb.Append (msg.ToString ());  				lastMsg = _LogMessagesReceived (msgs);  			}  		}  		if (!(lastMsg != null && lastMsg.Type == Message.MessageType.Response && lastMsg.Command.Trim () == "AGTLogoff"))  			handler.BeginRead (state.Buffer' 0' StateObject.BufferSize' SecureReceiveCallback' state);  	}  }  catch (IOException e) {  	//something in the transport leyer has failed' such as the network connection died  	//TODO: log the exception details?  	Disconnect ();  }  catch (ObjectDisposedException e) {  	//we've been disconnected  	//TODO: log the exception details?  	Disconnect ();  }  catch (Exception) {  	Debugger.Break ();  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,SecureReceiveCallback,The following statement contains a magic number: if (handler.CanRead) {  	// Read data from the remote device.  	int bytesRead = handler.EndRead (ar);  	//int bytesRead = handler.EndReceive(ar);  	if (bytesRead > 0) {  		// There  might be more data' so store the data received so far.  		state.sb.Append (Encoding.ASCII.GetString (state.Buffer' 0' bytesRead));  		// Check for end-of-file tag. If it is not there' read more data.  		content = state.sb.ToString ();  		if (content.IndexOf ((char)3) > -1) {  			var msgs = new List<string> ();  			var msg = new StringBuilder ();  			foreach (var ch in content) {  				if (ch != (char)3)  					msg.Append (ch);  				else {  					msg.Append (ch);  					msgs.Add (msg.ToString ());  					msg.Length = 0;  				}  			}  			state.sb.Length = 0;  			state.sb.Append (msg.ToString ());  			lastMsg = _LogMessagesReceived (msgs);  		}  	}  	if (!(lastMsg != null && lastMsg.Type == Message.MessageType.Response && lastMsg.Command.Trim () == "AGTLogoff"))  		handler.BeginRead (state.Buffer' 0' StateObject.BufferSize' SecureReceiveCallback' state);  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,SecureReceiveCallback,The following statement contains a magic number: if (handler.CanRead) {  	// Read data from the remote device.  	int bytesRead = handler.EndRead (ar);  	//int bytesRead = handler.EndReceive(ar);  	if (bytesRead > 0) {  		// There  might be more data' so store the data received so far.  		state.sb.Append (Encoding.ASCII.GetString (state.Buffer' 0' bytesRead));  		// Check for end-of-file tag. If it is not there' read more data.  		content = state.sb.ToString ();  		if (content.IndexOf ((char)3) > -1) {  			var msgs = new List<string> ();  			var msg = new StringBuilder ();  			foreach (var ch in content) {  				if (ch != (char)3)  					msg.Append (ch);  				else {  					msg.Append (ch);  					msgs.Add (msg.ToString ());  					msg.Length = 0;  				}  			}  			state.sb.Length = 0;  			state.sb.Append (msg.ToString ());  			lastMsg = _LogMessagesReceived (msgs);  		}  	}  	if (!(lastMsg != null && lastMsg.Type == Message.MessageType.Response && lastMsg.Command.Trim () == "AGTLogoff"))  		handler.BeginRead (state.Buffer' 0' StateObject.BufferSize' SecureReceiveCallback' state);  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,SecureReceiveCallback,The following statement contains a magic number: if (bytesRead > 0) {  	// There  might be more data' so store the data received so far.  	state.sb.Append (Encoding.ASCII.GetString (state.Buffer' 0' bytesRead));  	// Check for end-of-file tag. If it is not there' read more data.  	content = state.sb.ToString ();  	if (content.IndexOf ((char)3) > -1) {  		var msgs = new List<string> ();  		var msg = new StringBuilder ();  		foreach (var ch in content) {  			if (ch != (char)3)  				msg.Append (ch);  			else {  				msg.Append (ch);  				msgs.Add (msg.ToString ());  				msg.Length = 0;  			}  		}  		state.sb.Length = 0;  		state.sb.Append (msg.ToString ());  		lastMsg = _LogMessagesReceived (msgs);  	}  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,SecureReceiveCallback,The following statement contains a magic number: if (bytesRead > 0) {  	// There  might be more data' so store the data received so far.  	state.sb.Append (Encoding.ASCII.GetString (state.Buffer' 0' bytesRead));  	// Check for end-of-file tag. If it is not there' read more data.  	content = state.sb.ToString ();  	if (content.IndexOf ((char)3) > -1) {  		var msgs = new List<string> ();  		var msg = new StringBuilder ();  		foreach (var ch in content) {  			if (ch != (char)3)  				msg.Append (ch);  			else {  				msg.Append (ch);  				msgs.Add (msg.ToString ());  				msg.Length = 0;  			}  		}  		state.sb.Length = 0;  		state.sb.Append (msg.ToString ());  		lastMsg = _LogMessagesReceived (msgs);  	}  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,SecureReceiveCallback,The following statement contains a magic number: if (content.IndexOf ((char)3) > -1) {  	var msgs = new List<string> ();  	var msg = new StringBuilder ();  	foreach (var ch in content) {  		if (ch != (char)3)  			msg.Append (ch);  		else {  			msg.Append (ch);  			msgs.Add (msg.ToString ());  			msg.Length = 0;  		}  	}  	state.sb.Length = 0;  	state.sb.Append (msg.ToString ());  	lastMsg = _LogMessagesReceived (msgs);  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,SecureReceiveCallback,The following statement contains a magic number: if (content.IndexOf ((char)3) > -1) {  	var msgs = new List<string> ();  	var msg = new StringBuilder ();  	foreach (var ch in content) {  		if (ch != (char)3)  			msg.Append (ch);  		else {  			msg.Append (ch);  			msgs.Add (msg.ToString ());  			msg.Length = 0;  		}  	}  	state.sb.Length = 0;  	state.sb.Append (msg.ToString ());  	lastMsg = _LogMessagesReceived (msgs);  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,SecureReceiveCallback,The following statement contains a magic number: foreach (var ch in content) {  	if (ch != (char)3)  		msg.Append (ch);  	else {  		msg.Append (ch);  		msgs.Add (msg.ToString ());  		msg.Length = 0;  	}  }  
Magic Number,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,SecureReceiveCallback,The following statement contains a magic number: if (ch != (char)3)  	msg.Append (ch);  else {  	msg.Append (ch);  	msgs.Add (msg.ToString ());  	msg.Length = 0;  }  
Missing Default,AvayaMoagentClient,MoagentClient,C:\repos\mlittle_avaya-moagent-client\AvayaMoagentClient\MoagentClient.cs,ValidateRemoteCert,The following switch statement is missing a default case: switch (result) {  case VerifyResult.X509_V_ERR_CERT_UNTRUSTED:  case VerifyResult.X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT:  case VerifyResult.X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY:  case VerifyResult.X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE:  	{  		// Check the chain to see if there is a match for the cert  		ret = CheckCert (cert' chain);  		if (!ret && depth != 0) {  			ret = true;  			// We want to keep checking until we get to depth 0  		}  	}  	break;  case VerifyResult.X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD:  case VerifyResult.X509_V_ERR_CERT_NOT_YET_VALID:  	{  		Console.WriteLine ("Certificate is not valid yet");  		ret = false;  	}  	break;  case VerifyResult.X509_V_ERR_CERT_HAS_EXPIRED:  case VerifyResult.X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD:  	{  		Console.WriteLine ("Certificate is expired");  		ret = false;  	}  	break;  case VerifyResult.X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT:  	{  		// we received a self signed cert - check to see if it's in our store  		ret = CheckCert (cert' chain);  	}  	break;  case VerifyResult.X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN:  	{  		// A self signed certificate was encountered in the chain  		// Check the chain to see if there is a match for the cert  		ret = CheckCert (cert' chain);  		if (!ret && depth != 0) {  			ret = true;  			// We want to keep checking until we get to depth 0  		}  	}  	break;  case VerifyResult.X509_V_OK:  	{  		ret = true;  	}  	break;  }  
