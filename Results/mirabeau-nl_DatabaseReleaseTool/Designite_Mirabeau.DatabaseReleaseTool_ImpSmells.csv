Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mirabeau.DatabaseReleaseTool.Connection,ConnectionStringFactory,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Connection\ConnectionStringFactory.cs,CreateFromArguments,Cyclomatic complexity of the method is 12
Complex Method,Mirabeau.DatabaseReleaseTool,DatabaseReleaseTool,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\DatabaseReleaseTool.cs,ExecuteAllScriptsForDatabase,Cyclomatic complexity of the method is 8
Complex Method,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,Cyclomatic complexity of the method is 9
Long Parameter List,Mirabeau.DatabaseReleaseTool,DatabaseReleaseTool,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\DatabaseReleaseTool.cs,DatabaseReleaseTool,The method has 6 parameters.
Long Identifier,Mirabeau.DatabaseReleaseTool.Files,SqlFilesListReader,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Files\SqlFilesListReader.cs,GetSpecificVersionedFilesToExecute,The length of the parameter sqlFilesToExecuteInProperOrder is 30.
Long Identifier,Mirabeau.DatabaseReleaseTool.Files,VersionNumberHelper,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Files\VersionNumberHelper.cs,GetIndexOfLastCharacterWichIsNotANumber,The length of the parameter indexOfLastCharacterWichIsNotANumber is 36.
Long Identifier,Mirabeau.DatabaseReleaseTool.Files,VersionNumberHelper,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Files\VersionNumberHelper.cs,GetVersionString,The length of the parameter indexOfLastCharacterWichIsNotANumber is 36.
Long Statement,Mirabeau.DatabaseReleaseTool.Arguments,ApplicationOptionsParser,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Arguments\ApplicationOptionsParser.cs,Parse,The length of the statement  "	applicationOptions.DatabaseScriptsPath = ArgumentParsingHelper.GetArgumentValueFromArguments (argumentList' CommandLineArgumentOptions.DatabasePathArgumentOption); " is 163.
Long Statement,Mirabeau.DatabaseReleaseTool.Arguments,ApplicationOptionsParser,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Arguments\ApplicationOptionsParser.cs,Parse,The length of the statement  "	applicationOptions.Username = ArgumentParsingHelper.GetArgumentValueFromArguments (argumentList' CommandLineArgumentOptions.UsernameArgumentOption); " is 148.
Long Statement,Mirabeau.DatabaseReleaseTool.Arguments,ApplicationOptionsParser,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Arguments\ApplicationOptionsParser.cs,Parse,The length of the statement  "	applicationOptions.Password = ArgumentParsingHelper.GetArgumentValueFromArguments (argumentList' CommandLineArgumentOptions.PasswordArgumentOption); " is 148.
Long Statement,Mirabeau.DatabaseReleaseTool.Arguments,ApplicationOptionsParser,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Arguments\ApplicationOptionsParser.cs,Parse,The length of the statement  "	applicationOptions.Servername = ArgumentParsingHelper.GetArgumentValueFromArguments (argumentList' CommandLineArgumentOptions.ServernameArgumentOption); " is 152.
Long Statement,Mirabeau.DatabaseReleaseTool.Arguments,ApplicationOptionsParser,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Arguments\ApplicationOptionsParser.cs,Parse,The length of the statement  "	applicationOptions.DatabaseName = ArgumentParsingHelper.GetArgumentValueFromArguments (argumentList' CommandLineArgumentOptions.DatabasenameArgumentOption); " is 156.
Long Statement,Mirabeau.DatabaseReleaseTool.Arguments,ApplicationOptionsParser,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Arguments\ApplicationOptionsParser.cs,Parse,The length of the statement  "	applicationOptions.FromVersion = ArgumentParsingHelper.GetArgumentValueFromArguments (argumentList' CommandLineArgumentOptions.FromDatabaseVersion); " is 148.
Long Statement,Mirabeau.DatabaseReleaseTool.Arguments,ApplicationOptionsParser,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Arguments\ApplicationOptionsParser.cs,Parse,The length of the statement  "	applicationOptions.ToVersion = ArgumentParsingHelper.GetArgumentValueFromArguments (argumentList' CommandLineArgumentOptions.ToDatabaseVersion); " is 144.
Long Statement,Mirabeau.DatabaseReleaseTool.Arguments,ApplicationOptionsParser,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Arguments\ApplicationOptionsParser.cs,Parse,The length of the statement  "	applicationOptions.DatabaseType = ParseDatabaseType (ArgumentParsingHelper.GetArgumentValueFromArguments (argumentList' CommandLineArgumentOptions.DatabasetypeArgumentOption)); " is 176.
Long Statement,Mirabeau.DatabaseReleaseTool.Arguments,ApplicationOptionsParser,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Arguments\ApplicationOptionsParser.cs,Parse,The length of the statement  "	applicationOptions.ConfigurationFilename = ArgumentParsingHelper.GetArgumentValueFromArguments (argumentList' CommandLineArgumentOptions.ConfigFileArgumentOption); " is 163.
Long Statement,Mirabeau.DatabaseReleaseTool.Arguments,ApplicationOptionsParser,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Arguments\ApplicationOptionsParser.cs,IsOptionPresent,The length of the statement  "	return argumentList.Any (argument => !string.IsNullOrEmpty (argument) && argument.Equals (option' StringComparison.OrdinalIgnoreCase)); " is 135.
Long Statement,Mirabeau.DatabaseReleaseTool.Arguments,MandatoryArgumentValidator,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Arguments\MandatoryArgumentValidator.cs,RequiredCommandlineOptionsModeAreSet,The length of the statement  "	return string.IsNullOrEmpty (options.DatabaseScriptsPath) == false && string.IsNullOrEmpty (options.Username) == false && string.IsNullOrEmpty (options.Password) == false && string.IsNullOrEmpty (options.FromVersion) == false && string.IsNullOrEmpty (options.ToVersion) == false && string.IsNullOrEmpty (options.DatabaseName) == false && string.IsNullOrEmpty (options.Servername) == false; " is 389.
Long Statement,Mirabeau.DatabaseReleaseTool.Connection,ConnectionStringFactory,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Connection\ConnectionStringFactory.cs,CreateFromConfigurationFile,The length of the statement  "		throw new FileNotFoundException (string.Format ("Configurationfile: {0} not found."' parameters.ConfigurationFileName)); " is 120.
Long Statement,Mirabeau.DatabaseReleaseTool.Connection,ConnectionStringFactory,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Connection\ConnectionStringFactory.cs,CreateFromConfigurationFile,The length of the statement  "	System.Configuration.Configuration config = ConfigurationManager.OpenMappedExeConfiguration (new ExeConfigurationFileMap { " is 122.
Long Statement,Mirabeau.DatabaseReleaseTool.Connection,ConnectionStringFactory,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Connection\ConnectionStringFactory.cs,CreateFromConfigurationFile,The length of the statement  "	string connectionString = config.ConnectionStrings.ConnectionStrings ["Mirabeau.DatabaseReleaseTool.ConnectionString"].ConnectionString; " is 136.
Long Statement,Mirabeau.DatabaseReleaseTool.Connection,ConnectionStringFactory,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Connection\ConnectionStringFactory.cs,CreateFromConfigurationFile,The length of the statement  "	throw new ConfigurationErrorsException (string.Format ("Create database is not allowed in combination with {0}."' parameters.DatabaseType)); " is 140.
Long Statement,Mirabeau.DatabaseReleaseTool.Connection,DatabaseConnectionFactory,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Connection\DatabaseConnectionFactory.cs,CreateDatabaseConnection,The length of the statement  "		throw new ArgumentOutOfRangeException ("databaseType"' string.Format (@"No valid database type given '{0}'"' databaseType)); " is 124.
Long Statement,Mirabeau.DatabaseReleaseTool.Files,SqlFilesListReader,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Files\SqlFilesListReader.cs,GetCreateDatabaseFileToExecute,The length of the statement  "	IEnumerable<FileInfo> allSqlFiles = FileListFilter.FilterFileListWithIgnoreDirectoryFilter (databaseScriptsRoot.GetFiles (ToolConfiguration.CreateDatabaseSqlFileSearchPattern' SearchOption.AllDirectories)); " is 206.
Long Statement,Mirabeau.DatabaseReleaseTool.Files,SqlFilesListReader,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Files\SqlFilesListReader.cs,GetSpecificVersionedFilesToExecute,The length of the statement  "	where ((fromVersionObject == null) || (fileVersion >= fromVersionObject)) && ((toVersionObject == null) || (fileVersion <= toVersionObject)) " is 140.
Long Statement,Mirabeau.DatabaseReleaseTool.Files,SqlFilesListReader,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Files\SqlFilesListReader.cs,GetAllFilesToExecute,The length of the statement  "	IEnumerable<FileInfo> allSqlFiles = FileListFilter.FilterFileListWithIgnoreDirectoryFilter (databaseScriptsRoot.GetFiles (ToolConfiguration.SqlFileSearchPattern' SearchOption.AllDirectories)); " is 192.
Long Statement,Mirabeau.DatabaseReleaseTool.Files,SqlFilesListReader,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Files\SqlFilesListReader.cs,GetAllFilesToExecute,The length of the statement  "	Dictionary<string' FileInfo> result = allSqlFiles.Where (x => !ToolConfiguration.CreateDatabaseSqlFileSearchPattern.Equals (x.Name)).ToDictionary (key => key.FullName); " is 168.
Long Statement,Mirabeau.DatabaseReleaseTool.Files,VersionNumberHelper,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Files\VersionNumberHelper.cs,GetVersionForFilename,The length of the statement  "	// Check each character in the last part. The first occurence of a non integer value char is the index of the last character wich contains the number. " is 150.
Long Statement,Mirabeau.DatabaseReleaseTool,DatabaseReleaseTool,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\DatabaseReleaseTool.cs,Execute,The length of the statement  "		excecutionResult = ExecuteAllScriptsForDatabase (fromVersion' toVersion' connectionParameters' encodingForReadingSqlScripts); " is 125.
Long Statement,Mirabeau.DatabaseReleaseTool,DatabaseReleaseTool,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\DatabaseReleaseTool.cs,ExecuteAllScriptsForDatabase,The length of the statement  "		result.Errors.Add (string.Format ("Invalid fromVersion. Could not parse fromVersion to a usable version object. {0}"' ex.Message)); " is 131.
Long Statement,Mirabeau.DatabaseReleaseTool,DatabaseReleaseTool,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\DatabaseReleaseTool.cs,ExecuteAllScriptsForDatabase,The length of the statement  "		result.Errors.Add (string.Format ("Invalid toVersion. Could not parse toVersion to a usable version object. {0}"' ex.Message)); " is 127.
Long Statement,Mirabeau.DatabaseReleaseTool,DatabaseReleaseTool,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\DatabaseReleaseTool.cs,ExecuteAllScriptsForDatabase,The length of the statement  "	Dictionary<string' FileInfo> filesToExecute = filesReader.GetSpecificVersionedFilesToExecute (fromVersionObject' toVersionObject); " is 130.
Long Statement,Mirabeau.DatabaseReleaseTool,DatabaseReleaseTool,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\DatabaseReleaseTool.cs,ExecuteCreateDatabase,The length of the statement  "	return ExecuteNonTransactionalCreateDatabaseSqlScripts (connectionParameters' filesToExecute' encodingForReadingSqlScripts); " is 124.
Long Statement,Mirabeau.DatabaseReleaseTool,DatabaseReleaseTool,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\DatabaseReleaseTool.cs,ExecuteNonTransactionalCreateDatabaseSqlScripts,The length of the statement  "		sqlFileExecutor.ExecuteNonTransactional (filesToExecute.Select (item => item.Key).ToList ()' encodingForReadingSqlScripts); " is 123.
Long Statement,Mirabeau.DatabaseReleaseTool,DatabaseReleaseTool,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\DatabaseReleaseTool.cs,ExecuteSqlScripts,The length of the statement  "		sqlFileExecutor.ExecuteTransactional (filesToExecute.Select (item => item.Key).ToList ()' encodingForReadingSqlScripts); " is 120.
Long Statement,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,GetBeforeExecuteScriptsActionFromConfigurationFile,The length of the statement  "	System.Configuration.Configuration config = ConfigurationManager.OpenMappedExeConfiguration (new ExeConfigurationFileMap { " is 122.
Long Statement,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,GetBeforeExecuteScriptsActionFromConfigurationFile,The length of the statement  "	if (keyValueConfigurationElement != null && !string.IsNullOrWhiteSpace (keyValueConfigurationElement.Value) && keyValueConfigurationElement.Value.Equals ("CreateDatabase"' StringComparison.InvariantCultureIgnoreCase)) { " is 219.
Long Statement,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The length of the statement  "		validationResult.ValidationMessages.ForEach (item => outputLogger.WriteErrorMessage (string.Format (CultureInfo.InvariantCulture' "\t{0}\n"' item))); " is 149.
Long Statement,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The length of the statement  "		databaseReleaseTool = new DatabaseReleaseTool (options.DatabaseScriptsPath' new CreateDatabasePolicyComposite ()' new FileStructurePolicyComposite ()' outputLogger' new ConnectionStringFactory ()' new DatabaseConnectionFactory ()); " is 231.
Long Statement,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The length of the statement  "		outputLogger.WriteDebugMessage (string.Format (CultureInfo.InvariantCulture' "ConfigFile: {0}."' options.ConfigurationFilename)); " is 129.
Long Statement,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The length of the statement  "		outputLogger.WriteDebugMessage (string.Format (CultureInfo.InvariantCulture' "Database Path: {0}."' options.DatabaseScriptsPath)); " is 130.
Long Statement,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The length of the statement  "		connectionParameters.BeforeExecuteScriptsAction = GetBeforeExecuteScriptsActionFromConfigurationFile (options.ConfigurationFilename); " is 133.
Long Statement,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The length of the statement  "		result = databaseReleaseTool.Execute (options.FromVersion' options.ToVersion' connectionParameters' options.EncodingForReadingSqlScripts); " is 138.
Long Statement,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The length of the statement  "		outputLogger.WriteErrorMessage (string.Format (CultureInfo.InvariantCulture' "Unexpected error while Executing scripts. {0}."' ex.Message)); " is 140.
Long Statement,Mirabeau.DatabaseReleaseTool.Policies,MustContainCreateDatabaseSqlFilePolicy,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Policies\MustContainCreateDatabaseSqlFilePolicy.cs,CheckPolicy,The length of the statement  "	FileInfo[] allCreateDbSqlFiles = FileListFilter.FilterFileListWithIgnoreDirectoryFilter (databaseScriptsRoot.GetFiles (ToolConfiguration.CreateDatabaseSqlFileSearchPattern' SearchOption.AllDirectories)).ToArray (); " is 214.
Long Statement,Mirabeau.DatabaseReleaseTool.Policies,MustContainCreateDatabaseSqlFilePolicy,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Policies\MustContainCreateDatabaseSqlFilePolicy.cs,CheckPolicy,The length of the statement  "		result.Messages.Add (string.Format ("MustContainCreateDatabaseSqlFilePolicy failed. There are more than one files with the name: {0} found."' ToolConfiguration.CreateDatabaseSqlFileSearchPattern)); " is 197.
Long Statement,Mirabeau.DatabaseReleaseTool.Policies,DirectoryStructurePolicy,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Policies\DirectoryStructurePolicy.cs,CheckPolicy,The length of the statement  "	List<string> actualDirectoryList = databaseScriptsRoot.GetDirectories ().Where (dir => ((dir.Attributes & FileAttributes.Hidden) != FileAttributes.Hidden)).Select (dirName => dirName.Name).ToList (); " is 199.
Long Statement,Mirabeau.DatabaseReleaseTool.Policies,DirectoryStructurePolicy,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Policies\DirectoryStructurePolicy.cs,CheckPolicy,The length of the statement  "			result.Messages.Add (string.Format ("DirectoryStructurePolicy failed. The following directories arent named correctly: {0} ."' string.Join (Environment.NewLine' directoriesNotPresent.ToArray ()))); " is 197.
Long Statement,Mirabeau.DatabaseReleaseTool.Policies,DirectoryStructurePolicy,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Policies\DirectoryStructurePolicy.cs,CheckPolicy,The length of the statement  "		result.Messages.Add (string.Format ("DirectoryStructurePolicy failed. Target path {0} does not conform to specified directory layout.\n[Layout: \n{1}\n]"' databaseScriptsRoot' Resources.DirectoryStructureTemplate)); " is 215.
Long Statement,Mirabeau.DatabaseReleaseTool.Policies,FilenamePrefixPolicy,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Policies\FilenamePrefixPolicy.cs,CheckPolicy,The length of the statement  "	IEnumerable<FileInfo> allFiles = FileListFilter.FilterFileListWithIgnoreDirectoryFilter (databaseScriptsRoot.GetFiles (ToolConfiguration.SqlFileSearchPattern' SearchOption.AllDirectories)); " is 189.
Long Statement,Mirabeau.DatabaseReleaseTool.Policies,FilenamePrefixPolicy,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Policies\FilenamePrefixPolicy.cs,CheckPolicy,The length of the statement  "	IEnumerable<FileInfo> allFilesWithoutCreateDatabase = allFiles.Where (x => !ToolConfiguration.CreateDatabaseSqlFileSearchPattern.Equals (x.Name)); " is 146.
Long Statement,Mirabeau.DatabaseReleaseTool.Policies,FilenamePrefixPolicy,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Policies\FilenamePrefixPolicy.cs,CheckPolicy,The length of the statement  "		result.Messages.Add (string.Format ("FilenamePrefixPolicy failed. The following files do not have a valid prefix: {0}."' string.Join ("'"' invalidFilenames.Select (fileinfo => fileinfo.FullName).ToArray ()))); " is 209.
Long Statement,Mirabeau.DatabaseReleaseTool.Policies,MustContainSqlFilePolicy,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Policies\MustContainSqlFilePolicy.cs,CheckPolicy,The length of the statement  "	FileInfo[] allSqlFiles = FileListFilter.FilterFileListWithIgnoreDirectoryFilter (databaseScriptsRoot.GetFiles (ToolConfiguration.SqlFileSearchPattern' SearchOption.AllDirectories)).ToArray (); " is 192.
Long Statement,Mirabeau.DatabaseReleaseTool.Policies,MustContainSqlFilePolicy,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Policies\MustContainSqlFilePolicy.cs,CheckPolicy,The length of the statement  "		result.Messages.Add (string.Format ("MustContainSqlFilePolicy failed. There were no script files with the extension: {0} found."' ToolConfiguration.SqlFileExtension)); " is 167.
Long Statement,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFiles,The length of the statement  "		_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Start executing file '{0}'"' filename)' 2); " is 120.
Long Statement,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFiles,The length of the statement  "			throw new TransactionalSqlFileExecutorException (string.Format (CultureInfo.InstalledUICulture' "An error has occured wile excecuting sql file: {0}."' filename)' e); " is 165.
Long Statement,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFiles,The length of the statement  "		_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Finished executing file '{0}'"' filename)' 2); " is 123.
Long Statement,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFilesInTransaction,The length of the statement  "			_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Start executing file '{0}'"' filename)' 2); " is 120.
Long Statement,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFilesInTransaction,The length of the statement  "			_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Finished executing file '{0}'"' filename)' 2); " is 123.
Long Statement,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFilesInTransaction,The length of the statement  "			TransactionalSqlFileExecutorRollbackException newExc = new TransactionalSqlFileExecutorRollbackException ("Error while rollbacking transaction."' exception' rollbackBackTransaction); " is 182.
Long Statement,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExecuteOneFileInCommand,The length of the statement  "		throw new TransactionalSqlFileExecutorException (string.Format (CultureInfo.InstalledUICulture' "An error has occured wile excecuting sql file: {0}."' filename)' e); " is 165.
Magic Number,Mirabeau.DatabaseReleaseTool.Connection,ConnectionStringFactory,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Connection\ConnectionStringFactory.cs,CreateFromArguments,The following statement contains a magic number: switch (parameters.DatabaseType) {  case DatabaseType.MsSql:  	SqlConnectionStringBuilder sqlConnectionStringBuilder = new SqlConnectionStringBuilder {  		DataSource = parameters.Arguments.Hostname'  		UserID = parameters.Arguments.Username'  		Password = parameters.Arguments.Password'  		InitialCatalog = parameters.Arguments.Database  	};  	if (parameters.BeforeExecuteScriptsAction == BeforeExecuteScriptsAction.CreateDatabase) {  		sqlConnectionStringBuilder.InitialCatalog = "master";  	}  	return sqlConnectionStringBuilder.ConnectionString;  case DatabaseType.Oracle:  	if (parameters.BeforeExecuteScriptsAction == BeforeExecuteScriptsAction.CreateDatabase) {  		throw new ConfigurationErrorsException ("Create database is not allowed in combination with Oracle.");  	}  	return   	#pragma  	new OracleConnectionStringBuilder  	#pragma  	 {  		DataSource = parameters.Arguments.Hostname'  		UserID = parameters.Arguments.Username'  		Password = parameters.Arguments.Password'  	}.ConnectionString;  case DatabaseType.MySql:  	if (parameters.BeforeExecuteScriptsAction == BeforeExecuteScriptsAction.CreateDatabase) {  		throw new ConfigurationErrorsException ("Create database is not allowed in combination with MySql.");  	}  	return new MySqlConnectionStringBuilder {  		Server = parameters.Arguments.Hostname'  		UserID = parameters.Arguments.Username'  		Password = parameters.Arguments.Password'  		Database = parameters.Arguments.Database  	}.ConnectionString;  default:  	throw new ArgumentOutOfRangeException ("parameters.DatabaseType");  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Connection,ConnectionStringFactory,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Connection\ConnectionStringFactory.cs,CreateFromArguments,The following statement contains a magic number: switch (parameters.DatabaseType) {  case DatabaseType.MsSql:  	SqlConnectionStringBuilder sqlConnectionStringBuilder = new SqlConnectionStringBuilder {  		DataSource = parameters.Arguments.Hostname'  		UserID = parameters.Arguments.Username'  		Password = parameters.Arguments.Password'  		InitialCatalog = parameters.Arguments.Database  	};  	if (parameters.BeforeExecuteScriptsAction == BeforeExecuteScriptsAction.CreateDatabase) {  		sqlConnectionStringBuilder.InitialCatalog = "master";  	}  	return sqlConnectionStringBuilder.ConnectionString;  case DatabaseType.Oracle:  	if (parameters.BeforeExecuteScriptsAction == BeforeExecuteScriptsAction.CreateDatabase) {  		throw new ConfigurationErrorsException ("Create database is not allowed in combination with Oracle.");  	}  	return   	#pragma  	new OracleConnectionStringBuilder  	#pragma  	 {  		DataSource = parameters.Arguments.Hostname'  		UserID = parameters.Arguments.Username'  		Password = parameters.Arguments.Password'  	}.ConnectionString;  case DatabaseType.MySql:  	if (parameters.BeforeExecuteScriptsAction == BeforeExecuteScriptsAction.CreateDatabase) {  		throw new ConfigurationErrorsException ("Create database is not allowed in combination with MySql.");  	}  	return new MySqlConnectionStringBuilder {  		Server = parameters.Arguments.Hostname'  		UserID = parameters.Arguments.Username'  		Password = parameters.Arguments.Password'  		Database = parameters.Arguments.Database  	}.ConnectionString;  default:  	throw new ArgumentOutOfRangeException ("parameters.DatabaseType");  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Connection,ConnectionStringFactory,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Connection\ConnectionStringFactory.cs,CreateFromArguments,The following statement contains a magic number: return   #pragma  new OracleConnectionStringBuilder  #pragma   {  	DataSource = parameters.Arguments.Hostname'  	UserID = parameters.Arguments.Username'  	Password = parameters.Arguments.Password'  }.ConnectionString;  
Magic Number,Mirabeau.DatabaseReleaseTool.Connection,ConnectionStringFactory,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Connection\ConnectionStringFactory.cs,CreateFromArguments,The following statement contains a magic number: return   #pragma  new OracleConnectionStringBuilder  #pragma   {  	DataSource = parameters.Arguments.Hostname'  	UserID = parameters.Arguments.Username'  	Password = parameters.Arguments.Password'  }.ConnectionString;  
Magic Number,Mirabeau.DatabaseReleaseTool.Connection,DatabaseConnectionFactory,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Connection\DatabaseConnectionFactory.cs,CreateDatabaseConnection,The following statement contains a magic number: switch (databaseType) {  case DatabaseType.MsSql:  	return new SqlConnection (connectionString);  case DatabaseType.Oracle:  	#pragma  	return new OracleConnection (connectionString);  #pragma  case DatabaseType.MySql:  	return new MySqlConnection (connectionString);  default:  	throw new ArgumentOutOfRangeException ("databaseType"' string.Format (@"No valid database type given '{0}'"' databaseType));  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Connection,DatabaseConnectionFactory,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Connection\DatabaseConnectionFactory.cs,CreateDatabaseConnection,The following statement contains a magic number: switch (databaseType) {  case DatabaseType.MsSql:  	return new SqlConnection (connectionString);  case DatabaseType.Oracle:  	#pragma  	return new OracleConnection (connectionString);  #pragma  case DatabaseType.MySql:  	return new MySqlConnection (connectionString);  default:  	throw new ArgumentOutOfRangeException ("databaseType"' string.Format (@"No valid database type given '{0}'"' databaseType));  }  
Magic Number,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The following statement contains a magic number: if (options.InformationSwitch == InformationSwitch.On) {  	// Print extra info  	PrintUsage ();  	PrintDatabaseDirectoryStructureTemplate ();  	return -2;  }  
Magic Number,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The following statement contains a magic number: return -2;  
Magic Number,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The following statement contains a magic number: if (validationResult.Status == ArgumentValidationStatus.Failed) {  	outputLogger.WriteErrorMessage ("\nArgument error:\n");  	validationResult.ValidationMessages.ForEach (item => outputLogger.WriteErrorMessage (string.Format (CultureInfo.InvariantCulture' "\t{0}\n"' item)));  	PrintUsage ();  	return -3;  }  
Magic Number,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The following statement contains a magic number: return -3;  
Magic Number,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The following statement contains a magic number: try {  	databaseReleaseTool = new DatabaseReleaseTool (options.DatabaseScriptsPath' new CreateDatabasePolicyComposite ()' new FileStructurePolicyComposite ()' outputLogger' new ConnectionStringFactory ()' new DatabaseConnectionFactory ());  }  catch (Exception ex) {  	outputLogger.WriteErrorMessage (string.Format ("Error while creating databasereleasetool. {0}."' ex.Message));  	outputLogger.WriteDebugMessage (ex.StackTrace);  	return -5;  }  
Magic Number,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The following statement contains a magic number: return -5;  
Magic Number,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The following statement contains a magic number: try {  	result = databaseReleaseTool.Execute (options.FromVersion' options.ToVersion' connectionParameters' options.EncodingForReadingSqlScripts);  }  catch (Exception ex) {  	outputLogger.WriteErrorMessage (string.Format (CultureInfo.InvariantCulture' "Unexpected error while Executing scripts. {0}."' ex.Message));  	outputLogger.WriteDebugMessage (ex.StackTrace);  	return -6;  }  
Magic Number,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The following statement contains a magic number: return -6;  
Magic Number,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The following statement contains a magic number: if (!result.Success) {  	outputLogger.WriteErrorMessage ("Excecution failed with the following errors: ");  	outputLogger.WriteErrorMessage (string.Join ("\n"' result.Errors.ToArray ()));  	return -10;  }  
Magic Number,Mirabeau.DatabaseReleaseTool,Program,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Program.cs,Main,The following statement contains a magic number: return -10;  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFiles,The following statement contains a magic number: foreach (string filename in fileList) {  	_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Start executing file '{0}'"' filename)' 2);  	try {  		using (IDbCommand command = _connection.CreateCommand ()) {  			string commandText = File.ReadAllText (filename' encodingForReadingSqlScripts);  			command.CommandText = commandText;  			command.CommandType = CommandType.Text;  			command.CommandTimeout = ToolConfiguration.DefaultCommandTimeout;  			int affectedRows = command.ExecuteNonQuery ();  			_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "AffectedRows:[{0}]"' affectedRows)' 3);  		}  	}  	catch (Exception e) {  		throw new TransactionalSqlFileExecutorException (string.Format (CultureInfo.InstalledUICulture' "An error has occured wile excecuting sql file: {0}."' filename)' e);  	}  	_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Finished executing file '{0}'"' filename)' 2);  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFiles,The following statement contains a magic number: foreach (string filename in fileList) {  	_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Start executing file '{0}'"' filename)' 2);  	try {  		using (IDbCommand command = _connection.CreateCommand ()) {  			string commandText = File.ReadAllText (filename' encodingForReadingSqlScripts);  			command.CommandText = commandText;  			command.CommandType = CommandType.Text;  			command.CommandTimeout = ToolConfiguration.DefaultCommandTimeout;  			int affectedRows = command.ExecuteNonQuery ();  			_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "AffectedRows:[{0}]"' affectedRows)' 3);  		}  	}  	catch (Exception e) {  		throw new TransactionalSqlFileExecutorException (string.Format (CultureInfo.InstalledUICulture' "An error has occured wile excecuting sql file: {0}."' filename)' e);  	}  	_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Finished executing file '{0}'"' filename)' 2);  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFiles,The following statement contains a magic number: foreach (string filename in fileList) {  	_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Start executing file '{0}'"' filename)' 2);  	try {  		using (IDbCommand command = _connection.CreateCommand ()) {  			string commandText = File.ReadAllText (filename' encodingForReadingSqlScripts);  			command.CommandText = commandText;  			command.CommandType = CommandType.Text;  			command.CommandTimeout = ToolConfiguration.DefaultCommandTimeout;  			int affectedRows = command.ExecuteNonQuery ();  			_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "AffectedRows:[{0}]"' affectedRows)' 3);  		}  	}  	catch (Exception e) {  		throw new TransactionalSqlFileExecutorException (string.Format (CultureInfo.InstalledUICulture' "An error has occured wile excecuting sql file: {0}."' filename)' e);  	}  	_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Finished executing file '{0}'"' filename)' 2);  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFiles,The following statement contains a magic number: _outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Start executing file '{0}'"' filename)' 2);  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFiles,The following statement contains a magic number: try {  	using (IDbCommand command = _connection.CreateCommand ()) {  		string commandText = File.ReadAllText (filename' encodingForReadingSqlScripts);  		command.CommandText = commandText;  		command.CommandType = CommandType.Text;  		command.CommandTimeout = ToolConfiguration.DefaultCommandTimeout;  		int affectedRows = command.ExecuteNonQuery ();  		_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "AffectedRows:[{0}]"' affectedRows)' 3);  	}  }  catch (Exception e) {  	throw new TransactionalSqlFileExecutorException (string.Format (CultureInfo.InstalledUICulture' "An error has occured wile excecuting sql file: {0}."' filename)' e);  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFiles,The following statement contains a magic number: using (IDbCommand command = _connection.CreateCommand ()) {  	string commandText = File.ReadAllText (filename' encodingForReadingSqlScripts);  	command.CommandText = commandText;  	command.CommandType = CommandType.Text;  	command.CommandTimeout = ToolConfiguration.DefaultCommandTimeout;  	int affectedRows = command.ExecuteNonQuery ();  	_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "AffectedRows:[{0}]"' affectedRows)' 3);  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFiles,The following statement contains a magic number: _outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "AffectedRows:[{0}]"' affectedRows)' 3);  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFiles,The following statement contains a magic number: _outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Finished executing file '{0}'"' filename)' 2);  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFilesInTransaction,The following statement contains a magic number: try {  	foreach (string filename in fileList) {  		_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Start executing file '{0}'"' filename)' 2);  		ExecuteOneFileInCommand (filename' transaction' encodingForReadingSqlScripts);  		_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Finished executing file '{0}'"' filename)' 2);  	}  	_outputLogger.WriteInfoLine ("Starting to commit transaction"' 1);  	transaction.Commit ();  	_outputLogger.WriteInfoLine ("Finished commiting transaction"' 1);  }  catch (TransactionalSqlFileExecutorException exception) {  	try {  		transaction.Rollback ();  	}  	catch (Exception rollbackBackTransaction) {  		TransactionalSqlFileExecutorRollbackException newExc = new TransactionalSqlFileExecutorRollbackException ("Error while rollbacking transaction."' exception' rollbackBackTransaction);  		throw newExc;  	}  	throw;  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFilesInTransaction,The following statement contains a magic number: try {  	foreach (string filename in fileList) {  		_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Start executing file '{0}'"' filename)' 2);  		ExecuteOneFileInCommand (filename' transaction' encodingForReadingSqlScripts);  		_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Finished executing file '{0}'"' filename)' 2);  	}  	_outputLogger.WriteInfoLine ("Starting to commit transaction"' 1);  	transaction.Commit ();  	_outputLogger.WriteInfoLine ("Finished commiting transaction"' 1);  }  catch (TransactionalSqlFileExecutorException exception) {  	try {  		transaction.Rollback ();  	}  	catch (Exception rollbackBackTransaction) {  		TransactionalSqlFileExecutorRollbackException newExc = new TransactionalSqlFileExecutorRollbackException ("Error while rollbacking transaction."' exception' rollbackBackTransaction);  		throw newExc;  	}  	throw;  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFilesInTransaction,The following statement contains a magic number: foreach (string filename in fileList) {  	_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Start executing file '{0}'"' filename)' 2);  	ExecuteOneFileInCommand (filename' transaction' encodingForReadingSqlScripts);  	_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Finished executing file '{0}'"' filename)' 2);  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFilesInTransaction,The following statement contains a magic number: foreach (string filename in fileList) {  	_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Start executing file '{0}'"' filename)' 2);  	ExecuteOneFileInCommand (filename' transaction' encodingForReadingSqlScripts);  	_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Finished executing file '{0}'"' filename)' 2);  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFilesInTransaction,The following statement contains a magic number: _outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Start executing file '{0}'"' filename)' 2);  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExcecuteAllSqlFilesInTransaction,The following statement contains a magic number: _outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "Finished executing file '{0}'"' filename)' 2);  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExecuteOneFileInCommand,The following statement contains a magic number: try {  	using (IDbCommand command = _connection.CreateCommand ()) {  		string commandText = File.ReadAllText (filename' encodingForReadingSqlScripts);  		command.CommandText = commandText;  		command.CommandType = CommandType.Text;  		command.CommandTimeout = ToolConfiguration.DefaultCommandTimeout;  		command.Transaction = transaction;  		int affectedRows = command.ExecuteNonQuery ();  		_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "AffectedRows:[{0}]"' affectedRows)' 3);  	}  }  catch (Exception e) {  	throw new TransactionalSqlFileExecutorException (string.Format (CultureInfo.InstalledUICulture' "An error has occured wile excecuting sql file: {0}."' filename)' e);  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExecuteOneFileInCommand,The following statement contains a magic number: using (IDbCommand command = _connection.CreateCommand ()) {  	string commandText = File.ReadAllText (filename' encodingForReadingSqlScripts);  	command.CommandText = commandText;  	command.CommandType = CommandType.Text;  	command.CommandTimeout = ToolConfiguration.DefaultCommandTimeout;  	command.Transaction = transaction;  	int affectedRows = command.ExecuteNonQuery ();  	_outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "AffectedRows:[{0}]"' affectedRows)' 3);  }  
Magic Number,Mirabeau.DatabaseReleaseTool.Sql,TransactionalSqlFileExecutor,C:\repos\mirabeau-nl_DatabaseReleaseTool\Source\Mirabeau.DatabaseReleaseTool\Sql\TransactionalSqlFileExecutor.cs,ExecuteOneFileInCommand,The following statement contains a magic number: _outputLogger.WriteInfoLine (string.Format (CultureInfo.InstalledUICulture' "AffectedRows:[{0}]"' affectedRows)' 3);  
