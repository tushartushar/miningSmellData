Implementation smell,Namespace,Class,File,Method,Description
Complex Method,DebugEngine.Engine,AD7StackFrame,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7StackFrame.cs,ParseText,Cyclomatic complexity of the method is 8
Complex Method,DebugEngine.Engine,AD7StackFrame,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7StackFrame.cs,SetFrameInfo,Cyclomatic complexity of the method is 15
Complex Method,DebugEngine.Engine,AD7MemoryAddress,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7MemoryAddress.cs,Compare,Cyclomatic complexity of the method is 32
Complex Method,DebugEngine.Engine,AD7Property,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Property.cs,ConstructDebugPropertyInfo,Cyclomatic complexity of the method is 15
Complex Method,DebugEngine.Engine,AD7Thread,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Thread.cs,GetThreadProperties100,Cyclomatic complexity of the method is 8
Complex Method,DebugEngine.Engine,AD7Engine,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Engine.cs,Step,Cyclomatic complexity of the method is 9
Complex Method,DebugEngine.Node,NodeProcess,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\NodeProcess.cs,OnProcessOutputData,Cyclomatic complexity of the method is 8
Complex Method,DebugEngine.Node.Debugger.Communication,NodeDebuggerClient,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\Communication\NodeDebuggerClient.cs,OnOutputMessage,Cyclomatic complexity of the method is 10
Complex Method,DebugEngine.Node.Debugger.Communication,NodeDebuggerClient,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\Communication\NodeDebuggerClient.cs,HandleEventMessage,Cyclomatic complexity of the method is 19
Complex Method,DebugEngine.Node.Debugger,NodeMessageFactory,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\NodeMessageFactory.cs,CreateResponseMessage,Cyclomatic complexity of the method is 12
Complex Method,DebugEngine.Node.Debugger,NodeMessageFactory,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\NodeMessageFactory.cs,CreateVariable,Cyclomatic complexity of the method is 49
Long Parameter List,DebugEngine.Engine,AD7ProgramProvider,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7ProgramProvider.cs,GetProviderProcessData,The method has 5 parameters.
Long Parameter List,DebugEngine.Engine,AD7ProgramProvider,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7ProgramProvider.cs,GetProviderProgramNode,The method has 6 parameters.
Long Parameter List,DebugEngine.Engine,AD7ProgramProvider,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7ProgramProvider.cs,WatchForProviderEvents,The method has 6 parameters.
Long Parameter List,DebugEngine.Engine,AD7StackFrame,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7StackFrame.cs,ParseText,The method has 6 parameters.
Long Parameter List,DebugEngine.Engine,AD7StackFrame,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7StackFrame.cs,EnumProperties,The method has 6 parameters.
Long Parameter List,DebugEngine.Engine,AD7Property,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Property.cs,EnumChildren,The method has 7 parameters.
Long Parameter List,DebugEngine.Engine,AD7Property,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Property.cs,GetPropertyInfo,The method has 6 parameters.
Long Parameter List,DebugEngine.Engine,AD7Engine,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Engine.cs,Attach,The method has 5 parameters.
Long Parameter List,DebugEngine.Engine,AD7Engine,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Engine.cs,LaunchSuspended,The method has 13 parameters.
Long Parameter List,DebugEngine.Engine,AD7Engine,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Engine.cs,EnumCodePaths,The method has 6 parameters.
Long Parameter List,DebugEngine.Node,NodeBreakpoint,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\NodeBreakpoint.cs,NodeBreakpoint,The method has 5 parameters.
Long Parameter List,DebugEngine.Node,NodeEvaluationResult,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\NodeEvaluationResult.cs,NodeEvaluationResult,The method has 9 parameters.
Long Parameter List,DebugEngine.Node,NodeProcess,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\NodeProcess.cs,NodeProcess,The method has 5 parameters.
Long Parameter List,DebugEngine.Node,NodeStackFrame,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\NodeStackFrame.cs,NodeStackFrame,The method has 7 parameters.
Long Statement,DebugEngine.Engine,AD7Expression,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Expression.cs,EvaluateAsync,The length of the statement  "	_frame.Engine.Send (new AD7ExpressionEvaluationCompleteEvent (this' new AD7Property (result))' AD7ExpressionEvaluationCompleteEvent.IID' _frame.Engine' _frame.Thread); " is 167.
Long Statement,DebugEngine.Engine,AD7ProgramProvider,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7ProgramProvider.cs,GetProviderProcessData,The length of the statement  "	// we handle creation of the remote program provider ourselves.  This is because we always load our program provider locally which keeps " is 136.
Long Statement,DebugEngine.Engine,AD7ProgramProvider,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7ProgramProvider.cs,GetProviderProcessData,The length of the statement  "	// attach working when developing Node Tools and running/debugging from within VS and in the experimental hive.  When we are installed " is 134.
Long Statement,DebugEngine.Engine,AD7ProgramProvider,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7ProgramProvider.cs,GetProviderProcessData,The length of the statement  "	// we install into the GAC so these types are available to create and then remote debugging works as well.  When we're running in the " is 133.
Long Statement,DebugEngine.Engine,AD7ProgramProvider,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7ProgramProvider.cs,GetProviderProcessData,The length of the statement  "	// experimental hive we are not in the GAC so if we're created outside of VS (e.g. in msvsmon on the local machine) then we can't get " is 133.
Long Statement,DebugEngine.Engine,AD7ProgramProvider,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7ProgramProvider.cs,GetProviderProcessData,The length of the statement  "				int hr = dbgServer.CreateManagedInstanceInServer (typeof(AD7ProgramProvider).FullName' typeof(AD7ProgramProvider).Assembly.FullName' 0' ref g' out remoteProviderPunk); " is 167.
Long Statement,DebugEngine.Engine,AD7StackFrame,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7StackFrame.cs,EnumProperties,The length of the statement  "	if (guidFilter == DebuggerConstants.guidFilterLocalsPlusArgs || guidFilter == DebuggerConstants.guidFilterAllLocalsPlusArgs || guidFilter == DebuggerConstants.guidFilterAllLocals) { " is 181.
Long Statement,DebugEngine.Engine,AD7StackFrame,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7StackFrame.cs,CreateLocalsPlusArgsProperties,The length of the statement  "			propInfo [localsLength + i] = property.ConstructDebugPropertyInfo (radix' enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_STANDARD); " is 125.
Long Statement,DebugEngine.Engine,AD7MemoryAddress,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7MemoryAddress.cs,Compare,The length of the statement  "				result = compareTo._filename == _filename && (compareTo._lineNo + 1) >= _frame.StartLine && (compareTo._lineNo + 1) <= _frame.EndLine; " is 134.
Long Statement,DebugEngine.Engine,AD7MemoryAddress,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7MemoryAddress.cs,Compare,The length of the statement  "				result = compareTo._filename == _filename && (_lineNo + 1) >= compareTo._frame.StartLine && (compareTo._lineNo + 1) <= compareTo._frame.EndLine; " is 144.
Long Statement,DebugEngine.Engine,AD7Module,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Module.cs,GetSymbolInfo,The length of the statement  "	// This engine only supports loading symbols at the location specified in the binary's symbol path location in the PE file and " is 126.
Long Statement,DebugEngine.Engine,AD7PendingBreakpoint,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7PendingBreakpoint.cs,Bind,The length of the statement  "		_breakpoint = new NodeBreakpoint (_engine.Process.Debugger' documentName' (int)startPosition [0].dwLine' (int)startPosition [0].dwColumn' _bpRequestInfo.bpCondition.bstrCondition); " is 180.
Long Statement,DebugEngine.Engine,AD7PendingBreakpoint,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7PendingBreakpoint.cs,Bind,The length of the statement  "	// The breakpoint could not be bound. This may occur for many reasons such as an invalid location' an invalid expression' etc... " is 128.
Long Statement,DebugEngine.Engine,AD7PendingBreakpoint,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7PendingBreakpoint.cs,Bind,The length of the statement  "	// The sample engine does not support this' but a real world engine will want to send an instance of IDebugBreakpointErrorEvent2 to the " is 135.
Long Statement,DebugEngine.Engine,AD7PendingBreakpoint,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7PendingBreakpoint.cs,Bind,The length of the statement  "	// UI and return a valid instance of IDebugErrorBreakpoint2 from IDebugPendingBreakpoint2::EnumErrorBreakpoints. The debugger will then " is 135.
Long Statement,DebugEngine.Engine,AD7PendingBreakpoint,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7PendingBreakpoint.cs,CanBind,The length of the statement  "		// The sample engine does not support this' but a real world engine will want to return a valid enumeration of IDebugErrorBreakpoint2. " is 134.
Long Statement,DebugEngine.Engine,AD7PendingBreakpoint,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7PendingBreakpoint.cs,EnumErrorBreakpoints,The length of the statement  "	// Called when a pending breakpoint could not be bound. This may occur for many reasons such as an invalid location' an invalid expression' etc... " is 146.
Long Statement,DebugEngine.Engine,AD7PendingBreakpoint,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7PendingBreakpoint.cs,EnumErrorBreakpoints,The length of the statement  "	// The sample engine does not support this' but a real world engine will want to send an instance of IDebugBreakpointErrorEvent2 to the " is 135.
Long Statement,DebugEngine.Engine,AD7PendingBreakpoint,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7PendingBreakpoint.cs,EnumErrorBreakpoints,The length of the statement  "	// UI and return a valid enumeration of IDebugErrorBreakpoint2 from IDebugPendingBreakpoint2::EnumErrorBreakpoints. The debugger will then " is 138.
Long Statement,DebugEngine.Engine,AD7Engine,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Engine.cs,OnExceptionRaised,The length of the statement  "	Send (new AD7DebugExceptionEvent (e.Exception.TypeName' e.Exception.Description' e.IsUnhandled)' AD7DebugExceptionEvent.IID' _threads.Item2); " is 141.
Long Statement,DebugEngine.Engine,AD7Engine,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Engine.cs,OnBreakpointBindSucceeded,The length of the statement  "	Send (new AD7BreakpointBoundEvent ((AD7PendingBreakpoint)pendingBreakpoint' boundBreakpoint)' AD7BreakpointBoundEvent.IID' null); " is 129.
Long Statement,DebugEngine.Node.Debugger.Communication,NodeDebuggerClient,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\Communication\NodeDebuggerClient.cs,HandleEventMessage,The length of the statement  "			Dictionary<int' Tuple<TaskCompletionSource<IResponseMessage>' object[]>> messages = Interlocked.Exchange (ref _messages' new Dictionary<int' Tuple<TaskCompletionSource<IResponseMessage>' object[]>> ()); " is 202.
Long Statement,DebugEngine.Node.Debugger,NodeDebuggerManager,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\NodeDebuggerManager.cs,CheckWhetherFirstLineBreakpoint,The length of the statement  "	if (breakpoint.Line == _initialFrame.Line && string.Equals (filename' breakpoint.Filename' StringComparison.InvariantCultureIgnoreCase)) { " is 138.
Long Statement,DebugEngine.Node.Debugger,NodeDebuggerManager,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\NodeDebuggerManager.cs,OnBreakpointEvent,The length of the statement  "		NodeBreakpoint breakpoint = _breakpoints.Values.FirstOrDefault (p => p.Line == lineNo && String.Compare (p.Filename' filename' StringComparison.OrdinalIgnoreCase) == 0); " is 169.
Empty Catch Block,DebugEngine.Engine,AD7Engine,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Engine.cs,Send,The method has an empty catch block.
Empty Catch Block,DebugEngine.Engine,AD7Engine,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Engine.cs,OnProcessExited,The method has an empty catch block.
Empty Catch Block,DebugEngine.Node,NodeProcess,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\NodeProcess.cs,Terminate,The method has an empty catch block.
Empty Catch Block,DebugEngine.Node,NodeProcess,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\NodeProcess.cs,Terminate,The method has an empty catch block.
Magic Number,DebugEngine.Engine,AD7Property,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Property.cs,ConstructDebugPropertyInfo,The following statement contains a magic number: if (dwFields.HasFlag (enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_VALUE)) {  	if (radix == 16) {  		propertyInfo.bstrValue = _variable.HexValue ?? _variable.StringValue;  	} else {  		if (_variable.Type.HasFlag (NodeExpressionType.String)) {  			propertyInfo.bstrValue = string.Format ("\"{0}\""' _variable.StringValue);  		} else {  			propertyInfo.bstrValue = _variable.StringValue;  		}  	}  	propertyInfo.dwFields |= enum_DEBUGPROP_INFO_FLAGS.DEBUGPROP_INFO_VALUE;  }  
Magic Number,DebugEngine.Engine,AD7Property,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Property.cs,ConstructDebugPropertyInfo,The following statement contains a magic number: if (radix == 16) {  	propertyInfo.bstrValue = _variable.HexValue ?? _variable.StringValue;  } else {  	if (_variable.Type.HasFlag (NodeExpressionType.String)) {  		propertyInfo.bstrValue = string.Format ("\"{0}\""' _variable.StringValue);  	} else {  		propertyInfo.bstrValue = _variable.StringValue;  	}  }  
Magic Number,DebugEngine.Engine,AD7Thread,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Thread.cs,GetThreadProperties100,The following statement contains a magic number: if (hRes == VSConstants.S_OK && dwFields != (uint)dwFields90) {  	if ((dwFields & (uint)enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME) != 0) {  		// Thread display name is being requested  		props [0].bstrDisplayName = Name;  		props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME;  		// Give this display name a higher priority than the default (0)  		// so that it will actually be displayed  		props [0].DisplayNamePriority = 10;  		props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME_PRIORITY;  	}  	if ((dwFields & (uint)enum_THREADPROPERTY_FIELDS100.TPF100_CATEGORY) != 0) {  		// Thread category is being requested  		if (_thread.IsWorkerThread) {  			props [0].dwThreadCategory = (uint)EnumThreadCategory.ThreadcategoryWorker;  		} else {  			props [0].dwThreadCategory = (uint)EnumThreadCategory.ThreadcategoryMain;  		}  		props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_CATEGORY;  	}  	if ((dwFields & (uint)enum_THREADPROPERTY_FIELDS100.TPF100_ID) != 0) {  		// Thread category is being requested  		props [0].dwThreadId = (uint)_thread.Id;  		props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_ID;  	}  	if ((dwFields & (uint)enum_THREADPROPERTY_FIELDS100.TPF100_AFFINITY) != 0) {  		// Thread cpu affinity is being requested  		props [0].AffinityMask = 0;  		props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_AFFINITY;  	}  	if ((dwFields & (uint)enum_THREADPROPERTY_FIELDS100.TPF100_PRIORITY_ID) != 0) {  		// Thread display name is being requested  		props [0].priorityId = 0;  		props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_PRIORITY_ID;  	}  }  
Magic Number,DebugEngine.Engine,AD7Thread,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Thread.cs,GetThreadProperties100,The following statement contains a magic number: if ((dwFields & (uint)enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME) != 0) {  	// Thread display name is being requested  	props [0].bstrDisplayName = Name;  	props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME;  	// Give this display name a higher priority than the default (0)  	// so that it will actually be displayed  	props [0].DisplayNamePriority = 10;  	props [0].dwFields |= (uint)enum_THREADPROPERTY_FIELDS100.TPF100_DISPLAY_NAME_PRIORITY;  }  
Magic Number,DebugEngine.Engine,AD7Thread,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Thread.cs,GetThreadProperties100,The following statement contains a magic number: props [0].DisplayNamePriority = 10;  
Magic Number,DebugEngine.Node.Debugger.Serialization,SetVariableValueMessage,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\Serialization\SetVariableValueMessage.cs,Execute,The following statement contains a magic number: if (arguments.Length != 3) {  	throw new ArgumentOutOfRangeException ("arguments");  }  
Magic Number,DebugEngine.Node.Debugger.Serialization,EvaluateMessage,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\Serialization\EvaluateMessage.cs,Execute,The following statement contains a magic number: if (arguments.Length != 3) {  	throw new ArgumentOutOfRangeException ("arguments");  }  
Magic Number,DebugEngine.Node.Debugger,NodeMessageFactory,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\NodeMessageFactory.cs,CreateVariable,The following statement contains a magic number: switch (typeName) {  case "undefined":  	stringValue = "undefined";  	typeName = "Undefined";  	break;  case "null":  	stringValue = "null";  	typeName = "Null";  	break;  case "number":  	stringValue = variable.Value;  	typeName = "Number";  	break;  case "boolean":  	stringValue = variable.Value.ToLowerInvariant ();  	typeName = "Boolean";  	type |= NodeExpressionType.Boolean;  	break;  case "regexp":  	stringValue = variable.Value;  	typeName = "Regular Expression";  	type |= NodeExpressionType.Expandable;  	break;  case "function":  	stringValue = string.IsNullOrEmpty (variable.Text) ? "{Function}" : variable.Text;  	typeName = "Function";  	type |= NodeExpressionType.Function | NodeExpressionType.Expandable;  	break;  case "string":  	stringValue = variable.Value;  	typeName = "String";  	type |= NodeExpressionType.String;  	break;  case "object":  	stringValue = variable.Class == "Object" ? "{...}" : string.Format ("{{{0}}}"' variable.Class);  	typeName = "Object";  	type |= NodeExpressionType.Expandable;  	break;  case "error":  	stringValue = variable.Value;  	if (!string.IsNullOrEmpty (stringValue) && stringValue.StartsWith ("Error: ")) {  		stringValue = variable.Value.Substring (7);  	}  	typeName = "Error";  	type |= NodeExpressionType.Expandable;  	break;  default:  	stringValue = variable.Value;  	break;  }  
Magic Number,DebugEngine.Node.Debugger,NodeMessageFactory,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\NodeMessageFactory.cs,CreateVariable,The following statement contains a magic number: if (!string.IsNullOrEmpty (stringValue) && stringValue.StartsWith ("Error: ")) {  	stringValue = variable.Value.Substring (7);  }  
Magic Number,DebugEngine.Node.Debugger,NodeMessageFactory,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\NodeMessageFactory.cs,CreateVariable,The following statement contains a magic number: stringValue = variable.Value.Substring (7);  
Magic Number,DebugEngine.Node.Debugger,NodeDebuggerManager,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\NodeDebuggerManager.cs,SetVariableValueAsync,The following statement contains a magic number: if (_v8EngineVersion < new Version (3' 15' 8)) {  	throw new NotSupportedException ("Changing variable values available in node.js v0.11.0 and higher.");  }  
Magic Number,DebugEngine.Node.Debugger,NodeDebuggerManager,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\NodeDebuggerManager.cs,SetVariableValueAsync,The following statement contains a magic number: if (_v8EngineVersion < new Version (3' 15' 8)) {  	throw new NotSupportedException ("Changing variable values available in node.js v0.11.0 and higher.");  }  
Magic Number,DebugEngine.Node.Debugger,NodeDebuggerManager,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\NodeDebuggerManager.cs,SetVariableValueAsync,The following statement contains a magic number: if (_v8EngineVersion < new Version (3' 15' 8)) {  	throw new NotSupportedException ("Changing variable values available in node.js v0.11.0 and higher.");  }  
Missing Default,DebugEngine.Engine,AD7Engine,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Engine\AD7Engine.cs,Step,The following switch statement is missing a default case: switch (sk) {  case enum_STEPKIND.STEP_INTO:  	_process.Debugger.StepInto ();  	break;  case enum_STEPKIND.STEP_OUT:  	_process.Debugger.StepOut ();  	break;  case enum_STEPKIND.STEP_OVER:  	Process.Debugger.StepOver ();  	break;  }  
Missing Default,DebugEngine.Node.Debugger,NodeMessageFactory,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\NodeMessageFactory.cs,CreateResponseMessage,The following switch statement is missing a default case: switch ((string)message ["command"]) {  case "evaluate":  	return new EvaluateMessage (message);  case "continue":  	return new ContinueMessage (message);  case "backtrace":  	return new BacktraceMessage (message);  case "lookup":  	return new LookupMessage (message);  case "setVariableValue":  	return new SetVariableValueMessage (message);  case "frame":  	return new FrameMessage (message);  case "setbreakpoint":  	return new SetBreakpointMessage (message);  case "changebreakpoint":  	return new ChangeBreakpointMessage (message);  case "clearbreakpoint":  	return new ClearBreakpointMessage (message);  case "setexceptionbreak":  	return new SetExceptionBreakMessage (message);  case "suspend":  	return new SuspendMessage (message);  case "version":  	return new VersionMessage (message);  }  
Missing Default,DebugEngine.Node.Debugger,NodeMessageFactory,F:\newReposMay17\dtretyakov_node-tools\src\DebugEngine\Node\Debugger\NodeMessageFactory.cs,CreateEventMessage,The following switch statement is missing a default case: switch ((string)message ["event"]) {  case "afterCompile":  	return new CompileScriptMessage (message);  case "break":  	return new BreakpointMessage (message);  case "exception":  	return new ExceptionMessage (message);  }  
