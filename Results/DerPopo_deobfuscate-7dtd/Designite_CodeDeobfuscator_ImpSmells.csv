Implementation smell,Namespace,Class,File,Method,Description
Long Method,CodeDeobfuscator,GarbageRemover,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\GarbageRemover.cs,Apply,The method has 307 lines of code.
Complex Method,CodeDeobfuscator,DecryptStrings,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\DecryptStrings.cs,Apply,Cyclomatic complexity of the method is 10
Complex Method,CodeDeobfuscator,GarbageRemover,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\GarbageRemover.cs,Apply,Cyclomatic complexity of the method is 59
Complex Method,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,SafeRemove,Cyclomatic complexity of the method is 8
Complex Method,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,findMembers,Cyclomatic complexity of the method is 15
Complex Method,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,findTypes,Cyclomatic complexity of the method is 11
Complex Method,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,RenameVirtualMethod,Cyclomatic complexity of the method is 8
Long Parameter List,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,findMember,The method has 5 parameters. Parameters: module' type' allowMultipleResults' mustHaveResult' comparers
Long Statement,CodeDeobfuscator,DecryptStrings,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\DecryptStrings.cs,Apply,The length of the statement  "			Assembly assembly = Assembly.LoadFrom(Deobfuscator.sourceAssemblyPath.path + Path.DirectorySeparatorChar + Deobfuscator.sourceAssemblyPath.filename); " is 149.
Long Statement,CodeDeobfuscator,DecryptStrings,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\DecryptStrings.cs,Apply,The length of the statement  "								targetMethod.HasBody && targetMethod.Body.Instructions.Count > 5 && targetMethod.Body.Instructions[4].OpCode == OpCodes.Ldelem_U1) " is 130.
Long Statement,CodeDeobfuscator,DecryptStrings,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\DecryptStrings.cs,Apply,The length of the statement  "									//mdefBody.GetILProcessor().InsertBefore(instr1' (newInstr = mdefBody.GetILProcessor().Create(OpCodes.Ldstr' decrypted))); " is 122.
Long Statement,CodeDeobfuscator,GarbageRemover,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\GarbageRemover.cs,Apply,The length of the statement  "            //not as fancy as it could be; the alternate way would be checking the field's names (always 1 uppercase letter) but that method could more easily get outdated " is 159.
Long Statement,CodeDeobfuscator,GarbageRemover,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\GarbageRemover.cs,Apply,The length of the statement  "								//logger.Info(targetMethod.DeclaringType.FullName + "::" + targetMethod.Name + " -> " + mdef.DeclaringType.FullName + "::" + mdef.Name + " (@" + i + ")"); " is 154.
Long Statement,CodeDeobfuscator,GarbageRemover,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\GarbageRemover.cs,Apply,The length of the statement  "										if (targetBody.Instructions[k].OpCode != OpCodes.Ldarg || ((ParameterDefinition)targetBody.Instructions[k].Operand).Index != k) " is 127.
Long Statement,CodeDeobfuscator,GarbageRemover,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\GarbageRemover.cs,Apply,The length of the statement  "								List<Instruction> targetInstructions = new List<Instruction>(targetBody.Instructions.Count-targetMethod.Parameters.Count); " is 122.
Long Statement,CodeDeobfuscator,GarbageRemover,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\GarbageRemover.cs,Apply,The length of the statement  "								HelperClass.PatchInstructionReferences(mdefBody' instr' (targetInstructions.Count > 0) ? targetInstructions[0] : instr.Next); " is 125.
Long Statement,CodeDeobfuscator,GarbageRemover,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\GarbageRemover.cs,Apply,The length of the statement  "						else if ((instr.OpCode == OpCodes.Dup) && ((i+1) < mdefBody.Instructions.Count) && (mdefBody.Instructions[i+1].OpCode == OpCodes.Pop)) " is 134.
Long Statement,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,findMembers,The length of the statement  "				TypeDefinition tdef = (type is string) ? module.GetType((string)type) : ((type is TypeDefinition) ? ((TypeDefinition)type) : null); " is 131.
Long Statement,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,findMembers,The length of the statement  "				memberArray = (T[])memberCollection.GetType().GetMethod("ToArray"' new Type[0]).Invoke(memberCollection' new object[0]); " is 120.
Long Statement,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,executeActions,The length of the statement  "			TypeDefinition tdef = (type is string) ? module.GetType((string)type) : ((type is TypeDefinition) ? ((TypeDefinition)type) : null); " is 131.
Long Statement,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,RenameVirtualMethod,The length of the statement  "			foreach (MethodDefinition curVMethod in findMembers<MethodDefinition>(curBaseType.Module' null' false' vMethodComparer)) " is 120.
Long Statement,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,OnError,The length of the statement  "				logger.Error("Something really bad happened while executing OnError (cannot find " + error.ToString() + " in ErrorCode)."); " is 123.
Complex Conditional,CodeDeobfuscator,DecryptStrings,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\DecryptStrings.cs,Apply,The conditional expression  "targetMethod != null && targetMethod.IsStatic &&  								targetMethod.Parameters.Count == 1 && targetMethod.ReturnType.FullName.Equals("System.String") &&  								targetMethod.HasBody && targetMethod.Body.Instructions.Count > 5 && targetMethod.Body.Instructions[4].OpCode == OpCodes.Ldelem_U1"  is complex.
Complex Conditional,CodeDeobfuscator,GarbageRemover,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\GarbageRemover.cs,Apply,The conditional expression  "targetMethod != null &&                                  targetMethod.IsStatic && targetMethod.DeclaringType.Namespace.Equals("A") &&                                   targetMethod.Body.Instructions.Count < 10 &&                                  targetMethod.DeclaringType.Methods.Count == 1 && targetMethod.DeclaringType.Fields.Count == 0"  is complex.
Complex Conditional,CodeDeobfuscator,GarbageRemover,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\GarbageRemover.cs,Apply,The conditional expression  "i > 0 &&   							(instr.OpCode == OpCodes.Switch) &&   							((Instruction[])instr.Operand).Length == 1 && ((Instruction[])instr.Operand)[0] == mdefBody.Instructions[i-1]"  is complex.
Complex Conditional,CodeDeobfuscator,GarbageRemover,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\GarbageRemover.cs,Apply,The conditional expression  "(instr.OpCode == OpCodes.Ldc_I4_1) && ((i+4) < mdefBody.Instructions.Count) &&  							(mdefBody.Instructions[i+1].OpCode.Code == Code.Brtrue_S) &&  							(mdefBody.Instructions[i+2].OpCode.Code == Code.Ldtoken) &&  							(mdefBody.Instructions[i+3].OpCode.Code == Code.Pop)"  is complex.
Magic Number,CodeDeobfuscator,DecryptStrings,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\DecryptStrings.cs,Apply,The following statement contains a magic number: _i < 2
Magic Number,CodeDeobfuscator,DecryptStrings,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\DecryptStrings.cs,Apply,The following statement contains a magic number: targetMethod != null && targetMethod.IsStatic &&  								targetMethod.Parameters.Count == 1 && targetMethod.ReturnType.FullName.Equals("System.String") &&  								targetMethod.HasBody && targetMethod.Body.Instructions.Count > 5 && targetMethod.Body.Instructions[4].OpCode == OpCodes.Ldelem_U1
Magic Number,CodeDeobfuscator,DecryptStrings,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\DecryptStrings.cs,Apply,The following statement contains a magic number: targetMethod != null && targetMethod.IsStatic &&  								targetMethod.Parameters.Count == 1 && targetMethod.ReturnType.FullName.Equals("System.String") &&  								targetMethod.HasBody && targetMethod.Body.Instructions.Count > 5 && targetMethod.Body.Instructions[4].OpCode == OpCodes.Ldelem_U1
Magic Number,CodeDeobfuscator,DecryptStrings,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\DecryptStrings.cs,Apply,The following statement contains a magic number: (__i % (mdefs.Length/10)) == 0 && __i > 0
Magic Number,CodeDeobfuscator,GarbageRemover,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\GarbageRemover.cs,Apply,The following statement contains a magic number: targetMethod != null &&                                  targetMethod.IsStatic && targetMethod.DeclaringType.Namespace.Equals("A") &&                                   targetMethod.Body.Instructions.Count < 10 &&                                  targetMethod.DeclaringType.Methods.Count == 1 && targetMethod.DeclaringType.Fields.Count == 0
Magic Number,CodeDeobfuscator,GarbageRemover,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\GarbageRemover.cs,Apply,The following statement contains a magic number: (methodIndex % (mdefs.Length/10)) == 0 && methodIndex > 0
Magic Number,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,writeGenericArgument,The following statement contains a magic number: retBuilder.Remove(retBuilder.Length-2'2);
Magic Number,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,writeGenericArgument,The following statement contains a magic number: retBuilder.Remove(retBuilder.Length-2'2);
Magic Number,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,writeGenericArgument,The following statement contains a magic number: retBuilder.Length > 2 && retBuilder[retBuilder.Length-2] == '\u0060'
Magic Number,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,writeGenericArgument,The following statement contains a magic number: retBuilder.Length > 2 && retBuilder[retBuilder.Length-2] == '\u0060'
Magic Number,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,FieldTypeComparer,The following statement contains a magic number: return new GenericFuncContainer<FieldDefinition'bool>(field => {  				TypeReference tref = field.FieldType;   				TypeDefinition type = field.FieldType.Resolve();  				if (type == null)  					return false;  				System.Text.StringBuilder typeNameBuilder = new System.Text.StringBuilder();  				typeNameBuilder.Append(type.FullName);  				if ((type.GenericParameters.Count > 0) && (tref is GenericInstanceType))  				{  					typeNameBuilder.Remove(typeNameBuilder.Length-2'2);  					typeNameBuilder.Append('<');  					foreach (TypeReference garg in ((GenericInstanceType)tref).GenericArguments)  					{  						typeNameBuilder.Append(writeGenericArgument(garg));  					}  					typeNameBuilder[typeNameBuilder.Length-1] = '>';  				}  				return typeNameBuilder.ToString().Equals(fieldType);  			});
Magic Number,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,FieldTypeComparer,The following statement contains a magic number: return new GenericFuncContainer<FieldDefinition'bool>(field => {  				TypeReference tref = field.FieldType;   				TypeDefinition type = field.FieldType.Resolve();  				if (type == null)  					return false;  				System.Text.StringBuilder typeNameBuilder = new System.Text.StringBuilder();  				typeNameBuilder.Append(type.FullName);  				if ((type.GenericParameters.Count > 0) && (tref is GenericInstanceType))  				{  					typeNameBuilder.Remove(typeNameBuilder.Length-2'2);  					typeNameBuilder.Append('<');  					foreach (TypeReference garg in ((GenericInstanceType)tref).GenericArguments)  					{  						typeNameBuilder.Append(writeGenericArgument(garg));  					}  					typeNameBuilder[typeNameBuilder.Length-1] = '>';  				}  				return typeNameBuilder.ToString().Equals(fieldType);  			});
Magic Number,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,MethodParametersComparerEx,The following statement contains a magic number: return new GenericFuncContainer<MethodDefinition'bool> (method => {  				if (method.Parameters.Count != parameterTypes.Length)  					return false;  				for (int i = 0; i < method.Parameters.Count; i++)  				{  					if (parameterTypes[i].Length == 0)  						continue;  					TypeReference curParTref = method.Parameters[i].ParameterType;  					TypeDefinition curParTdef = curParTref.Resolve();  					if (curParTdef == null)  						throw new Exception("Unable to resolve the type '" + curParTref.FullName + "'!");  					System.Text.StringBuilder typeNameBuilder = new System.Text.StringBuilder ();  					typeNameBuilder.Append (curParTdef.FullName);  					if ((curParTdef.GenericParameters.Count > 0) && (curParTref is GenericInstanceType))  					{  						typeNameBuilder.Remove (typeNameBuilder.Length - 2' 2);  						typeNameBuilder.Append ('<');  						foreach (TypeReference garg in ((GenericInstanceType)curParTref).GenericArguments)  						{  							typeNameBuilder.Append (writeGenericArgument (garg));  						}  						typeNameBuilder [typeNameBuilder.Length - 1] = '>';  						if (curParTref.IsArray)  							typeNameBuilder.Append("[]");  					}  					if (!typeNameBuilder.ToString().Equals(parameterTypes[i]))  						return false;  				}  				return true;  			});
Magic Number,CodeDeobfuscator,HelperClass,D:\research\architectureSmells\repos\DerPopo_deobfuscate-7dtd\CodeDeobfuscator\HelperClass.cs,MethodParametersComparerEx,The following statement contains a magic number: return new GenericFuncContainer<MethodDefinition'bool> (method => {  				if (method.Parameters.Count != parameterTypes.Length)  					return false;  				for (int i = 0; i < method.Parameters.Count; i++)  				{  					if (parameterTypes[i].Length == 0)  						continue;  					TypeReference curParTref = method.Parameters[i].ParameterType;  					TypeDefinition curParTdef = curParTref.Resolve();  					if (curParTdef == null)  						throw new Exception("Unable to resolve the type '" + curParTref.FullName + "'!");  					System.Text.StringBuilder typeNameBuilder = new System.Text.StringBuilder ();  					typeNameBuilder.Append (curParTdef.FullName);  					if ((curParTdef.GenericParameters.Count > 0) && (curParTref is GenericInstanceType))  					{  						typeNameBuilder.Remove (typeNameBuilder.Length - 2' 2);  						typeNameBuilder.Append ('<');  						foreach (TypeReference garg in ((GenericInstanceType)curParTref).GenericArguments)  						{  							typeNameBuilder.Append (writeGenericArgument (garg));  						}  						typeNameBuilder [typeNameBuilder.Length - 1] = '>';  						if (curParTref.IsArray)  							typeNameBuilder.Append("[]");  					}  					if (!typeNameBuilder.ToString().Equals(parameterTypes[i]))  						return false;  				}  				return true;  			});
