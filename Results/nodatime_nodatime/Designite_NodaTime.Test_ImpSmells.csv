Implementation smell,Namespace,Class,File,Method,Description
Complex Method,NodaTime.Test,TestHelper,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestHelper.cs,TestOperatorComparison,Cyclomatic complexity of the method is 8
Complex Method,NodaTime.Test,TestHelper,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestHelper.cs,TestOperatorComparisonEquality,Cyclomatic complexity of the method is 9
Long Parameter List,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,NextOrSame,The method has 7 parameters. Parameters: year' month' day' dayOfWeek' expectedYear' expectedMonth' expectedDay
Long Parameter List,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,PreviousOrSame,The method has 7 parameters. Parameters: year' month' day' dayOfWeek' expectedYear' expectedMonth' expectedDay
Long Parameter List,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,Next,The method has 7 parameters. Parameters: year' month' day' dayOfWeek' expectedYear' expectedMonth' expectedDay
Long Parameter List,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,Previous,The method has 7 parameters. Parameters: year' month' day' dayOfWeek' expectedYear' expectedMonth' expectedDay
Long Parameter List,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Addition_Subtraction,The method has 6 parameters. Parameters: leftDays' leftNanos' rightDays' rightNanos' resultDays' resultNanos
Long Parameter List,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Multiplication,The method has 5 parameters. Parameters: startDays' startNanoOfDay' scalar' expectedDays' expectedNanoOfDay
Long Parameter List,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Division,The method has 5 parameters. Parameters: startDays' startNanoOfDay' divisor' expectedDays' expectedNanoOfDay
Long Parameter List,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorDivision_Int64,The method has 5 parameters. Parameters: days' nanoOfDay' divisor' expectedDays' expectedNanoOfDay
Long Parameter List,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorDivision_Double,The method has 5 parameters. Parameters: days' nanoOfDay' divisor' expectedDays' expectedNanoOfDay
Long Parameter List,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorDivision_Duration,The method has 5 parameters. Parameters: dividendDays' dividendNanoOfDay' divisorDays' divisorNanoOfDay' expected
Long Parameter List,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMultiplication_Double,The method has 5 parameters. Parameters: days' nanos' rightOperand' expectedDays' expectedNanos
Long Parameter List,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,JulianDateConversions,The method has 7 parameters. Parameters: julianDate' year' month' day' hour' minute' second
Long Parameter List,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromYearMonthWeekAndDay,The method has 5 parameters. Parameters: year' month' occurrence' dayOfWeek' expectedDay
Long Parameter List,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,FromHourMinuteSecondMillisecondTick_Invalid,The method has 5 parameters. Parameters: hour' minute' second' millisecond' tick
Long Parameter List,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,XmlSerialization,The method has 7 parameters. Parameters: hour' minute' second' nanoseconds' offsetHours' offsetMinutes' expected
Long Parameter List,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Between_LocalDateTime_AwkwardTimeOfDayWithSingleUnit,The method has 5 parameters. Parameters: startText' endText' units' expectedForward' expectedBackward
Long Parameter List,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,Parse,The method has 5 parameters. Parameters: text' year' month' day' calendar
Long Parameter List,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,GeneralConversionNearNawRuz,The method has 6 parameters. Parameters: gYear' gMonth' gDay' bYear' bMonth' bDay
Long Parameter List,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,SpecialCases,The method has 6 parameters. Parameters: gYear' gMonth' gDay' bYear' bMonth' bDay
Long Parameter List,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,GeneralWtoG,The method has 6 parameters. Parameters: bYear' bMonth' bDay' gYear' gMonth' gDay
Long Parameter List,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,EndOfMonth,The method has 5 parameters. Parameters: year' month' day' eomMonth' eomDay
Long Parameter List,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,WeekYearDifferentToYear,The method has 6 parameters. Parameters: year' month' day' weekYear' weekOfWeekYear' dayOfWeek
Long Parameter List,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,Iso,The method has 6 parameters. Parameters: year' month' day' weekYear' weekOfWeekYear' dayOfWeek
Long Parameter List,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,HebrewCalendar,The method has 8 parameters. Parameters: year' expectedFirstDay' isoYear' isoMonth' isoDay' expectedWeeks' expectedWeekYearOfFirstDay' expectedWeekOfWeekYearOfFirstDay
Long Parameter List,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,NonMondayFirstDayOfWeek,The method has 8 parameters. Parameters: minDaysInFirstWeek' firstDayOfWeek' weekYear' week' dayOfWeek' expectedYear' expectedMonth' expectedDay
Long Parameter List,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,GetLocalDate_Invalid,The method has 5 parameters. Parameters: bclRule' firstDayOfWeek' weekYear' week' dayOfWeek
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 5 parameters. Parameters: days' hours' minutes' seconds' nanoseconds
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' millis
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 5 parameters. Parameters: hours' minutes' seconds' milliseconds' ticksWithinMillisecond
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 6 parameters. Parameters: year' month' day' hour' minute' offset
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' offset
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' millis
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 5 parameters. Parameters: hour' minute' second' millis' offset
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 6 parameters. Parameters: year' month' day' hour' minute' zone
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 6 parameters. Parameters: year' month' day' hour' minute' second
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 7 parameters. Parameters: year' month' day' hour' minute' second' millis
Long Parameter List,NodaTime.Test.Text,Data,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,Data,The method has 8 parameters. Parameters: year' month' day' hour' minute' second' millis' zone
Long Parameter List,NodaTime.Test.Text,FormatHelperTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\FormatHelperTest.cs,TestAppendFractionTruncate,The method has 5 parameters. Parameters: initial' value' length' scale' expected
Long Parameter List,NodaTime.Test.Text,TypeConvertersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TypeConvertersTest.cs,LocalDateTime_Roundtrip,The method has 8 parameters. Parameters: year' month' day' hour' minute' second' millisecond' text
Long Parameter List,NodaTime.Test.Text,TypeConvertersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TypeConvertersTest.cs,LocalTime_Roundtrip,The method has 5 parameters. Parameters: hour' minute' second' millisecond' text
Long Parameter List,NodaTime.Test.Text,TypeConvertersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TypeConvertersTest.cs,OffsetDate_Roundtrip,The method has 5 parameters. Parameters: year' month' day' seconds' text
Long Parameter List,NodaTime.Test.Text,TypeConvertersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TypeConvertersTest.cs,OffsetDateTime_Roundtrip,The method has 7 parameters. Parameters: year' month' day' hour' minute' seconds' text
Long Parameter List,NodaTime.Test.Text,TypeConvertersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TypeConvertersTest.cs,OffsetTime_Roundtrip,The method has 6 parameters. Parameters: hour' minute' second' millisecond' seconds' text
Long Parameter List,NodaTime.Test.Text,TypeConvertersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TypeConvertersTest.cs,Period_Roundtrip,The method has 11 parameters. Parameters: years' months' weeks' days' hours' minutes' seconds' milliseconds' ticks' nanoseconds' text
Long Parameter List,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,AssertEqual,The method has 5 parameters. Parameters: first' second' start' end' options
Long Parameter List,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,AssertNotEqual,The method has 5 parameters. Parameters: first' second' start' end' options
Long Identifier,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,,The length of the parameter TransitionForwardAtMidnightZone is 31.
Long Identifier,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,,The length of the parameter TransitionBackwardToMidnightZone is 32.
Long Identifier,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,,The length of the parameter TransitionForwardBeforeMidnightZone is 35.
Long Identifier,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,,The length of the parameter TransitionBackwardAfterMidnightZone is 35.
Long Identifier,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,Gregorian,The length of the parameter maxMinDaysInFirstWeekForSameWeekYear is 36.
Long Identifier,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,HebrewCalendar,The length of the parameter expectedWeekOfWeekYearOfFirstDay is 32.
Long Identifier,NodaTime.Test.Text,Cultures,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\Cultures.cs,,The length of the parameter GenitiveNameTestCultureWithLeadingNames is 39.
Long Identifier,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,,The length of the parameter TzdbDefaultZonesForIdGuessZoneIdByTransitionsUncached is 53.
Long Statement,NodaTime.Test.Annotations,ReflectionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Annotations\ReflectionTest.cs,ConversionNamesMatchTargetType,The length of the statement  "            TestHelper.AssertNoFailures(badMethods' m => $"{m.DeclaringType?.Name}.{m.Name}"' TestExemptionCategory.ConversionName); " is 120.
Long Statement,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Equality,The length of the statement  "            TestHelper.TestEqualsStruct(new AnnualDate(3' 15)' new AnnualDate(3' 15)' new AnnualDate(4' 15)' new AnnualDate(3' 16)); " is 120.
Long Statement,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Comparision,The length of the statement  "            TestHelper.TestCompareToStruct(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1)); " is 122.
Long Statement,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Operators,The length of the statement  "            TestHelper.TestOperatorComparisonEquality(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1)); " is 133.
Long Statement,NodaTime.Test,CalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\CalendarSystemTest.cs,NoSubstrings,The length of the statement  "                    Assert.AreNotEqual(0' comparison.Compare(firstId' 0' firstId.Length' secondId' 0' firstId.Length' CompareOptions.IgnoreCase)' " is 125.
Long Statement,NodaTime.Test,DateTimeZoneProvidersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneProvidersTest.cs,AllTzdbTimeZonesLoad,The length of the statement  "            // Just to stop the variable from being lonely. In reality' it's likely there'll be a breakpoint here to inspect a particular zone... " is 133.
Long Statement,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_EndBeforeStart,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => DateTimeZone.Utc.GetZoneIntervals(Instant.FromUnixTimeTicks(100L)' Instant.FromUnixTimeTicks(99L))); " is 149.
Long Statement,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_EndEqualToStart,The length of the statement  "            CollectionAssert.IsEmpty(DateTimeZone.Utc.GetZoneIntervals(Instant.FromUnixTimeTicks(100L)' Instant.FromUnixTimeTicks(100L))); " is 126.
Long Statement,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_InvalidOptions,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => zone.GetZoneIntervals(interval' (ZoneEqualityComparer.Options) 1234567)); " is 122.
Long Statement,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,FactoryMethods_OutOfRange,The length of the statement  "            double[] bigBadDoubles = { double.NegativeInfinity' double.MinValue' double.MaxValue' double.PositiveInfinity' double.NaN }; " is 124.
Long Statement,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,XmlSerialization,The length of the statement  "            Duration value = new PeriodBuilder { Days = 5' Hours = 3' Minutes = 20' Seconds = 35' Ticks = 1234500 }.Build().ToDuration(); " is 125.
Long Statement,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The length of the statement  "            Duration duration = Duration.FromDays(-4) + Duration.FromHours(-3) + Duration.FromMinutes(-2) + Duration.FromSeconds(-1) " is 120.
Long Statement,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,JulianDateConversions,The length of the statement  "            Instant expected = new LocalDateTime(year' month' day' hour' minute' second' CalendarSystem.Julian).InUtc().ToInstant(); " is 120.
Long Statement,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,JulianDateConversions,The length of the statement  "            Assert.AreEqual(expected.ToUnixTimeMilliseconds()' actual.ToUnixTimeMilliseconds()' 50' "Expected {0}' was {1}"' expected' actual); " is 131.
Long Statement,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Invalid,The length of the statement  "            Assert.Throws<ArgumentException>(() => Instant.FromDateTimeUtc(new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Local))); " is 123.
Long Statement,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Invalid,The length of the statement  "            Assert.Throws<ArgumentException>(() => Instant.FromDateTimeUtc(new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Unspecified))); " is 129.
Long Statement,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,OperatorPlusDuration_NonZero,The length of the statement  "            Assert.AreEqual(-49999999L' (negativeFiftyMillion + Duration.Epsilon).TimeSinceEpoch.ToInt64Nanoseconds()' "-50'000'000 + 1"); " is 126.
Long Statement,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,OperatorPlusOffset_Zero_IsNeutralElement,The length of the statement  "            Assert.AreEqual(new LocalInstant(0' NodaConstants.NanosecondsPerHour)' NodaConstants.UnixEpoch.Plus(Offset.FromHours(1))' "UnixEpoch + offsetOneHour"); " is 151.
Long Statement,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,OperatorMinusDuration,The length of the statement  "            Assert.AreEqual(-50000001L' (negativeFiftyMillion - Duration.Epsilon).TimeSinceEpoch.ToInt64Nanoseconds()' "-50'000'000 - 1"); " is 126.
Long Statement,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,OperatorMinusInstant_NonZero,The length of the statement  "            Assert.AreEqual(2L' (one - Instant.FromUntrustedDuration(Duration.FromNanoseconds(-1L))).ToInt64Nanoseconds()' "1 - (-1)"); " is 123.
Long Statement,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization,The length of the statement  "            TestHelper.AssertXmlRoundtrip(value' "<value start=\"2013-04-12T17:53:23.123456789Z\" end=\"2013-10-12T17:01:02Z\" />"); " is 120.
Long Statement,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_Extremes,The length of the statement  "            TestHelper.AssertXmlRoundtrip(value' "<value start=\"-9998-01-01T00:00:00Z\" end=\"9999-12-31T23:59:59.999999999Z\" />"); " is 121.
Long Statement,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ExtraContent,The length of the statement  "                "<value start=\"2013-04-12T17:53:23.123456789Z\" end=\"2013-10-12T17:01:02Z\">Text<child attr=\"value\"/>Text 2</value>"); " is 122.
Long Statement,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Construction_NullCalendar_Throws,The length of the statement  "                Assert.Throws<ArgumentNullException>(() => new LocalDate(Era.Common' 2017' 11' 7' calendar: null!)' "Construction including era."); " is 131.
Long Statement,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ToDateTimeUnspecified_TruncatesTowardsStartOfTime,The length of the statement  "            var expected = new DateTime(year' 1' 1' 13' 15' 55' DateTimeKind.Unspecified).AddTicks(NodaConstants.TicksPerSecond - 1); " is 121.
Long Statement,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The length of the statement  "            LocalDateTime ldt = new LocalDateTime(GregorianYearMonthDayCalculator.MaxGregorianYear' 1' 2' 15' 48' 25).PlusNanoseconds(123456789); " is 133.
Long Statement,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The length of the statement  "            LocalDateTime ldt = new LocalDateTime(GregorianYearMonthDayCalculator.MinGregorianYear' 1' 2' 15' 48' 25).PlusNanoseconds(123456789); " is 133.
Long Statement,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The length of the statement  "            Assert.AreEqual(expected' actual' $"{expected:uuuu-MM-dd HH:mm:ss.fffffffff} != {actual:uuuu-MM-dd HH:mm:ss.fffffffff}"); " is 121.
Long Statement,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The length of the statement  "            Assert.AreEqual(expected' actual' $"{expected:uuuu-MM-dd HH:mm:ss.fffffffff} != {actual:uuuu-MM-dd HH:mm:ss.fffffffff}"); " is 121.
Long Statement,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,FromNanosecondsSinceMidnight_Valid,The length of the statement  "            Assert.AreEqual(LocalTime.Midnight.PlusNanoseconds(-1)' LocalTime.FromNanosecondsSinceMidnight(NodaConstants.NanosecondsPerDay - 1)); " is 133.
Long Statement,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,FromNanosecondsSinceMidnight_RangeChecks,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => LocalTime.FromNanosecondsSinceMidnight(NodaConstants.NanosecondsPerDay)); " is 122.
Long Statement,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,FromTicksSinceMidnight_Valid,The length of the statement  "            Assert.AreEqual(LocalTime.Midnight - Period.FromTicks(1)' LocalTime.FromTicksSinceMidnight(NodaConstants.TicksPerDay - 1)); " is 123.
Long Statement,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,FromMillisecondsSinceMidnight_Valid,The length of the statement  "            Assert.AreEqual(LocalTime.Midnight - Period.FromMilliseconds(1)' LocalTime.FromMillisecondsSinceMidnight(NodaConstants.MillisecondsPerDay - 1)); " is 144.
Long Statement,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,FromMillisecondsSinceMidnight_RangeChecks,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => LocalTime.FromMillisecondsSinceMidnight(NodaConstants.MillisecondsPerDay)); " is 124.
Long Statement,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,FromSecondsSinceMidnight_Valid,The length of the statement  "            Assert.AreEqual(LocalTime.Midnight - Period.FromSeconds(1)' LocalTime.FromSecondsSinceMidnight(NodaConstants.SecondsPerDay - 1)); " is 129.
Long Statement,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,FromMinutesSinceMidnight_Valid,The length of the statement  "            Assert.AreEqual(LocalTime.Midnight - Period.FromMinutes(1)' LocalTime.FromMinutesSinceMidnight(NodaConstants.MinutesPerDay - 1)); " is 129.
Long Statement,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,FromHoursSinceMidnight_Valid,The length of the statement  "            Assert.AreEqual(LocalTime.Midnight - Period.FromHours(1)' LocalTime.FromHoursSinceMidnight(NodaConstants.HoursPerDay - 1)); " is 123.
Long Statement,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset,The length of the statement  "            DateTimeOffset expected = new DateTimeOffset(DateTime.SpecifyKind(new DateTime(2012' 10' 6' 1' 2' 3)' DateTimeKind.Unspecified)' " is 128.
Long Statement,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,FromDateTimeOffset,The length of the statement  "            // has to be valid for the local time zone when building a DateTimeOffset' and if the kind is Utc' the offset has to be zero. " is 125.
Long Statement,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,FromDateTimeOffset,The length of the statement  "            DateTimeOffset bcl = new DateTimeOffset(DateTime.SpecifyKind(new DateTime(2012' 10' 6' 1' 2' 3)' DateTimeKind.Unspecified)' " is 123.
Long Statement,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,OperatorPlus_NonZero,The length of the statement  "            Assert.AreEqual(TestObjects.CreateNegativeOffset(9' 0' 0)' NegativeTwelveHours + ThreeHours' "-TwelveHours + ThreeHours"); " is 122.
Long Statement,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,MethodAdd_NonZero,The length of the statement  "            Assert.AreEqual(TestObjects.CreatePositiveOffset(6' 0' 0)' Offset.Add(ThreeHours' ThreeHours)' "ThreeHours + ThreeHours"); " is 122.
Long Statement,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,MethodAdd_NonZero,The length of the statement  "            Assert.AreEqual(TestObjects.CreateNegativeOffset(9' 0' 0)' Offset.Add(NegativeTwelveHours' ThreeHours)' "-TwelveHours + ThreeHours"); " is 133.
Long Statement,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,MethodPlus_NonZero,The length of the statement  "            Assert.AreEqual(TestObjects.CreateNegativeOffset(9' 0' 0)' NegativeTwelveHours.Plus(ThreeHours)' "-TwelveHours + ThreeHours"); " is 126.
Long Statement,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,OperatorMinus_NonZero,The length of the statement  "            Assert.AreEqual(TestObjects.CreatePositiveOffset(6' 0' 0)' ThreeHours - NegativeThreeHours' "ThreeHours - (-ThreeHours)"); " is 122.
Long Statement,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,OperatorMinus_NonZero,The length of the statement  "            Assert.AreEqual(TestObjects.CreateNegativeOffset(15' 0' 0)' NegativeTwelveHours - ThreeHours' "-TwelveHours - ThreeHours"); " is 123.
Long Statement,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Subtract_NonZero,The length of the statement  "            Assert.AreEqual(TestObjects.CreatePositiveOffset(6' 0' 0)' Offset.Subtract(ThreeHours' NegativeThreeHours)' "ThreeHours - (-ThreeHours)"); " is 138.
Long Statement,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Subtract_NonZero,The length of the statement  "            Assert.AreEqual(TestObjects.CreateNegativeOffset(15' 0' 0)' Offset.Subtract(NegativeTwelveHours' ThreeHours)' "-TwelveHours - ThreeHours"); " is 139.
Long Statement,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Minus_NonZero,The length of the statement  "            Assert.AreEqual(TestObjects.CreatePositiveOffset(6' 0' 0)' ThreeHours.Minus(NegativeThreeHours)' "ThreeHours - (-ThreeHours)"); " is 127.
Long Statement,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Minus_NonZero,The length of the statement  "            Assert.AreEqual(TestObjects.CreateNegativeOffset(15' 0' 0)' NegativeTwelveHours.Minus(ThreeHours)' "-TwelveHours - ThreeHours"); " is 128.
Long Statement,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_AcrossDays_MinutesAndSeconds,The length of the statement  "            Period actual = Period.Between(TestDateTime1' TestDateTime1.PlusDays(1).PlusSeconds(-1)' PeriodUnits.Minutes | PeriodUnits.Seconds); " is 132.
Long Statement,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_NotInt64Representable,The length of the statement  "            Assert.False((end.ToLocalInstant().TimeSinceLocalEpoch - start.ToLocalInstant().TimeSinceLocalEpoch).IsInt64Representable); " is 123.
Long Statement,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,Equality,The length of the statement  "            TestHelper.TestOperatorEquality(original' original' new YearMonthDayCalendar(original.Year + 1' original.Month' original.Day' original.CalendarOrdinal)); " is 153.
Long Statement,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Constructor_ArgumentValidation,The length of the statement  "            Assert.Throws<ArgumentNullException>(() => new ZonedDateTime(Instant.FromUnixTimeTicks(1000)' null!' CalendarSystem.Iso)); " is 122.
Long Statement,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_InvalidUnits,The length of the statement  "            Assert.Throws<ArgumentException>(() => Period.Between(TestDate1_167_5_15' TestDate2_167_Ayyam_4' PeriodUnits.AllTimeUnits)); " is 124.
Long Statement,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_InvalidUnits,The length of the statement  "            Assert.Throws<ArgumentException>(() => Period.Between(TestDate1_167_5_15' TestDate2_167_Ayyam_4' PeriodUnits.Years | PeriodUnits.Hours)); " is 137.
Long Statement,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BadiDay,The length of the statement  "            Preconditions.CheckArgument(input.Calendar == CalendarSystem.Badi' nameof(input)' "Only valid when using the Badíʿ calendar"); " is 126.
Long Statement,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BadiMonth,The length of the statement  "            Preconditions.CheckArgument(input.Calendar == CalendarSystem.Badi' nameof(input)' "Only valid when using the Badíʿ calendar"); " is 126.
Long Statement,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,ScripturalGetDaysFromStartOfYearToStartOfMonth_InvalidForCoverage,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => HebrewScripturalCalculator.GetDaysFromStartOfYearToStartOfMonth(5502' 0)); " is 123.
Long Statement,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,FridayEpoch,The length of the statement  "            CalendarSystem fridayEpochCalendar = CalendarSystem.GetIslamicCalendar(IslamicLeapYearPattern.Base16' IslamicEpoch.Civil); " is 122.
Long Statement,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetInstance_ArgumentValidation,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => CalendarSystem.GetIslamicCalendar(LeapYearPatterns.Min() - 1' Epochs.Min())); " is 126.
Long Statement,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetInstance_ArgumentValidation,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => CalendarSystem.GetIslamicCalendar(LeapYearPatterns.Min()' Epochs.Min() - 1)); " is 126.
Long Statement,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetInstance_ArgumentValidation,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => CalendarSystem.GetIslamicCalendar(LeapYearPatterns.Max() + 1' Epochs.Min())); " is 126.
Long Statement,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetInstance_ArgumentValidation,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => CalendarSystem.GetIslamicCalendar(LeapYearPatterns.Min()' Epochs.Max() + 1)); " is 126.
Long Statement,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Constructor_InvalidEnumsForCoverage,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => new IslamicYearMonthDayCalculator(IslamicLeapYearPattern.Base15 + 100' IslamicEpoch.Astronomical)); " is 148.
Long Statement,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Constructor_InvalidEnumsForCoverage,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => new IslamicYearMonthDayCalculator(IslamicLeapYearPattern.Base15' IslamicEpoch.Astronomical + 100)); " is 148.
Long Statement,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The length of the statement  "            LocalDateTime now = Instant.FromUnixTimeTicks((TimeOfGreatAchievement - UnixEpochDateTime).Ticks).InUtc().LocalDateTime; " is 120.
Long Statement,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GetDaysFromStartOfYearToStartOfMonth,The length of the statement  "                    Assert.AreEqual(dayOfYear' calculator.GetDayOfYear(new YearMonthDay(year' month' 1))' "year={0}; month={1}"' year' month); " is 122.
Long Statement,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GenerateData,The length of the statement  "            if (bclCalendar.GetMonth(maxDateTime) != 12 || bclCalendar.GetDayOfMonth(maxDateTime) != bclCalendar.GetDaysInMonth(maxYear' 12)) " is 129.
Long Statement,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GenerateData,The length of the statement  "            var computedDaysAtStartOfMinYear = (int)((startOfMinYear.Ticks - NodaConstants.BclTicksAtUnixEpoch) / NodaConstants.TicksPerDay); " is 129.
Long Statement,NodaTime.Test.Calendars,WeekYearRulesTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\WeekYearRulesTest.cs,UnsupportedCalendarWeekRule,The length of the statement  "            Assert.Throws<ArgumentException>(() => WeekYearRules.FromCalendarWeekRule(CalendarWeekRule.FirstDay + 1000' DayOfWeek.Monday)); " is 127.
Long Statement,NodaTime.Test.Extensions,ClockExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\ClockExtensionsTest.cs,InTzdbSystemDefaultZone,The length of the statement  "            var fakeGreenlandZone = TimeZoneInfo.CreateCustomTimeZone("Greenland Standard Time"' TimeSpan.FromHours(-3)' "Godthab"' "Godthab"); " is 131.
Long Statement,NodaTime.Test.Globalization,NodaFormatInfoTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Globalization\NodaFormatInfoTest.cs,TestIntegerGenitiveMonthNames,The length of the statement  "            culture.DateTimeFormat.MonthGenitiveNames = new[] { "0"' "1"' "2"' "3"' "4"' "5"' "6"' "7"' "8"' "9"' "10"' "11"' "12" }; " is 121.
Long Statement,NodaTime.Test.Globalization,NodaFormatInfoTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Globalization\NodaFormatInfoTest.cs,TestIntegerGenitiveMonthNames,The length of the statement  "            culture.DateTimeFormat.AbbreviatedMonthGenitiveNames = new[] { "0"' "1"' "2"' "3"' "4"' "5"' "6"' "7"' "8"' "9"' "10"' "11"' "12" }; " is 132.
Long Statement,NodaTime.Test.Text,LocalDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDatePatternTest.cs,AssertBclNodaEquality,The length of the statement  "                culture.DateTimeFormat.AbbreviatedMonthGenitiveNames[SampleLocalDate.Month - 1] != culture.DateTimeFormat.AbbreviatedMonthNames[SampleLocalDate.Month - 1]) " is 155.
Long Statement,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,AssertBclNodaEquality,The length of the statement  "                (culture.DateTimeFormat.ShortDatePattern.Contains("MMM") && !culture.DateTimeFormat.ShortDatePattern.Contains("MMMM")) && " is 121.
Long Statement,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,AssertBclNodaEquality,The length of the statement  "                culture.DateTimeFormat.AbbreviatedMonthGenitiveNames[SampleLocalDateTime.Month - 1] != culture.DateTimeFormat.AbbreviatedMonthNames[SampleLocalDateTime.Month - 1]) " is 163.
Long Statement,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithCalendar,The length of the statement  "            var pattern = ZonedDateTimePattern.CreateWithInvariantCulture("uuuu-MM-dd"' TestProvider).WithCalendar(CalendarSystem.Coptic); " is 126.
Long Statement,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,FindLongestZoneId,The length of the statement  "                new SingleTransitionDateTimeZone(NodaConstants.UnixEpoch - Duration.FromDays(1)'Offset.FromHours(-1)' Offset.FromHours(0)' id); " is 127.
Long Statement,NodaTime.Test.Text.Patterns,SteppedPatternBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\Patterns\SteppedPatternBuilderTest.cs,UnhandledLiteral,The length of the statement  "            var builder = new SteppedPatternBuilder<LocalDate' SampleBucket>(NodaFormatInfo.InvariantInfo' () => new SampleBucket()); " is 121.
Long Statement,NodaTime.Test.TimeZones,AlgiersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\AlgiersTest.cs,GetPeriod_BeforeLast,The length of the statement  "            var expected = new ZoneInterval("WET"' Instant.FromUnixTimeTicks(3418020000000000L)' Instant.FromUnixTimeTicks(3575232000000000L)' Offset.Zero' Offset.Zero); " is 157.
Long Statement,NodaTime.Test.TimeZones,AlgiersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\AlgiersTest.cs,GetPeriod_AfterLastTransition,The length of the statement  "            var expected = new ZoneInterval("CET"' Instant.FromUnixTimeTicks(3575232000000000L)' null' Offset.FromSeconds(NodaConstants.SecondsPerHour)' Offset.Zero); " is 154.
Long Statement,NodaTime.Test.TimeZones,BclDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneSourceTest.cs,LocalZoneIsNotSystemZone,The length of the statement  "            var localZone = TimeZoneInfo.CreateCustomTimeZone("Local zone not in system zones"' TimeSpan.FromHours(5)' "Foo"' "Bar"); " is 121.
Long Statement,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The length of the statement  "                    daylightTransitionStart: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 2' 0' 0)' month: 2' day: 29)' " is 135.
Long Statement,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The length of the statement  "                    daylightTransitionEnd: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 3' 0' 0)' month: 10' day: 3)) " is 133.
Long Statement,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The length of the statement  "            var rule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(DateTime.MinValue' new DateTime(9999' 12' 31)' TimeSpan.Zero' " is 121.
Long Statement,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The length of the statement  "            var bclZone = TimeZoneInfo.CreateCustomTimeZone("Nasty"' TimeSpan.FromHours(4)' "Display"' "Standard"' "Daylight"' new[] { rule }); " is 131.
Long Statement,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The length of the statement  "            var expectedWinter = new ZoneInterval("Standard"' Instant.FromUtc(2016' 9' 25' 8' 0)' Instant.FromUtc(2017' 3' 10' 8' 0)' Offset.FromHours(4)' Offset.Zero); " is 156.
Long Statement,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The length of the statement  "            var expectedSummer = new ZoneInterval("Daylight"' Instant.FromUtc(2017' 3' 10' 8' 0)' Instant.FromUtc(2017' 9' 25' 8' 0)' Offset.FromHours(4)' Offset.FromHours(1)); " is 164.
Long Statement,NodaTime.Test.TimeZones,TestDateTimeZoneSource,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\DateTimeZoneCacheTest.cs,ForId,The length of the statement  "                return new SingleTransitionDateTimeZone(NodaConstants.UnixEpoch' Offset.Zero' Offset.FromHours(id.GetHashCode() % 18)' id); " is 123.
Long Statement,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_GapAroundAndInTailZoneTransition,The length of the statement  "            Assert.AreEqual(new ZoneInterval("Single-Early"' ThirdInterval.End' tailZone.Transition' Offset.FromHours(-10)' Offset.Zero)' " is 125.
Long Statement,NodaTime.Test.TimeZones,ResolversTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ResolversTest.cs,ReturnEndOfIntervalBefore,The length of the statement  "            var resolved = Resolvers.ReturnEndOfIntervalBefore(TimeInTransition' GapZone' mapping.EarlyInterval' mapping.LateInterval); " is 123.
Long Statement,NodaTime.Test.TimeZones,ResolversTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ResolversTest.cs,ReturnStartOfIntervalAfter,The length of the statement  "            var resolved = Resolvers.ReturnStartOfIntervalAfter(TimeInTransition' GapZone' mapping.EarlyInterval' mapping.LateInterval); " is 124.
Long Statement,NodaTime.Test.TimeZones,ResolversTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ResolversTest.cs,ThrowWhenSkipped,The length of the statement  "            Assert.Throws<SkippedTimeException>(() => Resolvers.ThrowWhenSkipped(TimeInTransition' GapZone' mapping.EarlyInterval' mapping.LateInterval)); " is 142.
Long Statement,NodaTime.Test.TimeZones,ResolversTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ResolversTest.cs,CreateResolver_Unambiguous,The length of the statement  "            AmbiguousTimeResolver ambiguityResolver = (earlier' later) => { Assert.Fail("Shouldn't be called"); return default(ZonedDateTime); }; " is 133.
Long Statement,NodaTime.Test.TimeZones,ResolversTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ResolversTest.cs,CreateResolver_Unambiguous,The length of the statement  "            SkippedTimeResolver skippedTimeResolver = (local' zone' before' after) => { Assert.Fail("Shouldn't be called"); return default(ZonedDateTime); }; " is 145.
Long Statement,NodaTime.Test.TimeZones,ResolversTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ResolversTest.cs,CreateResolver_Ambiguous,The length of the statement  "            ZonedDateTime zoned = new ZonedDateTime(TimeInTransition.PlusDays(1).WithOffset(GapZone.EarlyInterval.WallOffset)' GapZone); " is 124.
Long Statement,NodaTime.Test.TimeZones,ResolversTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ResolversTest.cs,CreateResolver_Ambiguous,The length of the statement  "            SkippedTimeResolver skippedTimeResolver = (local' zone' before' after) => { Assert.Fail("Shouldn't be called"); return default(ZonedDateTime); }; " is 145.
Long Statement,NodaTime.Test.TimeZones,ResolversTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ResolversTest.cs,CreateResolver_Skipped,The length of the statement  "            ZonedDateTime zoned = new ZonedDateTime(TimeInTransition.PlusDays(1).WithOffset(GapZone.EarlyInterval.WallOffset)' GapZone); " is 124.
Long Statement,NodaTime.Test.TimeZones,ResolversTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ResolversTest.cs,CreateResolver_Skipped,The length of the statement  "            AmbiguousTimeResolver ambiguityResolver = (earlier' later) => { Assert.Fail("Shouldn't be called"); return default(ZonedDateTime); }; " is 133.
Long Statement,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,Aliases,The length of the statement  "            CollectionAssert.AreEqual(new[] { "Europe/Belfast"' "Europe/Guernsey"' "Europe/Isle_of_Man"' "Europe/Jersey"' "GB"' "GB-Eire" }' " is 128.
Long Statement,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LatitudeRange,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZone1970Location(90 * 3600 + 1' 0' new[] { SampleCountry }' "Zone"' "")); " is 130.
Long Statement,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LatitudeRange,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZone1970Location(-90 * 3600 - 1' 0' new[] { SampleCountry }' "Zone"' "")); " is 131.
Long Statement,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LongitudeRange,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZone1970Location(0' 180 * 3600 + 1' new[] { SampleCountry }' "Zone"' "")); " is 131.
Long Statement,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LongitudeRange,The length of the statement  "            Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZone1970Location(0' -180 * 3600 - 1' new[] { SampleCountry }' "Zone"' "")); " is 132.
Long Statement,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The length of the statement  "            AssertNotEqual(zone1' zone2' Instants[1] - Duration.Epsilon' Instants[5]' ZoneEqualityComparer.Options.OnlyMatchWallOffset); " is 124.
Long Statement,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions_Degenerate,The length of the statement  "            AssertEqual(zone1' zone2' Instant.MinValue' Instant.MaxValue' ZoneEqualityComparer.Options.MatchNames | ZoneEqualityComparer.Options.MatchOffsetComponents | ZoneEqualityComparer.Options.MatchStartAndEndTransitions); " is 215.
Long Statement,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Contains_OutsideLocalInstantange,The length of the statement  "            ZoneInterval veryEarly = new ZoneInterval("Very early"' Instant.BeforeMinValue' Instant.MinValue + Duration.FromHours(8)' Offset.FromHours(-9)' Offset.Zero); " is 157.
Long Statement,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Contains_OutsideLocalInstantange,The length of the statement  "            ZoneInterval veryLate = new ZoneInterval("Very late"' Instant.MaxValue - Duration.FromHours(8)' Instant.AfterMaxValue' Offset.FromHours(9)' Offset.Zero); " is 153.
Long Statement,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Constructor_nullName_exception,The length of the statement  "            Assert.Throws(typeof(ArgumentNullException)' () => new ZoneRecurrence(null!' Offset.Zero' yearOffset' 1971' 2009)' "Null name"); " is 128.
Long Statement,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Constructor_nullYearOffset_exception,The length of the statement  "            Assert.Throws(typeof(ArgumentNullException)' () => new ZoneRecurrence("bob"' Offset.Zero' null!' 1971' 2009)' "Null yearOffset"); " is 129.
Long Statement,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_LastYear,The length of the statement  "            Transition? actual = recurrence.PreviousOrSame(Instant.FromUtc(1971' 1' 1' 0' 0) - Duration.Epsilon' Offset.Zero' Offset.Zero); " is 127.
Long Statement,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSameTwice_LastYear,The length of the statement  "            Transition? actual = recurrence.PreviousOrSame(Instant.FromUtc(1972' 1' 1' 0' 0) - Duration.Epsilon' Offset.Zero' Offset.Zero); " is 127.
Long Statement,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSameOrFail_Fail,The length of the statement  "            Assert.Throws<InvalidOperationException>(() => recurrence.PreviousOrSameOrFail(beforeRecurrenceStart' Offset.Zero' Offset.Zero)); " is 129.
Long Statement,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,December31st2400_MaxYear_UtcTransition,The length of the statement  "            var recurrence = new ZoneRecurrence("awkward"' Offset.FromHours(1)' yearOffset' GregorianYearMonthDayCalculator.MinGregorianYear' GregorianYearMonthDayCalculator.MaxGregorianYear); " is 180.
Long Statement,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,ZoneRecurrenceToString,The length of the statement  "            Assert.AreEqual("name +01 ZoneYearOffset[mode:Utc monthOfYear:10 dayOfMonth:31 dayOfWeek:3 advance:True timeOfDay:00:00:00 addDay:False] [1900-2000]"' recurrence.ToString()); " is 174.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidMonth_Exception,The length of the statement  "            Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 0' 1' 1' true' LocalTime.Midnight)' "Month 0"); " is 148.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidMonth_Exception,The length of the statement  "            Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 34' 1' 1' true' LocalTime.Midnight)' "Month 34"); " is 150.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidMonth_Exception,The length of the statement  "            Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' -3' 1' 1' true' LocalTime.Midnight)' "Month -3"); " is 150.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfMonth_Exception,The length of the statement  "            Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 0' 1' true' LocalTime.Midnight)' "Day of Month 0"); " is 155.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfMonth_Exception,The length of the statement  "            Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 32' 1' true' LocalTime.Midnight)' "Day of Month 32"); " is 157.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfMonth_Exception,The length of the statement  "            Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 475' 1' true' LocalTime.Midnight)' " is 138.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfMonth_Exception,The length of the statement  "            Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' -32' 1' true' LocalTime.Midnight)' " is 138.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The length of the statement  "            Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' -1' true' LocalTime.Midnight)' "Day of Week -1"); " is 156.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The length of the statement  "            Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' 8' true' LocalTime.Midnight)' "Day of Week 8"); " is 154.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The length of the statement  "            Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' 5756' true' LocalTime.Midnight)' " is 139.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The length of the statement  "            Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' -347' true' LocalTime.Midnight)' " is 139.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_ValidDaysOfWeek,The length of the statement  "                Assert.NotNull(new ZoneYearOffset(TransitionMode.Standard' 1' 1' dayOfWeek' true' LocalTime.Midnight)' "Day of week " + dayOfWeek); " is 131.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_LastSundayInOctober,The length of the statement  "            ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 10' -1' (int)IsoDayOfWeek.Sunday' false' LocalTime.Midnight); " is 124.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_LeapYear,The length of the statement  "            ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' (int) IsoDayOfWeek.Sunday' true' LocalTime.Midnight); " is 123.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_NotLeapYear,The length of the statement  "            ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' (int) IsoDayOfWeek.Sunday' true' LocalTime.Midnight); " is 123.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_NotLeapYear,The length of the statement  "            var expected = new LocalDateTime(2013' 3' 3' 0' 0).ToLocalInstant(); // March 3rd is the first Sunday after the non-existent 2013-02-29 " is 135.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_LeapYear,The length of the statement  "            ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' (int) IsoDayOfWeek.Sunday' false' LocalTime.Midnight); " is 124.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_NotLeapYear,The length of the statement  "            ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' (int) IsoDayOfWeek.Sunday' false' LocalTime.Midnight); " is 124.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WithAddDay,The length of the statement  "            var offset = new ZoneYearOffset(TransitionMode.Utc' 10' -1' (int) IsoDayOfWeek.Thursday' false' LocalTime.Midnight' true); " is 122.
Long Statement,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,IEquatable_Tests,The length of the statement  "            var unequalValue = new ZoneYearOffset(TransitionMode.Utc' 9' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight); " is 120.
Long Statement,NodaTime.Test.TimeZones.IO,DateTimeZoneReaderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\DateTimeZoneReaderTest.cs,ReadMilliseconds_InvalidFlag,The length of the statement  "            byte[] data = new byte[] { 0xe0' 0' 0' 0' 0' 0 }; // Invalid flag (followed by 0s to check that it's not just out of data) " is 122.
Long Statement,NodaTime.Test.TimeZones.IO,DateTimeZoneReaderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\DateTimeZoneReaderTest.cs,ReadZoneIntervalTransition_InvalidMarkerValue,The length of the statement  "            byte[] data = new byte[] { 4' 0' 0' 0' 0' 0 }; // Marker value of 4 (followed by 0s to check that it's not just out of data) " is 124.
Long Statement,NodaTime.Test.TimeZones.IO,TzdbStreamDataTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\TzdbStreamDataTest.cs,MissingStringPool,The length of the statement  "            var method = typeof(TzdbStreamData.Builder).GetMethod(handlerMethodName' BindingFlags.Instance | BindingFlags.NonPublic) " is 120.
Long Statement,NodaTime.Test.TimeZones.IO,TzdbStreamDataTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\TzdbStreamDataTest.cs,DuplicateField,The length of the statement  "            var method = typeof(TzdbStreamData.Builder).GetMethod(handlerMethodName' BindingFlags.Instance | BindingFlags.NonPublic) " is 120.
Long Statement,NodaTime.Test.Utility,PreconditionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\PreconditionsTest.cs,CheckArgument2_Failure,The length of the statement  "            var exception = Assert.Throws<ArgumentException>(() => Preconditions.CheckArgument(false' "param"' "{0} is {1}"' 1' 10)); " is 121.
Complex Conditional,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,AssertBclNodaEquality,The conditional expression  "(patternText == "f" && culture.DateTimeFormat.ShortTimePattern.EndsWith("z")) ||                  (patternText == "F" && culture.DateTimeFormat.FullDateTimePattern.EndsWith("z")) ||                  (patternText == "g" && culture.DateTimeFormat.ShortTimePattern.EndsWith("z")) ||                  (patternText == "G" && culture.DateTimeFormat.LongTimePattern.EndsWith("z"))"  is complex.
Complex Conditional,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,AssertBclNodaEquality,The conditional expression  "(patternText == "G" || patternText == "g") &&                  (culture.DateTimeFormat.ShortDatePattern.Contains("MMM") && !culture.DateTimeFormat.ShortDatePattern.Contains("MMMM")) &&                  culture.DateTimeFormat.AbbreviatedMonthGenitiveNames[SampleLocalDateTime.Month - 1] != culture.DateTimeFormat.AbbreviatedMonthNames[SampleLocalDateTime.Month - 1]"  is complex.
Complex Conditional,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,ValidateZoneEquality,The conditional expression  "(utc.Month == 12 && utc.Day == 31) || (utc.Month == 1 && utc.Day == 1)"  is complex.
Empty Catch Block,NodaTime.Test,TestHelper,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestHelper.cs,AssertOverflow,The method has an empty catch block.
Empty Catch Block,NodaTime.Test,TestHelper,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestHelper.cs,AssertOverflow,The method has an empty catch block.
Empty Catch Block,NodaTime.Test.Testing.TimeZones,FakeDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\FakeDateTimeZoneSourceTest.cs,AssertBuildFails,The method has an empty catch block.
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: var date = new AnnualDate(2' 29);
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: var date = new AnnualDate(2' 29);
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: Assert.AreEqual(29' date.Day);
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: Assert.AreEqual(2' date.Month);
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2016' 2' 29)' date.InYear(2016));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2016' 2' 29)' date.InYear(2016));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2016' 2' 29)' date.InYear(2016));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2016' 2' 29)' date.InYear(2016));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: Assert.IsTrue(date.IsValidYear(2016));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2015' 2' 28)' date.InYear(2015));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2015' 2' 28)' date.InYear(2015));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2015' 2' 28)' date.InYear(2015));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2015' 2' 28)' date.InYear(2015));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Feb29,The following statement contains a magic number: Assert.IsFalse(date.IsValidYear(2015));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: var date = new AnnualDate(6' 19);
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: var date = new AnnualDate(6' 19);
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: Assert.AreEqual(19' date.Day);
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: Assert.AreEqual(6' date.Month);
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2016' 6' 19)' date.InYear(2016));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2016' 6' 19)' date.InYear(2016));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2016' 6' 19)' date.InYear(2016));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2016' 6' 19)' date.InYear(2016));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: Assert.IsTrue(date.IsValidYear(2016));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2015' 6' 19)' date.InYear(2015));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2015' 6' 19)' date.InYear(2015));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2015' 6' 19)' date.InYear(2015));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2015' 6' 19)' date.InYear(2015));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,June19,The following statement contains a magic number: Assert.IsTrue(date.IsValidYear(2015));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Validation,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new AnnualDate(2' 30));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Validation,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new AnnualDate(2' 30));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Validation,The following statement contains a magic number: new AnnualDate(1' 30).Consume();
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Validation,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new AnnualDate(13' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(new AnnualDate(3' 15)' new AnnualDate(3' 15)' new AnnualDate(4' 15)' new AnnualDate(3' 16));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(new AnnualDate(3' 15)' new AnnualDate(3' 15)' new AnnualDate(4' 15)' new AnnualDate(3' 16));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(new AnnualDate(3' 15)' new AnnualDate(3' 15)' new AnnualDate(4' 15)' new AnnualDate(3' 16));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(new AnnualDate(3' 15)' new AnnualDate(3' 15)' new AnnualDate(4' 15)' new AnnualDate(3' 16));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(new AnnualDate(3' 15)' new AnnualDate(3' 15)' new AnnualDate(4' 15)' new AnnualDate(3' 16));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(new AnnualDate(3' 15)' new AnnualDate(3' 15)' new AnnualDate(4' 15)' new AnnualDate(3' 16));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(new AnnualDate(3' 15)' new AnnualDate(3' 15)' new AnnualDate(4' 15)' new AnnualDate(3' 16));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(new AnnualDate(3' 15)' new AnnualDate(3' 15)' new AnnualDate(4' 15)' new AnnualDate(3' 16));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Comparision,The following statement contains a magic number: TestHelper.TestCompareToStruct(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Comparision,The following statement contains a magic number: TestHelper.TestCompareToStruct(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Comparision,The following statement contains a magic number: TestHelper.TestCompareToStruct(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Comparision,The following statement contains a magic number: TestHelper.TestCompareToStruct(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Comparision,The following statement contains a magic number: TestHelper.TestCompareToStruct(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Comparision,The following statement contains a magic number: TestHelper.TestCompareToStruct(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Comparision,The following statement contains a magic number: TestHelper.TestCompareToStruct(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Operators,The following statement contains a magic number: TestHelper.TestOperatorComparisonEquality(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Operators,The following statement contains a magic number: TestHelper.TestOperatorComparisonEquality(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Operators,The following statement contains a magic number: TestHelper.TestOperatorComparisonEquality(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Operators,The following statement contains a magic number: TestHelper.TestOperatorComparisonEquality(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Operators,The following statement contains a magic number: TestHelper.TestOperatorComparisonEquality(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Operators,The following statement contains a magic number: TestHelper.TestOperatorComparisonEquality(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,Operators,The following statement contains a magic number: TestHelper.TestOperatorComparisonEquality(new AnnualDate(6' 19)' new AnnualDate(6' 19)' new AnnualDate(6' 20)' new AnnualDate(7' 1));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,ToStringTest,The following statement contains a magic number: Assert.AreEqual("02-01"' new AnnualDate(2' 1).ToString());
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,ToStringTest,The following statement contains a magic number: Assert.AreEqual("02-10"' new AnnualDate(2' 10).ToString());
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,ToStringTest,The following statement contains a magic number: Assert.AreEqual("02-10"' new AnnualDate(2' 10).ToString());
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,ToStringTest,The following statement contains a magic number: Assert.AreEqual("12-01"' new AnnualDate(12' 1).ToString());
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,ToStringTest,The following statement contains a magic number: Assert.AreEqual("12-20"' new AnnualDate(12' 20).ToString());
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,ToStringTest,The following statement contains a magic number: Assert.AreEqual("12-20"' new AnnualDate(12' 20).ToString());
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,ToString_WithFormat,The following statement contains a magic number: Assert.AreEqual("02-01"' new AnnualDate(2' 1).ToString("G"' Cultures.FrFr));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,ToString_WithFormat,The following statement contains a magic number: Assert.AreEqual("02-01"' new AnnualDate(2' 1).ToString(null' Cultures.FrFr));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,ToString_WithFormat,The following statement contains a magic number: Assert.AreEqual("02/01"' new AnnualDate(2' 1).ToString("MM/dd"' Cultures.FrFr));
Magic Number,NodaTime.Test,AnnualDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\AnnualDateTest.cs,ToString_WithFormat,The following statement contains a magic number: Assert.AreEqual("02-01"' new AnnualDate(2' 1).ToString("MM/dd"' Cultures.FrCa));
Magic Number,NodaTime.Test,CalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\CalendarSystemTest.cs,GetAbsoluteYear,The following statement contains a magic number: Assert.AreEqual(5' CopticCalendar.GetAbsoluteYear(5' Era.AnnoMartyrum));
Magic Number,NodaTime.Test,CalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\CalendarSystemTest.cs,GetAbsoluteYear,The following statement contains a magic number: Assert.AreEqual(5' CopticCalendar.GetAbsoluteYear(5' Era.AnnoMartyrum));
Magic Number,NodaTime.Test,CalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\CalendarSystemTest.cs,GetAbsoluteYear,The following statement contains a magic number: LocalDate localDate = new LocalDate(5' 1' 1' CopticCalendar);
Magic Number,NodaTime.Test,CalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\CalendarSystemTest.cs,GetAbsoluteYear,The following statement contains a magic number: Assert.AreEqual(5' localDate.Year);
Magic Number,NodaTime.Test,CalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\CalendarSystemTest.cs,GetAbsoluteYear,The following statement contains a magic number: Assert.AreEqual(5' localDate.YearOfEra);
Magic Number,NodaTime.Test,CalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\CalendarSystemTest.cs,ForOrdinalUncached_Invalid,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => CalendarSystem.ForOrdinalUncached((CalendarOrdinal)9999));
Magic Number,NodaTime.Test,CalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\CalendarSystemTest.cs,GetDaysInMonth_Hebrew,The following statement contains a magic number: TestHelper.AssertValid(CalendarSystem.HebrewCivil.GetDaysInMonth' 5402' 13);
Magic Number,NodaTime.Test,CalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\CalendarSystemTest.cs,GetDaysInMonth_Hebrew,The following statement contains a magic number: TestHelper.AssertValid(CalendarSystem.HebrewCivil.GetDaysInMonth' 5402' 13);
Magic Number,NodaTime.Test,CalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\CalendarSystemTest.cs,GetDaysInMonth_Hebrew,The following statement contains a magic number: TestHelper.AssertOutOfRange(CalendarSystem.HebrewCivil.GetDaysInMonth' 5401' 13);
Magic Number,NodaTime.Test,CalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\CalendarSystemTest.cs,GetDaysInMonth_Hebrew,The following statement contains a magic number: TestHelper.AssertOutOfRange(CalendarSystem.HebrewCivil.GetDaysInMonth' 5401' 13);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,StartOfMonth,The following statement contains a magic number: var start = new LocalDate(2014' 6' 27);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,StartOfMonth,The following statement contains a magic number: var start = new LocalDate(2014' 6' 27);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,StartOfMonth,The following statement contains a magic number: var start = new LocalDate(2014' 6' 27);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,StartOfMonth,The following statement contains a magic number: var end = new LocalDate(2014' 6' 1);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,StartOfMonth,The following statement contains a magic number: var end = new LocalDate(2014' 6' 1);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,EndOfMonth,The following statement contains a magic number: var start = new LocalDate(2014' 6' 27);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,EndOfMonth,The following statement contains a magic number: var start = new LocalDate(2014' 6' 27);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,EndOfMonth,The following statement contains a magic number: var start = new LocalDate(2014' 6' 27);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,EndOfMonth,The following statement contains a magic number: var end = new LocalDate(2014' 6' 30);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,EndOfMonth,The following statement contains a magic number: var end = new LocalDate(2014' 6' 30);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,EndOfMonth,The following statement contains a magic number: var end = new LocalDate(2014' 6' 30);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,DayOfMonth,The following statement contains a magic number: var start = new LocalDate(2014' 6' 27);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,DayOfMonth,The following statement contains a magic number: var start = new LocalDate(2014' 6' 27);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,DayOfMonth,The following statement contains a magic number: var start = new LocalDate(2014' 6' 27);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,DayOfMonth,The following statement contains a magic number: var end = new LocalDate(2014' 6' 19);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,DayOfMonth,The following statement contains a magic number: var end = new LocalDate(2014' 6' 19);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,DayOfMonth,The following statement contains a magic number: var end = new LocalDate(2014' 6' 19);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,DayOfMonth,The following statement contains a magic number: var adjuster = DateAdjusters.DayOfMonth(19);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,Month_Valid,The following statement contains a magic number: var adjuster = DateAdjusters.Month(2);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,Month_Valid,The following statement contains a magic number: var start = new LocalDate(2017' 8' 21' CalendarSystem.Julian);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,Month_Valid,The following statement contains a magic number: var start = new LocalDate(2017' 8' 21' CalendarSystem.Julian);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,Month_Valid,The following statement contains a magic number: var start = new LocalDate(2017' 8' 21' CalendarSystem.Julian);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,Month_Valid,The following statement contains a magic number: var expected = new LocalDate(2017' 2' 21' CalendarSystem.Julian);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,Month_Valid,The following statement contains a magic number: var expected = new LocalDate(2017' 2' 21' CalendarSystem.Julian);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,Month_Valid,The following statement contains a magic number: var expected = new LocalDate(2017' 2' 21' CalendarSystem.Julian);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,Month_InvalidAdjustment,The following statement contains a magic number: var adjuster = DateAdjusters.Month(2);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,Month_InvalidAdjustment,The following statement contains a magic number: var start = new LocalDate(2017' 8' 30' CalendarSystem.Julian);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,Month_InvalidAdjustment,The following statement contains a magic number: var start = new LocalDate(2017' 8' 30' CalendarSystem.Julian);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,Month_InvalidAdjustment,The following statement contains a magic number: var start = new LocalDate(2017' 8' 30' CalendarSystem.Julian);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,IsoDayOfWeekAdjusters_Invalid,The following statement contains a magic number: var invalid = (IsoDayOfWeek) 10;
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,AddPeriod_Valid,The following statement contains a magic number: var period = Period.FromMonths(1) + Period.FromDays(3);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,AddPeriod_Valid,The following statement contains a magic number: var start = new LocalDate(2019' 5' 4);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,AddPeriod_Valid,The following statement contains a magic number: var start = new LocalDate(2019' 5' 4);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,AddPeriod_Valid,The following statement contains a magic number: var start = new LocalDate(2019' 5' 4);
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,AddPeriod_Valid,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2019' 6' 7)' start.With(adjuster));
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,AddPeriod_Valid,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2019' 6' 7)' start.With(adjuster));
Magic Number,NodaTime.Test,DateAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateAdjustersTest.cs,AddPeriod_Valid,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2019' 6' 7)' start.With(adjuster));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Construction_DifferentCalendars,The following statement contains a magic number: LocalDate start = new LocalDate(1600' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Construction_DifferentCalendars,The following statement contains a magic number: LocalDate end = new LocalDate(1800' 1' 1' JulianCalendar);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Construction_EndBeforeStart,The following statement contains a magic number: LocalDate start = new LocalDate(1600' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Construction_EndBeforeStart,The following statement contains a magic number: LocalDate end = new LocalDate(1500' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Construction_EqualStartAndEnd,The following statement contains a magic number: LocalDate start = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Construction_Properties,The following statement contains a magic number: LocalDate start = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Construction_Properties,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Construction_Properties,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Construction_Properties,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_SameInstance,The following statement contains a magic number: LocalDate start = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_SameInstance,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_SameInstance,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_SameInstance,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_EqualValues,The following statement contains a magic number: LocalDate start = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_EqualValues,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_EqualValues,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_EqualValues,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentCalendars,The following statement contains a magic number: LocalDate start1 = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentCalendars,The following statement contains a magic number: LocalDate end1 = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentCalendars,The following statement contains a magic number: LocalDate end1 = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentCalendars,The following statement contains a magic number: LocalDate end1 = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentStart,The following statement contains a magic number: LocalDate start1 = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentStart,The following statement contains a magic number: LocalDate start2 = new LocalDate(2000' 1' 2);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentStart,The following statement contains a magic number: LocalDate start2 = new LocalDate(2000' 1' 2);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentStart,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentStart,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentStart,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentEnd,The following statement contains a magic number: LocalDate start = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentEnd,The following statement contains a magic number: LocalDate end1 = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentEnd,The following statement contains a magic number: LocalDate end1 = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentEnd,The following statement contains a magic number: LocalDate end1 = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentEnd,The following statement contains a magic number: LocalDate end2 = new LocalDate(2001' 6' 20);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentEnd,The following statement contains a magic number: LocalDate end2 = new LocalDate(2001' 6' 20);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentEnd,The following statement contains a magic number: LocalDate end2 = new LocalDate(2001' 6' 20);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentToNull,The following statement contains a magic number: LocalDate start = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentToNull,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentToNull,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentToNull,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentToOtherType,The following statement contains a magic number: LocalDate start = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentToOtherType,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentToOtherType,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Equals_DifferentToOtherType,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,StringRepresentation,The following statement contains a magic number: LocalDate start = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,StringRepresentation,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,StringRepresentation,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,StringRepresentation,The following statement contains a magic number: LocalDate end = new LocalDate(2001' 6' 19);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Length,The following statement contains a magic number: LocalDate start = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Length,The following statement contains a magic number: LocalDate end = new LocalDate(2000' 2' 10);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Length,The following statement contains a magic number: LocalDate end = new LocalDate(2000' 2' 10);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Length,The following statement contains a magic number: LocalDate end = new LocalDate(2000' 2' 10);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Length,The following statement contains a magic number: Assert.AreEqual(41' interval.Length);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Calendar,The following statement contains a magic number: LocalDate start = new LocalDate(2000' 1' 1' calendar);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Calendar,The following statement contains a magic number: LocalDate end = new LocalDate(2000' 2' 10' calendar);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Calendar,The following statement contains a magic number: LocalDate end = new LocalDate(2000' 2' 10' calendar);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Calendar,The following statement contains a magic number: LocalDate end = new LocalDate(2000' 2' 10' calendar);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains,The following statement contains a magic number: var start = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains,The following statement contains a magic number: var end = new LocalDate(2014' 06' 30);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains,The following statement contains a magic number: var end = new LocalDate(2014' 06' 30);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains,The following statement contains a magic number: var end = new LocalDate(2014' 06' 30);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_DifferentCalendar,The following statement contains a magic number: var start = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_DifferentCalendar,The following statement contains a magic number: var end = new LocalDate(2014' 06' 30);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_DifferentCalendar,The following statement contains a magic number: var end = new LocalDate(2014' 06' 30);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_DifferentCalendar,The following statement contains a magic number: var end = new LocalDate(2014' 06' 30);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_DifferentCalendar,The following statement contains a magic number: var candidate = new LocalDate(2000' 1' 1' JulianCalendar);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Deconstruction,The following statement contains a magic number: var start = new LocalDate(2017' 11' 6);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Deconstruction,The following statement contains a magic number: var start = new LocalDate(2017' 11' 6);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Deconstruction,The following statement contains a magic number: var start = new LocalDate(2017' 11' 6);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Deconstruction,The following statement contains a magic number: var end = new LocalDate(2017' 11' 10);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Deconstruction,The following statement contains a magic number: var end = new LocalDate(2017' 11' 10);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Deconstruction,The following statement contains a magic number: var end = new LocalDate(2017' 11' 10);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_NullInterval_Throws,The following statement contains a magic number: var start = new LocalDate(2017' 11' 6);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_NullInterval_Throws,The following statement contains a magic number: var start = new LocalDate(2017' 11' 6);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_NullInterval_Throws,The following statement contains a magic number: var start = new LocalDate(2017' 11' 6);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_NullInterval_Throws,The following statement contains a magic number: var end = new LocalDate(2017' 11' 10);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_NullInterval_Throws,The following statement contains a magic number: var end = new LocalDate(2017' 11' 10);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_NullInterval_Throws,The following statement contains a magic number: var end = new LocalDate(2017' 11' 10);
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_IntervalWithinAnotherCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_IntervalWithinAnotherCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_IntervalWithinAnotherCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_IntervalWithinAnotherCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_IntervalWithinAnotherCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_IntervalWithinAnotherCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_IntervalWithinAnotherCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_IntervalWithinAnotherCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_IntervalWithinAnotherCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_IntervalWithinAnotherCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_IntervalWithinAnotherCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Contains_IntervalWithinAnotherCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_NullInterval_Throws,The following statement contains a magic number: var value = new DateInterval(new LocalDate(100)' new LocalDate(200));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_NullInterval_Throws,The following statement contains a magic number: var value = new DateInterval(new LocalDate(100)' new LocalDate(200));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_IntervalInDifferentCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_IntervalInDifferentCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_IntervalInDifferentCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_IntervalInDifferentCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_IntervalInDifferentCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_IntervalInDifferentCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_IntervalInDifferentCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_IntervalInDifferentCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_IntervalInDifferentCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_IntervalInDifferentCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_IntervalInDifferentCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Intersection_IntervalInDifferentCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_NullInterval_Throws,The following statement contains a magic number: var value = new DateInterval(new LocalDate(100)' new LocalDate(200));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_NullInterval_Throws,The following statement contains a magic number: var value = new DateInterval(new LocalDate(100)' new LocalDate(200));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_DifferentCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_DifferentCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_DifferentCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_DifferentCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_DifferentCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_DifferentCalendar_Throws,The following statement contains a magic number: var value = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Gregorian)'                  new LocalDate(2017' 11' 10' CalendarSystem.Gregorian));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_DifferentCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_DifferentCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_DifferentCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_DifferentCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_DifferentCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateIntervalTest.cs,Union_DifferentCalendar_Throws,The following statement contains a magic number: var other = new DateInterval(                  new LocalDate(2017' 11' 6' CalendarSystem.Coptic)'                  new LocalDate(2017' 11' 10' CalendarSystem.Coptic));
Magic Number,NodaTime.Test,DateTimeZoneProvidersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneProvidersTest.cs,AllTzdbTimeZonesLoad,The following statement contains a magic number: Assert.IsTrue(allZones.Count > 50);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ForOffset_UncachedExample_NotOnHalfHour,The following statement contains a magic number: var offset = Offset.FromSeconds(123);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ForOffset_UncachedExample_OutsideCacheRange,The following statement contains a magic number: var offset = Offset.FromHours(-14);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ForOffset_CachedExample,The following statement contains a magic number: var offset = Offset.FromHours(2);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_EndBeforeStart,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => DateTimeZone.Utc.GetZoneIntervals(Instant.FromUnixTimeTicks(100L)' Instant.FromUnixTimeTicks(99L)));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_EndBeforeStart,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => DateTimeZone.Utc.GetZoneIntervals(Instant.FromUnixTimeTicks(100L)' Instant.FromUnixTimeTicks(99L)));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_EndEqualToStart,The following statement contains a magic number: CollectionAssert.IsEmpty(DateTimeZone.Utc.GetZoneIntervals(Instant.FromUnixTimeTicks(100L)' Instant.FromUnixTimeTicks(100L)));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_EndEqualToStart,The following statement contains a magic number: CollectionAssert.IsEmpty(DateTimeZone.Utc.GetZoneIntervals(Instant.FromUnixTimeTicks(100L)' Instant.FromUnixTimeTicks(100L)));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_InvalidOptions,The following statement contains a magic number: var interval = new Interval(Instant.FromUtc(2000' 1' 1' 0' 0)' Instant.FromUtc(2001' 1' 1' 0' 0));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_InvalidOptions,The following statement contains a magic number: var interval = new Interval(Instant.FromUtc(2000' 1' 1' 0' 0)' Instant.FromUtc(2001' 1' 1' 0' 0));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_InvalidOptions,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => zone.GetZoneIntervals(interval' (ZoneEqualityComparer.Options) 1234567));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_FixedZone,The following statement contains a magic number: var zone = DateTimeZone.ForOffset(Offset.FromHours(3));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_FixedZone,The following statement contains a magic number: var actual = zone.GetZoneIntervals(Instant.FromUtc(1900' 1' 1' 0' 0)' Instant.FromUtc(2100' 1' 1' 0' 0));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_FixedZone,The following statement contains a magic number: var actual = zone.GetZoneIntervals(Instant.FromUtc(1900' 1' 1' 0' 0)' Instant.FromUtc(2100' 1' 1' 0' 0));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_SingleTransitionZone_IntervalCoversTransition,The following statement contains a magic number: Instant start = TestZone.Transition - Duration.FromDays(5);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_SingleTransitionZone_IntervalCoversTransition,The following statement contains a magic number: Instant end = TestZone.Transition + Duration.FromDays(5);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_SingleTransitionZone_IntervalDoesNotCoverTransition,The following statement contains a magic number: Instant start = TestZone.Transition - Duration.FromDays(10);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_SingleTransitionZone_IntervalDoesNotCoverTransition,The following statement contains a magic number: Instant end = TestZone.Transition - Duration.FromDays(5);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_IncludesStart,The following statement contains a magic number: Instant end = TestZone.Transition + Duration.FromDays(5);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_ExcludesEnd,The following statement contains a magic number: Instant start = TestZone.Transition - Duration.FromDays(10);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var expected = new[] {                   london.GetZoneInterval(Instant.FromUtc(1999' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2002' 1' 1' 0' 0))'              };
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var expected = new[] {                   london.GetZoneInterval(Instant.FromUtc(1999' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2002' 1' 1' 0' 0))'              };
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var expected = new[] {                   london.GetZoneInterval(Instant.FromUtc(1999' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2002' 1' 1' 0' 0))'              };
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var expected = new[] {                   london.GetZoneInterval(Instant.FromUtc(1999' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2002' 1' 1' 0' 0))'              };
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var expected = new[] {                   london.GetZoneInterval(Instant.FromUtc(1999' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2002' 1' 1' 0' 0))'              };
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var expected = new[] {                   london.GetZoneInterval(Instant.FromUtc(1999' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2002' 1' 1' 0' 0))'              };
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var expected = new[] {                   london.GetZoneInterval(Instant.FromUtc(1999' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2002' 1' 1' 0' 0))'              };
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var expected = new[] {                   london.GetZoneInterval(Instant.FromUtc(1999' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2002' 1' 1' 0' 0))'              };
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var expected = new[] {                   london.GetZoneInterval(Instant.FromUtc(1999' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2000' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 1' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2001' 6' 1' 0' 0))'                  london.GetZoneInterval(Instant.FromUtc(2002' 1' 1' 0' 0))'              };
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var start = Instant.FromUtc(1999' 6' 19' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var start = Instant.FromUtc(1999' 6' 19' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var start = Instant.FromUtc(1999' 6' 19' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var end = Instant.FromUtc(2002' 2' 4' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var end = Instant.FromUtc(2002' 2' 4' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_Complex,The following statement contains a magic number: var end = Instant.FromUtc(2002' 2' 4' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_NoCoalescing,The following statement contains a magic number: var transition1 = Instant.FromUtc(2000' 1' 1' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_NoCoalescing,The following statement contains a magic number: var transition2 = Instant.FromUtc(2001' 1' 1' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_NoCoalescing,The following statement contains a magic number: var transition3 = Instant.FromUtc(2002' 1' 1' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_NoCoalescing,The following statement contains a magic number: var transition4 = Instant.FromUtc(2004' 1' 1' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_NoCoalescing,The following statement contains a magic number: var zone = new MultiTransitionDateTimeZone.Builder(0' "0+0")              {                  { transition1' 1' 1' "1+1" }'                  { transition2' 0' 2' "0+2" }'                  { transition3' 0' 1' "0+1" }'                  { transition4' 0' 0' "0+0" }              }.Build();
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_NoCoalescing,The following statement contains a magic number: var interval = new Interval(                  Instant.FromUtc(1999' 1' 1' 0' 0)'                  Instant.FromUtc(2003' 1' 1' 0' 0));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_NoCoalescing,The following statement contains a magic number: var interval = new Interval(                  Instant.FromUtc(1999' 1' 1' 0' 0)'                  Instant.FromUtc(2003' 1' 1' 0' 0));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_NoCoalescing,The following statement contains a magic number: Assert.AreEqual(4' zoneIntervals.Count);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_Coalescing,The following statement contains a magic number: var transition1 = Instant.FromUtc(2000' 1' 1' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_Coalescing,The following statement contains a magic number: var transition2 = Instant.FromUtc(2001' 1' 1' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_Coalescing,The following statement contains a magic number: var transition3 = Instant.FromUtc(2002' 1' 1' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_Coalescing,The following statement contains a magic number: var transition4 = Instant.FromUtc(2004' 1' 1' 0' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_Coalescing,The following statement contains a magic number: var zone = new MultiTransitionDateTimeZone.Builder(0' "0+0")              {                  { transition1' 1' 1' "1+1" }'                  { transition2' 0' 2' "0+2" }'                  { transition3' 0' 1' "0+1" }'                  { transition4' 0' 0' "0+0" }              }.Build();
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_Coalescing,The following statement contains a magic number: var interval = new Interval(                  Instant.FromUtc(1999' 1' 1' 0' 0)'                  Instant.FromUtc(2003' 1' 1' 0' 0));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_Coalescing,The following statement contains a magic number: var interval = new Interval(                  Instant.FromUtc(1999' 1' 1' 0' 0)'                  Instant.FromUtc(2003' 1' 1' 0' 0));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetZoneIntervals_WithOptions_Coalescing,The following statement contains a magic number: Assert.AreEqual(3' zoneIntervals.Count);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AmbiguousStartOfDay_TransitionAtMidnight,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 6' 1' 0' 0).WithOffset(Offset.FromHours(-2))'                  TransitionBackwardToMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AmbiguousStartOfDay_TransitionAtMidnight,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 6' 1' 0' 0).WithOffset(Offset.FromHours(-2))'                  TransitionBackwardToMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AmbiguousStartOfDay_TransitionAtMidnight,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 6' 1' 0' 0).WithOffset(Offset.FromHours(-2))'                  TransitionBackwardToMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AmbiguousStartOfDay_TransitionAfterMidnight,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 6' 1' 0' 0).WithOffset(Offset.FromHours(-2))'                  TransitionBackwardAfterMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AmbiguousStartOfDay_TransitionAfterMidnight,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 6' 1' 0' 0).WithOffset(Offset.FromHours(-2))'                  TransitionBackwardAfterMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AmbiguousStartOfDay_TransitionAfterMidnight,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 6' 1' 0' 0).WithOffset(Offset.FromHours(-2))'                  TransitionBackwardAfterMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,SkippedStartOfDay_TransitionAtMidnight,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 6' 1' 1' 0).WithOffset(Offset.FromHours(-1))'                  TransitionForwardAtMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,SkippedStartOfDay_TransitionAtMidnight,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 6' 1' 1' 0).WithOffset(Offset.FromHours(-1))'                  TransitionForwardAtMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,SkippedStartOfDay_TransitionBeforeMidnight,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 6' 1' 0' 20).WithOffset(Offset.FromHours(-1))'                  TransitionForwardBeforeMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,SkippedStartOfDay_TransitionBeforeMidnight,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 6' 1' 0' 20).WithOffset(Offset.FromHours(-1))'                  TransitionForwardBeforeMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,SkippedStartOfDay_TransitionBeforeMidnight,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 6' 1' 0' 20).WithOffset(Offset.FromHours(-1))'                  TransitionForwardBeforeMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,UnambiguousStartOfDay,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 3' 1' 0' 0).WithOffset(Offset.FromHours(-2))'                  TransitionForwardAtMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,UnambiguousStartOfDay,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 3' 1' 0' 0).WithOffset(Offset.FromHours(-2))'                  TransitionForwardAtMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,UnambiguousStartOfDay,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2000' 3' 1' 0' 0).WithOffset(Offset.FromHours(-2))'                  TransitionForwardAtMidnightZone);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,UnambiguousStartOfDay,The following statement contains a magic number: var actual = TransitionForwardAtMidnightZone.AtStartOfDay(new LocalDate(2000' 3' 1));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,UnambiguousStartOfDay,The following statement contains a magic number: var actual = TransitionForwardAtMidnightZone.AtStartOfDay(new LocalDate(2000' 3' 1));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,UnambiguousStartOfDay,The following statement contains a magic number: Assert.AreEqual(expected' new LocalDate(2000' 3' 1).AtStartOfDayInZone(TransitionForwardAtMidnightZone));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,UnambiguousStartOfDay,The following statement contains a magic number: Assert.AreEqual(expected' new LocalDate(2000' 3' 1).AtStartOfDayInZone(TransitionForwardAtMidnightZone));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AssertAmbiguous,The following statement contains a magic number: Assert.AreEqual(2' mapping.Count);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 11' 7' 0' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 11' 7' 0' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 11' 7' 0' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 11' 7' 0' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 11' 7' 1' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 11' 7' 1' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 11' 7' 1' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 11' 7' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 11' 7' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 11' 7' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 11' 7' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 11' 7' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 11' 7' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 11' 7' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 11' 7' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 11' 7' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: AssertOffset(-7' before' LosAngeles);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesFallTransition,The following statement contains a magic number: AssertOffset(-8' after' LosAngeles);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 3' 14' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 3' 14' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 3' 14' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 3' 14' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 3' 14' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 3' 14' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 3' 14' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 3' 14' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 3' 14' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 3' 14' 3' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 3' 14' 3' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 3' 14' 3' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 3' 14' 3' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 3' 14' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 3' 14' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 3' 14' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 3' 14' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 3' 14' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: AssertOffset(-8' before' LosAngeles);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: AssertOffset(-7' atTransition' LosAngeles);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_LosAngelesSpringTransition,The following statement contains a magic number: AssertOffset(-7' after' LosAngeles);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 4' 4' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 4' 4' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 4' 4' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 4' 4' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 4' 4' 2' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 4' 4' 2' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 4' 4' 2' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 4' 4' 2' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 4' 4' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 4' 4' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 4' 4' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 4' 4' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 4' 4' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 4' 4' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 4' 4' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 4' 4' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 4' 4' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 4' 4' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: AssertOffset(+13' before' NewZealand);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandFallTransition,The following statement contains a magic number: AssertOffset(+12' after' NewZealand);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 9' 26' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 9' 26' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 9' 26' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 9' 26' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 9' 26' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 9' 26' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 9' 26' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 9' 26' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 9' 26' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 9' 26' 3' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 9' 26' 3' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 9' 26' 3' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 9' 26' 3' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 9' 26' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 9' 26' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 9' 26' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 9' 26' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 9' 26' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: AssertOffset(+12' before' NewZealand);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: AssertOffset(+13' atTransition' NewZealand);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_NewZealandSpringTransition,The following statement contains a magic number: AssertOffset(+13' after' NewZealand);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 10' 31' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 10' 31' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 10' 31' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 10' 31' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 10' 31' 2' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 10' 31' 2' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 10' 31' 2' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 10' 31' 2' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 10' 31' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 10' 31' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 10' 31' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 10' 31' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var ambiguous = new LocalDateTime(2010' 10' 31' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 10' 31' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 10' 31' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 10' 31' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 10' 31' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 10' 31' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisFallTransition,The following statement contains a magic number: AssertOffset(2' before' Paris);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 3' 28' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 3' 28' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 3' 28' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var before = new LocalDateTime(2010' 3' 28' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 3' 28' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 3' 28' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 3' 28' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 3' 28' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var impossible = new LocalDateTime(2010' 3' 28' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 3' 28' 3' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 3' 28' 3' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 3' 28' 3' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var atTransition = new LocalDateTime(2010' 3' 28' 3' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 3' 28' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 3' 28' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 3' 28' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 3' 28' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: var after = new LocalDateTime(2010' 3' 28' 3' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: AssertOffset(2' atTransition' Paris);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,GetOffsetFromLocal_ParisSpringTransition,The following statement contains a magic number: AssertOffset(2' after' Paris);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_UnambiguousDateReturnsUnambiguousMapping,The following statement contains a magic number: var unambigiousTime = new LocalDateTime(2011' 11' 9' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_UnambiguousDateReturnsUnambiguousMapping,The following statement contains a magic number: var unambigiousTime = new LocalDateTime(2011' 11' 9' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_UnambiguousDateReturnsUnambiguousMapping,The following statement contains a magic number: var unambigiousTime = new LocalDateTime(2011' 11' 9' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_UnambiguousDateReturnsUnambiguousMapping,The following statement contains a magic number: var unambigiousTime = new LocalDateTime(2011' 11' 9' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_AmbiguousDateReturnsAmbigousMapping,The following statement contains a magic number: var ambiguousTime = new LocalDateTime(2011' 11' 6' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_AmbiguousDateReturnsAmbigousMapping,The following statement contains a magic number: var ambiguousTime = new LocalDateTime(2011' 11' 6' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_AmbiguousDateReturnsAmbigousMapping,The following statement contains a magic number: var ambiguousTime = new LocalDateTime(2011' 11' 6' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_AmbiguousDateReturnsAmbigousMapping,The following statement contains a magic number: var ambiguousTime = new LocalDateTime(2011' 11' 6' 1' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_AmbiguousDateReturnsAmbigousMapping,The following statement contains a magic number: Assert.AreEqual(2' mapping.Count);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_SkippedDateReturnsSkippedMapping,The following statement contains a magic number: var skippedTime = new LocalDateTime(2011' 3' 13' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_SkippedDateReturnsSkippedMapping,The following statement contains a magic number: var skippedTime = new LocalDateTime(2011' 3' 13' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_SkippedDateReturnsSkippedMapping,The following statement contains a magic number: var skippedTime = new LocalDateTime(2011' 3' 13' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_SkippedDateReturnsSkippedMapping,The following statement contains a magic number: var skippedTime = new LocalDateTime(2011' 3' 13' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,MapLocalDateTime_SkippedDateReturnsSkippedMapping,The following statement contains a magic number: var skippedTime = new LocalDateTime(2011' 3' 13' 2' 30);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InWinter,The following statement contains a magic number: var when = Pacific.AtStrictly(new LocalDateTime(2009' 12' 22' 21' 39' 30));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InWinter,The following statement contains a magic number: var when = Pacific.AtStrictly(new LocalDateTime(2009' 12' 22' 21' 39' 30));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InWinter,The following statement contains a magic number: var when = Pacific.AtStrictly(new LocalDateTime(2009' 12' 22' 21' 39' 30));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InWinter,The following statement contains a magic number: var when = Pacific.AtStrictly(new LocalDateTime(2009' 12' 22' 21' 39' 30));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InWinter,The following statement contains a magic number: var when = Pacific.AtStrictly(new LocalDateTime(2009' 12' 22' 21' 39' 30));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InWinter,The following statement contains a magic number: var when = Pacific.AtStrictly(new LocalDateTime(2009' 12' 22' 21' 39' 30));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InWinter,The following statement contains a magic number: Assert.AreEqual(2009' when.Year);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InWinter,The following statement contains a magic number: Assert.AreEqual(12' when.Month);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InWinter,The following statement contains a magic number: Assert.AreEqual(22' when.Day);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InWinter,The following statement contains a magic number: Assert.AreEqual(21' when.Hour);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InWinter,The following statement contains a magic number: Assert.AreEqual(39' when.Minute);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InWinter,The following statement contains a magic number: Assert.AreEqual(30' when.Second);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InWinter,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-8)' when.Offset);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InSummer,The following statement contains a magic number: var when = Pacific.AtStrictly(new LocalDateTime(2009' 6' 22' 21' 39' 30));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InSummer,The following statement contains a magic number: var when = Pacific.AtStrictly(new LocalDateTime(2009' 6' 22' 21' 39' 30));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InSummer,The following statement contains a magic number: var when = Pacific.AtStrictly(new LocalDateTime(2009' 6' 22' 21' 39' 30));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InSummer,The following statement contains a magic number: var when = Pacific.AtStrictly(new LocalDateTime(2009' 6' 22' 21' 39' 30));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InSummer,The following statement contains a magic number: var when = Pacific.AtStrictly(new LocalDateTime(2009' 6' 22' 21' 39' 30));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InSummer,The following statement contains a magic number: var when = Pacific.AtStrictly(new LocalDateTime(2009' 6' 22' 21' 39' 30));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InSummer,The following statement contains a magic number: Assert.AreEqual(2009' when.Year);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InSummer,The following statement contains a magic number: Assert.AreEqual(6' when.Month);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InSummer,The following statement contains a magic number: Assert.AreEqual(22' when.Day);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InSummer,The following statement contains a magic number: Assert.AreEqual(21' when.Hour);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InSummer,The following statement contains a magic number: Assert.AreEqual(39' when.Minute);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InSummer,The following statement contains a magic number: Assert.AreEqual(30' when.Second);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_InSummer,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-7)' when.Offset);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_ThrowsWhenAmbiguous,The following statement contains a magic number: Assert.Throws<AmbiguousTimeException>(() => Pacific.AtStrictly(new LocalDateTime(2009' 11' 1' 1' 30' 0)));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_ThrowsWhenAmbiguous,The following statement contains a magic number: Assert.Throws<AmbiguousTimeException>(() => Pacific.AtStrictly(new LocalDateTime(2009' 11' 1' 1' 30' 0)));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_ThrowsWhenAmbiguous,The following statement contains a magic number: Assert.Throws<AmbiguousTimeException>(() => Pacific.AtStrictly(new LocalDateTime(2009' 11' 1' 1' 30' 0)));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_ThrowsWhenSkipped,The following statement contains a magic number: Assert.Throws<SkippedTimeException>(() => Pacific.AtStrictly(new LocalDateTime(2009' 3' 8' 2' 30' 0)));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_ThrowsWhenSkipped,The following statement contains a magic number: Assert.Throws<SkippedTimeException>(() => Pacific.AtStrictly(new LocalDateTime(2009' 3' 8' 2' 30' 0)));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_ThrowsWhenSkipped,The following statement contains a magic number: Assert.Throws<SkippedTimeException>(() => Pacific.AtStrictly(new LocalDateTime(2009' 3' 8' 2' 30' 0)));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_ThrowsWhenSkipped,The following statement contains a magic number: Assert.Throws<SkippedTimeException>(() => Pacific.AtStrictly(new LocalDateTime(2009' 3' 8' 2' 30' 0)));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtStrictly_ThrowsWhenSkipped,The following statement contains a magic number: Assert.Throws<SkippedTimeException>(() => Pacific.AtStrictly(new LocalDateTime(2009' 3' 8' 2' 30' 0)));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_AmbiguousTime_ReturnsEarlierMapping,The following statement contains a magic number: var local = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_AmbiguousTime_ReturnsEarlierMapping,The following statement contains a magic number: var local = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_AmbiguousTime_ReturnsEarlierMapping,The following statement contains a magic number: var local = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_AmbiguousTime_ReturnsEarlierMapping,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-7)' zoned.Offset);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_ReturnsForwardShiftedValue,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_ReturnsForwardShiftedValue,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_ReturnsForwardShiftedValue,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_ReturnsForwardShiftedValue,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_ReturnsForwardShiftedValue,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_ReturnsForwardShiftedValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2009' 3' 8' 3' 30' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_ReturnsForwardShiftedValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2009' 3' 8' 3' 30' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_ReturnsForwardShiftedValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2009' 3' 8' 3' 30' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_ReturnsForwardShiftedValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2009' 3' 8' 3' 30' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_ReturnsForwardShiftedValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2009' 3' 8' 3' 30' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,AtLeniently_ReturnsForwardShiftedValue,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-7)' zoned.Offset);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ResolveLocal,The following statement contains a magic number: var ambiguous = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ResolveLocal,The following statement contains a magic number: var ambiguous = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ResolveLocal,The following statement contains a magic number: var ambiguous = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ResolveLocal,The following statement contains a magic number: var skipped = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ResolveLocal,The following statement contains a magic number: var skipped = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ResolveLocal,The following statement contains a magic number: var skipped = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ResolveLocal,The following statement contains a magic number: var skipped = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ResolveLocal,The following statement contains a magic number: var skipped = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ZoneWithAmbiguity_NearStartOfTime,The following statement contains a magic number: var mapping = ZoneWithAmbiguity.MapLocal(new LocalDateTime(-9998' 1' 5' 0' 0));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ZoneWithAmbiguity_NearStartOfTime,The following statement contains a magic number: var mapping = ZoneWithAmbiguity.MapLocal(new LocalDateTime(-9998' 1' 5' 0' 0));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ZoneWithAmbiguity_StartOfTransition,The following statement contains a magic number: CheckMapping(mapping' IntervalBeforeAmbiguity' IntervalAfterAmbiguity' 2);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ZoneWithAmbiguity_MidTransition,The following statement contains a magic number: CheckMapping(mapping' IntervalBeforeAmbiguity' IntervalAfterAmbiguity' 2);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,ZoneWithAmbiguity_LastTickOfTransition,The following statement contains a magic number: CheckMapping(mapping' IntervalBeforeAmbiguity' IntervalAfterAmbiguity' 2);
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,TrickyCase,The following statement contains a magic number: var zone = new SingleTransitionDateTimeZone(Transition' Offset.FromHours(3)' Offset.FromHours(5));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,TrickyCase,The following statement contains a magic number: var zone = new SingleTransitionDateTimeZone(Transition' Offset.FromHours(3)' Offset.FromHours(5));
Magic Number,NodaTime.Test,DateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DateTimeZoneTest.cs,TrickyCase,The following statement contains a magic number: var mapping = zone.MapLocal(new LocalDateTime(2000' 1' 1' 1' 0));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,FromAndToTimeSpan,The following statement contains a magic number: TimeSpan timeSpan = TimeSpan.FromHours(3) + TimeSpan.FromSeconds(2) + TimeSpan.FromTicks(1);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,FromAndToTimeSpan,The following statement contains a magic number: TimeSpan timeSpan = TimeSpan.FromHours(3) + TimeSpan.FromSeconds(2) + TimeSpan.FromTicks(1);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,FromAndToTimeSpan,The following statement contains a magic number: Duration duration = Duration.FromHours(3) + Duration.FromSeconds(2) + Duration.FromTicks(1);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,FromAndToTimeSpan,The following statement contains a magic number: Duration duration = Duration.FromHours(3) + Duration.FromSeconds(2) + Duration.FromTicks(1);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,FromNanoseconds_Double,The following statement contains a magic number: double largeDoubleValue = (long.MaxValue / 16) * 15;
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,FromNanoseconds_Double,The following statement contains a magic number: double largeDoubleValue = (long.MaxValue / 16) * 15;
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,FromNanoseconds_Double,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(largeInt64Value) * 8' Duration.FromNanoseconds(largeDoubleValue * 8d));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,FromNanoseconds_Double,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(largeInt64Value) * 8' Duration.FromNanoseconds(largeDoubleValue * 8d));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,XmlSerialization,The following statement contains a magic number: Duration value = new PeriodBuilder { Days = 5' Hours = 3' Minutes = 20' Seconds = 35' Ticks = 1234500 }.Build().ToDuration();
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,XmlSerialization,The following statement contains a magic number: Duration value = new PeriodBuilder { Days = 5' Hours = 3' Minutes = 20' Seconds = 35' Ticks = 1234500 }.Build().ToDuration();
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,XmlSerialization,The following statement contains a magic number: Duration value = new PeriodBuilder { Days = 5' Hours = 3' Minutes = 20' Seconds = 35' Ticks = 1234500 }.Build().ToDuration();
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,XmlSerialization,The following statement contains a magic number: Duration value = new PeriodBuilder { Days = 5' Hours = 3' Minutes = 20' Seconds = 35' Ticks = 1234500 }.Build().ToDuration();
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,XmlSerialization,The following statement contains a magic number: Duration value = new PeriodBuilder { Days = 5' Hours = 3' Minutes = 20' Seconds = 35' Ticks = 1234500 }.Build().ToDuration();
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,BigIntegerConversions,The following statement contains a magic number: bigIntegerNanos *= 100;
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,ConstituentParts_Positive,The following statement contains a magic number: var nanos = Duration.FromNanoseconds(NodaConstants.NanosecondsPerDay * 5 + 100);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,ConstituentParts_Positive,The following statement contains a magic number: var nanos = Duration.FromNanoseconds(NodaConstants.NanosecondsPerDay * 5 + 100);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,ConstituentParts_Positive,The following statement contains a magic number: Assert.AreEqual(5' nanos.FloorDays);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,ConstituentParts_Positive,The following statement contains a magic number: Assert.AreEqual(100' nanos.NanosecondOfFloorDay);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,ConstituentParts_Negative,The following statement contains a magic number: var nanos = Duration.FromNanoseconds(NodaConstants.NanosecondsPerDay * -5 + 100);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,ConstituentParts_Negative,The following statement contains a magic number: var nanos = Duration.FromNanoseconds(NodaConstants.NanosecondsPerDay * -5 + 100);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,ConstituentParts_Negative,The following statement contains a magic number: Assert.AreEqual(-5' nanos.FloorDays);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,ConstituentParts_Negative,The following statement contains a magic number: Assert.AreEqual(100' nanos.NanosecondOfFloorDay);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,ConstituentParts_Large,The following statement contains a magic number: var nanos = Duration.FromNanoseconds(NodaConstants.NanosecondsPerDay * (BigInteger) 365000 + (BigInteger) 500);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,ConstituentParts_Large,The following statement contains a magic number: var nanos = Duration.FromNanoseconds(NodaConstants.NanosecondsPerDay * (BigInteger) 365000 + (BigInteger) 500);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,ConstituentParts_Large,The following statement contains a magic number: Assert.AreEqual(365000' nanos.FloorDays);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,ConstituentParts_Large,The following statement contains a magic number: Assert.AreEqual(500' nanos.NanosecondOfFloorDay);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Equality,The following statement contains a magic number: var equal2 = Duration.FromTicks(NodaConstants.TicksPerHour * 25);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Equality,The following statement contains a magic number: var different1 = new Duration(1' 200L);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Equality,The following statement contains a magic number: var different2 = new Duration(2' NodaConstants.TicksPerHour);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Comparison,The following statement contains a magic number: var equal2 = Duration.FromTicks(NodaConstants.TicksPerHour * 25);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Comparison,The following statement contains a magic number: var greater2 = new Duration(2' 0L);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,BclCompatibleTick_Zero,The following statement contains a magic number: Assert.AreEqual(0' Duration.FromNanoseconds(99L).BclCompatibleTicks);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,BclCompatibleTick_Zero,The following statement contains a magic number: Assert.AreEqual(0' Duration.FromNanoseconds(-99L).BclCompatibleTicks);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,BclCompatibleTick_Positive,The following statement contains a magic number: Assert.AreEqual(ticks' start.PlusSmallNanoseconds(99L).BclCompatibleTicks);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,BclCompatibleTicks_Negative,The following statement contains a magic number: Assert.AreEqual(ticks' start.MinusSmallNanoseconds(99L).BclCompatibleTicks);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Validation,The following statement contains a magic number: TestHelper.AssertValid(Duration.FromDays' (1 << 24) - 1);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Validation,The following statement contains a magic number: TestHelper.AssertOutOfRange(Duration.FromDays' 1 << 24);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Validation,The following statement contains a magic number: TestHelper.AssertValid(Duration.FromDays' -(1 << 24));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Validation,The following statement contains a magic number: TestHelper.AssertOutOfRange(Duration.FromDays' -(1 << 24) - 1);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveComponents,The following statement contains a magic number: Duration duration = Duration.FromNanoseconds(1234567890123456L);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveComponents,The following statement contains a magic number: Assert.AreEqual(14' duration.Days);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveComponents,The following statement contains a magic number: Assert.AreEqual(24967890123456L' duration.NanosecondOfDay);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveComponents,The following statement contains a magic number: Assert.AreEqual(6' duration.Hours);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveComponents,The following statement contains a magic number: Assert.AreEqual(56' duration.Minutes);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveComponents,The following statement contains a magic number: Assert.AreEqual(7' duration.Seconds);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveComponents,The following statement contains a magic number: Assert.AreEqual(890' duration.Milliseconds);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveComponents,The following statement contains a magic number: Assert.AreEqual(8901234' duration.SubsecondTicks);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveComponents,The following statement contains a magic number: Assert.AreEqual(890123456' duration.SubsecondNanoseconds);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeComponents,The following statement contains a magic number: Duration duration = Duration.FromNanoseconds(-1234567890123456L);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeComponents,The following statement contains a magic number: Assert.AreEqual(-14' duration.Days);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeComponents,The following statement contains a magic number: Assert.AreEqual(-24967890123456L' duration.NanosecondOfDay);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeComponents,The following statement contains a magic number: Assert.AreEqual(-6' duration.Hours);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeComponents,The following statement contains a magic number: Assert.AreEqual(-56' duration.Minutes);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeComponents,The following statement contains a magic number: Assert.AreEqual(-7' duration.Seconds);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeComponents,The following statement contains a magic number: Assert.AreEqual(-890' duration.Milliseconds);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeComponents,The following statement contains a magic number: Assert.AreEqual(-8901234' duration.SubsecondTicks);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeComponents,The following statement contains a magic number: Assert.AreEqual(-890123456' duration.SubsecondNanoseconds);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Duration duration = Duration.FromDays(4) + Duration.FromHours(3) + Duration.FromMinutes(2) + Duration.FromSeconds(1)                  + Duration.FromNanoseconds(123456789L);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Duration duration = Duration.FromDays(4) + Duration.FromHours(3) + Duration.FromMinutes(2) + Duration.FromSeconds(1)                  + Duration.FromNanoseconds(123456789L);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Duration duration = Duration.FromDays(4) + Duration.FromHours(3) + Duration.FromMinutes(2) + Duration.FromSeconds(1)                  + Duration.FromNanoseconds(123456789L);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Duration duration = Duration.FromDays(4) + Duration.FromHours(3) + Duration.FromMinutes(2) + Duration.FromSeconds(1)                  + Duration.FromNanoseconds(123456789L);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Assert.AreEqual(4.1264' duration.TotalDays' 0.0001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Assert.AreEqual(4.1264' duration.TotalDays' 0.0001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Assert.AreEqual(99.0336' duration.TotalHours' 0.0001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Assert.AreEqual(99.0336' duration.TotalHours' 0.0001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Assert.AreEqual(5942.0187' duration.TotalMinutes' 0.0001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Assert.AreEqual(5942.0187' duration.TotalMinutes' 0.0001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Assert.AreEqual(356521.123456789' duration.TotalSeconds' 0.000000001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Assert.AreEqual(356521.123456789' duration.TotalSeconds' 0.000000001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Assert.AreEqual(356521123.456789' duration.TotalMilliseconds' 0.000001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Assert.AreEqual(356521123.456789' duration.TotalMilliseconds' 0.000001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Assert.AreEqual(3565211234567.89d' duration.TotalTicks' 0.01);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Assert.AreEqual(3565211234567.89d' duration.TotalTicks' 0.01);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,PositiveTotals,The following statement contains a magic number: Assert.AreEqual(356521123456789d' duration.TotalNanoseconds' 1);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Duration duration = Duration.FromDays(-4) + Duration.FromHours(-3) + Duration.FromMinutes(-2) + Duration.FromSeconds(-1)                  + Duration.FromNanoseconds(-123456789L);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Duration duration = Duration.FromDays(-4) + Duration.FromHours(-3) + Duration.FromMinutes(-2) + Duration.FromSeconds(-1)                  + Duration.FromNanoseconds(-123456789L);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Duration duration = Duration.FromDays(-4) + Duration.FromHours(-3) + Duration.FromMinutes(-2) + Duration.FromSeconds(-1)                  + Duration.FromNanoseconds(-123456789L);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Duration duration = Duration.FromDays(-4) + Duration.FromHours(-3) + Duration.FromMinutes(-2) + Duration.FromSeconds(-1)                  + Duration.FromNanoseconds(-123456789L);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Assert.AreEqual(-4.1264' duration.TotalDays' 0.0001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Assert.AreEqual(-4.1264' duration.TotalDays' 0.0001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Assert.AreEqual(-99.0336' duration.TotalHours' 0.0001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Assert.AreEqual(-99.0336' duration.TotalHours' 0.0001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Assert.AreEqual(-5942.0187' duration.TotalMinutes' 0.0001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Assert.AreEqual(-5942.0187' duration.TotalMinutes' 0.0001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Assert.AreEqual(-356521.123456789' duration.TotalSeconds' 0.000000001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Assert.AreEqual(-356521.123456789' duration.TotalSeconds' 0.000000001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Assert.AreEqual(-356521123.456789' duration.TotalMilliseconds' 0.000001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Assert.AreEqual(-356521123.456789' duration.TotalMilliseconds' 0.000001);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,NegativeTotals,The following statement contains a magic number: Assert.AreEqual(-356521123456789d' duration.TotalNanoseconds' 1);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Max,The following statement contains a magic number: Duration x = Duration.FromNanoseconds(100);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Max,The following statement contains a magic number: Duration y = Duration.FromNanoseconds(200);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Min,The following statement contains a magic number: Duration x = Duration.FromNanoseconds(100);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Min,The following statement contains a magic number: Duration y = Duration.FromNanoseconds(200);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorPlus_NonZero,The following statement contains a magic number: Assert.AreEqual(3000001L' (threeMillion + Duration.Epsilon).ToInt64Nanoseconds()' "3'000'000 + 1");
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorPlus_NonZero,The following statement contains a magic number: Assert.AreEqual(-49999999L' (negativeFiftyMillion + Duration.Epsilon).ToInt64Nanoseconds()' "-50'000'000 + 1");
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorPlus_MethodEquivalents,The following statement contains a magic number: Duration x = Duration.FromNanoseconds(100);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorPlus_MethodEquivalents,The following statement contains a magic number: Duration y = Duration.FromNanoseconds(200);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMinus_NonZero,The following statement contains a magic number: Assert.AreEqual(2999999L' (threeMillion - Duration.Epsilon).ToInt64Nanoseconds()' "3'000'000 - 1");
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMinus_NonZero,The following statement contains a magic number: Assert.AreEqual(2L' (Duration.Epsilon - negativeEpsilon).ToInt64Nanoseconds()' "1 - (-1)");
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMinus_NonZero,The following statement contains a magic number: Assert.AreEqual(-50000001L' (negativeFiftyMillion - Duration.Epsilon).ToInt64Nanoseconds()' "-50'000'000 - 1");
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMinus_MethodEquivalents,The following statement contains a magic number: Duration x = Duration.FromNanoseconds(100);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMinus_MethodEquivalents,The following statement contains a magic number: Duration y = Duration.FromNanoseconds(200);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorDivision_MethodEquivalent,The following statement contains a magic number: Assert.AreEqual(threeMillion / 2000000' Duration.Divide(threeMillion' 2000000));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorDivision_MethodEquivalent,The following statement contains a magic number: Assert.AreEqual(threeMillion / 2000000' Duration.Divide(threeMillion' 2000000));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorDivision_MethodEquivalent,The following statement contains a magic number: Assert.AreEqual(threeMillion / 2000000d' Duration.Divide(threeMillion' 2000000d));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorDivision_MethodEquivalent,The following statement contains a magic number: Assert.AreEqual(threeMillion / 2000000d' Duration.Divide(threeMillion' 2000000d));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Commutation,The following statement contains a magic number: Assert.AreEqual(threeMillion * 5' 5 * threeMillion);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,Commutation,The following statement contains a magic number: Assert.AreEqual(threeMillion * 5' 5 * threeMillion);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMultiplication_MethodEquivalents,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(-50000) * 1000' Duration.Multiply(Duration.FromNanoseconds(-50000)' 1000));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMultiplication_MethodEquivalents,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(-50000) * 1000' Duration.Multiply(Duration.FromNanoseconds(-50000)' 1000));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMultiplication_MethodEquivalents,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(-50000) * 1000' Duration.Multiply(Duration.FromNanoseconds(-50000)' 1000));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMultiplication_MethodEquivalents,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(-50000) * 1000' Duration.Multiply(Duration.FromNanoseconds(-50000)' 1000));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMultiplication_MethodEquivalents,The following statement contains a magic number: Assert.AreEqual(1000 * Duration.FromNanoseconds(-50000)' Duration.Multiply(1000' Duration.FromNanoseconds(-50000)));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMultiplication_MethodEquivalents,The following statement contains a magic number: Assert.AreEqual(1000 * Duration.FromNanoseconds(-50000)' Duration.Multiply(1000' Duration.FromNanoseconds(-50000)));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMultiplication_MethodEquivalents,The following statement contains a magic number: Assert.AreEqual(1000 * Duration.FromNanoseconds(-50000)' Duration.Multiply(1000' Duration.FromNanoseconds(-50000)));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMultiplication_MethodEquivalents,The following statement contains a magic number: Assert.AreEqual(1000 * Duration.FromNanoseconds(-50000)' Duration.Multiply(1000' Duration.FromNanoseconds(-50000)));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMultiplication_MethodEquivalents,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(-50000) * 1000d' Duration.Multiply(Duration.FromNanoseconds(-50000)' 1000d));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMultiplication_MethodEquivalents,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(-50000) * 1000d' Duration.Multiply(Duration.FromNanoseconds(-50000)' 1000d));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMultiplication_MethodEquivalents,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(-50000) * 1000d' Duration.Multiply(Duration.FromNanoseconds(-50000)' 1000d));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,OperatorMultiplication_MethodEquivalents,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(-50000) * 1000d' Duration.Multiply(Duration.FromNanoseconds(-50000)' 1000d));
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,UnaryMinusAndNegate,The following statement contains a magic number: var start = Duration.FromNanoseconds(5000);
Magic Number,NodaTime.Test,DurationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\DurationTest.Construction.cs,UnaryMinusAndNegate,The following statement contains a magic number: var expected = Duration.FromNanoseconds(-5000);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,JulianDateConversions,The following statement contains a magic number: Assert.AreEqual(expected.ToUnixTimeMilliseconds()' actual.ToUnixTimeMilliseconds()' 50' "Expected {0}' was {1}"' expected' actual);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,JulianDateConversions,The following statement contains a magic number: Assert.AreEqual(julianDate' expected.ToJulianDate()' 0.000001);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcNoSeconds,The following statement contains a magic number: Instant viaUtc = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 0)).ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcNoSeconds,The following statement contains a magic number: Instant viaUtc = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 0)).ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcNoSeconds,The following statement contains a magic number: Instant viaUtc = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 0)).ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcNoSeconds,The following statement contains a magic number: Instant viaUtc = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 0)).ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcNoSeconds,The following statement contains a magic number: Instant viaUtc = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 0)).ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcNoSeconds,The following statement contains a magic number: Assert.AreEqual(viaUtc' Instant.FromUtc(2008' 4' 3' 10' 35));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcNoSeconds,The following statement contains a magic number: Assert.AreEqual(viaUtc' Instant.FromUtc(2008' 4' 3' 10' 35));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcNoSeconds,The following statement contains a magic number: Assert.AreEqual(viaUtc' Instant.FromUtc(2008' 4' 3' 10' 35));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcNoSeconds,The following statement contains a magic number: Assert.AreEqual(viaUtc' Instant.FromUtc(2008' 4' 3' 10' 35));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcNoSeconds,The following statement contains a magic number: Assert.AreEqual(viaUtc' Instant.FromUtc(2008' 4' 3' 10' 35));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcWithSeconds,The following statement contains a magic number: Instant viaUtc = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 23)).ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcWithSeconds,The following statement contains a magic number: Instant viaUtc = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 23)).ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcWithSeconds,The following statement contains a magic number: Instant viaUtc = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 23)).ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcWithSeconds,The following statement contains a magic number: Instant viaUtc = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 23)).ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcWithSeconds,The following statement contains a magic number: Instant viaUtc = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 23)).ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcWithSeconds,The following statement contains a magic number: Instant viaUtc = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 23)).ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcWithSeconds,The following statement contains a magic number: Assert.AreEqual(viaUtc' Instant.FromUtc(2008' 4' 3' 10' 35' 23));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcWithSeconds,The following statement contains a magic number: Assert.AreEqual(viaUtc' Instant.FromUtc(2008' 4' 3' 10' 35' 23));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcWithSeconds,The following statement contains a magic number: Assert.AreEqual(viaUtc' Instant.FromUtc(2008' 4' 3' 10' 35' 23));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcWithSeconds,The following statement contains a magic number: Assert.AreEqual(viaUtc' Instant.FromUtc(2008' 4' 3' 10' 35' 23));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcWithSeconds,The following statement contains a magic number: Assert.AreEqual(viaUtc' Instant.FromUtc(2008' 4' 3' 10' 35' 23));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUtcWithSeconds,The following statement contains a magic number: Assert.AreEqual(viaUtc' Instant.FromUtc(2008' 4' 3' 10' 35' 23));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InUtc,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2008' 4' 3' 10' 35' 23).InUtc();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InUtc,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2008' 4' 3' 10' 35' 23).InUtc();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InUtc,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2008' 4' 3' 10' 35' 23).InUtc();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InUtc,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2008' 4' 3' 10' 35' 23).InUtc();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InUtc,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2008' 4' 3' 10' 35' 23).InUtc();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InUtc,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2008' 4' 3' 10' 35' 23).InUtc();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InUtc,The following statement contains a magic number: ZonedDateTime expected = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 23));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InUtc,The following statement contains a magic number: ZonedDateTime expected = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 23));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InUtc,The following statement contains a magic number: ZonedDateTime expected = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 23));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InUtc,The following statement contains a magic number: ZonedDateTime expected = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 23));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InUtc,The following statement contains a magic number: ZonedDateTime expected = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 23));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InUtc,The following statement contains a magic number: ZonedDateTime expected = DateTimeZone.Utc.AtStrictly(new LocalDateTime(2008' 4' 3' 10' 35' 23));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZone,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2008' 6' 10' 13' 16' 17).InZone(london);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZone,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2008' 6' 10' 13' 16' 17).InZone(london);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZone,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2008' 6' 10' 13' 16' 17).InZone(london);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZone,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2008' 6' 10' 13' 16' 17).InZone(london);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZone,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2008' 6' 10' 13' 16' 17).InZone(london);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZone,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2008' 6' 10' 13' 16' 17).InZone(london);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZone,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2008' 6' 10' 14' 16' 17);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZone,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2008' 6' 10' 14' 16' 17);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZone,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2008' 6' 10' 14' 16' 17);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZone,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2008' 6' 10' 14' 16' 17);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZone,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2008' 6' 10' 14' 16' 17);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZone,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2008' 6' 10' 14' 16' 17);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset,The following statement contains a magic number: Instant instant = Instant.FromUtc(2013' 10' 12' 11' 15);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset,The following statement contains a magic number: Instant instant = Instant.FromUtc(2013' 10' 12' 11' 15);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset,The following statement contains a magic number: Instant instant = Instant.FromUtc(2013' 10' 12' 11' 15);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset,The following statement contains a magic number: Instant instant = Instant.FromUtc(2013' 10' 12' 11' 15);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset,The following statement contains a magic number: Instant instant = Instant.FromUtc(2013' 10' 12' 11' 15);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset,The following statement contains a magic number: Offset offset = Offset.FromHours(2);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset,The following statement contains a magic number: OffsetDateTime expected = new OffsetDateTime(new LocalDateTime(2013' 10' 12' 13' 15)' offset);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset,The following statement contains a magic number: OffsetDateTime expected = new OffsetDateTime(new LocalDateTime(2013' 10' 12' 13' 15)' offset);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset,The following statement contains a magic number: OffsetDateTime expected = new OffsetDateTime(new LocalDateTime(2013' 10' 12' 13' 15)' offset);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset,The following statement contains a magic number: OffsetDateTime expected = new OffsetDateTime(new LocalDateTime(2013' 10' 12' 13' 15)' offset);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset,The following statement contains a magic number: OffsetDateTime expected = new OffsetDateTime(new LocalDateTime(2013' 10' 12' 13' 15)' offset);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset_NonIsoCalendar,The following statement contains a magic number: Instant instant = Instant.FromUtc(2013' 10' 12' 11' 15);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset_NonIsoCalendar,The following statement contains a magic number: Instant instant = Instant.FromUtc(2013' 10' 12' 11' 15);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset_NonIsoCalendar,The following statement contains a magic number: Instant instant = Instant.FromUtc(2013' 10' 12' 11' 15);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset_NonIsoCalendar,The following statement contains a magic number: Instant instant = Instant.FromUtc(2013' 10' 12' 11' 15);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset_NonIsoCalendar,The following statement contains a magic number: Instant instant = Instant.FromUtc(2013' 10' 12' 11' 15);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset_NonIsoCalendar,The following statement contains a magic number: Offset offset = Offset.FromHours(2);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset_NonIsoCalendar,The following statement contains a magic number: OffsetDateTime expected = new OffsetDateTime(new LocalDateTime(1434' 12' 7' 13' 15' calendar)' offset);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset_NonIsoCalendar,The following statement contains a magic number: OffsetDateTime expected = new OffsetDateTime(new LocalDateTime(1434' 12' 7' 13' 15' calendar)' offset);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset_NonIsoCalendar,The following statement contains a magic number: OffsetDateTime expected = new OffsetDateTime(new LocalDateTime(1434' 12' 7' 13' 15' calendar)' offset);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset_NonIsoCalendar,The following statement contains a magic number: OffsetDateTime expected = new OffsetDateTime(new LocalDateTime(1434' 12' 7' 13' 15' calendar)' offset);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,WithOffset_NonIsoCalendar,The following statement contains a magic number: OffsetDateTime expected = new OffsetDateTime(new LocalDateTime(1434' 12' 7' 13' 15' calendar)' offset);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromTicksSinceUnixEpoch,The following statement contains a magic number: Instant instant = Instant.FromUnixTimeTicks(12345L);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromTicksSinceUnixEpoch,The following statement contains a magic number: Assert.AreEqual(12345L' instant.ToUnixTimeTicks());
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUnixTimeMilliseconds_Valid,The following statement contains a magic number: Instant actual = Instant.FromUnixTimeMilliseconds(12345L);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUnixTimeMilliseconds_Valid,The following statement contains a magic number: Instant expected = Instant.FromUnixTimeTicks(12345L * NodaConstants.TicksPerMillisecond);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUnixTimeMilliseconds_TooLarge,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Instant.FromUnixTimeMilliseconds(long.MaxValue / 100));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUnixTimeMilliseconds_TooSmall,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Instant.FromUnixTimeMilliseconds(long.MinValue / 100));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUnixTimeSeconds_Valid,The following statement contains a magic number: Instant actual = Instant.FromUnixTimeSeconds(12345L);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUnixTimeSeconds_Valid,The following statement contains a magic number: Instant expected = Instant.FromUnixTimeTicks(12345L * NodaConstants.TicksPerSecond);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUnixTimeSeconds_TooLarge,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Instant.FromUnixTimeSeconds(long.MaxValue / 1000000));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromUnixTimeSeconds_TooSmall,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Instant.FromUnixTimeSeconds(long.MinValue / 1000000));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZoneWithCalendar,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2004' 6' 9' 11' 10).InZone(london' copticCalendar);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZoneWithCalendar,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2004' 6' 9' 11' 10).InZone(london' copticCalendar);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZoneWithCalendar,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2004' 6' 9' 11' 10).InZone(london' copticCalendar);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZoneWithCalendar,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2004' 6' 9' 11' 10).InZone(london' copticCalendar);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZoneWithCalendar,The following statement contains a magic number: ZonedDateTime viaInstant = Instant.FromUtc(2004' 6' 9' 11' 10).InZone(london' copticCalendar);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZoneWithCalendar,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(1720' 10' 2' 12' 10' 0' copticCalendar);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZoneWithCalendar,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(1720' 10' 2' 12' 10' 0' copticCalendar);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZoneWithCalendar,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(1720' 10' 2' 12' 10' 0' copticCalendar);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZoneWithCalendar,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(1720' 10' 2' 12' 10' 0' copticCalendar);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,InZoneWithCalendar,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(1720' 10' 2' 12' 10' 0' copticCalendar);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,Max,The following statement contains a magic number: Instant x = Instant.FromUnixTimeTicks(100);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,Max,The following statement contains a magic number: Instant y = Instant.FromUnixTimeTicks(200);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,Min,The following statement contains a magic number: Instant x = Instant.FromUnixTimeTicks(100);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,Min,The following statement contains a magic number: Instant y = Instant.FromUnixTimeTicks(200);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeUtc,The following statement contains a magic number: Instant x = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeUtc,The following statement contains a magic number: Instant x = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeUtc,The following statement contains a magic number: Instant x = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeUtc,The following statement contains a magic number: Instant x = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeUtc,The following statement contains a magic number: Instant x = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeUtc,The following statement contains a magic number: DateTime expected = new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeUtc,The following statement contains a magic number: DateTime expected = new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeUtc,The following statement contains a magic number: DateTime expected = new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeUtc,The following statement contains a magic number: DateTime expected = new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeUtc,The following statement contains a magic number: DateTime expected = new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var instant = Instant.FromUtc(year' 1' 1' 13' 15' 55).PlusNanoseconds(NodaConstants.NanosecondsPerSecond - 1);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var instant = Instant.FromUtc(year' 1' 1' 13' 15' 55).PlusNanoseconds(NodaConstants.NanosecondsPerSecond - 1);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var instant = Instant.FromUtc(year' 1' 1' 13' 15' 55).PlusNanoseconds(NodaConstants.NanosecondsPerSecond - 1);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var expectedDateTimeUtc = new DateTime(year' 1' 1' 13' 15' 55' DateTimeKind.Unspecified)                  .AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var expectedDateTimeUtc = new DateTime(year' 1' 1' 13' 15' 55' DateTimeKind.Unspecified)                  .AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var expectedDateTimeUtc = new DateTime(year' 1' 1' 13' 15' 55' DateTimeKind.Unspecified)                  .AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeOffset,The following statement contains a magic number: Instant x = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeOffset,The following statement contains a magic number: Instant x = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeOffset,The following statement contains a magic number: Instant x = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeOffset,The following statement contains a magic number: Instant x = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeOffset,The following statement contains a magic number: Instant x = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(2011' 08' 18' 20' 53' 0' TimeSpan.Zero);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(2011' 08' 18' 20' 53' 0' TimeSpan.Zero);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(2011' 08' 18' 20' 53' 0' TimeSpan.Zero);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(2011' 08' 18' 20' 53' 0' TimeSpan.Zero);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(2011' 08' 18' 20' 53' 0' TimeSpan.Zero);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset dateTimeOffset = new DateTimeOffset(2011' 08' 18' 20' 53' 0' TimeSpan.FromHours(5));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset dateTimeOffset = new DateTimeOffset(2011' 08' 18' 20' 53' 0' TimeSpan.FromHours(5));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset dateTimeOffset = new DateTimeOffset(2011' 08' 18' 20' 53' 0' TimeSpan.FromHours(5));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset dateTimeOffset = new DateTimeOffset(2011' 08' 18' 20' 53' 0' TimeSpan.FromHours(5));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset dateTimeOffset = new DateTimeOffset(2011' 08' 18' 20' 53' 0' TimeSpan.FromHours(5));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset dateTimeOffset = new DateTimeOffset(2011' 08' 18' 20' 53' 0' TimeSpan.FromHours(5));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeOffset,The following statement contains a magic number: Instant expected = Instant.FromUtc(2011' 08' 18' 15' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeOffset,The following statement contains a magic number: Instant expected = Instant.FromUtc(2011' 08' 18' 15' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeOffset,The following statement contains a magic number: Instant expected = Instant.FromUtc(2011' 08' 18' 15' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeOffset,The following statement contains a magic number: Instant expected = Instant.FromUtc(2011' 08' 18' 15' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeOffset,The following statement contains a magic number: Instant expected = Instant.FromUtc(2011' 08' 18' 15' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Instant.FromDateTimeUtc(new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Local)));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Instant.FromDateTimeUtc(new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Local)));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Instant.FromDateTimeUtc(new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Local)));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Instant.FromDateTimeUtc(new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Local)));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Instant.FromDateTimeUtc(new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Local)));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Instant.FromDateTimeUtc(new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Unspecified)));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Instant.FromDateTimeUtc(new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Unspecified)));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Instant.FromDateTimeUtc(new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Unspecified)));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Instant.FromDateTimeUtc(new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Unspecified)));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => Instant.FromDateTimeUtc(new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Unspecified)));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Valid,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Valid,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Valid,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Valid,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Valid,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Valid,The following statement contains a magic number: Instant expected = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Valid,The following statement contains a magic number: Instant expected = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Valid,The following statement contains a magic number: Instant expected = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Valid,The following statement contains a magic number: Instant expected = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,FromDateTimeUtc_Valid,The following statement contains a magic number: Instant expected = Instant.FromUtc(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,XmlSerialization,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,XmlSerialization,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,XmlSerialization,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,XmlSerialization,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,XmlSerialization,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,XmlSerialization,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,XmlSerialization,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,TestToString_Padding,The following statement contains a magic number: TestToStringBase(Instant.FromUtc(1' 1' 1' 12' 34' 56)' "0001-01-01T12:34:56Z");
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,TestToString_Padding,The following statement contains a magic number: TestToStringBase(Instant.FromUtc(1' 1' 1' 12' 34' 56)' "0001-01-01T12:34:56Z");
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,TestToString_Padding,The following statement contains a magic number: TestToStringBase(Instant.FromUtc(1' 1' 1' 12' 34' 56)' "0001-01-01T12:34:56Z");
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,Equality,The following statement contains a magic number: Instant equal = new Instant(1' 100L);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,Equality,The following statement contains a magic number: Instant different1 = new Instant(1' 200L);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,Equality,The following statement contains a magic number: Instant different2 = new Instant(2' 100L);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,Equality,The following statement contains a magic number: Instant different2 = new Instant(2' 100L);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,Comparison,The following statement contains a magic number: Instant equal = new Instant(1' 100L);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,Comparison,The following statement contains a magic number: Instant greater1 = new Instant(1' 101L);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,Comparison,The following statement contains a magic number: Instant greater2 = new Instant(2' 0L);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,PlusTicks,The following statement contains a magic number: Instant instant = Instant.FromUnixTimeTicks(5);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,PlusTicks,The following statement contains a magic number: Assert.AreEqual(Instant.FromUnixTimeTicks(8)' instant.PlusTicks(3));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,PlusTicks,The following statement contains a magic number: Assert.AreEqual(Instant.FromUnixTimeTicks(8)' instant.PlusTicks(3));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,PlusNanoseconds,The following statement contains a magic number: Instant instant = Instant.FromUnixTimeTicks(5);
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,PlusNanoseconds,The following statement contains a magic number: Assert.AreEqual(Instant.FromUnixTimeTicks(8)' instant.PlusNanoseconds(300));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,PlusNanoseconds,The following statement contains a magic number: Assert.AreEqual(Instant.FromUnixTimeTicks(8)' instant.PlusNanoseconds(300));
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,OperatorPlusDuration_NonZero,The following statement contains a magic number: Assert.AreEqual(3000001L' (threeMillion + Duration.Epsilon).TimeSinceEpoch.ToInt64Nanoseconds()' "3'000'000 + 1");
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,OperatorPlusDuration_NonZero,The following statement contains a magic number: Assert.AreEqual(-49999999L' (negativeFiftyMillion + Duration.Epsilon).TimeSinceEpoch.ToInt64Nanoseconds()' "-50'000'000 + 1");
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,OperatorMinusDuration,The following statement contains a magic number: Assert.AreEqual(2999999L' (threeMillion - Duration.Epsilon).TimeSinceEpoch.ToInt64Nanoseconds()' "3'000'000 - 1");
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,OperatorMinusDuration,The following statement contains a magic number: Assert.AreEqual(2L' (one - Duration.FromNanoseconds(-1)).TimeSinceEpoch.ToInt64Nanoseconds()' "1 - (-1)");
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,OperatorMinusDuration,The following statement contains a magic number: Assert.AreEqual(-50000001L' (negativeFiftyMillion - Duration.Epsilon).TimeSinceEpoch.ToInt64Nanoseconds()' "-50'000'000 - 1");
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,OperatorMinusInstant_NonZero,The following statement contains a magic number: Assert.AreEqual(2999999L' (threeMillion - one).ToInt64Nanoseconds()' "3'000'000 - 1");
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,OperatorMinusInstant_NonZero,The following statement contains a magic number: Assert.AreEqual(2L' (one - Instant.FromUntrustedDuration(Duration.FromNanoseconds(-1L))).ToInt64Nanoseconds()' "1 - (-1)");
Magic Number,NodaTime.Test,InstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\InstantTest.cs,OperatorMinusInstant_NonZero,The following statement contains a magic number: Assert.AreEqual(-50000001L' (negativeFiftyMillion - one).ToInt64Nanoseconds()' "-50'000'000 - 1");
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,Duration,The following statement contains a magic number: Assert.AreEqual(NodaTime.Duration.FromNanoseconds(70002)' interval.Duration);
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,ToStringUsesExtendedIsoFormat,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,ToStringUsesExtendedIsoFormat,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,ToStringUsesExtendedIsoFormat,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,ToStringUsesExtendedIsoFormat,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,ToStringUsesExtendedIsoFormat,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,ToStringUsesExtendedIsoFormat,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,ToStringUsesExtendedIsoFormat,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,ToStringUsesExtendedIsoFormat,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2' 120).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,ToStringUsesExtendedIsoFormat,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2' 120).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,ToStringUsesExtendedIsoFormat,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2' 120).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,ToStringUsesExtendedIsoFormat,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2' 120).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,ToStringUsesExtendedIsoFormat,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2' 120).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,ToStringUsesExtendedIsoFormat,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2' 120).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ExtraContent,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ExtraContent,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ExtraContent,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ExtraContent,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ExtraContent,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ExtraContent,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ExtraContent,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ExtraContent,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ExtraContent,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ExtraContent,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ExtraContent,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ExtraContent,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_SwapAttributeOrder,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_SwapAttributeOrder,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_SwapAttributeOrder,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_SwapAttributeOrder,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_SwapAttributeOrder,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_SwapAttributeOrder,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_SwapAttributeOrder,The following statement contains a magic number: var start = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_SwapAttributeOrder,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_SwapAttributeOrder,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_SwapAttributeOrder,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_SwapAttributeOrder,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_SwapAttributeOrder,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_FromBeginningOfTime,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_FromBeginningOfTime,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_FromBeginningOfTime,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_FromBeginningOfTime,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_FromBeginningOfTime,The following statement contains a magic number: var end = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ToEndOfTime,The following statement contains a magic number: var start = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ToEndOfTime,The following statement contains a magic number: var start = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ToEndOfTime,The following statement contains a magic number: var start = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ToEndOfTime,The following statement contains a magic number: var start = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,XmlSerialization_ToEndOfTime,The following statement contains a magic number: var start = new LocalDateTime(2013' 10' 12' 17' 1' 2).InUtc().ToInstant();
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,Contains,The following statement contains a magic number: var start = Instant.FromUtc(2000' 1' 1' 0' 0);
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,Contains,The following statement contains a magic number: var end = Instant.FromUtc(2020' 1' 1' 0' 0);
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,Deconstruction_IntervalWithoutStart,The following statement contains a magic number: var end = new Instant(1500' 1_000_000);
Magic Number,NodaTime.Test,IntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\IntervalTest.cs,Deconstruction_IntervalWithoutEnd,The following statement contains a magic number: var start = new Instant(1500' 1_000_000);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,EpochProperties,The following statement contains a magic number: Assert.AreEqual(1970' date.Year);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,EpochProperties,The following statement contains a magic number: Assert.AreEqual(1970' date.YearOfEra);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ArbitraryDateProperties,The following statement contains a magic number: DateTime bclDate = new DateTime(2011' 3' 5' 0' 0' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ArbitraryDateProperties,The following statement contains a magic number: DateTime bclDate = new DateTime(2011' 3' 5' 0' 0' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ArbitraryDateProperties,The following statement contains a magic number: DateTime bclDate = new DateTime(2011' 3' 5' 0' 0' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ArbitraryDateProperties,The following statement contains a magic number: DateTime bclEpoch = new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ArbitraryDateProperties,The following statement contains a magic number: Assert.AreEqual(2011' date.Year);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ArbitraryDateProperties,The following statement contains a magic number: Assert.AreEqual(2011' date.YearOfEra);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ArbitraryDateProperties,The following statement contains a magic number: Assert.AreEqual(5' date.Day);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ArbitraryDateProperties,The following statement contains a magic number: Assert.AreEqual(64' date.DayOfYear);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ArbitraryDateProperties,The following statement contains a magic number: Assert.AreEqual(3' date.Month);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,DayOfWeek_AroundEpoch,The following statement contains a magic number: LocalDate date = new LocalDate(1969' 12' 1);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,DayOfWeek_AroundEpoch,The following statement contains a magic number: LocalDate date = new LocalDate(1969' 12' 1);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,DayOfWeek_AroundEpoch,The following statement contains a magic number: i < 60
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_EqualValues,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_EqualValues,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_EqualValues,The following statement contains a magic number: LocalDate date2 = new LocalDate(2011' 1' 2' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_EqualValues,The following statement contains a magic number: LocalDate date2 = new LocalDate(2011' 1' 2' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_DifferentDates,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_DifferentDates,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_DifferentDates,The following statement contains a magic number: LocalDate date2 = new LocalDate(2011' 1' 3' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_DifferentDates,The following statement contains a magic number: LocalDate date2 = new LocalDate(2011' 1' 3' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_DifferentCalendars,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_DifferentCalendars,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_DifferentCalendars,The following statement contains a magic number: LocalDate date2 = new LocalDate(2011' 1' 2' CalendarSystem.Iso);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_DifferentCalendars,The following statement contains a magic number: LocalDate date2 = new LocalDate(2011' 1' 2' CalendarSystem.Iso);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_DifferentToNull,The following statement contains a magic number: LocalDate date = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_DifferentToNull,The following statement contains a magic number: LocalDate date = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_DifferentToOtherType,The following statement contains a magic number: LocalDate date = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Equals_DifferentToOtherType,The following statement contains a magic number: LocalDate date = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ComparisonOperators_SameCalendar,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ComparisonOperators_SameCalendar,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ComparisonOperators_SameCalendar,The following statement contains a magic number: LocalDate date2 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ComparisonOperators_SameCalendar,The following statement contains a magic number: LocalDate date2 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ComparisonOperators_SameCalendar,The following statement contains a magic number: LocalDate date3 = new LocalDate(2011' 1' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ComparisonOperators_SameCalendar,The following statement contains a magic number: LocalDate date3 = new LocalDate(2011' 1' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ComparisonOperators_DifferentCalendars_Throws,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ComparisonOperators_DifferentCalendars_Throws,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ComparisonOperators_DifferentCalendars_Throws,The following statement contains a magic number: LocalDate date2 = new LocalDate(2011' 1' 3' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ComparisonOperators_DifferentCalendars_Throws,The following statement contains a magic number: LocalDate date2 = new LocalDate(2011' 1' 3' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDate date2 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDate date2 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDate date3 = new LocalDate(2011' 1' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDate date3 = new LocalDate(2011' 1' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CompareTo_DifferentCalendars_Throws,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CompareTo_DifferentCalendars_Throws,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CompareTo_DifferentCalendars_Throws,The following statement contains a magic number: LocalDate date2 = new LocalDate(1500' 1' 1' islamic);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var instance = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var instance = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var instance = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var later = new LocalDate(2012' 6' 4);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var later = new LocalDate(2012' 6' 4);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var later = new LocalDate(2012' 6' 4);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var earlier = new LocalDate(2012' 1' 4);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var earlier = new LocalDate(2012' 1' 4);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var same = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var same = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var same = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_Null_Positive,The following statement contains a magic number: var instance = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_Null_Positive,The following statement contains a magic number: var instance = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_Null_Positive,The following statement contains a magic number: var instance = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var instance = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var instance = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var instance = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDateTime(2012' 3' 6' 15' 42);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDateTime(2012' 3' 6' 15' 42);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDateTime(2012' 3' 6' 15' 42);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDateTime(2012' 3' 6' 15' 42);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDateTime(2012' 3' 6' 15' 42);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,MinMax_DifferentCalendars_Throws,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,MinMax_DifferentCalendars_Throws,The following statement contains a magic number: LocalDate date1 = new LocalDate(2011' 1' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,MinMax_DifferentCalendars_Throws,The following statement contains a magic number: LocalDate date2 = new LocalDate(1500' 1' 1' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,MinMax_SameCalendar,The following statement contains a magic number: LocalDate date1 = new LocalDate(1500' 1' 2' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,MinMax_SameCalendar,The following statement contains a magic number: LocalDate date1 = new LocalDate(1500' 1' 2' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,MinMax_SameCalendar,The following statement contains a magic number: LocalDate date2 = new LocalDate(1500' 1' 1' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithDays,The following statement contains a magic number: i < 366
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithDaysAndCalendar,The following statement contains a magic number: i < 366
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_CalendarDefaultsToIso,The following statement contains a magic number: LocalDate date = new LocalDate(2000' 1' 1);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_PropertiesRoundTrip,The following statement contains a magic number: LocalDate date = new LocalDate(2023' 7' 27);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_PropertiesRoundTrip,The following statement contains a magic number: LocalDate date = new LocalDate(2023' 7' 27);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_PropertiesRoundTrip,The following statement contains a magic number: LocalDate date = new LocalDate(2023' 7' 27);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_PropertiesRoundTrip,The following statement contains a magic number: Assert.AreEqual(2023' date.Year);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_PropertiesRoundTrip,The following statement contains a magic number: Assert.AreEqual(7' date.Month);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_PropertiesRoundTrip,The following statement contains a magic number: Assert.AreEqual(27' date.Day);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_PropertiesRoundTrip_CustomCalendar,The following statement contains a magic number: LocalDate date = new LocalDate(2023' 7' 27' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_PropertiesRoundTrip_CustomCalendar,The following statement contains a magic number: LocalDate date = new LocalDate(2023' 7' 27' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_PropertiesRoundTrip_CustomCalendar,The following statement contains a magic number: LocalDate date = new LocalDate(2023' 7' 27' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_PropertiesRoundTrip_CustomCalendar,The following statement contains a magic number: Assert.AreEqual(2023' date.Year);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_PropertiesRoundTrip_CustomCalendar,The following statement contains a magic number: Assert.AreEqual(7' date.Month);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_PropertiesRoundTrip_CustomCalendar,The following statement contains a magic number: Assert.AreEqual(27' date.Day);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_InvalidYearOfEra,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new LocalDate(Era.Common' 10000' 1' 1));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_InvalidYearOfEra,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new LocalDate(Era.BeforeCommon' 10000' 1' 1));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_BC,The following statement contains a magic number: LocalDate absolute = new LocalDate(-10' 1' 1);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_BC,The following statement contains a magic number: LocalDate withEra = new LocalDate(Era.BeforeCommon' 11' 1' 1);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_AD,The following statement contains a magic number: LocalDate absolute = new LocalDate(50' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_AD,The following statement contains a magic number: LocalDate absolute = new LocalDate(50' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_AD,The following statement contains a magic number: LocalDate absolute = new LocalDate(50' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_AD,The following statement contains a magic number: LocalDate withEra = new LocalDate(Era.Common' 50' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_AD,The following statement contains a magic number: LocalDate withEra = new LocalDate(Era.Common' 50' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_AD,The following statement contains a magic number: LocalDate withEra = new LocalDate(Era.Common' 50' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_NonIsoCalendar,The following statement contains a magic number: LocalDate absolute = new LocalDate(50' 6' 19' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_NonIsoCalendar,The following statement contains a magic number: LocalDate absolute = new LocalDate(50' 6' 19' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_NonIsoCalendar,The following statement contains a magic number: LocalDate absolute = new LocalDate(50' 6' 19' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_NonIsoCalendar,The following statement contains a magic number: LocalDate withEra = new LocalDate(Era.AnnoMartyrum' 50' 6' 19' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_NonIsoCalendar,The following statement contains a magic number: LocalDate withEra = new LocalDate(Era.AnnoMartyrum' 50' 6' 19' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Constructor_WithYearOfEra_NonIsoCalendar,The following statement contains a magic number: LocalDate withEra = new LocalDate(Era.AnnoMartyrum' 50' 6' 19' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromWeekYearWeekAndDay_InvalidWeek53,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => LocalDate.FromWeekYearWeekAndDay(2005' 53' IsoDayOfWeek.Sunday));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromWeekYearWeekAndDay_InvalidWeek53,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => LocalDate.FromWeekYearWeekAndDay(2005' 53' IsoDayOfWeek.Sunday));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,AtMidnight,The following statement contains a magic number: LocalDate date = new LocalDate(2011' 6' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,AtMidnight,The following statement contains a magic number: LocalDate date = new LocalDate(2011' 6' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,AtMidnight,The following statement contains a magic number: LocalDate date = new LocalDate(2011' 6' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,AtMidnight,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 6' 29' 0' 0' 0);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,AtMidnight,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 6' 29' 0' 0' 0);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,AtMidnight,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 6' 29' 0' 0' 0);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,WithCalendar,The following statement contains a magic number: LocalDate isoEpoch = new LocalDate(1970' 1' 1);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(1969' julianEpoch.Year);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(12' julianEpoch.Month);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(19' julianEpoch.Day);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,WithOffset,The following statement contains a magic number: var date = new LocalDate(2011' 6' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,WithOffset,The following statement contains a magic number: var date = new LocalDate(2011' 6' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,WithOffset,The following statement contains a magic number: var date = new LocalDate(2011' 6' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,WithOffset,The following statement contains a magic number: var offset = Offset.FromHours(5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ToDateTimeUnspecified,The following statement contains a magic number: LocalDate noda = new LocalDate(2015' 4' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ToDateTimeUnspecified,The following statement contains a magic number: LocalDate noda = new LocalDate(2015' 4' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ToDateTimeUnspecified,The following statement contains a magic number: LocalDate noda = new LocalDate(2015' 4' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ToDateTimeUnspecified,The following statement contains a magic number: DateTime bcl = new DateTime(2015' 4' 2' 0' 0' 0' DateTimeKind.Unspecified);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ToDateTimeUnspecified,The following statement contains a magic number: DateTime bcl = new DateTime(2015' 4' 2' 0' 0' 0' DateTimeKind.Unspecified);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,ToDateTimeUnspecified,The following statement contains a magic number: DateTime bcl = new DateTime(2015' 4' 2' 0' 0' 0' DateTimeKind.Unspecified);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime,The following statement contains a magic number: var expected = new LocalDate(2011' 08' 18);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime,The following statement contains a magic number: var expected = new LocalDate(2011' 08' 18);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime,The following statement contains a magic number: var expected = new LocalDate(2011' 08' 18);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime,The following statement contains a magic number: var bcl = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime,The following statement contains a magic number: var bcl = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime,The following statement contains a magic number: var bcl = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime,The following statement contains a magic number: var bcl = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime,The following statement contains a magic number: var bcl = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime_WithCalendar,The following statement contains a magic number: var expected = new LocalDate(2011' 08' 05' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime_WithCalendar,The following statement contains a magic number: var expected = new LocalDate(2011' 08' 05' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime_WithCalendar,The following statement contains a magic number: var expected = new LocalDate(2011' 08' 05' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime_WithCalendar,The following statement contains a magic number: var bcl = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime_WithCalendar,The following statement contains a magic number: var bcl = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime_WithCalendar,The following statement contains a magic number: var bcl = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime_WithCalendar,The following statement contains a magic number: var bcl = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,FromDateTime_WithCalendar,The following statement contains a magic number: var bcl = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CombinationWithTime,The following statement contains a magic number: LocalDate date = new LocalDate(2014' 3' 28' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CombinationWithTime,The following statement contains a magic number: LocalDate date = new LocalDate(2014' 3' 28' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CombinationWithTime,The following statement contains a magic number: LocalDate date = new LocalDate(2014' 3' 28' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CombinationWithTime,The following statement contains a magic number: LocalTime time = new LocalTime(20' 17' 30);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CombinationWithTime,The following statement contains a magic number: LocalTime time = new LocalTime(20' 17' 30);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CombinationWithTime,The following statement contains a magic number: LocalTime time = new LocalTime(20' 17' 30);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CombinationWithTime,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 3' 28' 20' 17' 30' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CombinationWithTime,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 3' 28' 20' 17' 30' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CombinationWithTime,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 3' 28' 20' 17' 30' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CombinationWithTime,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 3' 28' 20' 17' 30' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CombinationWithTime,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 3' 28' 20' 17' 30' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,CombinationWithTime,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 3' 28' 20' 17' 30' calendar);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new LocalDate(2013' 4' 12);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new LocalDate(2013' 4' 12);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new LocalDate(2013' 4' 12);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new LocalDate(2013' 4' 12' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new LocalDate(2013' 4' 12' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new LocalDate(2013' 4' 12' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Construction_NullCalendar_Throws,The following statement contains a magic number: Assert.Multiple(() =>              {                  Assert.Throws<ArgumentNullException>(() => new LocalDate(2017' 11' 7' calendar: null!)' "Basic construction.");                  Assert.Throws<ArgumentNullException>(() => new LocalDate(Era.Common' 2017' 11' 7' calendar: null!)' "Construction including era.");              });
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Construction_NullCalendar_Throws,The following statement contains a magic number: Assert.Multiple(() =>              {                  Assert.Throws<ArgumentNullException>(() => new LocalDate(2017' 11' 7' calendar: null!)' "Basic construction.");                  Assert.Throws<ArgumentNullException>(() => new LocalDate(Era.Common' 2017' 11' 7' calendar: null!)' "Construction including era.");              });
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Construction_NullCalendar_Throws,The following statement contains a magic number: Assert.Multiple(() =>              {                  Assert.Throws<ArgumentNullException>(() => new LocalDate(2017' 11' 7' calendar: null!)' "Basic construction.");                  Assert.Throws<ArgumentNullException>(() => new LocalDate(Era.Common' 2017' 11' 7' calendar: null!)' "Construction including era.");              });
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Construction_NullCalendar_Throws,The following statement contains a magic number: Assert.Multiple(() =>              {                  Assert.Throws<ArgumentNullException>(() => new LocalDate(2017' 11' 7' calendar: null!)' "Basic construction.");                  Assert.Throws<ArgumentNullException>(() => new LocalDate(Era.Common' 2017' 11' 7' calendar: null!)' "Construction including era.");              });
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Construction_NullCalendar_Throws,The following statement contains a magic number: Assert.Multiple(() =>              {                  Assert.Throws<ArgumentNullException>(() => new LocalDate(2017' 11' 7' calendar: null!)' "Basic construction.");                  Assert.Throws<ArgumentNullException>(() => new LocalDate(Era.Common' 2017' 11' 7' calendar: null!)' "Construction including era.");              });
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Construction_NullCalendar_Throws,The following statement contains a magic number: Assert.Multiple(() =>              {                  Assert.Throws<ArgumentNullException>(() => new LocalDate(2017' 11' 7' calendar: null!)' "Basic construction.");                  Assert.Throws<ArgumentNullException>(() => new LocalDate(Era.Common' 2017' 11' 7' calendar: null!)' "Construction including era.");              });
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Deconstruction,The following statement contains a magic number: var value = new LocalDate(2017' 11' 7);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Deconstruction,The following statement contains a magic number: var value = new LocalDate(2017' 11' 7);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Deconstruction,The following statement contains a magic number: var value = new LocalDate(2017' 11' 7);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Deconstruction,The following statement contains a magic number: var expectedYear = 2017;
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Deconstruction,The following statement contains a magic number: var expectedMonth = 11;
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Deconstruction,The following statement contains a magic number: var expectedDay = 7;
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Deconstruction_IncludingCalendar,The following statement contains a magic number: var value = new LocalDate(2017' 11' 7' CalendarSystem.Gregorian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Deconstruction_IncludingCalendar,The following statement contains a magic number: var value = new LocalDate(2017' 11' 7' CalendarSystem.Gregorian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Deconstruction_IncludingCalendar,The following statement contains a magic number: var value = new LocalDate(2017' 11' 7' CalendarSystem.Gregorian);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Deconstruction_IncludingCalendar,The following statement contains a magic number: var expectedYear = 2017;
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Deconstruction_IncludingCalendar,The following statement contains a magic number: var expectedMonth = 11;
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Deconstruction_IncludingCalendar,The following statement contains a magic number: var expectedDay = 7;
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_WithPeriod,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_WithPeriod,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_WithPeriod,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_WithPeriod,The following statement contains a magic number: Period period = Period.FromMonths(3) + Period.FromDays(10);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_WithPeriod,The following statement contains a magic number: Period period = Period.FromMonths(3) + Period.FromDays(10);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_WithPeriod,The following statement contains a magic number: LocalDate expected = new LocalDate(2010' 9' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_WithPeriod,The following statement contains a magic number: LocalDate expected = new LocalDate(2010' 9' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_WithPeriod,The following statement contains a magic number: LocalDate expected = new LocalDate(2010' 9' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_TruncatesOnShortMonth,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 1' 30);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_TruncatesOnShortMonth,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 1' 30);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_TruncatesOnShortMonth,The following statement contains a magic number: LocalDate expected = new LocalDate(2010' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_TruncatesOnShortMonth,The following statement contains a magic number: LocalDate expected = new LocalDate(2010' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_TruncatesOnShortMonth,The following statement contains a magic number: LocalDate expected = new LocalDate(2010' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_WithNullPeriod_ThrowsArgumentNullException,The following statement contains a magic number: LocalDate date = new LocalDate(2010' 1' 1);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_WithPeriod,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 9' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_WithPeriod,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 9' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_WithPeriod,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 9' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_WithPeriod,The following statement contains a magic number: Period period = Period.FromMonths(3) + Period.FromDays(10);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_WithPeriod,The following statement contains a magic number: Period period = Period.FromMonths(3) + Period.FromDays(10);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_WithPeriod,The following statement contains a magic number: LocalDate expected = new LocalDate(2010' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_WithPeriod,The following statement contains a magic number: LocalDate expected = new LocalDate(2010' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_WithPeriod,The following statement contains a magic number: LocalDate expected = new LocalDate(2010' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_TruncatesOnShortMonth,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 3' 30);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_TruncatesOnShortMonth,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 3' 30);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_TruncatesOnShortMonth,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 3' 30);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_TruncatesOnShortMonth,The following statement contains a magic number: LocalDate expected = new LocalDate(2010' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_TruncatesOnShortMonth,The following statement contains a magic number: LocalDate expected = new LocalDate(2010' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_TruncatesOnShortMonth,The following statement contains a magic number: LocalDate expected = new LocalDate(2010' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_WithNullPeriod_ThrowsArgumentNullException,The following statement contains a magic number: LocalDate date = new LocalDate(2010' 1' 1);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Addition_PeriodWithTime,The following statement contains a magic number: LocalDate date = new LocalDate(2010' 1' 1);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Subtraction_PeriodWithTime,The following statement contains a magic number: LocalDate date = new LocalDate(2010' 1' 1);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PeriodAddition_MethodEquivalents,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PeriodAddition_MethodEquivalents,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PeriodAddition_MethodEquivalents,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PeriodAddition_MethodEquivalents,The following statement contains a magic number: Period period = Period.FromMonths(3) + Period.FromDays(10);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PeriodAddition_MethodEquivalents,The following statement contains a magic number: Period period = Period.FromMonths(3) + Period.FromDays(10);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PeriodSubtraction_MethodEquivalents,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PeriodSubtraction_MethodEquivalents,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PeriodSubtraction_MethodEquivalents,The following statement contains a magic number: LocalDate start = new LocalDate(2010' 6' 19);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PeriodSubtraction_MethodEquivalents,The following statement contains a magic number: Period period = Period.FromMonths(3) + Period.FromDays(10);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PeriodSubtraction_MethodEquivalents,The following statement contains a magic number: Period period = Period.FromMonths(3) + Period.FromDays(10);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_Simple,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 6' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_Simple,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 6' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_Simple,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 6' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_Simple,The following statement contains a magic number: LocalDate expected = new LocalDate(2016' 6' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_Simple,The following statement contains a magic number: LocalDate expected = new LocalDate(2016' 6' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_Simple,The following statement contains a magic number: LocalDate expected = new LocalDate(2016' 6' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_Simple,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusYears(5));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_Simple,The following statement contains a magic number: expected = new LocalDate(2006' 6' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_Simple,The following statement contains a magic number: expected = new LocalDate(2006' 6' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_Simple,The following statement contains a magic number: expected = new LocalDate(2006' 6' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_Simple,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusYears(-5));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 2' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 2' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 2' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDate expected = new LocalDate(2013' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDate expected = new LocalDate(2013' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDate expected = new LocalDate(2013' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: expected = new LocalDate(2011' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: expected = new LocalDate(2011' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: expected = new LocalDate(2011' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 2' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 2' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 2' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDate expected = new LocalDate(2016' 2' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDate expected = new LocalDate(2016' 2' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDate expected = new LocalDate(2016' 2' 29);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusYear_LeapToLeap,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusYears(4));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 4' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 4' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 4' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDate expected = new LocalDate(2012' 8' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDate expected = new LocalDate(2012' 8' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDate expected = new LocalDate(2012' 8' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_Simple,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusMonths(4));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 10' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 10' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 10' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDate expected = new LocalDate(2013' 2' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDate expected = new LocalDate(2013' 2' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDate expected = new LocalDate(2013' 2' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_ChangingYear,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusMonths(4));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 1' 30);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 1' 30);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDate expected = new LocalDate(2011' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDate expected = new LocalDate(2011' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDate expected = new LocalDate(2011' 2' 28);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_SameMonth,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 1' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_SameMonth,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 1' 15);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_SameMonth,The following statement contains a magic number: LocalDate expected = new LocalDate(2011' 1' 23);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_SameMonth,The following statement contains a magic number: LocalDate expected = new LocalDate(2011' 1' 23);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_SameMonth,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_SameMonth,The following statement contains a magic number: expected = new LocalDate(2011' 1' 7);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_SameMonth,The following statement contains a magic number: expected = new LocalDate(2011' 1' 7);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_SameMonth,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 1' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 1' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDate expected = new LocalDate(2011' 2' 3);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDate expected = new LocalDate(2011' 2' 3);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDate expected = new LocalDate(2011' 2' 3);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_MonthBoundary,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_MonthBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_MonthBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 12' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 12' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 12' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDate expected = new LocalDate(2012' 1' 3);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDate expected = new LocalDate(2012' 1' 3);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_YearBoundary,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_YearBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_YearBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 2' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 2' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDate start = new LocalDate(2012' 2' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDate expected = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDate expected = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDate expected = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 2' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 2' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 2' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDate expected = new LocalDate(2011' 3' 6);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDate expected = new LocalDate(2011' 3' 6);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDate expected = new LocalDate(2011' 3' 6);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_LargeValue,The following statement contains a magic number: LocalDate start = new LocalDate(2013' 2' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_LargeValue,The following statement contains a magic number: LocalDate start = new LocalDate(2013' 2' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_LargeValue,The following statement contains a magic number: LocalDate start = new LocalDate(2013' 2' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_LargeValue,The following statement contains a magic number: LocalDate expected = new LocalDate(2015' 2' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_LargeValue,The following statement contains a magic number: LocalDate expected = new LocalDate(2015' 2' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_LargeValue,The following statement contains a magic number: LocalDate expected = new LocalDate(2015' 2' 26);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_LargeValue,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(365 * 2));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusDays_LargeValue,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(365 * 2));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 4' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 4' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 4' 2);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDate expectedForward = new LocalDate(2011' 4' 23);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDate expectedForward = new LocalDate(2011' 4' 23);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDate expectedForward = new LocalDate(2011' 4' 23);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDate expectedBackward = new LocalDate(2011' 3' 12);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDate expectedBackward = new LocalDate(2011' 3' 12);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDate expectedBackward = new LocalDate(2011' 3' 12);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusWeeks_Simple,The following statement contains a magic number: Assert.AreEqual(expectedForward' start.PlusWeeks(3));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,PlusWeeks_Simple,The following statement contains a magic number: Assert.AreEqual(expectedBackward' start.PlusWeeks(-3));
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Next,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 11' dayOfMonth);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Next,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 11' dayOfMonth);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Next,The following statement contains a magic number: Assert.AreEqual(2011' target.Year);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Next,The following statement contains a magic number: Assert.AreEqual(11' target.Month);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Next_InvalidArgument,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 1' 1);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Previous,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 11' dayOfMonth);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Previous,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 11' dayOfMonth);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Previous,The following statement contains a magic number: Assert.AreEqual(2011' target.Year);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Previous,The following statement contains a magic number: Assert.AreEqual(11' target.Month);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,Previous_InvalidArgument,The following statement contains a magic number: LocalDate start = new LocalDate(2011' 1' 1);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,With,The following statement contains a magic number: LocalDate start = new LocalDate(2014' 6' 27);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,With,The following statement contains a magic number: LocalDate start = new LocalDate(2014' 6' 27);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,With,The following statement contains a magic number: LocalDate start = new LocalDate(2014' 6' 27);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,With,The following statement contains a magic number: LocalDate expected = new LocalDate(2014' 6' 30);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,With,The following statement contains a magic number: LocalDate expected = new LocalDate(2014' 6' 30);
Magic Number,NodaTime.Test,LocalDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTest.BasicProperties.cs,With,The following statement contains a magic number: LocalDate expected = new LocalDate(2014' 6' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ToDateTimeUnspecified,The following statement contains a magic number: LocalDateTime zoned = new LocalDateTime(2011' 3' 5' 1' 0' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ToDateTimeUnspecified,The following statement contains a magic number: LocalDateTime zoned = new LocalDateTime(2011' 3' 5' 1' 0' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ToDateTimeUnspecified,The following statement contains a magic number: LocalDateTime zoned = new LocalDateTime(2011' 3' 5' 1' 0' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ToDateTimeUnspecified,The following statement contains a magic number: DateTime expected = new DateTime(2011' 3' 5' 1' 0' 0' DateTimeKind.Unspecified);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ToDateTimeUnspecified,The following statement contains a magic number: DateTime expected = new DateTime(2011' 3' 5' 1' 0' 0' DateTimeKind.Unspecified);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ToDateTimeUnspecified,The following statement contains a magic number: DateTime expected = new DateTime(2011' 3' 5' 1' 0' 0' DateTimeKind.Unspecified);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ToDateTimeUnspecified_TruncatesTowardsStartOfTime,The following statement contains a magic number: var ldt = new LocalDateTime(year' 1' 1' 13' 15' 55).PlusNanoseconds(NodaConstants.NanosecondsPerSecond - 1);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ToDateTimeUnspecified_TruncatesTowardsStartOfTime,The following statement contains a magic number: var ldt = new LocalDateTime(year' 1' 1' 13' 15' 55).PlusNanoseconds(NodaConstants.NanosecondsPerSecond - 1);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ToDateTimeUnspecified_TruncatesTowardsStartOfTime,The following statement contains a magic number: var ldt = new LocalDateTime(year' 1' 1' 13' 15' 55).PlusNanoseconds(NodaConstants.NanosecondsPerSecond - 1);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ToDateTimeUnspecified_TruncatesTowardsStartOfTime,The following statement contains a magic number: var expected = new DateTime(year' 1' 1' 13' 15' 55' DateTimeKind.Unspecified).AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ToDateTimeUnspecified_TruncatesTowardsStartOfTime,The following statement contains a magic number: var expected = new DateTime(year' 1' 1' 13' 15' 55' DateTimeKind.Unspecified).AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ToDateTimeUnspecified_TruncatesTowardsStartOfTime,The following statement contains a magic number: var expected = new DateTime(year' 1' 1' 13' 15' 55' DateTimeKind.Unspecified).AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 08' 18' 20' 53);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime_WithCalendar,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 08' 05' 20' 53' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime_WithCalendar,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 08' 05' 20' 53' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime_WithCalendar,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 08' 05' 20' 53' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime_WithCalendar,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 08' 05' 20' 53' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime_WithCalendar,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 08' 05' 20' 53' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime_WithCalendar,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime_WithCalendar,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime_WithCalendar,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime_WithCalendar,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,FromDateTime_WithCalendar,The following statement contains a magic number: DateTime x = new DateTime(2011' 08' 18' 20' 53' 0' kind);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(GregorianYearMonthDayCalculator.MaxGregorianYear' 1' 2' 15' 48' 25).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(GregorianYearMonthDayCalculator.MaxGregorianYear' 1' 2' 15' 48' 25).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(GregorianYearMonthDayCalculator.MaxGregorianYear' 1' 2' 15' 48' 25).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(GregorianYearMonthDayCalculator.MaxGregorianYear' 1' 2' 15' 48' 25).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(GregorianYearMonthDayCalculator.MaxGregorianYear' 1' 2' 15' 48' 25).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(15' ldt.Hour);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(3' ldt.ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(48' ldt.Minute);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(25' ldt.Second);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(123' ldt.Millisecond);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(1234567' ldt.TickOfSecond);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.TicksPerHour +                               48 * NodaConstants.TicksPerMinute +                              25 * NodaConstants.TicksPerSecond +                              1234567' ldt.TickOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.TicksPerHour +                               48 * NodaConstants.TicksPerMinute +                              25 * NodaConstants.TicksPerSecond +                              1234567' ldt.TickOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.TicksPerHour +                               48 * NodaConstants.TicksPerMinute +                              25 * NodaConstants.TicksPerSecond +                              1234567' ldt.TickOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.TicksPerHour +                               48 * NodaConstants.TicksPerMinute +                              25 * NodaConstants.TicksPerSecond +                              1234567' ldt.TickOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.NanosecondsPerHour +                              48 * NodaConstants.NanosecondsPerMinute +                              25 * NodaConstants.NanosecondsPerSecond +                              123456789' ldt.NanosecondOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.NanosecondsPerHour +                              48 * NodaConstants.NanosecondsPerMinute +                              25 * NodaConstants.NanosecondsPerSecond +                              123456789' ldt.NanosecondOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.NanosecondsPerHour +                              48 * NodaConstants.NanosecondsPerMinute +                              25 * NodaConstants.NanosecondsPerSecond +                              123456789' ldt.NanosecondOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.NanosecondsPerHour +                              48 * NodaConstants.NanosecondsPerMinute +                              25 * NodaConstants.NanosecondsPerSecond +                              123456789' ldt.NanosecondOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_AfterEpoch,The following statement contains a magic number: Assert.AreEqual(123456789' ldt.NanosecondOfSecond);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(GregorianYearMonthDayCalculator.MinGregorianYear' 1' 2' 15' 48' 25).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(GregorianYearMonthDayCalculator.MinGregorianYear' 1' 2' 15' 48' 25).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(GregorianYearMonthDayCalculator.MinGregorianYear' 1' 2' 15' 48' 25).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(GregorianYearMonthDayCalculator.MinGregorianYear' 1' 2' 15' 48' 25).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(GregorianYearMonthDayCalculator.MinGregorianYear' 1' 2' 15' 48' 25).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(15' ldt.Hour);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(3' ldt.ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(48' ldt.Minute);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(25' ldt.Second);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(123' ldt.Millisecond);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(1234567' ldt.TickOfSecond);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.TicksPerHour +                              48 * NodaConstants.TicksPerMinute +                              25 * NodaConstants.TicksPerSecond +                              1234567' ldt.TickOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.TicksPerHour +                              48 * NodaConstants.TicksPerMinute +                              25 * NodaConstants.TicksPerSecond +                              1234567' ldt.TickOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.TicksPerHour +                              48 * NodaConstants.TicksPerMinute +                              25 * NodaConstants.TicksPerSecond +                              1234567' ldt.TickOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.TicksPerHour +                              48 * NodaConstants.TicksPerMinute +                              25 * NodaConstants.TicksPerSecond +                              1234567' ldt.TickOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.NanosecondsPerHour +                              48 * NodaConstants.NanosecondsPerMinute +                              25 * NodaConstants.NanosecondsPerSecond +                              123456789' ldt.NanosecondOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.NanosecondsPerHour +                              48 * NodaConstants.NanosecondsPerMinute +                              25 * NodaConstants.NanosecondsPerSecond +                              123456789' ldt.NanosecondOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.NanosecondsPerHour +                              48 * NodaConstants.NanosecondsPerMinute +                              25 * NodaConstants.NanosecondsPerSecond +                              123456789' ldt.NanosecondOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(15 * NodaConstants.NanosecondsPerHour +                              48 * NodaConstants.NanosecondsPerMinute +                              25 * NodaConstants.NanosecondsPerSecond +                              123456789' ldt.NanosecondOfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeProperties_BeforeEpoch,The following statement contains a magic number: Assert.AreEqual(123456789' ldt.NanosecondOfSecond);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,DateTime_Roundtrip_OtherCalendarInBcl,The following statement contains a magic number: DateTime original = bcl.ToDateTime(1376' 6' 19' 0' 0' 0' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,DateTime_Roundtrip_OtherCalendarInBcl,The following statement contains a magic number: DateTime original = bcl.ToDateTime(1376' 6' 19' 0' 0' 0' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,DateTime_Roundtrip_OtherCalendarInBcl,The following statement contains a magic number: DateTime original = bcl.ToDateTime(1376' 6' 19' 0' 0' 0' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,DateTime_Roundtrip_OtherCalendarInBcl,The following statement contains a magic number: Assert.AreNotEqual(1376' noda.Year);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,WithCalendar,The following statement contains a magic number: LocalDateTime isoEpoch = new LocalDateTime(1970' 1' 1' 0' 0' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(1969' julianEpoch.Year);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(12' julianEpoch.Month);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(19' julianEpoch.Day);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_Before1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1965' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_Before1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1965' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_Before1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1965' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_Before1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1965' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_Before1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1965' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_Before1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1965' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_Before1970,The following statement contains a magic number: LocalTime expected = new LocalTime(12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_Before1970,The following statement contains a magic number: LocalTime expected = new LocalTime(12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_Before1970,The following statement contains a magic number: LocalTime expected = new LocalTime(12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_After1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1975' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_After1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1975' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_After1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1975' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_After1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1975' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_After1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1975' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_After1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1975' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_After1970,The following statement contains a magic number: LocalTime expected = new LocalTime(12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_After1970,The following statement contains a magic number: LocalTime expected = new LocalTime(12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,TimeOfDay_After1970,The following statement contains a magic number: LocalTime expected = new LocalTime(12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_Before1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1965' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_Before1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1965' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_Before1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1965' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_Before1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1965' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_Before1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1965' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_Before1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1965' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_Before1970,The following statement contains a magic number: LocalDate expected = new LocalDate(1965' 11' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_Before1970,The following statement contains a magic number: LocalDate expected = new LocalDate(1965' 11' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_Before1970,The following statement contains a magic number: LocalDate expected = new LocalDate(1965' 11' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_After1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1975' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_After1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1975' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_After1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1975' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_After1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1975' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_After1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1975' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_After1970,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1975' 11' 8' 12' 5' 23);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_After1970,The following statement contains a magic number: LocalDate expected = new LocalDate(1975' 11' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_After1970,The following statement contains a magic number: LocalDate expected = new LocalDate(1975' 11' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Date_After1970,The following statement contains a magic number: LocalDate expected = new LocalDate(1975' 11' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,DayOfWeek_AroundEpoch,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1969' 12' 1' 0' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,DayOfWeek_AroundEpoch,The following statement contains a magic number: LocalDateTime dateTime = new LocalDateTime(1969' 12' 1' 0' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,DayOfWeek_AroundEpoch,The following statement contains a magic number: hour < 24
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,DayOfWeek_AroundEpoch,The following statement contains a magic number: i < 60
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(12' new LocalDateTime(1975' 11' 8' 0' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(12' new LocalDateTime(1975' 11' 8' 0' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(12' new LocalDateTime(1975' 11' 8' 0' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(12' new LocalDateTime(1975' 11' 8' 0' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(1' new LocalDateTime(1975' 11' 8' 1' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(1' new LocalDateTime(1975' 11' 8' 1' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(1' new LocalDateTime(1975' 11' 8' 1' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(12' new LocalDateTime(1975' 11' 8' 12' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(12' new LocalDateTime(1975' 11' 8' 12' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(12' new LocalDateTime(1975' 11' 8' 12' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(12' new LocalDateTime(1975' 11' 8' 12' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(12' new LocalDateTime(1975' 11' 8' 12' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(1' new LocalDateTime(1975' 11' 8' 13' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(1' new LocalDateTime(1975' 11' 8' 13' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(1' new LocalDateTime(1975' 11' 8' 13' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(1' new LocalDateTime(1975' 11' 8' 13' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(11' new LocalDateTime(1975' 11' 8' 23' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(11' new LocalDateTime(1975' 11' 8' 23' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(11' new LocalDateTime(1975' 11' 8' 23' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(11' new LocalDateTime(1975' 11' 8' 23' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(11' new LocalDateTime(1975' 11' 8' 23' 0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_SameCalendar,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_SameCalendar,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_SameCalendar,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_SameCalendar,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_SameCalendar,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 2' 10' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_SameCalendar,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 2' 10' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_SameCalendar,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 2' 10' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_SameCalendar,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 2' 10' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_SameCalendar,The following statement contains a magic number: LocalDateTime value3 = new LocalDateTime(2011' 1' 2' 10' 45' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_SameCalendar,The following statement contains a magic number: LocalDateTime value3 = new LocalDateTime(2011' 1' 2' 10' 45' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_SameCalendar,The following statement contains a magic number: LocalDateTime value3 = new LocalDateTime(2011' 1' 2' 10' 45' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_SameCalendar,The following statement contains a magic number: LocalDateTime value3 = new LocalDateTime(2011' 1' 2' 10' 45' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 3' 10' 30' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 3' 10' 30' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 3' 10' 30' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operators_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 3' 10' 30' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value3 = new LocalDateTime(2011' 1' 2' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value3 = new LocalDateTime(2011' 1' 2' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value3 = new LocalDateTime(2011' 1' 2' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value3 = new LocalDateTime(2011' 1' 2' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(1500' 1' 1' 10' 30' islamic);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(1500' 1' 1' 10' 30' islamic);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,CompareTo_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(1500' 1' 1' 10' 30' islamic);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value1 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value2 = new LocalDateTime(2011' 1' 2' 10' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value3 = new LocalDateTime(2011' 1' 2' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value3 = new LocalDateTime(2011' 1' 2' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value3 = new LocalDateTime(2011' 1' 2' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: LocalDateTime value3 = new LocalDateTime(2011' 1' 2' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_Null_Positive,The following statement contains a magic number: var instance = new LocalDateTime(2012' 3' 5' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_Null_Positive,The following statement contains a magic number: var instance = new LocalDateTime(2012' 3' 5' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_Null_Positive,The following statement contains a magic number: var instance = new LocalDateTime(2012' 3' 5' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_Null_Positive,The following statement contains a magic number: var instance = new LocalDateTime(2012' 3' 5' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_Null_Positive,The following statement contains a magic number: var instance = new LocalDateTime(2012' 3' 5' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var instance = new LocalDateTime(2012' 3' 5' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var instance = new LocalDateTime(2012' 3' 5' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var instance = new LocalDateTime(2012' 3' 5' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var instance = new LocalDateTime(2012' 3' 5' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var instance = new LocalDateTime(2012' 3' 5' 10' 45);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDate(2012' 3' 6);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDate(2012' 3' 6);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDate(2012' 3' 6);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,WithOffset,The following statement contains a magic number: var offset = Offset.FromHoursAndMinutes(5' 10);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,WithOffset,The following statement contains a magic number: var offset = Offset.FromHoursAndMinutes(5' 10);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,WithOffset,The following statement contains a magic number: var localDateTime = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,WithOffset,The following statement contains a magic number: var localDateTime = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,WithOffset,The following statement contains a magic number: var localDateTime = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,WithOffset,The following statement contains a magic number: var localDateTime = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,WithOffset,The following statement contains a magic number: var localDateTime = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,WithOffset,The following statement contains a magic number: var localDateTime = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InUtc,The following statement contains a magic number: var local = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InUtc,The following statement contains a magic number: var local = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InUtc,The following statement contains a magic number: var local = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InUtc,The following statement contains a magic number: var local = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InUtc,The following statement contains a magic number: var local = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InUtc,The following statement contains a magic number: var local = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InWinter,The following statement contains a magic number: var local = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InWinter,The following statement contains a magic number: var local = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InWinter,The following statement contains a magic number: var local = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InWinter,The following statement contains a magic number: var local = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InWinter,The following statement contains a magic number: var local = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InWinter,The following statement contains a magic number: var local = new LocalDateTime(2009' 12' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InWinter,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-8)' zoned.Offset);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InSummer,The following statement contains a magic number: var local = new LocalDateTime(2009' 6' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InSummer,The following statement contains a magic number: var local = new LocalDateTime(2009' 6' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InSummer,The following statement contains a magic number: var local = new LocalDateTime(2009' 6' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InSummer,The following statement contains a magic number: var local = new LocalDateTime(2009' 6' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InSummer,The following statement contains a magic number: var local = new LocalDateTime(2009' 6' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InSummer,The following statement contains a magic number: var local = new LocalDateTime(2009' 6' 22' 21' 39' 30);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_InSummer,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-7)' zoned.Offset);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_ThrowsWhenAmbiguous,The following statement contains a magic number: var local = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_ThrowsWhenAmbiguous,The following statement contains a magic number: var local = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_ThrowsWhenAmbiguous,The following statement contains a magic number: var local = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_ThrowsWhenSkipped,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_ThrowsWhenSkipped,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_ThrowsWhenSkipped,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_ThrowsWhenSkipped,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneStrictly_ThrowsWhenSkipped,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_AmbiguousTime_ReturnsEarlierMapping,The following statement contains a magic number: var local = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_AmbiguousTime_ReturnsEarlierMapping,The following statement contains a magic number: var local = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_AmbiguousTime_ReturnsEarlierMapping,The following statement contains a magic number: var local = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_AmbiguousTime_ReturnsEarlierMapping,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-7)' zoned.Offset);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_ReturnsStartOfSecondInterval,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_ReturnsStartOfSecondInterval,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_ReturnsStartOfSecondInterval,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_ReturnsStartOfSecondInterval,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_ReturnsStartOfSecondInterval,The following statement contains a magic number: var local = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_ReturnsStartOfSecondInterval,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2009' 3' 8' 3' 30' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_ReturnsStartOfSecondInterval,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2009' 3' 8' 3' 30' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_ReturnsStartOfSecondInterval,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2009' 3' 8' 3' 30' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_ReturnsStartOfSecondInterval,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2009' 3' 8' 3' 30' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_ReturnsStartOfSecondInterval,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2009' 3' 8' 3' 30' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZoneLeniently_ReturnsStartOfSecondInterval,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-7)' zoned.Offset);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZone,The following statement contains a magic number: var ambiguous = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZone,The following statement contains a magic number: var ambiguous = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZone,The following statement contains a magic number: var ambiguous = new LocalDateTime(2009' 11' 1' 1' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZone,The following statement contains a magic number: var skipped = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZone,The following statement contains a magic number: var skipped = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZone,The following statement contains a magic number: var skipped = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZone,The following statement contains a magic number: var skipped = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,InZone,The following statement contains a magic number: var skipped = new LocalDateTime(2009' 3' 8' 2' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new LocalDateTime(2013' 4' 12' 17' 53' 23' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,MinMax_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime ldt1 = new LocalDateTime(2011' 1' 2' 2' 20);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,MinMax_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime ldt1 = new LocalDateTime(2011' 1' 2' 2' 20);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,MinMax_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime ldt1 = new LocalDateTime(2011' 1' 2' 2' 20);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,MinMax_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime ldt1 = new LocalDateTime(2011' 1' 2' 2' 20);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,MinMax_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime ldt2 = new LocalDateTime(1500' 1' 1' 5' 10' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,MinMax_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime ldt2 = new LocalDateTime(1500' 1' 1' 5' 10' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,MinMax_DifferentCalendars_Throws,The following statement contains a magic number: LocalDateTime ldt2 = new LocalDateTime(1500' 1' 1' 5' 10' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,MinMax_SameCalendar,The following statement contains a magic number: LocalDateTime ldt1 = new LocalDateTime(1500' 1' 1' 7' 20' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,MinMax_SameCalendar,The following statement contains a magic number: LocalDateTime ldt1 = new LocalDateTime(1500' 1' 1' 7' 20' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,MinMax_SameCalendar,The following statement contains a magic number: LocalDateTime ldt1 = new LocalDateTime(1500' 1' 1' 7' 20' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,MinMax_SameCalendar,The following statement contains a magic number: LocalDateTime ldt2 = new LocalDateTime(1500' 1' 1' 5' 10' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,MinMax_SameCalendar,The following statement contains a magic number: LocalDateTime ldt2 = new LocalDateTime(1500' 1' 1' 5' 10' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,MinMax_SameCalendar,The following statement contains a magic number: LocalDateTime ldt2 = new LocalDateTime(1500' 1' 1' 5' 10' CalendarSystem.Julian);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var value = new LocalDateTime(2017' 10' 15' 21' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var value = new LocalDateTime(2017' 10' 15' 21' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var value = new LocalDateTime(2017' 10' 15' 21' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var value = new LocalDateTime(2017' 10' 15' 21' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var value = new LocalDateTime(2017' 10' 15' 21' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var expectedDate = new LocalDate(2017' 10' 15);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var expectedDate = new LocalDate(2017' 10' 15);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var expectedDate = new LocalDate(2017' 10' 15);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var expectedTime = new LocalTime(21' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var expectedTime = new LocalTime(21' 30' 0);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2016' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2016' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2016' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2016' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2016' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2016' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusYears(5));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: expected = new LocalDateTime(2006' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: expected = new LocalDateTime(2006' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: expected = new LocalDateTime(2006' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: expected = new LocalDateTime(2006' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: expected = new LocalDateTime(2006' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: expected = new LocalDateTime(2006' 6' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_Simple,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusYears(-5));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2013' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2013' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2013' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2013' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2013' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2013' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: expected = new LocalDateTime(2011' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: expected = new LocalDateTime(2011' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: expected = new LocalDateTime(2011' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: expected = new LocalDateTime(2011' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: expected = new LocalDateTime(2011' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToNonLeap,The following statement contains a magic number: expected = new LocalDateTime(2011' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2016' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2016' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2016' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2016' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2016' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToLeap,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2016' 2' 29' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusYear_LeapToLeap,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusYears(4));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 4' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 4' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 4' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 4' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 4' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 4' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 8' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 8' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 8' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 8' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 8' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 8' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_Simple,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusMonths(4));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 10' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 10' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 10' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 10' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 10' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 10' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2013' 2' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2013' 2' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2013' 2' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2013' 2' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2013' 2' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_ChangingYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2013' 2' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_ChangingYear,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusMonths(4));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 30' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 30' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 30' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 30' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 30' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMonth_WithTruncation,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 2' 28' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 15' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 1' 23' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 1' 23' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 1' 23' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 1' 23' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 1' 23' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: expected = new LocalDateTime(2011' 1' 7' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: expected = new LocalDateTime(2011' 1' 7' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: expected = new LocalDateTime(2011' 1' 7' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: expected = new LocalDateTime(2011' 1' 7' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: expected = new LocalDateTime(2011' 1' 7' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_Simple,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 2' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 2' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 2' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 2' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 2' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 2' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_MonthBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 12' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 12' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 12' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 12' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 12' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 12' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 1' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 1' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 1' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 1' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 1' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_YearBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 3' 5' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 3' 5' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 3' 5' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 3' 5' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 3' 5' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 3' 5' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_InLeapYear,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 2' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 2' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 2' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 2' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 2' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 2' 26' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 3' 6' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 3' 6' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 3' 6' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 3' 6' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 3' 6' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 3' 6' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusDays(8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusDays_EndOfFebruary_NotInLeapYear,The following statement contains a magic number: Assert.AreEqual(start' start.PlusDays(8).PlusDays(-8));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 23' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 23' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 23' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 23' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 23' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 23' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 3' 12' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 3' 12' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 3' 12' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 3' 12' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 3' 12' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 3' 12' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: Assert.AreEqual(expectedForward' start.PlusWeeks(3));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusWeeks_Simple,The following statement contains a magic number: Assert.AreEqual(expectedBackward' start.PlusWeeks(-3));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 14' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 14' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 14' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 14' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 14' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 14' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 10' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 10' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 10' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 10' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 10' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 10' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: Assert.AreEqual(expectedForward' start.PlusHours(2));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_Simple,The following statement contains a magic number: Assert.AreEqual(expectedBackward' start.PlusHours(-2));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 4' 3' 8' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 4' 3' 8' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 4' 3' 8' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 4' 3' 8' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 4' 3' 8' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2011' 4' 3' 8' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusHours(20));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusHours(20).PlusHours(-20));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusHours(20).PlusHours(-20));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 12' 25' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 12' 25' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 12' 25' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 12' 25' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 12' 25' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 12' 25' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 1' 4' 13' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 1' 4' 13' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 1' 4' 13' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 1' 4' 13' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2012' 1' 4' 13' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusHours(241));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusHours(241).PlusHours(-241));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusHours_CrossingYearBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusHours(241).PlusHours(-241));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 17' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 17' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 17' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 17' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 17' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 17' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 13' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 13' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 13' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 13' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 13' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 13' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: Assert.AreEqual(expectedForward' start.PlusMinutes(2));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMinutes_Simple,The following statement contains a magic number: Assert.AreEqual(expectedBackward' start.PlusMinutes(-2));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 15' 18);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 15' 18);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 15' 18);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 15' 18);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 15' 18);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 15' 18);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 14' 58);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 14' 58);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 14' 58);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 14' 58);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 14' 58);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 14' 58);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: Assert.AreEqual(expectedForward' start.PlusSeconds(10));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusSeconds_Simple,The following statement contains a magic number: Assert.AreEqual(expectedBackward' start.PlusSeconds(-10));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8' 300);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8' 300);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8' 300);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8' 300);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8' 300);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8' 300);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8' 300);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 15' 8' 700);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 15' 8' 700);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 15' 8' 700);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 15' 8' 700);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 15' 8' 700);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 15' 8' 700);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 2' 12' 15' 8' 700);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 15' 7' 900);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 15' 7' 900);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 15' 7' 900);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 15' 7' 900);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 15' 7' 900);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 15' 7' 900);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 2' 12' 15' 7' 900);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: Assert.AreEqual(expectedForward' start.PlusMilliseconds(400));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusMilliseconds_Simple,The following statement contains a magic number: Assert.AreEqual(expectedBackward' start.PlusMilliseconds(-400));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalDate date = new LocalDate(2011' 4' 2);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalDate date = new LocalDate(2011' 4' 2);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalDate date = new LocalDate(2011' 4' 2);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime startTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime startTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime startTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime startTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime startTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedForwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 301' 1500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedForwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 301' 1500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedForwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 301' 1500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedForwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 301' 1500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedForwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 301' 1500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedBackwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 3500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedBackwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 3500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedBackwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 3500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedBackwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 3500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedBackwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 3500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: Assert.AreEqual(date + expectedForwardTime' (date + startTime).PlusTicks(4000));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Simple,The following statement contains a magic number: Assert.AreEqual(date + expectedBackwardTime' (date + startTime).PlusTicks(-4000));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 1' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 1' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 1' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 1' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_Long,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 1' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalDate date = new LocalDate(2011' 4' 2);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalDate date = new LocalDate(2011' 4' 2);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalDate date = new LocalDate(2011' 4' 2);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime startTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime startTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime startTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime startTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime startTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime expectedForwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7540);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime expectedForwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7540);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime expectedForwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7540);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime expectedForwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7540);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime expectedForwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7540);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime expectedBackwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7460);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime expectedBackwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7460);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime expectedBackwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7460);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime expectedBackwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7460);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: LocalTime expectedBackwardTime = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7460);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: Assert.AreEqual(date + expectedForwardTime' (date + startTime).PlusNanoseconds(4000));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusNanoseconds_Simple,The following statement contains a magic number: Assert.AreEqual(date + expectedBackwardTime' (date + startTime).PlusNanoseconds(-4000));
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime expectedForward = new LocalDateTime(2011' 4' 3' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 1' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 1' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 1' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 1' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,PlusTicks_CrossingDay,The following statement contains a magic number: LocalDateTime expectedBackward = new LocalDateTime(2011' 4' 1' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var expected = new LocalDateTime(2012' 6' 28' 3' 21' 15).PlusNanoseconds(8000911);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var expected = new LocalDateTime(2012' 6' 28' 3' 21' 15).PlusNanoseconds(8000911);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var expected = new LocalDateTime(2012' 6' 28' 3' 21' 15).PlusNanoseconds(8000911);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var expected = new LocalDateTime(2012' 6' 28' 3' 21' 15).PlusNanoseconds(8000911);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var expected = new LocalDateTime(2012' 6' 28' 3' 21' 15).PlusNanoseconds(8000911);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var expected = new LocalDateTime(2012' 6' 28' 3' 21' 15).PlusNanoseconds(8000911);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Plus_FullPeriod,The following statement contains a magic number: var expected = new LocalDateTime(2012' 6' 28' 3' 21' 15).PlusNanoseconds(8000911);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 4' 2' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var period = new PeriodBuilder { Years = 1' Months = 2' Weeks = 3' Days = 4' Hours = 15' Minutes = 6'                                               Seconds = 7' Milliseconds = 8' Ticks = 9' Nanoseconds = 11 }.Build();
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var expected = new LocalDateTime(2010' 1' 7' 21' 9' 0).PlusNanoseconds(991999089L);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var expected = new LocalDateTime(2010' 1' 7' 21' 9' 0).PlusNanoseconds(991999089L);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var expected = new LocalDateTime(2010' 1' 7' 21' 9' 0).PlusNanoseconds(991999089L);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var expected = new LocalDateTime(2010' 1' 7' 21' 9' 0).PlusNanoseconds(991999089L);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Minus_FullPeriod,The following statement contains a magic number: var expected = new LocalDateTime(2010' 1' 7' 21' 9' 0).PlusNanoseconds(991999089L);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Next,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 11' dayOfMonth' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Next,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 11' dayOfMonth' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Next,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 11' dayOfMonth' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Next,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 11' dayOfMonth' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Next,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 11' dayOfMonth' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Next,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 11' dayOfMonth' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Next,The following statement contains a magic number: Assert.AreEqual(2011' target.Year);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Next,The following statement contains a magic number: Assert.AreEqual(11' target.Month);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Next_InvalidArgument,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Next_InvalidArgument,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Next_InvalidArgument,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Next_InvalidArgument,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Next_InvalidArgument,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Previous,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 11' dayOfMonth' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Previous,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 11' dayOfMonth' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Previous,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 11' dayOfMonth' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Previous,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 11' dayOfMonth' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Previous,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 11' dayOfMonth' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Previous,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 11' dayOfMonth' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Previous,The following statement contains a magic number: Assert.AreEqual(2011' target.Year);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Previous,The following statement contains a magic number: Assert.AreEqual(11' target.Month);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Previous_InvalidArgument,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Previous_InvalidArgument,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Previous_InvalidArgument,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Previous_InvalidArgument,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Previous_InvalidArgument,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operator_MethodEquivalents,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operator_MethodEquivalents,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operator_MethodEquivalents,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operator_MethodEquivalents,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,Operator_MethodEquivalents,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 1' 1' 15' 25' 30).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 6' 27' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 6' 27' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 6' 27' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 6' 27' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 6' 27' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 6' 27' 12' 15' 8);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,LocalInstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalInstantTest.cs,Equality,The following statement contains a magic number: LocalInstant equal = new LocalInstant(1' 100L);
Magic Number,NodaTime.Test,LocalInstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalInstantTest.cs,Equality,The following statement contains a magic number: LocalInstant different1 = new LocalInstant(1' 200L);
Magic Number,NodaTime.Test,LocalInstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalInstantTest.cs,Equality,The following statement contains a magic number: LocalInstant different2 = new LocalInstant(2' 100L);
Magic Number,NodaTime.Test,LocalInstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalInstantTest.cs,Equality,The following statement contains a magic number: LocalInstant different2 = new LocalInstant(2' 100L);
Magic Number,NodaTime.Test,LocalInstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalInstantTest.cs,MinusOffset_Zero_IsNeutralElement,The following statement contains a magic number: Instant sampleInstant = new Instant(1' 23456L);
Magic Number,NodaTime.Test,LocalInstantTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalInstantTest.cs,MinusOffset_Zero_IsNeutralElement,The following statement contains a magic number: LocalInstant sampleLocalInstant = new LocalInstant(1' 23456L);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,FromHourMinuteSecondTick_Valid,The following statement contains a magic number: var result = LocalTime.FromHourMinuteSecondTick(1' 2' 3' (int) (NodaConstants.TicksPerSecond - 1));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,FromHourMinuteSecondTick_Valid,The following statement contains a magic number: var result = LocalTime.FromHourMinuteSecondTick(1' 2' 3' (int) (NodaConstants.TicksPerSecond - 1));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,FromHourMinuteSecondTick_Valid,The following statement contains a magic number: Assert.AreEqual(2' result.Minute);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,FromHourMinuteSecondTick_Valid,The following statement contains a magic number: Assert.AreEqual(3' result.Second);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(12' new LocalTime(0' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(12' new LocalTime(12' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(12' new LocalTime(12' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(1' new LocalTime(13' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(11' new LocalTime(23' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ClockHourOfHalfDay,The following statement contains a magic number: Assert.AreEqual(11' new LocalTime(23' 0).ClockHourOfHalfDay);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,XmlSerialization,The following statement contains a magic number: var value = LocalTime.FromHourMinuteSecondNanosecond(17' 53' 23' 123456789);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,XmlSerialization,The following statement contains a magic number: var value = LocalTime.FromHourMinuteSecondNanosecond(17' 53' 23' 123456789);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,XmlSerialization,The following statement contains a magic number: var value = LocalTime.FromHourMinuteSecondNanosecond(17' 53' 23' 123456789);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,XmlSerialization,The following statement contains a magic number: var value = LocalTime.FromHourMinuteSecondNanosecond(17' 53' 23' 123456789);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Max,The following statement contains a magic number: LocalTime x = new LocalTime(5' 10);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Max,The following statement contains a magic number: LocalTime x = new LocalTime(5' 10);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Max,The following statement contains a magic number: LocalTime y = new LocalTime(6' 20);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Max,The following statement contains a magic number: LocalTime y = new LocalTime(6' 20);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Min,The following statement contains a magic number: LocalTime x = new LocalTime(5' 10);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Min,The following statement contains a magic number: LocalTime x = new LocalTime(5' 10);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Min,The following statement contains a magic number: LocalTime y = new LocalTime(6' 20);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Min,The following statement contains a magic number: LocalTime y = new LocalTime(6' 20);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Deconstruction,The following statement contains a magic number: var value = new LocalTime(15' 8' 20);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Deconstruction,The following statement contains a magic number: var value = new LocalTime(15' 8' 20);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Deconstruction,The following statement contains a magic number: var value = new LocalTime(15' 8' 20);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Deconstruction,The following statement contains a magic number: var expectedHour = 15;
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Deconstruction,The following statement contains a magic number: var expectedMinute = 8;
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Deconstruction,The following statement contains a magic number: var expectedSecond = 20;
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,WithOffset,The following statement contains a magic number: var time = new LocalTime(3' 45' 12' 34);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,WithOffset,The following statement contains a magic number: var time = new LocalTime(3' 45' 12' 34);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,WithOffset,The following statement contains a magic number: var time = new LocalTime(3' 45' 12' 34);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,WithOffset,The following statement contains a magic number: var time = new LocalTime(3' 45' 12' 34);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,WithOffset,The following statement contains a magic number: var offset = Offset.FromHours(5);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Addition_WithPeriod,The following statement contains a magic number: LocalTime start = new LocalTime(3' 30);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Addition_WithPeriod,The following statement contains a magic number: LocalTime start = new LocalTime(3' 30);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Addition_WithPeriod,The following statement contains a magic number: Period period = Period.FromHours(2) + Period.FromSeconds(1);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Addition_WithPeriod,The following statement contains a magic number: LocalTime expected = new LocalTime(5' 30' 1);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Addition_WithPeriod,The following statement contains a magic number: LocalTime expected = new LocalTime(5' 30' 1);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Addition_WrapsAtMidnight,The following statement contains a magic number: LocalTime start = new LocalTime(22' 0);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Addition_WrapsAtMidnight,The following statement contains a magic number: Period period = Period.FromHours(3);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Addition_WithNullPeriod_ThrowsArgumentNullException,The following statement contains a magic number: LocalTime date = new LocalTime(12' 0);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Subtraction_WithPeriod,The following statement contains a magic number: LocalTime start = new LocalTime(5' 30' 1);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Subtraction_WithPeriod,The following statement contains a magic number: LocalTime start = new LocalTime(5' 30' 1);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Subtraction_WithPeriod,The following statement contains a magic number: Period period = Period.FromHours(2) + Period.FromSeconds(1);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Subtraction_WithPeriod,The following statement contains a magic number: LocalTime expected = new LocalTime(3' 30' 0);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Subtraction_WithPeriod,The following statement contains a magic number: LocalTime expected = new LocalTime(3' 30' 0);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Subtraction_WrapsAtMidnight,The following statement contains a magic number: Period period = Period.FromHours(3);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Subtraction_WrapsAtMidnight,The following statement contains a magic number: LocalTime expected = new LocalTime(22' 0' 0);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Subtraction_WithNullPeriod_ThrowsArgumentNullException,The following statement contains a magic number: LocalTime date = new LocalTime(12' 0);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Addition_PeriodWithDate,The following statement contains a magic number: LocalTime time = new LocalTime(20' 30);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Addition_PeriodWithDate,The following statement contains a magic number: LocalTime time = new LocalTime(20' 30);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Subtraction_PeriodWithTime,The following statement contains a magic number: LocalTime time = new LocalTime(20' 30);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Subtraction_PeriodWithTime,The following statement contains a magic number: LocalTime time = new LocalTime(20' 30);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PeriodAddition_MethodEquivalents,The following statement contains a magic number: LocalTime start = new LocalTime(20' 30);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PeriodAddition_MethodEquivalents,The following statement contains a magic number: LocalTime start = new LocalTime(20' 30);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PeriodAddition_MethodEquivalents,The following statement contains a magic number: Period period = Period.FromHours(3) + Period.FromMinutes(10);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PeriodAddition_MethodEquivalents,The following statement contains a magic number: Period period = Period.FromHours(3) + Period.FromMinutes(10);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PeriodSubtraction_MethodEquivalents,The following statement contains a magic number: LocalTime start = new LocalTime(20' 30);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PeriodSubtraction_MethodEquivalents,The following statement contains a magic number: LocalTime start = new LocalTime(20' 30);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PeriodSubtraction_MethodEquivalents,The following statement contains a magic number: Period period = Period.FromHours(3) + Period.FromMinutes(10);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PeriodSubtraction_MethodEquivalents,The following statement contains a magic number: Period period = Period.FromHours(3) + Period.FromMinutes(10);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ComparisonOperators,The following statement contains a magic number: LocalTime time1 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ComparisonOperators,The following statement contains a magic number: LocalTime time1 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ComparisonOperators,The following statement contains a magic number: LocalTime time1 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ComparisonOperators,The following statement contains a magic number: LocalTime time2 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ComparisonOperators,The following statement contains a magic number: LocalTime time2 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ComparisonOperators,The following statement contains a magic number: LocalTime time2 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ComparisonOperators,The following statement contains a magic number: LocalTime time3 = new LocalTime(10' 30' 50);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ComparisonOperators,The following statement contains a magic number: LocalTime time3 = new LocalTime(10' 30' 50);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,ComparisonOperators,The following statement contains a magic number: LocalTime time3 = new LocalTime(10' 30' 50);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Comparison_IgnoresOriginalCalendar,The following statement contains a magic number: LocalDateTime dateTime1 = new LocalDateTime(1900' 1' 1' 10' 30' 0);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Comparison_IgnoresOriginalCalendar,The following statement contains a magic number: LocalDateTime dateTime1 = new LocalDateTime(1900' 1' 1' 10' 30' 0);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,Comparison_IgnoresOriginalCalendar,The following statement contains a magic number: LocalDateTime dateTime1 = new LocalDateTime(1900' 1' 1' 10' 30' 0);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,CompareTo,The following statement contains a magic number: LocalTime time1 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,CompareTo,The following statement contains a magic number: LocalTime time1 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,CompareTo,The following statement contains a magic number: LocalTime time1 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,CompareTo,The following statement contains a magic number: LocalTime time2 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,CompareTo,The following statement contains a magic number: LocalTime time2 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,CompareTo,The following statement contains a magic number: LocalTime time2 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,CompareTo,The following statement contains a magic number: LocalTime time3 = new LocalTime(10' 30' 50);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,CompareTo,The following statement contains a magic number: LocalTime time3 = new LocalTime(10' 30' 50);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,CompareTo,The following statement contains a magic number: LocalTime time3 = new LocalTime(10' 30' 50);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo,The following statement contains a magic number: LocalTime time1 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo,The following statement contains a magic number: LocalTime time1 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo,The following statement contains a magic number: LocalTime time1 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo,The following statement contains a magic number: LocalTime time2 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo,The following statement contains a magic number: LocalTime time2 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo,The following statement contains a magic number: LocalTime time2 = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo,The following statement contains a magic number: LocalTime time3 = new LocalTime(10' 30' 50);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo,The following statement contains a magic number: LocalTime time3 = new LocalTime(10' 30' 50);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo,The following statement contains a magic number: LocalTime time3 = new LocalTime(10' 30' 50);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo_Null_Positive,The following statement contains a magic number: var instance = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo_Null_Positive,The following statement contains a magic number: var instance = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo_Null_Positive,The following statement contains a magic number: var instance = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var instance = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var instance = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var instance = new LocalTime(10' 30' 45);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDate(2012' 3' 6);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDate(2012' 3' 6);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDate(2012' 3' 6);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_Simple,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_Simple,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_Simple,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_Simple,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(14' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_Simple,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(14' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_Simple,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(14' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_Simple,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(10' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_Simple,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(10' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_Simple,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(10' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_Simple,The following statement contains a magic number: Assert.AreEqual(expectedForward' start.PlusHours(2));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_Simple,The following statement contains a magic number: Assert.AreEqual(expectedBackward' start.PlusHours(-2));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalTime expected = new LocalTime(8' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalTime expected = new LocalTime(8' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: LocalTime expected = new LocalTime(8' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusHours(20));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusHours(20).PlusHours(-20));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingDayBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusHours(20).PlusHours(-20));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingSeveralDaysBoundary,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingSeveralDaysBoundary,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingSeveralDaysBoundary,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingSeveralDaysBoundary,The following statement contains a magic number: LocalTime expected = new LocalTime(13' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingSeveralDaysBoundary,The following statement contains a magic number: LocalTime expected = new LocalTime(13' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingSeveralDaysBoundary,The following statement contains a magic number: LocalTime expected = new LocalTime(13' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingSeveralDaysBoundary,The following statement contains a magic number: Assert.AreEqual(expected' start.PlusHours(241));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingSeveralDaysBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusHours(241).PlusHours(-241));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusHours_CrossingSeveralDaysBoundary,The following statement contains a magic number: Assert.AreEqual(start' start.PlusHours(241).PlusHours(-241));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(12' 17' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(12' 17' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(12' 17' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(12' 13' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(12' 13' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_Simple,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(12' 13' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_Simple,The following statement contains a magic number: Assert.AreEqual(expectedForward' start.PlusMinutes(2));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_Simple,The following statement contains a magic number: Assert.AreEqual(expectedBackward' start.PlusMinutes(-2));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(12' 15' 18);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(12' 15' 18);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(12' 15' 18);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(12' 14' 58);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(12' 14' 58);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusSeconds_Simple,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(12' 14' 58);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusSeconds_Simple,The following statement contains a magic number: Assert.AreEqual(expectedForward' start.PlusSeconds(10));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusSeconds_Simple,The following statement contains a magic number: Assert.AreEqual(expectedBackward' start.PlusSeconds(-10));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8' 300);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8' 300);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8' 300);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8' 300);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(12' 15' 8' 700);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(12' 15' 8' 700);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(12' 15' 8' 700);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(12' 15' 8' 700);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(12' 15' 7' 900);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(12' 15' 7' 900);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(12' 15' 7' 900);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(12' 15' 7' 900);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: Assert.AreEqual(expectedForward' start.PlusMilliseconds(400));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMilliseconds_Simple,The following statement contains a magic number: Assert.AreEqual(expectedBackward' start.PlusMilliseconds(-400));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime start = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime start = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime start = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime start = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime start = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 7500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedForward = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 301' 1500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedForward = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 301' 1500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedForward = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 301' 1500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedForward = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 301' 1500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedForward = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 301' 1500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedBackward = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 3500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedBackward = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 3500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedBackward = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 3500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedBackward = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 3500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: LocalTime expectedBackward = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 300' 3500);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: Assert.AreEqual(expectedForward' start.PlusTicks(4000));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Simple,The following statement contains a magic number: Assert.AreEqual(expectedBackward' start.PlusTicks(-4000));
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Long,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Long,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Long,The following statement contains a magic number: LocalTime start = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Long,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(12' 15' 9);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Long,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(12' 15' 9);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Long,The following statement contains a magic number: LocalTime expectedForward = new LocalTime(12' 15' 9);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Long,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(12' 15' 7);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Long,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(12' 15' 7);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusTicks_Long,The following statement contains a magic number: LocalTime expectedBackward = new LocalTime(12' 15' 7);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,With,The following statement contains a magic number: LocalTime start = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 100' 1234);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,With,The following statement contains a magic number: LocalTime start = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 100' 1234);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,With,The following statement contains a magic number: LocalTime start = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 100' 1234);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,With,The following statement contains a magic number: LocalTime start = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 100' 1234);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,With,The following statement contains a magic number: LocalTime start = LocalTime.FromHourMinuteSecondMillisecondTick(12' 15' 8' 100' 1234);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,With,The following statement contains a magic number: LocalTime expected = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,With,The following statement contains a magic number: LocalTime expected = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,With,The following statement contains a magic number: LocalTime expected = new LocalTime(12' 15' 8);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_WouldOverflowNaively,The following statement contains a magic number: LocalTime start = new LocalTime(12' 34' 56);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_WouldOverflowNaively,The following statement contains a magic number: LocalTime start = new LocalTime(12' 34' 56);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_WouldOverflowNaively,The following statement contains a magic number: LocalTime start = new LocalTime(12' 34' 56);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_WouldOverflowNaively,The following statement contains a magic number: long value = (NodaConstants.NanosecondsPerDay << 15) + 1;
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_WouldOverflowNaively,The following statement contains a magic number: LocalTime expected = new LocalTime(12' 35' 56);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_WouldOverflowNaively,The following statement contains a magic number: LocalTime expected = new LocalTime(12' 35' 56);
Magic Number,NodaTime.Test,LocalTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\LocalTimeTest.Construction.cs,PlusMinutes_WouldOverflowNaively,The following statement contains a magic number: LocalTime expected = new LocalTime(12' 35' 56);
Magic Number,NodaTime.Test,NodaConstantsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\NodaConstantsTest.cs,JulianEpoch,The following statement contains a magic number: var localEpoch = new LocalDateTime(-4712' 1' 1' 12' 0' CalendarSystem.Julian);
Magic Number,NodaTime.Test,NodaConstantsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\NodaConstantsTest.cs,JulianEpoch,The following statement contains a magic number: var localEpoch = new LocalDateTime(-4712' 1' 1' 12' 0' CalendarSystem.Julian);
Magic Number,NodaTime.Test,NodaConstantsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\NodaConstantsTest.cs,BclTicksAtEpoch,The following statement contains a magic number: Assert.AreEqual(                  new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc).Ticks'                  NodaConstants.BclTicksAtUnixEpoch);
Magic Number,NodaTime.Test,NodaConstantsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\NodaConstantsTest.cs,BclDaysAtEpoch,The following statement contains a magic number: Assert.AreEqual(                  new DateTime(1970' 1' 1' 0' 0' 0' DateTimeKind.Utc).Ticks'                  NodaConstants.TicksPerDay * NodaConstants.BclDaysAtUnixEpoch);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,LocalDateProperties,The following statement contains a magic number: LocalDate local = new LocalDate(2012' 6' 19' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,LocalDateProperties,The following statement contains a magic number: LocalDate local = new LocalDate(2012' 6' 19' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,LocalDateProperties,The following statement contains a magic number: LocalDate local = new LocalDate(2012' 6' 19' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,LocalDateProperties,The following statement contains a magic number: Offset offset = Offset.FromHours(5);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,ComponentProperties,The following statement contains a magic number: var date = new LocalDate(2012' 1' 2);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,ComponentProperties,The following statement contains a magic number: var date = new LocalDate(2012' 1' 2);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,ComponentProperties,The following statement contains a magic number: var offset = Offset.FromHours(5);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,Equality,The following statement contains a magic number: LocalDate date1 = new LocalDate(2012' 10' 6);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,Equality,The following statement contains a magic number: LocalDate date1 = new LocalDate(2012' 10' 6);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,Equality,The following statement contains a magic number: LocalDate date1 = new LocalDate(2012' 10' 6);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,Equality,The following statement contains a magic number: LocalDate date2 = new LocalDate(2012' 9' 5);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,Equality,The following statement contains a magic number: LocalDate date2 = new LocalDate(2012' 9' 5);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,Equality,The following statement contains a magic number: LocalDate date2 = new LocalDate(2012' 9' 5);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,Equality,The following statement contains a magic number: Offset offset2 = Offset.FromHours(2);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,At,The following statement contains a magic number: var date = new LocalDate(2012' 6' 19' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,At,The following statement contains a magic number: var date = new LocalDate(2012' 6' 19' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,At,The following statement contains a magic number: var date = new LocalDate(2012' 6' 19' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,At,The following statement contains a magic number: var offset = Offset.FromHours(5);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,At,The following statement contains a magic number: var time = new LocalTime(14' 15' 12).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,At,The following statement contains a magic number: var time = new LocalTime(14' 15' 12).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,At,The following statement contains a magic number: var time = new LocalTime(14' 15' 12).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,At,The following statement contains a magic number: var time = new LocalTime(14' 15' 12).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithOffset,The following statement contains a magic number: var date = new LocalDate(2012' 6' 19);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithOffset,The following statement contains a magic number: var date = new LocalDate(2012' 6' 19);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithOffset,The following statement contains a magic number: var date = new LocalDate(2012' 6' 19);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithOffset,The following statement contains a magic number: var initial = new OffsetDate(date' Offset.FromHours(2));
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithOffset,The following statement contains a magic number: var actual = initial.WithOffset(Offset.FromHours(5));
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithOffset,The following statement contains a magic number: var expected = new OffsetDate(date' Offset.FromHours(5));
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithCalendar,The following statement contains a magic number: var julianDate = new LocalDate(2012' 6' 19' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithCalendar,The following statement contains a magic number: var julianDate = new LocalDate(2012' 6' 19' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithCalendar,The following statement contains a magic number: var julianDate = new LocalDate(2012' 6' 19' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithCalendar,The following statement contains a magic number: var offset = Offset.FromHours(5);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithAdjuster,The following statement contains a magic number: var initial = new OffsetDate(new LocalDate(2016' 6' 19)' Offset.FromHours(-5));
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithAdjuster,The following statement contains a magic number: var initial = new OffsetDate(new LocalDate(2016' 6' 19)' Offset.FromHours(-5));
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithAdjuster,The following statement contains a magic number: var initial = new OffsetDate(new LocalDate(2016' 6' 19)' Offset.FromHours(-5));
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithAdjuster,The following statement contains a magic number: var initial = new OffsetDate(new LocalDate(2016' 6' 19)' Offset.FromHours(-5));
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithAdjuster,The following statement contains a magic number: var expected = new OffsetDate(new LocalDate(2016' 6' 1)' Offset.FromHours(-5));
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithAdjuster,The following statement contains a magic number: var expected = new OffsetDate(new LocalDate(2016' 6' 1)' Offset.FromHours(-5));
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,WithAdjuster,The following statement contains a magic number: var expected = new OffsetDate(new LocalDate(2016' 6' 1)' Offset.FromHours(-5));
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,ToString_WithFormat,The following statement contains a magic number: LocalDate date = new LocalDate(2012' 10' 6);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,ToString_WithFormat,The following statement contains a magic number: LocalDate date = new LocalDate(2012' 10' 6);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,ToString_WithFormat,The following statement contains a magic number: LocalDate date = new LocalDate(2012' 10' 6);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,ToString_WithNullFormat,The following statement contains a magic number: LocalDate date = new LocalDate(2012' 10' 6);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,ToString_WithNullFormat,The following statement contains a magic number: LocalDate date = new LocalDate(2012' 10' 6);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,ToString_WithNullFormat,The following statement contains a magic number: LocalDate date = new LocalDate(2012' 10' 6);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,ToString_NoFormat,The following statement contains a magic number: LocalDate date = new LocalDate(2012' 10' 6);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,ToString_NoFormat,The following statement contains a magic number: LocalDate date = new LocalDate(2012' 10' 6);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,ToString_NoFormat,The following statement contains a magic number: LocalDate date = new LocalDate(2012' 10' 6);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,Deconstruction,The following statement contains a magic number: LocalDate date = new LocalDate(2015' 3' 28);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,Deconstruction,The following statement contains a magic number: LocalDate date = new LocalDate(2015' 3' 28);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,Deconstruction,The following statement contains a magic number: LocalDate date = new LocalDate(2015' 3' 28);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,Deconstruction,The following statement contains a magic number: Offset offset = Offset.FromHours(-2);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var offset = Offset.FromHoursAndMinutes(5' 30);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var offset = Offset.FromHoursAndMinutes(5' 30);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,XmlSerialization_Bce,The following statement contains a magic number: var offset = Offset.FromHoursAndMinutes(5' 30);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,XmlSerialization_Bce,The following statement contains a magic number: var offset = Offset.FromHoursAndMinutes(5' 30);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var date = new LocalDate(2013' 4' 12' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var date = new LocalDate(2013' 4' 12' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetDateTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var date = new LocalDate(2013' 4' 12' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperties,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 19' 1' 2' 3' CalendarSystem.Julian).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperties,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 19' 1' 2' 3' CalendarSystem.Julian).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperties,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 19' 1' 2' 3' CalendarSystem.Julian).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperties,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 19' 1' 2' 3' CalendarSystem.Julian).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperties,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 19' 1' 2' 3' CalendarSystem.Julian).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperties,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 19' 1' 2' 3' CalendarSystem.Julian).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperties,The following statement contains a magic number: Offset offset = Offset.FromHours(5);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,OffsetProperty,The following statement contains a magic number: Offset offset = Offset.FromHours(5);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,OffsetProperty,The following statement contains a magic number: OffsetDateTime odt = new OffsetDateTime(new LocalDateTime(2012' 1' 2' 3' 4)' offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,OffsetProperty,The following statement contains a magic number: OffsetDateTime odt = new OffsetDateTime(new LocalDateTime(2012' 1' 2' 3' 4)' offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,OffsetProperty,The following statement contains a magic number: OffsetDateTime odt = new OffsetDateTime(new LocalDateTime(2012' 1' 2' 3' 4)' offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,OffsetProperty,The following statement contains a magic number: OffsetDateTime odt = new OffsetDateTime(new LocalDateTime(2012' 1' 2' 3' 4)' offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperty,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 19' 1' 2' 3' CalendarSystem.Julian).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperty,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 19' 1' 2' 3' CalendarSystem.Julian).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperty,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 19' 1' 2' 3' CalendarSystem.Julian).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperty,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 19' 1' 2' 3' CalendarSystem.Julian).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperty,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 19' 1' 2' 3' CalendarSystem.Julian).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperty,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 19' 1' 2' 3' CalendarSystem.Julian).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalDateTimeProperty,The following statement contains a magic number: Offset offset = Offset.FromHours(5);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: Instant instant = Instant.FromUtc(2012' 6' 25' 16' 5' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: Instant instant = Instant.FromUtc(2012' 6' 25' 16' 5' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: Instant instant = Instant.FromUtc(2012' 6' 25' 16' 5' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: Instant instant = Instant.FromUtc(2012' 6' 25' 16' 5' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: Instant instant = Instant.FromUtc(2012' 6' 25' 16' 5' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: Instant instant = Instant.FromUtc(2012' 6' 25' 16' 5' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 25' 21' 35' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 25' 21' 35' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 25' 21' 35' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 25' 21' 35' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 25' 21' 35' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 6' 25' 21' 35' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: Offset offset = Offset.FromHoursAndMinutes(5' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToInstant,The following statement contains a magic number: Offset offset = Offset.FromHoursAndMinutes(5' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Equality,The following statement contains a magic number: LocalDateTime local1 = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Equality,The following statement contains a magic number: LocalDateTime local1 = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Equality,The following statement contains a magic number: LocalDateTime local1 = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Equality,The following statement contains a magic number: LocalDateTime local1 = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Equality,The following statement contains a magic number: LocalDateTime local1 = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Equality,The following statement contains a magic number: LocalDateTime local2 = new LocalDateTime(2012' 9' 5' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Equality,The following statement contains a magic number: LocalDateTime local2 = new LocalDateTime(2012' 9' 5' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Equality,The following statement contains a magic number: LocalDateTime local2 = new LocalDateTime(2012' 9' 5' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Equality,The following statement contains a magic number: LocalDateTime local2 = new LocalDateTime(2012' 9' 5' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Equality,The following statement contains a magic number: LocalDateTime local2 = new LocalDateTime(2012' 9' 5' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Equality,The following statement contains a magic number: Offset offset2 = Offset.FromHours(2);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(DateTime.SpecifyKind(new DateTime(2012' 10' 6' 1' 2' 3)' DateTimeKind.Unspecified)'                  TimeSpan.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(DateTime.SpecifyKind(new DateTime(2012' 10' 6' 1' 2' 3)' DateTimeKind.Unspecified)'                  TimeSpan.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(DateTime.SpecifyKind(new DateTime(2012' 10' 6' 1' 2' 3)' DateTimeKind.Unspecified)'                  TimeSpan.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(DateTime.SpecifyKind(new DateTime(2012' 10' 6' 1' 2' 3)' DateTimeKind.Unspecified)'                  TimeSpan.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(DateTime.SpecifyKind(new DateTime(2012' 10' 6' 1' 2' 3)' DateTimeKind.Unspecified)'                  TimeSpan.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2017' 1' 9' 21' 45' 20' DateTimeKind.Unspecified)' dto.DateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2017' 1' 9' 21' 45' 20' DateTimeKind.Unspecified)' dto.DateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2017' 1' 9' 21' 45' 20' DateTimeKind.Unspecified)' dto.DateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2017' 1' 9' 21' 45' 20' DateTimeKind.Unspecified)' dto.DateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2017' 1' 9' 21' 45' 20' DateTimeKind.Unspecified)' dto.DateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_OffsetOutOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_OffsetOutOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_OffsetOutOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_OffsetOutOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_OffsetOutOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_OffsetEdgeOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_OffsetEdgeOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_OffsetEdgeOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_OffsetEdgeOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_OffsetEdgeOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var odt = new LocalDateTime(year' 1' 1' 13' 15' 55).PlusNanoseconds(NodaConstants.NanosecondsPerSecond - 1)                  .WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var odt = new LocalDateTime(year' 1' 1' 13' 15' 55).PlusNanoseconds(NodaConstants.NanosecondsPerSecond - 1)                  .WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var odt = new LocalDateTime(year' 1' 1' 13' 15' 55).PlusNanoseconds(NodaConstants.NanosecondsPerSecond - 1)                  .WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var expected = new DateTimeOffset(year' 1' 1' 13' 15' 55' TimeSpan.FromHours(1))                  .AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var expected = new DateTimeOffset(year' 1' 1' 13' 15' 55' TimeSpan.FromHours(1))                  .AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToDateTimeOffset_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var expected = new DateTimeOffset(year' 1' 1' 13' 15' 55' TimeSpan.FromHours(1))                  .AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset bcl = new DateTimeOffset(DateTime.SpecifyKind(new DateTime(2012' 10' 6' 1' 2' 3)' DateTimeKind.Unspecified)'                  TimeSpan.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset bcl = new DateTimeOffset(DateTime.SpecifyKind(new DateTime(2012' 10' 6' 1' 2' 3)' DateTimeKind.Unspecified)'                  TimeSpan.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset bcl = new DateTimeOffset(DateTime.SpecifyKind(new DateTime(2012' 10' 6' 1' 2' 3)' DateTimeKind.Unspecified)'                  TimeSpan.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset bcl = new DateTimeOffset(DateTime.SpecifyKind(new DateTime(2012' 10' 6' 1' 2' 3)' DateTimeKind.Unspecified)'                  TimeSpan.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset bcl = new DateTimeOffset(DateTime.SpecifyKind(new DateTime(2012' 10' 6' 1' 2' 3)' DateTimeKind.Unspecified)'                  TimeSpan.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InFixedZone,The following statement contains a magic number: Offset offset = Offset.FromHours(5);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InFixedZone,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 1' 2' 3' 4);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InFixedZone,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 1' 2' 3' 4);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InFixedZone,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 1' 2' 3' 4);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InFixedZone,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 1' 2' 3' 4);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_WholeHourOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_WholeHourOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_WholeHourOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_WholeHourOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_WholeHourOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_PartHourOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_PartHourOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_PartHourOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_PartHourOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_PartHourOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_PartHourOffset,The following statement contains a magic number: Offset offset = Offset.FromHoursAndMinutes(1' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_Utc,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_Utc,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_Utc,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_Utc,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_Utc,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_WithFormat,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_WithFormat,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_WithFormat,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_WithFormat,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToString_WithFormat,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2012' 10' 6' 1' 2' 3);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var localControl = new LocalDateTime(2013' 4' 2' 19' 54);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var localControl = new LocalDateTime(2013' 4' 2' 19' 54);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var localControl = new LocalDateTime(2013' 4' 2' 19' 54);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var localControl = new LocalDateTime(2013' 4' 2' 19' 54);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var localControl = new LocalDateTime(2013' 4' 2' 19' 54);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var differentCalendar = control.LocalDateTime.WithCalendar(CalendarSystem.Coptic).WithOffset(Offset.FromHours(5));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var earlierLocal = control.LocalDateTime.PlusHours(-2).WithOffset(Offset.FromHours(-10));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var earlierLocal = control.LocalDateTime.PlusHours(-2).WithOffset(Offset.FromHours(-10));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var muchEarlierLocal = control.PlusHours(-24);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var laterLocal = control.LocalDateTime.PlusHours(2).WithOffset(Offset.FromHours(10));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var laterLocal = control.LocalDateTime.PlusHours(2).WithOffset(Offset.FromHours(10));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var muchLaterLocal = control.PlusHours(24);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var localControl = new LocalDateTime(2013' 4' 2' 19' 54);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var localControl = new LocalDateTime(2013' 4' 2' 19' 54);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var localControl = new LocalDateTime(2013' 4' 2' 19' 54);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var localControl = new LocalDateTime(2013' 4' 2' 19' 54);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var localControl = new LocalDateTime(2013' 4' 2' 19' 54);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var earlierLocal = control.LocalDateTime.PlusHours(-2).WithOffset(Offset.FromHours(-10));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var earlierLocal = control.LocalDateTime.PlusHours(-2).WithOffset(Offset.FromHours(-10));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var laterLocal = control.LocalDateTime.PlusHours(2).WithOffset(Offset.FromHours(10));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var laterLocal = control.LocalDateTime.PlusHours(2).WithOffset(Offset.FromHours(10));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_Duration,The following statement contains a magic number: OffsetDateTime end = new LocalDateTime(2014' 08' 14' 15' 0).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_Duration,The following statement contains a magic number: OffsetDateTime end = new LocalDateTime(2014' 08' 14' 15' 0).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_Duration,The following statement contains a magic number: OffsetDateTime end = new LocalDateTime(2014' 08' 14' 15' 0).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_Duration,The following statement contains a magic number: OffsetDateTime end = new LocalDateTime(2014' 08' 14' 15' 0).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_Duration,The following statement contains a magic number: Duration duration = Duration.FromHours(8) + Duration.FromMinutes(9);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_Duration,The following statement contains a magic number: Duration duration = Duration.FromHours(8) + Duration.FromMinutes(9);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_Duration,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_Duration,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_Duration,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_Duration,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_Duration,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: const int minutes = 23;
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: const int hours = 3;
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: const int milliseconds = 40000;
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: const long seconds = 321;
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: const long nanoseconds = 12345;
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: const long ticks = 5432112345;
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: Duration duration = Duration.FromHours(8) + Duration.FromMinutes(9);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: Duration duration = Duration.FromHours(8) + Duration.FromMinutes(9);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 08' 14' 15' 0).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 08' 14' 15' 0).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 08' 14' 15' 0).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Addition_Duration,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 08' 14' 15' 0).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_OffsetDateTime,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_OffsetDateTime,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_OffsetDateTime,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_OffsetDateTime,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_OffsetDateTime,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 08' 14' 6' 51).WithOffset(Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_OffsetDateTime,The following statement contains a magic number: OffsetDateTime end = new LocalDateTime(2014' 08' 14' 18' 0).WithOffset(Offset.FromHours(4));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_OffsetDateTime,The following statement contains a magic number: OffsetDateTime end = new LocalDateTime(2014' 08' 14' 18' 0).WithOffset(Offset.FromHours(4));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_OffsetDateTime,The following statement contains a magic number: OffsetDateTime end = new LocalDateTime(2014' 08' 14' 18' 0).WithOffset(Offset.FromHours(4));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_OffsetDateTime,The following statement contains a magic number: OffsetDateTime end = new LocalDateTime(2014' 08' 14' 18' 0).WithOffset(Offset.FromHours(4));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_OffsetDateTime,The following statement contains a magic number: OffsetDateTime end = new LocalDateTime(2014' 08' 14' 18' 0).WithOffset(Offset.FromHours(4));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_OffsetDateTime,The following statement contains a magic number: Duration expected = Duration.FromHours(8) + Duration.FromMinutes(9);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Subtraction_OffsetDateTime,The following statement contains a magic number: Duration expected = Duration.FromHours(8) + Duration.FromMinutes(9);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23)' Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23)' Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23)' Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23)' Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23)' Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23)' Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_ZeroOffset,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23)' Offset.Zero);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_ZeroOffset,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23)' Offset.Zero);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_ZeroOffset,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23)' Offset.Zero);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_ZeroOffset,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23)' Offset.Zero);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_ZeroOffset,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23)' Offset.Zero);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_ZeroOffset,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23)' Offset.Zero);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23' CalendarSystem.Julian)'                  Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23' CalendarSystem.Julian)'                  Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23' CalendarSystem.Julian)'                  Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23' CalendarSystem.Julian)'                  Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23' CalendarSystem.Julian)'                  Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new OffsetDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23' CalendarSystem.Julian)'                  Offset.FromHours(1));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset,The following statement contains a magic number: LocalDateTime morning = new LocalDateTime(2014' 1' 31' 9' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset,The following statement contains a magic number: LocalDateTime morning = new LocalDateTime(2014' 1' 31' 9' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset,The following statement contains a magic number: LocalDateTime morning = new LocalDateTime(2014' 1' 31' 9' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset,The following statement contains a magic number: LocalDateTime morning = new LocalDateTime(2014' 1' 31' 9' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset,The following statement contains a magic number: OffsetDateTime original = new OffsetDateTime(morning' Offset.FromHours(-8));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset,The following statement contains a magic number: LocalDateTime evening = new LocalDateTime(2014' 1' 31' 19' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset,The following statement contains a magic number: LocalDateTime evening = new LocalDateTime(2014' 1' 31' 19' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset,The following statement contains a magic number: LocalDateTime evening = new LocalDateTime(2014' 1' 31' 19' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset,The following statement contains a magic number: LocalDateTime evening = new LocalDateTime(2014' 1' 31' 19' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset,The following statement contains a magic number: Offset newOffset = Offset.FromHours(2);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: OffsetDateTime noon = new OffsetDateTime(new LocalDateTime(2017' 8' 22' 12' 0' 0)' Offset.FromHours(0));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: OffsetDateTime noon = new OffsetDateTime(new LocalDateTime(2017' 8' 22' 12' 0' 0)' Offset.FromHours(0));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: OffsetDateTime noon = new OffsetDateTime(new LocalDateTime(2017' 8' 22' 12' 0' 0)' Offset.FromHours(0));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: OffsetDateTime noon = new OffsetDateTime(new LocalDateTime(2017' 8' 22' 12' 0' 0)' Offset.FromHours(0));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: OffsetDateTime previousNight = noon.WithOffset(Offset.FromHours(-14));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: OffsetDateTime nextMorning = noon.WithOffset(Offset.FromHours(14));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 21' 22' 0' 0)' previousNight.LocalDateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 21' 22' 0' 0)' previousNight.LocalDateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 21' 22' 0' 0)' previousNight.LocalDateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 21' 22' 0' 0)' previousNight.LocalDateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 2' 0' 0)' nextMorning.LocalDateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 2' 0' 0)' nextMorning.LocalDateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 2' 0' 0)' nextMorning.LocalDateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_CrossDates,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 2' 0' 0)' nextMorning.LocalDateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_TwoDaysForwardAndBack,The following statement contains a magic number: OffsetDateTime night = new OffsetDateTime(new LocalDateTime(2017' 8' 21' 18' 0' 0)' Offset.FromHours(-18));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_TwoDaysForwardAndBack,The following statement contains a magic number: OffsetDateTime night = new OffsetDateTime(new LocalDateTime(2017' 8' 21' 18' 0' 0)' Offset.FromHours(-18));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_TwoDaysForwardAndBack,The following statement contains a magic number: OffsetDateTime night = new OffsetDateTime(new LocalDateTime(2017' 8' 21' 18' 0' 0)' Offset.FromHours(-18));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_TwoDaysForwardAndBack,The following statement contains a magic number: OffsetDateTime night = new OffsetDateTime(new LocalDateTime(2017' 8' 21' 18' 0' 0)' Offset.FromHours(-18));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_TwoDaysForwardAndBack,The following statement contains a magic number: OffsetDateTime night = new OffsetDateTime(new LocalDateTime(2017' 8' 21' 18' 0' 0)' Offset.FromHours(-18));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_TwoDaysForwardAndBack,The following statement contains a magic number: OffsetDateTime morning = night.WithOffset(Offset.FromHours(18));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_TwoDaysForwardAndBack,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 6' 0' 0)' morning.LocalDateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_TwoDaysForwardAndBack,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 6' 0' 0)' morning.LocalDateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_TwoDaysForwardAndBack,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 6' 0' 0)' morning.LocalDateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_TwoDaysForwardAndBack,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 6' 0' 0)' morning.LocalDateTime);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithOffset_TwoDaysForwardAndBack,The following statement contains a magic number: OffsetDateTime backAgain = morning.WithOffset(Offset.FromHours(-18));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithCalendar,The following statement contains a magic number: OffsetDateTime expected = new LocalDate(1969' 12' 19' julianCalendar).AtMidnight().WithOffset(Offset.FromHours(0));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithCalendar,The following statement contains a magic number: OffsetDateTime expected = new LocalDate(1969' 12' 19' julianCalendar).AtMidnight().WithOffset(Offset.FromHours(0));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,WithCalendar,The following statement contains a magic number: OffsetDateTime expected = new LocalDate(1969' 12' 19' julianCalendar).AtMidnight().WithOffset(Offset.FromHours(0));
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: Offset offset = Offset.FromHoursAndMinutes(2' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: Offset offset = Offset.FromHoursAndMinutes(2' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 6' 27' 12' 15' 8).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 6' 27' 12' 15' 8).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 6' 27' 12' 15' 8).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 6' 27' 12' 15' 8).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 6' 27' 12' 15' 8).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_TimeAdjuster,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 6' 27' 12' 15' 8).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: Offset offset = Offset.FromHoursAndMinutes(2' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: Offset offset = Offset.FromHoursAndMinutes(2' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2014' 6' 27' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,With_DateAdjuster,The following statement contains a magic number: OffsetDateTime expected = new LocalDateTime(2014' 6' 30' 12' 5' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InZone,The following statement contains a magic number: Offset offset = Offset.FromHours(-7);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InZone,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2017' 10' 31' 18' 12' 0).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InZone,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2017' 10' 31' 18' 12' 0).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InZone,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2017' 10' 31' 18' 12' 0).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InZone,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2017' 10' 31' 18' 12' 0).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InZone,The following statement contains a magic number: OffsetDateTime start = new LocalDateTime(2017' 10' 31' 18' 12' 0).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InZone,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2017' 11' 1' 1' 12' 0).WithOffset(Offset.Zero)' zone);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InZone,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2017' 11' 1' 1' 12' 0).WithOffset(Offset.Zero)' zone);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,InZone,The following statement contains a magic number: var expected = new ZonedDateTime(new LocalDateTime(2017' 11' 1' 1' 12' 0).WithOffset(Offset.Zero)' zone);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var dateTime = new LocalDateTime(2017' 10' 15' 21' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var dateTime = new LocalDateTime(2017' 10' 15' 21' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var dateTime = new LocalDateTime(2017' 10' 15' 21' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var dateTime = new LocalDateTime(2017' 10' 15' 21' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var dateTime = new LocalDateTime(2017' 10' 15' 21' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var offset = Offset.FromHours(-2);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,MoreGranularDeconstruction,The following statement contains a magic number: var date = new LocalDate(2017' 10' 15);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,MoreGranularDeconstruction,The following statement contains a magic number: var date = new LocalDate(2017' 10' 15);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,MoreGranularDeconstruction,The following statement contains a magic number: var date = new LocalDate(2017' 10' 15);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,MoreGranularDeconstruction,The following statement contains a magic number: var time = new LocalTime(21' 30' 15);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,MoreGranularDeconstruction,The following statement contains a magic number: var time = new LocalTime(21' 30' 15);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,MoreGranularDeconstruction,The following statement contains a magic number: var time = new LocalTime(21' 30' 15);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,MoreGranularDeconstruction,The following statement contains a magic number: var offset = Offset.FromHours(-2);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetDate,The following statement contains a magic number: var offset = Offset.FromHoursAndMinutes(2' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetDate,The following statement contains a magic number: var offset = Offset.FromHoursAndMinutes(2' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetDate,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetDate,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetDate,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetDate,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetDate,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetDate,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetDate,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetDate,The following statement contains a magic number: var expected = new OffsetDate(new LocalDate(2014' 6' 27)' offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetDate,The following statement contains a magic number: var expected = new OffsetDate(new LocalDate(2014' 6' 27)' offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetDate,The following statement contains a magic number: var expected = new OffsetDate(new LocalDate(2014' 6' 27)' offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetTime,The following statement contains a magic number: var offset = Offset.FromHoursAndMinutes(2' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetTime,The following statement contains a magic number: var offset = Offset.FromHoursAndMinutes(2' 30);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetTime,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetTime,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetTime,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetTime,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetTime,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetTime,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetTime,The following statement contains a magic number: var odt = new LocalDateTime(2014' 6' 27' 12' 15' 8).PlusNanoseconds(123456789).WithOffset(offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetTime,The following statement contains a magic number: var expected = new OffsetTime(new LocalTime(12' 15' 8).PlusNanoseconds(123456789)' offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetTime,The following statement contains a magic number: var expected = new OffsetTime(new LocalTime(12' 15' 8).PlusNanoseconds(123456789)' offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetTime,The following statement contains a magic number: var expected = new OffsetTime(new LocalTime(12' 15' 8).PlusNanoseconds(123456789)' offset);
Magic Number,NodaTime.Test,OffsetDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetDateTimeTest.cs,ToOffsetTime,The following statement contains a magic number: var expected = new OffsetTime(new LocalTime(12' 15' 8).PlusNanoseconds(123456789)' offset);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromSeconds_Valid,The following statement contains a magic number: var test = Offset.FromSeconds(12345);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromSeconds_Valid,The following statement contains a magic number: Assert.AreEqual(12345' test.Seconds);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromSeconds_Invalid,The following statement contains a magic number: int seconds = 18 * NodaConstants.SecondsPerHour + 1;
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromMilliseconds_Valid,The following statement contains a magic number: Offset value = Offset.FromMilliseconds(-15 * NodaConstants.MillisecondsPerMinute);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromMilliseconds_Valid,The following statement contains a magic number: Assert.AreEqual(-15 * NodaConstants.SecondsPerMinute' value.Seconds);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromMilliseconds_Valid,The following statement contains a magic number: Assert.AreEqual(-15 * NodaConstants.MillisecondsPerMinute' value.Milliseconds);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromMilliseconds_Invalid,The following statement contains a magic number: int millis = 18 * NodaConstants.MillisecondsPerHour + 1;
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromTicks_Valid,The following statement contains a magic number: Offset value = Offset.FromTicks(-15 * NodaConstants.TicksPerMinute);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromTicks_Valid,The following statement contains a magic number: Assert.AreEqual(-15 * NodaConstants.SecondsPerMinute' value.Seconds);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromTicks_Valid,The following statement contains a magic number: Assert.AreEqual(-15 * NodaConstants.TicksPerMinute' value.Ticks);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromTicks_Invalid,The following statement contains a magic number: long ticks = 18 * NodaConstants.TicksPerHour + 1;
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromNanoseconds_Valid,The following statement contains a magic number: Offset value = Offset.FromNanoseconds(-15 * NodaConstants.NanosecondsPerMinute);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromNanoseconds_Valid,The following statement contains a magic number: Assert.AreEqual(-15 * NodaConstants.SecondsPerMinute' value.Seconds);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromNanoseconds_Valid,The following statement contains a magic number: Assert.AreEqual(-15 * NodaConstants.NanosecondsPerMinute' value.Nanoseconds);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromNanoseconds_Invalid,The following statement contains a magic number: long nanos = 18 * NodaConstants.NanosecondsPerHour + 1;
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromHours_Valid,The following statement contains a magic number: Offset value = Offset.FromHours(-15);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromHours_Valid,The following statement contains a magic number: Assert.AreEqual(-15 * NodaConstants.SecondsPerHour' value.Seconds);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromHours_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Offset.FromHours(19));
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromHours_Invalid,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Offset.FromHours(-19));
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromHoursAndMinutes_Valid,The following statement contains a magic number: Offset value = Offset.FromHoursAndMinutes(5' 30);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromHoursAndMinutes_Valid,The following statement contains a magic number: Offset value = Offset.FromHoursAndMinutes(5' 30);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromHoursAndMinutes_Valid,The following statement contains a magic number: Assert.AreEqual(5 * NodaConstants.SecondsPerHour + 30 * NodaConstants.SecondsPerMinute' value.Seconds);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromHoursAndMinutes_Valid,The following statement contains a magic number: Assert.AreEqual(5 * NodaConstants.SecondsPerHour + 30 * NodaConstants.SecondsPerMinute' value.Seconds);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Max,The following statement contains a magic number: Offset x = Offset.FromSeconds(100);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Max,The following statement contains a magic number: Offset y = Offset.FromSeconds(200);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Min,The following statement contains a magic number: Offset x = Offset.FromSeconds(100);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Min,The following statement contains a magic number: Offset y = Offset.FromSeconds(200);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,ToTimeSpan,The following statement contains a magic number: TimeSpan ts = Offset.FromSeconds(1234).ToTimeSpan();
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,ToTimeSpan,The following statement contains a magic number: Assert.AreEqual(ts' TimeSpan.FromSeconds(1234));
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromTimeSpan_Truncation,The following statement contains a magic number: TimeSpan ts = TimeSpan.FromMilliseconds(1000 + 200);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromTimeSpan_Truncation,The following statement contains a magic number: TimeSpan ts = TimeSpan.FromMilliseconds(1000 + 200);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromTimeSpan_Simple,The following statement contains a magic number: TimeSpan ts = TimeSpan.FromHours(2);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,FromTimeSpan_Simple,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(2)' Offset.FromTimeSpan(ts));
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,XmlSerialization,The following statement contains a magic number: var value = Offset.FromHoursAndMinutes(5' 30);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,XmlSerialization,The following statement contains a magic number: var value = Offset.FromHoursAndMinutes(5' 30);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,IEquatableIComparable_Tests,The following statement contains a magic number: var value = Offset.FromSeconds(12345);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,IEquatableIComparable_Tests,The following statement contains a magic number: var equalValue = Offset.FromSeconds(12345);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,IEquatableIComparable_Tests,The following statement contains a magic number: var greaterValue = Offset.FromSeconds(54321);
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,UnaryPlusOperator,The following statement contains a magic number: Assert.AreEqual(Offset.FromSeconds(-7)' + Offset.FromSeconds(-7)' "+ (-7)");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,UnaryPlusOperator,The following statement contains a magic number: Assert.AreEqual(Offset.FromSeconds(-7)' + Offset.FromSeconds(-7)' "+ (-7)");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,NegateOperator,The following statement contains a magic number: Assert.AreEqual(Offset.FromSeconds(7)' -Offset.FromSeconds(-7)' "- (-7)");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,NegateOperator,The following statement contains a magic number: Assert.AreEqual(Offset.FromSeconds(7)' -Offset.FromSeconds(-7)' "- (-7)");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,NegateMethod,The following statement contains a magic number: Assert.AreEqual(Offset.FromSeconds(7)' Offset.Negate(Offset.FromSeconds(-7))' "- (-7)");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,NegateMethod,The following statement contains a magic number: Assert.AreEqual(Offset.FromSeconds(7)' Offset.Negate(Offset.FromSeconds(-7))' "- (-7)");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,OperatorPlus_Zero_IsNeutralElement,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(3' 0' 0)' ThreeHours + Offset.Zero' "ThreeHours + 0");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,OperatorPlus_Zero_IsNeutralElement,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(3' 0' 0)' Offset.Zero + ThreeHours' "0 + ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,OperatorPlus_NonZero,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(6' 0' 0)' ThreeHours + ThreeHours' "ThreeHours + ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,OperatorPlus_NonZero,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreateNegativeOffset(9' 0' 0)' NegativeTwelveHours + ThreeHours' "-TwelveHours + ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,MethodAdd_Zero_IsNeutralElement,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(3' 0' 0)' Offset.Add(ThreeHours' Offset.Zero)' "ThreeHours + 0");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,MethodAdd_Zero_IsNeutralElement,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(3' 0' 0)' Offset.Add(Offset.Zero' ThreeHours)' "0 + ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,MethodAdd_NonZero,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(6' 0' 0)' Offset.Add(ThreeHours' ThreeHours)' "ThreeHours + ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,MethodAdd_NonZero,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreateNegativeOffset(9' 0' 0)' Offset.Add(NegativeTwelveHours' ThreeHours)' "-TwelveHours + ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,MethodPlus_Zero_IsNeutralElement,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(3' 0' 0)' ThreeHours.Plus(Offset.Zero)' "ThreeHours + 0");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,MethodPlus_Zero_IsNeutralElement,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(3' 0' 0)' Offset.Zero.Plus(ThreeHours)' "0 + ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,MethodPlus_NonZero,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(6' 0' 0)' ThreeHours.Plus(ThreeHours)' "ThreeHours + ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,MethodPlus_NonZero,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreateNegativeOffset(9' 0' 0)' NegativeTwelveHours.Plus(ThreeHours)' "-TwelveHours + ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,OperatorMinus_Zero_IsNeutralElement,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(3' 0' 0)' ThreeHours - Offset.Zero' "ThreeHours - 0");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,OperatorMinus_Zero_IsNeutralElement,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreateNegativeOffset(3' 0' 0)' Offset.Zero - ThreeHours' "0 - ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,OperatorMinus_NonZero,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(6' 0' 0)' ThreeHours - NegativeThreeHours' "ThreeHours - (-ThreeHours)");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,OperatorMinus_NonZero,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreateNegativeOffset(15' 0' 0)' NegativeTwelveHours - ThreeHours' "-TwelveHours - ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Subtract_Zero_IsNeutralElement,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(3' 0' 0)' Offset.Subtract(ThreeHours' Offset.Zero)' "ThreeHours - 0");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Subtract_Zero_IsNeutralElement,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreateNegativeOffset(3' 0' 0)' Offset.Subtract(Offset.Zero' ThreeHours)' "0 - ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Subtract_NonZero,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(6' 0' 0)' Offset.Subtract(ThreeHours' NegativeThreeHours)' "ThreeHours - (-ThreeHours)");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Subtract_NonZero,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreateNegativeOffset(15' 0' 0)' Offset.Subtract(NegativeTwelveHours' ThreeHours)' "-TwelveHours - ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Minus_Zero_IsNeutralElement,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(3' 0' 0)' ThreeHours.Minus(Offset.Zero)' "ThreeHours - 0");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Minus_Zero_IsNeutralElement,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreateNegativeOffset(3' 0' 0)' Offset.Zero.Minus(ThreeHours)' "0 - ThreeHours");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Minus_NonZero,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreatePositiveOffset(6' 0' 0)' ThreeHours.Minus(NegativeThreeHours)' "ThreeHours - (-ThreeHours)");
Magic Number,NodaTime.Test,OffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTest.Construction.cs,Minus_NonZero,The following statement contains a magic number: Assert.AreEqual(TestObjects.CreateNegativeOffset(15' 0' 0)' NegativeTwelveHours.Minus(ThreeHours)' "-TwelveHours - ThreeHours");
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,LocalTimeProperties,The following statement contains a magic number: LocalTime local = new LocalTime(5' 23' 45).PlusNanoseconds(987654321);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,LocalTimeProperties,The following statement contains a magic number: LocalTime local = new LocalTime(5' 23' 45).PlusNanoseconds(987654321);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,LocalTimeProperties,The following statement contains a magic number: LocalTime local = new LocalTime(5' 23' 45).PlusNanoseconds(987654321);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,LocalTimeProperties,The following statement contains a magic number: LocalTime local = new LocalTime(5' 23' 45).PlusNanoseconds(987654321);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,LocalTimeProperties,The following statement contains a magic number: Offset offset = Offset.FromHours(5);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ComponentProperties,The following statement contains a magic number: var time = new LocalTime(12' 34' 15);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ComponentProperties,The following statement contains a magic number: var time = new LocalTime(12' 34' 15);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ComponentProperties,The following statement contains a magic number: var time = new LocalTime(12' 34' 15);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ComponentProperties,The following statement contains a magic number: var offset = Offset.FromHours(5);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,Equality,The following statement contains a magic number: LocalTime time1 = new LocalTime(4' 56' 23' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,Equality,The following statement contains a magic number: LocalTime time1 = new LocalTime(4' 56' 23' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,Equality,The following statement contains a magic number: LocalTime time1 = new LocalTime(4' 56' 23' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,Equality,The following statement contains a magic number: LocalTime time1 = new LocalTime(4' 56' 23' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,Equality,The following statement contains a magic number: LocalTime time2 = new LocalTime(6' 23' 12' 987);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,Equality,The following statement contains a magic number: LocalTime time2 = new LocalTime(6' 23' 12' 987);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,Equality,The following statement contains a magic number: LocalTime time2 = new LocalTime(6' 23' 12' 987);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,Equality,The following statement contains a magic number: LocalTime time2 = new LocalTime(6' 23' 12' 987);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,Equality,The following statement contains a magic number: Offset offset2 = Offset.FromHours(2);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,On,The following statement contains a magic number: var time = new LocalTime(14' 15' 12).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,On,The following statement contains a magic number: var time = new LocalTime(14' 15' 12).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,On,The following statement contains a magic number: var time = new LocalTime(14' 15' 12).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,On,The following statement contains a magic number: var time = new LocalTime(14' 15' 12).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,On,The following statement contains a magic number: var date = new LocalDate(2012' 6' 19' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,On,The following statement contains a magic number: var date = new LocalDate(2012' 6' 19' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,On,The following statement contains a magic number: var date = new LocalDate(2012' 6' 19' CalendarSystem.Julian);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,On,The following statement contains a magic number: var offset = Offset.FromHours(5);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,WithOffset,The following statement contains a magic number: var time = new LocalTime(14' 15' 12).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,WithOffset,The following statement contains a magic number: var time = new LocalTime(14' 15' 12).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,WithOffset,The following statement contains a magic number: var time = new LocalTime(14' 15' 12).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,WithOffset,The following statement contains a magic number: var time = new LocalTime(14' 15' 12).PlusNanoseconds(123456789);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,WithOffset,The following statement contains a magic number: var initial = new OffsetTime(time' Offset.FromHours(2));
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,WithOffset,The following statement contains a magic number: var actual = initial.WithOffset(Offset.FromHours(5));
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,WithOffset,The following statement contains a magic number: var expected = new OffsetTime(time' Offset.FromHours(5));
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,WithAdjuster,The following statement contains a magic number: var initial = new OffsetTime(new LocalTime(14' 15' 12)' Offset.FromHours(-5));
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,WithAdjuster,The following statement contains a magic number: var initial = new OffsetTime(new LocalTime(14' 15' 12)' Offset.FromHours(-5));
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,WithAdjuster,The following statement contains a magic number: var initial = new OffsetTime(new LocalTime(14' 15' 12)' Offset.FromHours(-5));
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,WithAdjuster,The following statement contains a magic number: var initial = new OffsetTime(new LocalTime(14' 15' 12)' Offset.FromHours(-5));
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,WithAdjuster,The following statement contains a magic number: var expected = new OffsetTime(new LocalTime(14' 0)' Offset.FromHours(-5));
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,WithAdjuster,The following statement contains a magic number: var expected = new OffsetTime(new LocalTime(14' 0)' Offset.FromHours(-5));
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ToString_WithFormat,The following statement contains a magic number: LocalTime time = new LocalTime(14' 15' 12' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ToString_WithFormat,The following statement contains a magic number: LocalTime time = new LocalTime(14' 15' 12' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ToString_WithFormat,The following statement contains a magic number: LocalTime time = new LocalTime(14' 15' 12' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ToString_WithFormat,The following statement contains a magic number: LocalTime time = new LocalTime(14' 15' 12' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ToString_WithNullFormat,The following statement contains a magic number: LocalTime time = new LocalTime(14' 15' 12' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ToString_WithNullFormat,The following statement contains a magic number: LocalTime time = new LocalTime(14' 15' 12' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ToString_WithNullFormat,The following statement contains a magic number: LocalTime time = new LocalTime(14' 15' 12' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ToString_WithNullFormat,The following statement contains a magic number: LocalTime time = new LocalTime(14' 15' 12' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ToString_NoFormat,The following statement contains a magic number: LocalTime time = new LocalTime(14' 15' 12' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ToString_NoFormat,The following statement contains a magic number: LocalTime time = new LocalTime(14' 15' 12' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ToString_NoFormat,The following statement contains a magic number: LocalTime time = new LocalTime(14' 15' 12' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,ToString_NoFormat,The following statement contains a magic number: LocalTime time = new LocalTime(14' 15' 12' 123);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,Deconstruction,The following statement contains a magic number: var time = new LocalTime(15' 33);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,Deconstruction,The following statement contains a magic number: var time = new LocalTime(15' 33);
Magic Number,NodaTime.Test,OffsetTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\OffsetTimeTest.cs,Deconstruction,The following statement contains a magic number: var offset = Offset.FromHours(-2);
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: var builder = new PeriodBuilder              {                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8'                  Nanoseconds = 9              };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: var builder = new PeriodBuilder              {                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8'                  Nanoseconds = 9              };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: var builder = new PeriodBuilder              {                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8'                  Nanoseconds = 9              };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: var builder = new PeriodBuilder              {                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8'                  Nanoseconds = 9              };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: var builder = new PeriodBuilder              {                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8'                  Nanoseconds = 9              };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: var builder = new PeriodBuilder              {                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8'                  Nanoseconds = 9              };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: var builder = new PeriodBuilder              {                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8'                  Nanoseconds = 9              };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: var builder = new PeriodBuilder              {                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8'                  Nanoseconds = 9              };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: Assert.AreEqual(2' builder[PeriodUnits.Weeks]);
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: Assert.AreEqual(3' builder[PeriodUnits.Days]);
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: Assert.AreEqual(4L' builder[PeriodUnits.Hours]);
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: Assert.AreEqual(5L' builder[PeriodUnits.Minutes]);
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: Assert.AreEqual(6L' builder[PeriodUnits.Seconds]);
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: Assert.AreEqual(7L' builder[PeriodUnits.Milliseconds]);
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: Assert.AreEqual(8L' builder[PeriodUnits.Ticks]);
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Getter_ValidUnits,The following statement contains a magic number: Assert.AreEqual(9L' builder[PeriodUnits.Nanoseconds]);
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: builder[PeriodUnits.Weeks] = 2;
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: builder[PeriodUnits.Days] = 3;
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: builder[PeriodUnits.Hours] = 4;
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: builder[PeriodUnits.Minutes] = 5;
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: builder[PeriodUnits.Seconds] = 6;
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: builder[PeriodUnits.Milliseconds] = 7;
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: builder[PeriodUnits.Ticks] = 8;
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: var expected = new PeriodBuilder              {                  Years = 0'                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8              }.Build();
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: var expected = new PeriodBuilder              {                  Years = 0'                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8              }.Build();
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: var expected = new PeriodBuilder              {                  Years = 0'                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8              }.Build();
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: var expected = new PeriodBuilder              {                  Years = 0'                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8              }.Build();
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: var expected = new PeriodBuilder              {                  Years = 0'                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8              }.Build();
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: var expected = new PeriodBuilder              {                  Years = 0'                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8              }.Build();
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Indexer_Setter_ValidUnits,The following statement contains a magic number: var expected = new PeriodBuilder              {                  Years = 0'                  Months = 1'                  Weeks = 2'                  Days = 3'                  Hours = 4'                  Minutes = 5'                  Seconds = 6'                  Milliseconds = 7'                  Ticks = 8              }.Build();
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Build_SingleUnit,The following statement contains a magic number: Period period = new PeriodBuilder { Hours = 10 }.Build();
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Build_SingleUnit,The following statement contains a magic number: Period expected = Period.FromHours(10);
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Build_MultipleUnits,The following statement contains a magic number: Period period = new PeriodBuilder { Days = 5' Minutes = -10 }.Build();
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Build_MultipleUnits,The following statement contains a magic number: Period period = new PeriodBuilder { Days = 5' Minutes = -10 }.Build();
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Build_MultipleUnits,The following statement contains a magic number: Period expected = Period.FromDays(5) + Period.FromMinutes(-10);
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,Build_MultipleUnits,The following statement contains a magic number: Period expected = Period.FromDays(5) + Period.FromMinutes(-10);
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,XmlSerialization,The following statement contains a magic number: var value = new PeriodBuilder { Years = 10' Days = 5' Hours = 3' Seconds = 20 };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,XmlSerialization,The following statement contains a magic number: var value = new PeriodBuilder { Years = 10' Days = 5' Hours = 3' Seconds = 20 };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,XmlSerialization,The following statement contains a magic number: var value = new PeriodBuilder { Years = 10' Days = 5' Hours = 3' Seconds = 20 };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,XmlSerialization,The following statement contains a magic number: var value = new PeriodBuilder { Years = 10' Days = 5' Hours = 3' Seconds = 20 };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,XmlSerialization,The following statement contains a magic number: var dateOnly = new PeriodBuilder { Years = 10' Days = 5 };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,XmlSerialization,The following statement contains a magic number: var dateOnly = new PeriodBuilder { Years = 10' Days = 5 };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,XmlSerialization,The following statement contains a magic number: var timeOnly = new PeriodBuilder { Hours = 5' Minutes = 1 };
Magic Number,NodaTime.Test,PeriodBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodBuilderTest.cs,XmlSerialization_ExpectedUse,The following statement contains a magic number: var demo = new XmlSerializationDemo { Period = Period.FromMinutes(5) };
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_WithoutSpecifyingUnits_OmitsWeeks,The following statement contains a magic number: Period actual = Period.Between(new LocalDateTime(2012' 2' 21' 0' 0)' new LocalDateTime(2012' 2' 28' 0' 0));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_WithoutSpecifyingUnits_OmitsWeeks,The following statement contains a magic number: Period actual = Period.Between(new LocalDateTime(2012' 2' 21' 0' 0)' new LocalDateTime(2012' 2' 28' 0' 0));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_WithoutSpecifyingUnits_OmitsWeeks,The following statement contains a magic number: Period actual = Period.Between(new LocalDateTime(2012' 2' 21' 0' 0)' new LocalDateTime(2012' 2' 28' 0' 0));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_WithoutSpecifyingUnits_OmitsWeeks,The following statement contains a magic number: Period actual = Period.Between(new LocalDateTime(2012' 2' 21' 0' 0)' new LocalDateTime(2012' 2' 28' 0' 0));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_WithoutSpecifyingUnits_OmitsWeeks,The following statement contains a magic number: Period actual = Period.Between(new LocalDateTime(2012' 2' 21' 0' 0)' new LocalDateTime(2012' 2' 28' 0' 0));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_WithoutSpecifyingUnits_OmitsWeeks,The following statement contains a magic number: Period actual = Period.Between(new LocalDateTime(2012' 2' 21' 0' 0)' new LocalDateTime(2012' 2' 28' 0' 0));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_WithoutSpecifyingUnits_OmitsWeeks,The following statement contains a magic number: Period expected = Period.FromDays(7);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_MovingForwardWithAllFields_GivesExactResult,The following statement contains a magic number: Period expected = Period.FromHours(2) + Period.FromMinutes(14) + Period.FromSeconds(55);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_MovingForwardWithAllFields_GivesExactResult,The following statement contains a magic number: Period expected = Period.FromHours(2) + Period.FromMinutes(14) + Period.FromSeconds(55);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_MovingForwardWithAllFields_GivesExactResult,The following statement contains a magic number: Period expected = Period.FromHours(2) + Period.FromMinutes(14) + Period.FromSeconds(55);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_MovingBackwardWithAllFields_GivesExactResult,The following statement contains a magic number: Period expected = Period.FromHours(-2) + Period.FromMinutes(-14) + Period.FromSeconds(-55);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_MovingBackwardWithAllFields_GivesExactResult,The following statement contains a magic number: Period expected = Period.FromHours(-2) + Period.FromMinutes(-14) + Period.FromSeconds(-55);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_MovingBackwardWithAllFields_GivesExactResult,The following statement contains a magic number: Period expected = Period.FromHours(-2) + Period.FromMinutes(-14) + Period.FromSeconds(-55);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_MovingForwardWithHoursAndMinutes_RoundsTowardsStart,The following statement contains a magic number: Period expected = Period.FromHours(2) + Period.FromMinutes(14);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_MovingForwardWithHoursAndMinutes_RoundsTowardsStart,The following statement contains a magic number: Period expected = Period.FromHours(2) + Period.FromMinutes(14);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_MovingBackwardWithHoursAndMinutes_RoundsTowardsStart,The following statement contains a magic number: Period expected = Period.FromHours(-2) + Period.FromMinutes(-14);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_MovingBackwardWithHoursAndMinutes_RoundsTowardsStart,The following statement contains a magic number: Period expected = Period.FromHours(-2) + Period.FromMinutes(-14);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_AcrossDays,The following statement contains a magic number: Period expected = Period.FromHours(23) + Period.FromMinutes(59);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_AcrossDays,The following statement contains a magic number: Period expected = Period.FromHours(23) + Period.FromMinutes(59);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_AcrossDays_MinutesAndSeconds,The following statement contains a magic number: Period expected = Period.FromMinutes(24 * 60 - 1) + Period.FromSeconds(59);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_AcrossDays_MinutesAndSeconds,The following statement contains a magic number: Period expected = Period.FromMinutes(24 * 60 - 1) + Period.FromSeconds(59);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_AcrossDays_MinutesAndSeconds,The following statement contains a magic number: Period expected = Period.FromMinutes(24 * 60 - 1) + Period.FromSeconds(59);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_NotInt64Representable,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(-5000' 1' 1' 0' 1' 2' 123);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_NotInt64Representable,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(-5000' 1' 1' 0' 1' 2' 123);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_NotInt64Representable,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(-5000' 1' 1' 0' 1' 2' 123);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_NotInt64Representable,The following statement contains a magic number: LocalDateTime end = new LocalDateTime(   9000' 1' 1' 1' 2' 3' 456);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_NotInt64Representable,The following statement contains a magic number: LocalDateTime end = new LocalDateTime(   9000' 1' 1' 1' 2' 3' 456);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_NotInt64Representable,The following statement contains a magic number: LocalDateTime end = new LocalDateTime(   9000' 1' 1' 1' 2' 3' 456);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_NotInt64Representable,The following statement contains a magic number: LocalDateTime end = new LocalDateTime(   9000' 1' 1' 1' 2' 3' 456);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_NotInt64Representable,The following statement contains a magic number: Period expected = new PeriodBuilder              {                  // 365.2425 * 14000 = 5113395                  Hours = 5113395L * 24 + 1'                  Minutes = 1'                  Seconds = 1'                  Milliseconds = 333              }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_NotInt64Representable,The following statement contains a magic number: Period expected = new PeriodBuilder              {                  // 365.2425 * 14000 = 5113395                  Hours = 5113395L * 24 + 1'                  Minutes = 1'                  Seconds = 1'                  Milliseconds = 333              }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_NotInt64Representable,The following statement contains a magic number: Period expected = new PeriodBuilder              {                  // 365.2425 * 14000 = 5113395                  Hours = 5113395L * 24 + 1'                  Minutes = 1'                  Seconds = 1'                  Milliseconds = 333              }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_DifferentCalendarSystems_Throws,The following statement contains a magic number: LocalDate start = new LocalDate(2017' 11' 1' CalendarSystem.Coptic);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_DifferentCalendarSystems_Throws,The following statement contains a magic number: LocalDate start = new LocalDate(2017' 11' 1' CalendarSystem.Coptic);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_DifferentCalendarSystems_Throws,The following statement contains a magic number: LocalDate end = new LocalDate(2017' 11' 5' CalendarSystem.Gregorian);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_DifferentCalendarSystems_Throws,The following statement contains a magic number: LocalDate end = new LocalDate(2017' 11' 5' CalendarSystem.Gregorian);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_DifferentCalendarSystems_Throws,The following statement contains a magic number: LocalDate end = new LocalDate(2017' 11' 5' CalendarSystem.Gregorian);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_MovingForwardNoLeapYears_WithExactResults,The following statement contains a magic number: Period expected = Period.FromMonths(8) + Period.FromDays(10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_MovingForwardNoLeapYears_WithExactResults,The following statement contains a magic number: Period expected = Period.FromMonths(8) + Period.FromDays(10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_MovingForwardInLeapYear_WithExactResults,The following statement contains a magic number: Period expected = Period.FromYears(1) + Period.FromMonths(8) + Period.FromDays(11);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_MovingForwardInLeapYear_WithExactResults,The following statement contains a magic number: Period expected = Period.FromYears(1) + Period.FromMonths(8) + Period.FromDays(11);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_MovingBackwardNoLeapYears_WithExactResults,The following statement contains a magic number: Period expected = Period.FromMonths(-8) + Period.FromDays(-12);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_MovingBackwardNoLeapYears_WithExactResults,The following statement contains a magic number: Period expected = Period.FromMonths(-8) + Period.FromDays(-12);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_MovingBackwardInLeapYear_WithExactResults,The following statement contains a magic number: Period expected = Period.FromYears(-1) + Period.FromMonths(-8) + Period.FromDays(-12);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_MovingBackwardInLeapYear_WithExactResults,The following statement contains a magic number: Period expected = Period.FromYears(-1) + Period.FromMonths(-8) + Period.FromDays(-12);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_MovingForward_WithJustMonths,The following statement contains a magic number: Period expected = Period.FromMonths(20);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_MovingBackward_WithJustMonths,The following statement contains a magic number: Period expected = Period.FromMonths(-20);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AssymetricForwardAndBackward,The following statement contains a magic number: LocalDate d1 = new LocalDate(2010' 2' 10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AssymetricForwardAndBackward,The following statement contains a magic number: LocalDate d1 = new LocalDate(2010' 2' 10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AssymetricForwardAndBackward,The following statement contains a magic number: LocalDate d1 = new LocalDate(2010' 2' 10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AssymetricForwardAndBackward,The following statement contains a magic number: LocalDate d2 = new LocalDate(2010' 3' 30);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AssymetricForwardAndBackward,The following statement contains a magic number: LocalDate d2 = new LocalDate(2010' 3' 30);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AssymetricForwardAndBackward,The following statement contains a magic number: LocalDate d2 = new LocalDate(2010' 3' 30);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AssymetricForwardAndBackward,The following statement contains a magic number: Assert.AreEqual(Period.FromMonths(1) + Period.FromDays(20)' Period.Between(d1' d2));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AssymetricForwardAndBackward,The following statement contains a magic number: Assert.AreEqual(Period.FromMonths(-1) + Period.FromDays(-18)' Period.Between(d2' d1));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_EndOfMonth,The following statement contains a magic number: LocalDate d1 = new LocalDate(2013' 3' 31);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_EndOfMonth,The following statement contains a magic number: LocalDate d1 = new LocalDate(2013' 3' 31);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_EndOfMonth,The following statement contains a magic number: LocalDate d1 = new LocalDate(2013' 3' 31);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_EndOfMonth,The following statement contains a magic number: LocalDate d2 = new LocalDate(2013' 4' 30);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_EndOfMonth,The following statement contains a magic number: LocalDate d2 = new LocalDate(2013' 4' 30);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_EndOfMonth,The following statement contains a magic number: LocalDate d2 = new LocalDate(2013' 4' 30);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_EndOfMonth,The following statement contains a magic number: Assert.AreEqual(Period.FromDays(-30)' Period.Between(d2' d1));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: LocalDate d1 = new LocalDate(2012' 2' 29);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: LocalDate d1 = new LocalDate(2012' 2' 29);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: LocalDate d1 = new LocalDate(2012' 2' 29);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: LocalDate d2 = new LocalDate(2013' 2' 28);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: LocalDate d2 = new LocalDate(2013' 2' 28);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: LocalDate d2 = new LocalDate(2013' 2' 28);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: Assert.AreEqual(Period.FromMonths(-11) + Period.FromDays(-28)' Period.Between(d2' d1));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: Assert.AreEqual(Period.FromMonths(-11) + Period.FromDays(-28)' Period.Between(d2' d1));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AfterLeapYear,The following statement contains a magic number: LocalDate d1 = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AfterLeapYear,The following statement contains a magic number: LocalDate d1 = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AfterLeapYear,The following statement contains a magic number: LocalDate d1 = new LocalDate(2012' 3' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AfterLeapYear,The following statement contains a magic number: LocalDate d2 = new LocalDate(2013' 3' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AfterLeapYear,The following statement contains a magic number: LocalDate d2 = new LocalDate(2013' 3' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDates_AfterLeapYear,The following statement contains a magic number: LocalDate d2 = new LocalDate(2013' 3' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYear,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2012' 2' 29' 2' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYear,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2012' 2' 29' 2' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYear,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2012' 2' 29' 2' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYear,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2012' 2' 29' 2' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYear,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2012' 2' 29' 4' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYear,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2012' 2' 29' 4' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYear,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2012' 2' 29' 4' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYear,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2012' 2' 29' 4' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYear,The following statement contains a magic number: LocalDateTime dt3 = new LocalDateTime(2013' 2' 28' 3' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYear,The following statement contains a magic number: LocalDateTime dt3 = new LocalDateTime(2013' 2' 28' 3' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYear,The following statement contains a magic number: LocalDateTime dt3 = new LocalDateTime(2013' 2' 28' 3' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYear,The following statement contains a magic number: LocalDateTime dt3 = new LocalDateTime(2013' 2' 28' 3' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: Assert.IsTrue(calendar.IsLeapYear(2));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: Assert.IsFalse(calendar.IsLeapYear(3));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2' 12' 30' 4' 0' calendar);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2' 12' 30' 4' 0' calendar);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2' 12' 30' 4' 0' calendar);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2' 12' 30' 4' 0' calendar);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: LocalDateTime dt3 = new LocalDateTime(3' 12' 29' 3' 0' calendar);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: LocalDateTime dt3 = new LocalDateTime(3' 12' 29' 3' 0' calendar);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: LocalDateTime dt3 = new LocalDateTime(3' 12' 29' 3' 0' calendar);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalDateTimes_OnLeapYearIslamic,The following statement contains a magic number: LocalDateTime dt3 = new LocalDateTime(3' 12' 29' 3' 0' calendar);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_InvalidUnits,The following statement contains a magic number: LocalTime t1 = new LocalTime(10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_InvalidUnits,The following statement contains a magic number: LocalTime t2 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_InvalidUnits,The following statement contains a magic number: LocalTime t2 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_InvalidUnits,The following statement contains a magic number: LocalTime t2 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_InvalidUnits,The following statement contains a magic number: LocalTime t2 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_InvalidUnits,The following statement contains a magic number: LocalTime t2 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards,The following statement contains a magic number: LocalTime t1 = new LocalTime(10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards,The following statement contains a magic number: LocalTime t2 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards,The following statement contains a magic number: LocalTime t2 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards,The following statement contains a magic number: LocalTime t2 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards,The following statement contains a magic number: LocalTime t2 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards,The following statement contains a magic number: LocalTime t2 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(5) + Period.FromMinutes(30) + Period.FromSeconds(45) +                                 Period.FromMilliseconds(20) + Period.FromTicks(5)'                                 Period.Between(t1' t2));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(5) + Period.FromMinutes(30) + Period.FromSeconds(45) +                                 Period.FromMilliseconds(20) + Period.FromTicks(5)'                                 Period.Between(t1' t2));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(5) + Period.FromMinutes(30) + Period.FromSeconds(45) +                                 Period.FromMilliseconds(20) + Period.FromTicks(5)'                                 Period.Between(t1' t2));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(5) + Period.FromMinutes(30) + Period.FromSeconds(45) +                                 Period.FromMilliseconds(20) + Period.FromTicks(5)'                                 Period.Between(t1' t2));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(5) + Period.FromMinutes(30) + Period.FromSeconds(45) +                                 Period.FromMilliseconds(20) + Period.FromTicks(5)'                                 Period.Between(t1' t2));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards,The following statement contains a magic number: LocalTime t1 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards,The following statement contains a magic number: LocalTime t1 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards,The following statement contains a magic number: LocalTime t1 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards,The following statement contains a magic number: LocalTime t1 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards,The following statement contains a magic number: LocalTime t1 = LocalTime.FromHourMinuteSecondMillisecondTick(15' 30' 45' 20' 5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards,The following statement contains a magic number: LocalTime t2 = new LocalTime(10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(-5) + Period.FromMinutes(-30) + Period.FromSeconds(-45) +                                 Period.FromMilliseconds(-20) + Period.FromTicks(-5)'                                 Period.Between(t1' t2));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(-5) + Period.FromMinutes(-30) + Period.FromSeconds(-45) +                                 Period.FromMilliseconds(-20) + Period.FromTicks(-5)'                                 Period.Between(t1' t2));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(-5) + Period.FromMinutes(-30) + Period.FromSeconds(-45) +                                 Period.FromMilliseconds(-20) + Period.FromTicks(-5)'                                 Period.Between(t1' t2));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(-5) + Period.FromMinutes(-30) + Period.FromSeconds(-45) +                                 Period.FromMilliseconds(-20) + Period.FromTicks(-5)'                                 Period.Between(t1' t2));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(-5) + Period.FromMinutes(-30) + Period.FromSeconds(-45) +                                 Period.FromMilliseconds(-20) + Period.FromTicks(-5)'                                 Period.Between(t1' t2));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards_WithJustHours,The following statement contains a magic number: LocalTime t1 = new LocalTime(11' 30);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards_WithJustHours,The following statement contains a magic number: LocalTime t1 = new LocalTime(11' 30);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards_WithJustHours,The following statement contains a magic number: LocalTime t2 = new LocalTime(17' 15);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards_WithJustHours,The following statement contains a magic number: LocalTime t2 = new LocalTime(17' 15);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingForwards_WithJustHours,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(5)' Period.Between(t1' t2' PeriodUnits.Hours));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards_WithJustHours,The following statement contains a magic number: LocalTime t1 = new LocalTime(17' 15);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards_WithJustHours,The following statement contains a magic number: LocalTime t1 = new LocalTime(17' 15);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards_WithJustHours,The following statement contains a magic number: LocalTime t2 = new LocalTime(11' 30);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards_WithJustHours,The following statement contains a magic number: LocalTime t2 = new LocalTime(11' 30);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,BetweenLocalTimes_MovingBackwards_WithJustHours,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(-5)' Period.Between(t1' t2' PeriodUnits.Hours));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_WithDifferent_PeriodTypes,The following statement contains a magic number: Period p1 = Period.FromHours(3);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_WithDifferent_PeriodTypes,The following statement contains a magic number: Period p2 = Period.FromMinutes(20);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_WithDifferent_PeriodTypes,The following statement contains a magic number: Assert.AreEqual(3' sum.Hours);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_WithDifferent_PeriodTypes,The following statement contains a magic number: Assert.AreEqual(20' sum.Minutes);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_With_IdenticalPeriodTypes,The following statement contains a magic number: Period p1 = Period.FromHours(3);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_With_IdenticalPeriodTypes,The following statement contains a magic number: Period p2 = Period.FromHours(2);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_With_IdenticalPeriodTypes,The following statement contains a magic number: Assert.AreEqual(5' sum.Hours);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2010' 2' 20' 10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2010' 2' 20' 10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2010' 2' 20' 10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2010' 2' 20' 10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: LocalDateTime result = start + Period.FromDays(10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 3' 2' 10' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 3' 2' 10' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 3' 2' 10' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 3' 2' 10' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_OneYearOnLeapDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_OneYearOnLeapDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_OneYearOnLeapDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_OneYearOnLeapDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_OneYearOnLeapDay,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2013' 2' 28' 10' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_OneYearOnLeapDay,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2013' 2' 28' 10' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_OneYearOnLeapDay,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2013' 2' 28' 10' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_OneYearOnLeapDay,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2013' 2' 28' 10' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_FourYearsOnLeapDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_FourYearsOnLeapDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_FourYearsOnLeapDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_FourYearsOnLeapDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2012' 2' 29' 10' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_FourYearsOnLeapDay,The following statement contains a magic number: LocalDateTime result = start + Period.FromYears(4);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_FourYearsOnLeapDay,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2016' 2' 29' 10' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_FourYearsOnLeapDay,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2016' 2' 29' 10' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_FourYearsOnLeapDay,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2016' 2' 29' 10' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_FourYearsOnLeapDay,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2016' 2' 29' 10' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_YearMonthDay,The following statement contains a magic number: Period period = Period.FromYears(1) + Period.FromMonths(1) + Period.FromDays(2);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_YearMonthDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2007' 1' 30' 0' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_YearMonthDay,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2007' 1' 30' 0' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_YearMonthDay,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2008' 3' 2' 0' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_YearMonthDay,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2008' 3' 2' 0' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Addition_YearMonthDay,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2008' 3' 2' 0' 0)' result);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Subtraction_WithDifferent_PeriodTypes,The following statement contains a magic number: Period p1 = Period.FromHours(3);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Subtraction_WithDifferent_PeriodTypes,The following statement contains a magic number: Period p2 = Period.FromMinutes(20);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Subtraction_WithDifferent_PeriodTypes,The following statement contains a magic number: Assert.AreEqual(3' sum.Hours);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Subtraction_WithDifferent_PeriodTypes,The following statement contains a magic number: Assert.AreEqual(-20' sum.Minutes);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Subtraction_With_IdenticalPeriodTypes,The following statement contains a magic number: Period p1 = Period.FromHours(3);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Subtraction_With_IdenticalPeriodTypes,The following statement contains a magic number: Period p2 = Period.FromHours(2);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Equality_WhenEqual,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(10)' Period.FromHours(10));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Equality_WhenEqual,The following statement contains a magic number: Assert.AreEqual(Period.FromHours(10)' Period.FromHours(10));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Equality_WhenEqual,The following statement contains a magic number: Assert.AreEqual(Period.FromMinutes(15)' Period.FromMinutes(15));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Equality_WhenEqual,The following statement contains a magic number: Assert.AreEqual(Period.FromMinutes(15)' Period.FromMinutes(15));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Equality_WhenEqual,The following statement contains a magic number: Assert.AreEqual(Period.FromDays(5)' Period.FromDays(5));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Equality_WhenEqual,The following statement contains a magic number: Assert.AreEqual(Period.FromDays(5)' Period.FromDays(5));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Equality_WhenUnequal,The following statement contains a magic number: Assert.IsFalse(Period.FromHours(10).Equals(Period.FromHours(20)));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Equality_WhenUnequal,The following statement contains a magic number: Assert.IsFalse(Period.FromHours(10).Equals(Period.FromHours(20)));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Equality_WhenUnequal,The following statement contains a magic number: Assert.IsFalse(Period.FromMinutes(15).Equals(Period.FromSeconds(15)));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Equality_WhenUnequal,The following statement contains a magic number: Assert.IsFalse(Period.FromMinutes(15).Equals(Period.FromSeconds(15)));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Equality_WhenUnequal,The following statement contains a magic number: Assert.IsFalse(Period.FromHours(1).Equals(Period.FromMinutes(60)));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasTimeComponent_Compound,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2000' 1' 1' 10' 45' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasTimeComponent_Compound,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2000' 1' 1' 10' 45' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasTimeComponent_Compound,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2000' 1' 1' 10' 45' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasTimeComponent_Compound,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2000' 2' 4' 11' 50' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasTimeComponent_Compound,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2000' 2' 4' 11' 50' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasTimeComponent_Compound,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2000' 2' 4' 11' 50' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasTimeComponent_Compound,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2000' 2' 4' 11' 50' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasTimeComponent_Compound,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2000' 2' 4' 11' 50' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasDateComponent_Compound,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2000' 1' 1' 10' 45' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasDateComponent_Compound,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2000' 1' 1' 10' 45' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasDateComponent_Compound,The following statement contains a magic number: LocalDateTime dt1 = new LocalDateTime(2000' 1' 1' 10' 45' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasDateComponent_Compound,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2000' 2' 4' 11' 50' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasDateComponent_Compound,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2000' 2' 4' 11' 50' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasDateComponent_Compound,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2000' 2' 4' 11' 50' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasDateComponent_Compound,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2000' 2' 4' 11' 50' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,HasDateComponent_Compound,The following statement contains a magic number: LocalDateTime dt2 = new LocalDateTime(2000' 2' 4' 11' 50' 00);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_Positive,The following statement contains a magic number: Period period = Period.FromDays(1) +  Period.FromHours(2);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_AllUnits,The following statement contains a magic number: Period period = new Period(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_AllUnits,The following statement contains a magic number: Period period = new Period(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_AllUnits,The following statement contains a magic number: Period period = new Period(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_AllUnits,The following statement contains a magic number: Period period = new Period(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_AllUnits,The following statement contains a magic number: Period period = new Period(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_AllUnits,The following statement contains a magic number: Period period = new Period(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_AllUnits,The following statement contains a magic number: Period period = new Period(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_AllUnits,The following statement contains a magic number: Period period = new Period(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_AllUnits,The following statement contains a magic number: Period period = new Period(1' 2' 3' 4' 5' 6' 7' 8' 9' 10);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_Negative,The following statement contains a magic number: Period period = Period.FromDays(-1) + Period.FromHours(-2);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_Mixed,The following statement contains a magic number: Period period = Period.FromDays(-1) + Period.FromHours(2);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToBuilder_SingleUnit,The following statement contains a magic number: var builder = Period.FromHours(5).ToBuilder();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToBuilder_SingleUnit,The following statement contains a magic number: var expected = new PeriodBuilder { Hours = 5 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToBuilder_MultipleUnits,The following statement contains a magic number: var builder = (Period.FromHours(5) + Period.FromWeeks(2)).ToBuilder();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToBuilder_MultipleUnits,The following statement contains a magic number: var builder = (Period.FromHours(5) + Period.FromWeeks(2)).ToBuilder();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToBuilder_MultipleUnits,The following statement contains a magic number: var expected = new PeriodBuilder { Hours = 5' Weeks = 2 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToBuilder_MultipleUnits,The following statement contains a magic number: var expected = new PeriodBuilder { Hours = 5' Weeks = 2 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Weeks,The following statement contains a magic number: var original = new PeriodBuilder { Weeks = 2' Days = 5 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Weeks,The following statement contains a magic number: var original = new PeriodBuilder { Weeks = 2' Days = 5 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Weeks,The following statement contains a magic number: var expected = new PeriodBuilder { Days = 19 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Hours,The following statement contains a magic number: var original = new PeriodBuilder { Hours = 25' Days = 1 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Hours,The following statement contains a magic number: var expected = new PeriodBuilder { Hours = 1' Days = 2 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Minutes,The following statement contains a magic number: var original = new PeriodBuilder { Hours = 1' Minutes = 150 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Minutes,The following statement contains a magic number: var expected = new PeriodBuilder { Hours = 3' Minutes = 30}.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Minutes,The following statement contains a magic number: var expected = new PeriodBuilder { Hours = 3' Minutes = 30}.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Seconds,The following statement contains a magic number: var original = new PeriodBuilder { Minutes = 1' Seconds = 150 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Seconds,The following statement contains a magic number: var expected = new PeriodBuilder { Minutes = 3' Seconds = 30 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Seconds,The following statement contains a magic number: var expected = new PeriodBuilder { Minutes = 3' Seconds = 30 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Milliseconds,The following statement contains a magic number: var original = new PeriodBuilder { Seconds = 1' Milliseconds = 1500 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Milliseconds,The following statement contains a magic number: var expected = new PeriodBuilder { Seconds = 2' Milliseconds= 500 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Milliseconds,The following statement contains a magic number: var expected = new PeriodBuilder { Seconds = 2' Milliseconds= 500 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Ticks,The following statement contains a magic number: var original = new PeriodBuilder { Milliseconds = 1' Ticks = 15000 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Ticks,The following statement contains a magic number: var expected = new PeriodBuilder { Milliseconds = 2' Ticks = 0' Nanoseconds = 500000 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Ticks,The following statement contains a magic number: var expected = new PeriodBuilder { Milliseconds = 2' Ticks = 0' Nanoseconds = 500000 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Nanoseconds,The following statement contains a magic number: var original = new PeriodBuilder { Ticks = 1' Nanoseconds = 150 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_Nanoseconds,The following statement contains a magic number: var expected = new PeriodBuilder { Nanoseconds = 250}.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_MultipleFields,The following statement contains a magic number: var original = new PeriodBuilder { Hours = 1' Minutes = 119' Seconds = 150 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_MultipleFields,The following statement contains a magic number: var original = new PeriodBuilder { Hours = 1' Minutes = 119' Seconds = 150 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_MultipleFields,The following statement contains a magic number: var expected = new PeriodBuilder { Hours = 3' Minutes = 1' Seconds = 30 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_MultipleFields,The following statement contains a magic number: var expected = new PeriodBuilder { Hours = 3' Minutes = 1' Seconds = 30 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_AllNegative,The following statement contains a magic number: var original = new PeriodBuilder { Hours = -1' Minutes = -119' Seconds = -150 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_AllNegative,The following statement contains a magic number: var original = new PeriodBuilder { Hours = -1' Minutes = -119' Seconds = -150 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_AllNegative,The following statement contains a magic number: var expected = new PeriodBuilder { Hours = -3' Minutes = -1' Seconds = -30 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_AllNegative,The following statement contains a magic number: var expected = new PeriodBuilder { Hours = -3' Minutes = -1' Seconds = -30 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_MixedSigns_PositiveResult,The following statement contains a magic number: var original = new PeriodBuilder { Hours = 3' Minutes = -1 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_MixedSigns_PositiveResult,The following statement contains a magic number: var expected = new PeriodBuilder { Hours = 2' Minutes = 59 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_MixedSigns_PositiveResult,The following statement contains a magic number: var expected = new PeriodBuilder { Hours = 2' Minutes = 59 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_MixedSigns_NegativeResult,The following statement contains a magic number: var original = new PeriodBuilder { Hours = 1' Minutes = -121 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_DoesntAffectMonthsAndYears,The following statement contains a magic number: var original = new PeriodBuilder { Years = 2' Months = 1' Days = 400 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Normalize_DoesntAffectMonthsAndYears,The following statement contains a magic number: var original = new PeriodBuilder { Years = 2' Months = 1' Days = 400 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_SingleUnit,The following statement contains a magic number: var period = Period.FromHours(5);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_MultipleUnits,The following statement contains a magic number: var period = new PeriodBuilder { Hours = 5' Minutes = 30 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToString_MultipleUnits,The following statement contains a magic number: var period = new PeriodBuilder { Hours = 5' Minutes = 30 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToDuration_ValidAllAcceptableUnits,The following statement contains a magic number: Period period = new PeriodBuilder              {                  Weeks = 1'                  Days = 2'                  Hours = 3'                  Minutes = 4'                  Seconds = 5'                  Milliseconds = 6'                  Ticks = 7              }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToDuration_ValidAllAcceptableUnits,The following statement contains a magic number: Period period = new PeriodBuilder              {                  Weeks = 1'                  Days = 2'                  Hours = 3'                  Minutes = 4'                  Seconds = 5'                  Milliseconds = 6'                  Ticks = 7              }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToDuration_ValidAllAcceptableUnits,The following statement contains a magic number: Period period = new PeriodBuilder              {                  Weeks = 1'                  Days = 2'                  Hours = 3'                  Minutes = 4'                  Seconds = 5'                  Milliseconds = 6'                  Ticks = 7              }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToDuration_ValidAllAcceptableUnits,The following statement contains a magic number: Period period = new PeriodBuilder              {                  Weeks = 1'                  Days = 2'                  Hours = 3'                  Minutes = 4'                  Seconds = 5'                  Milliseconds = 6'                  Ticks = 7              }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToDuration_ValidAllAcceptableUnits,The following statement contains a magic number: Period period = new PeriodBuilder              {                  Weeks = 1'                  Days = 2'                  Hours = 3'                  Minutes = 4'                  Seconds = 5'                  Milliseconds = 6'                  Ticks = 7              }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToDuration_ValidAllAcceptableUnits,The following statement contains a magic number: Period period = new PeriodBuilder              {                  Weeks = 1'                  Days = 2'                  Hours = 3'                  Minutes = 4'                  Seconds = 5'                  Milliseconds = 6'                  Ticks = 7              }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToDuration_ValidAllAcceptableUnits,The following statement contains a magic number: Assert.AreEqual(                  1 * NodaConstants.TicksPerWeek +                  2 * NodaConstants.TicksPerDay +                  3 * NodaConstants.TicksPerHour +                  4 * NodaConstants.TicksPerMinute +                  5 * NodaConstants.TicksPerSecond +                  6 * NodaConstants.TicksPerMillisecond + 7'                  period.ToDuration().BclCompatibleTicks);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToDuration_ValidAllAcceptableUnits,The following statement contains a magic number: Assert.AreEqual(                  1 * NodaConstants.TicksPerWeek +                  2 * NodaConstants.TicksPerDay +                  3 * NodaConstants.TicksPerHour +                  4 * NodaConstants.TicksPerMinute +                  5 * NodaConstants.TicksPerSecond +                  6 * NodaConstants.TicksPerMillisecond + 7'                  period.ToDuration().BclCompatibleTicks);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToDuration_ValidAllAcceptableUnits,The following statement contains a magic number: Assert.AreEqual(                  1 * NodaConstants.TicksPerWeek +                  2 * NodaConstants.TicksPerDay +                  3 * NodaConstants.TicksPerHour +                  4 * NodaConstants.TicksPerMinute +                  5 * NodaConstants.TicksPerSecond +                  6 * NodaConstants.TicksPerMillisecond + 7'                  period.ToDuration().BclCompatibleTicks);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToDuration_ValidAllAcceptableUnits,The following statement contains a magic number: Assert.AreEqual(                  1 * NodaConstants.TicksPerWeek +                  2 * NodaConstants.TicksPerDay +                  3 * NodaConstants.TicksPerHour +                  4 * NodaConstants.TicksPerMinute +                  5 * NodaConstants.TicksPerSecond +                  6 * NodaConstants.TicksPerMillisecond + 7'                  period.ToDuration().BclCompatibleTicks);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToDuration_ValidAllAcceptableUnits,The following statement contains a magic number: Assert.AreEqual(                  1 * NodaConstants.TicksPerWeek +                  2 * NodaConstants.TicksPerDay +                  3 * NodaConstants.TicksPerHour +                  4 * NodaConstants.TicksPerMinute +                  5 * NodaConstants.TicksPerSecond +                  6 * NodaConstants.TicksPerMillisecond + 7'                  period.ToDuration().BclCompatibleTicks);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToDuration_ValidAllAcceptableUnits,The following statement contains a magic number: Assert.AreEqual(                  1 * NodaConstants.TicksPerWeek +                  2 * NodaConstants.TicksPerDay +                  3 * NodaConstants.TicksPerHour +                  4 * NodaConstants.TicksPerMinute +                  5 * NodaConstants.TicksPerSecond +                  6 * NodaConstants.TicksPerMillisecond + 7'                  period.ToDuration().BclCompatibleTicks);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,ToDuration_Overflow_WhenPossiblyValid,The following statement contains a magic number: Period period = Period.FromSeconds(long.MaxValue) + Period.FromMinutes(long.MinValue / 60);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,NormalizingEqualityComparer_NonEqualAfterNormalization,The following statement contains a magic number: Period period1 = Period.FromHours(2);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,NormalizingEqualityComparer_NonEqualAfterNormalization,The following statement contains a magic number: Period period2 = Period.FromMinutes(150);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,NormalizingEqualityComparer_EqualAfterNormalization,The following statement contains a magic number: Period period1 = Period.FromHours(2);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,NormalizingEqualityComparer_EqualAfterNormalization,The following statement contains a magic number: Period period2 = Period.FromMinutes(120);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,NormalizingEqualityComparer_GetHashCodeAfterNormalization,The following statement contains a magic number: Period period1 = Period.FromHours(2);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,NormalizingEqualityComparer_GetHashCodeAfterNormalization,The following statement contains a magic number: Period period2 = Period.FromMinutes(120);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Comparer_NullWithNull,The following statement contains a magic number: var comparer = Period.CreateComparer(new LocalDateTime(2000' 1' 1' 0' 0));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Comparer_NullWithNonNull,The following statement contains a magic number: var comparer = Period.CreateComparer(new LocalDateTime(2000' 1' 1' 0' 0));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Comparer_NonNullWithNull,The following statement contains a magic number: var comparer = Period.CreateComparer(new LocalDateTime(2000' 1' 1' 0' 0));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Comparer_DurationablePeriods,The following statement contains a magic number: var bigger = Period.FromHours(25);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Comparer_DurationablePeriods,The following statement contains a magic number: var comparer = Period.CreateComparer(new LocalDateTime(2000' 1' 1' 0' 0));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Comparer_NonDurationablePeriods,The following statement contains a magic number: var days = Period.FromDays(30);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Comparer_NonDurationablePeriods,The following statement contains a magic number: var januaryComparer = Period.CreateComparer(new LocalDateTime(2000' 1' 1' 0' 0));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Comparer_NonDurationablePeriods,The following statement contains a magic number: var februaryComparer = Period.CreateComparer(new LocalDateTime(2000' 2' 1' 0' 0));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Comparer_NonDurationablePeriods,The following statement contains a magic number: var februaryComparer = Period.CreateComparer(new LocalDateTime(2000' 2' 1' 0' 0));
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Between_LocalDateTime_SameValue,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 1' 1' 16' 0' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Between_LocalDateTime_SameValue,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 1' 1' 16' 0' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Between_LocalDateTime_AwkwardTimeOfDayWithMultipleUnits,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 1' 1' 16' 0' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Between_LocalDateTime_AwkwardTimeOfDayWithMultipleUnits,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2014' 1' 1' 16' 0' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Between_LocalDateTime_AwkwardTimeOfDayWithMultipleUnits,The following statement contains a magic number: LocalDateTime end = new LocalDateTime(2015' 2' 3' 8' 0' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Between_LocalDateTime_AwkwardTimeOfDayWithMultipleUnits,The following statement contains a magic number: LocalDateTime end = new LocalDateTime(2015' 2' 3' 8' 0' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Between_LocalDateTime_AwkwardTimeOfDayWithMultipleUnits,The following statement contains a magic number: LocalDateTime end = new LocalDateTime(2015' 2' 3' 8' 0' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Between_LocalDateTime_AwkwardTimeOfDayWithMultipleUnits,The following statement contains a magic number: LocalDateTime end = new LocalDateTime(2015' 2' 3' 8' 0' 0);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,Between_LocalDateTime_AwkwardTimeOfDayWithMultipleUnits,The following statement contains a magic number: Period expected = new PeriodBuilder { Years = 1' Months = 1' Days = 1' Hours = 16 }.Build();
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,FromNanoseconds,The following statement contains a magic number: var period = Period.FromNanoseconds(1234567890L);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,FromNanoseconds,The following statement contains a magic number: Assert.AreEqual(1234567890L' period.Nanoseconds);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,AddPeriodToPeriod_NoOverflow,The following statement contains a magic number: Period p2 = Period.FromMinutes(60);
Magic Number,NodaTime.Test,PeriodTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\PeriodTest.cs,AddPeriodToPeriod_NoOverflow,The following statement contains a magic number: Assert.AreEqual(new PeriodBuilder { Hours = long.MaxValue' Minutes = 60 }.Build()' p1 + p2);
Magic Number,NodaTime.Test,SystemClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\SystemClockTest.cs,Sanity,The following statement contains a magic number: Instant minimumExpected = Instant.FromUtc(2011' 8' 1' 0' 0);
Magic Number,NodaTime.Test,SystemClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\SystemClockTest.cs,Sanity,The following statement contains a magic number: Instant minimumExpected = Instant.FromUtc(2011' 8' 1' 0' 0);
Magic Number,NodaTime.Test,SystemClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\SystemClockTest.cs,Sanity,The following statement contains a magic number: Instant maximumExpected = Instant.FromUtc(2020' 1' 1' 0' 0);
Magic Number,NodaTime.Test,TestHelper,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestHelper.cs,AssertXmlRoundtrip,The following statement contains a magic number: var helper = new SerializationHelper<T> { Value = value' Before = 100' After = 200 };
Magic Number,NodaTime.Test,TestHelper,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestHelper.cs,AssertXmlRoundtrip,The following statement contains a magic number: var helper = new SerializationHelper<T> { Value = value' Before = 100' After = 200 };
Magic Number,NodaTime.Test,TestHelper,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestHelper.cs,AssertXmlRoundtrip,The following statement contains a magic number: Assert.AreEqual(100' result.Before);
Magic Number,NodaTime.Test,TestHelper,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestHelper.cs,AssertXmlRoundtrip,The following statement contains a magic number: Assert.AreEqual(200' result.After);
Magic Number,NodaTime.Test,TestHelper,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestHelper.cs,AssertParsableXml,The following statement contains a magic number: var helper = new SerializationHelper<T> { Value = new T()' Before = 100' After = 200 };
Magic Number,NodaTime.Test,TestHelper,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestHelper.cs,AssertParsableXml,The following statement contains a magic number: var helper = new SerializationHelper<T> { Value = new T()' Before = 100' After = 200 };
Magic Number,NodaTime.Test,TestHelper,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestHelper.cs,AssertParsableXml,The following statement contains a magic number: Assert.AreEqual(100' result.Before);
Magic Number,NodaTime.Test,TestHelper,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestHelper.cs,AssertParsableXml,The following statement contains a magic number: Assert.AreEqual(200' result.After);
Magic Number,NodaTime.Test,TestObjects,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestObjects.cs,CreatePositiveOffset,The following statement contains a magic number: Preconditions.CheckArgumentRange(nameof(hours)' hours' 0' 23);
Magic Number,NodaTime.Test,TestObjects,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestObjects.cs,CreatePositiveOffset,The following statement contains a magic number: Preconditions.CheckArgumentRange(nameof(minutes)' minutes' 0' 59);
Magic Number,NodaTime.Test,TestObjects,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TestObjects.cs,CreatePositiveOffset,The following statement contains a magic number: Preconditions.CheckArgumentRange(nameof(seconds)' seconds' 0' 59);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToSecond,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToSecond,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToSecond,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToSecond,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToSecond,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToSecond,The following statement contains a magic number: var end = new LocalTime(7' 4' 30);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToSecond,The following statement contains a magic number: var end = new LocalTime(7' 4' 30);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToSecond,The following statement contains a magic number: var end = new LocalTime(7' 4' 30);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToMinute,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToMinute,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToMinute,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToMinute,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToMinute,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToMinute,The following statement contains a magic number: var end = new LocalTime(7' 4' 0);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToMinute,The following statement contains a magic number: var end = new LocalTime(7' 4' 0);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToHour,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToHour,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToHour,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToHour,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToHour,The following statement contains a magic number: var start = LocalTime.FromHourMinuteSecondMillisecondTick(7' 4' 30' 123' 4567);
Magic Number,NodaTime.Test,TimeAdjustersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeAdjustersTest.cs,TruncateToHour,The following statement contains a magic number: var end = new LocalTime(7' 0' 0);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllYears,The following statement contains a magic number: var ymdc = new YearMonthDayCalendar(year' 5' 20' 0);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllYears,The following statement contains a magic number: var ymdc = new YearMonthDayCalendar(year' 5' 20' 0);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllYears,The following statement contains a magic number: Assert.AreEqual(5' ymdc.Month);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllYears,The following statement contains a magic number: Assert.AreEqual(20' ymdc.Day);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllYears,The following statement contains a magic number: year <= 9999
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllMonths,The following statement contains a magic number: var ymdc = new YearMonthDayCalendar(-123' month' 20' CalendarOrdinal.HebrewCivil);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllMonths,The following statement contains a magic number: var ymdc = new YearMonthDayCalendar(-123' month' 20' CalendarOrdinal.HebrewCivil);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllMonths,The following statement contains a magic number: Assert.AreEqual(-123' ymdc.Year);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllMonths,The following statement contains a magic number: Assert.AreEqual(20' ymdc.Day);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllMonths,The following statement contains a magic number: month <= 32
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllDays,The following statement contains a magic number: var ymdc = new YearMonthDayCalendar(-123' 12' day' CalendarOrdinal.IslamicAstronomicalBase15);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllDays,The following statement contains a magic number: var ymdc = new YearMonthDayCalendar(-123' 12' day' CalendarOrdinal.IslamicAstronomicalBase15);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllDays,The following statement contains a magic number: Assert.AreEqual(-123' ymdc.Year);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllDays,The following statement contains a magic number: Assert.AreEqual(12' ymdc.Month);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllDays,The following statement contains a magic number: day <= 64
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllCalendars,The following statement contains a magic number: var ymdc = new YearMonthDayCalendar(-123' 30' 64' calendar);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllCalendars,The following statement contains a magic number: var ymdc = new YearMonthDayCalendar(-123' 30' 64' calendar);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllCalendars,The following statement contains a magic number: var ymdc = new YearMonthDayCalendar(-123' 30' 64' calendar);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllCalendars,The following statement contains a magic number: Assert.AreEqual(-123' ymdc.Year);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllCalendars,The following statement contains a magic number: Assert.AreEqual(30' ymdc.Month);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllCalendars,The following statement contains a magic number: Assert.AreEqual(64' ymdc.Day);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,AllCalendars,The following statement contains a magic number: ordinal < 64
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,Equality,The following statement contains a magic number: var original = new YearMonthDayCalendar(1000' 12' 20' CalendarOrdinal.Coptic);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,Equality,The following statement contains a magic number: var original = new YearMonthDayCalendar(1000' 12' 20' CalendarOrdinal.Coptic);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,Equality,The following statement contains a magic number: var original = new YearMonthDayCalendar(1000' 12' 20' CalendarOrdinal.Coptic);
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(original' new YearMonthDayCalendar(1000' 12' 20' CalendarOrdinal.Coptic)'                  new YearMonthDayCalendar(original.Year + 1' original.Month' original.Day' original.CalendarOrdinal)'                  new YearMonthDayCalendar(original.Year' original.Month + 1' original.Day' original.CalendarOrdinal)'                  new YearMonthDayCalendar(original.Year' original.Month' original.Day + 1' original.CalendarOrdinal)'                  new YearMonthDayCalendar(original.Year' original.Month' original.Day' CalendarOrdinal.Gregorian));
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(original' new YearMonthDayCalendar(1000' 12' 20' CalendarOrdinal.Coptic)'                  new YearMonthDayCalendar(original.Year + 1' original.Month' original.Day' original.CalendarOrdinal)'                  new YearMonthDayCalendar(original.Year' original.Month + 1' original.Day' original.CalendarOrdinal)'                  new YearMonthDayCalendar(original.Year' original.Month' original.Day + 1' original.CalendarOrdinal)'                  new YearMonthDayCalendar(original.Year' original.Month' original.Day' CalendarOrdinal.Gregorian));
Magic Number,NodaTime.Test,YearMonthDayCalendarTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayCalendarTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(original' new YearMonthDayCalendar(1000' 12' 20' CalendarOrdinal.Coptic)'                  new YearMonthDayCalendar(original.Year + 1' original.Month' original.Day' original.CalendarOrdinal)'                  new YearMonthDayCalendar(original.Year' original.Month + 1' original.Day' original.CalendarOrdinal)'                  new YearMonthDayCalendar(original.Year' original.Month' original.Day + 1' original.CalendarOrdinal)'                  new YearMonthDayCalendar(original.Year' original.Month' original.Day' CalendarOrdinal.Gregorian));
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllYears,The following statement contains a magic number: var ymd = new YearMonthDay(year' 5' 20);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllYears,The following statement contains a magic number: var ymd = new YearMonthDay(year' 5' 20);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllYears,The following statement contains a magic number: Assert.AreEqual(5' ymd.Month);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllYears,The following statement contains a magic number: Assert.AreEqual(20' ymd.Day);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllYears,The following statement contains a magic number: year <= 9999
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllMonths,The following statement contains a magic number: var ymd = new YearMonthDay(-123' month' 20);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllMonths,The following statement contains a magic number: var ymd = new YearMonthDay(-123' month' 20);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllMonths,The following statement contains a magic number: Assert.AreEqual(-123' ymd.Year);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllMonths,The following statement contains a magic number: Assert.AreEqual(20' ymd.Day);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllMonths,The following statement contains a magic number: month < 32
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllDays,The following statement contains a magic number: var ymd = new YearMonthDay(-123' 30' day);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllDays,The following statement contains a magic number: var ymd = new YearMonthDay(-123' 30' day);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllDays,The following statement contains a magic number: Assert.AreEqual(-123' ymd.Year);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllDays,The following statement contains a magic number: Assert.AreEqual(30' ymd.Month);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,AllDays,The following statement contains a magic number: day < 64
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,YearMonthDayToString,The following statement contains a magic number: var ymd = new YearMonthDay(2017' 8' 25);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,YearMonthDayToString,The following statement contains a magic number: var ymd = new YearMonthDay(2017' 8' 25);
Magic Number,NodaTime.Test,YearMonthDayTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthDayTest.cs,YearMonthDayToString,The following statement contains a magic number: var ymd = new YearMonthDay(2017' 8' 25);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Properties,The following statement contains a magic number: var yearMonth = new YearMonth(2000' 1);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Properties,The following statement contains a magic number: Assert.AreEqual(2000' yearMonth.Year);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Properties,The following statement contains a magic number: Assert.AreEqual(2000' yearMonth.YearOfEra);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Properties,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2000' 1' 1)' yearMonth.StartDate);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Properties,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2000' 1' 31)' yearMonth.EndDate);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Properties,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2000' 1' 31)' yearMonth.EndDate);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,ToDateInterval,The following statement contains a magic number: var yearMonth = new YearMonth(2000' 1);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,ToDateInterval,The following statement contains a magic number: var interval = new DateInterval(new LocalDate(2000' 1' 1)' new LocalDate(2000' 1' 31));
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,ToDateInterval,The following statement contains a magic number: var interval = new DateInterval(new LocalDate(2000' 1' 1)' new LocalDate(2000' 1' 31));
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,ToDateInterval,The following statement contains a magic number: var interval = new DateInterval(new LocalDate(2000' 1' 1)' new LocalDate(2000' 1' 31));
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Equals_EqualValues,The following statement contains a magic number: YearMonth yearMonth1 = new YearMonth(2011' 1' calendar);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Equals_EqualValues,The following statement contains a magic number: YearMonth yearMonth2 = new YearMonth(2011' 1' calendar);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Equals_DifferentMonths,The following statement contains a magic number: YearMonth yearMonth1 = new YearMonth(2011' 1' calendar);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Equals_DifferentMonths,The following statement contains a magic number: YearMonth yearMonth2 = new YearMonth(2011' 2' calendar);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Equals_DifferentMonths,The following statement contains a magic number: YearMonth yearMonth2 = new YearMonth(2011' 2' calendar);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Equals_DifferentCalendars,The following statement contains a magic number: YearMonth yearMonth1 = new YearMonth(2011' 1' calendar);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Equals_DifferentCalendars,The following statement contains a magic number: YearMonth yearMonth2 = new YearMonth(2011' 1' CalendarSystem.Iso);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Equals_DifferentToNull,The following statement contains a magic number: YearMonth date = new YearMonth(2011' 1);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,Equals_DifferentToOtherType,The following statement contains a magic number: YearMonth date = new YearMonth(2011' 1);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,CompareTo_SameCalendar,The following statement contains a magic number: YearMonth yearMonth1 = new YearMonth(2011' 1);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,CompareTo_SameCalendar,The following statement contains a magic number: YearMonth yearMonth2 = new YearMonth(2011' 1);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,CompareTo_SameCalendar,The following statement contains a magic number: YearMonth date3 = new YearMonth(2011' 2);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,CompareTo_SameCalendar,The following statement contains a magic number: YearMonth date3 = new YearMonth(2011' 2);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,CompareTo_DifferentCalendars_Throws,The following statement contains a magic number: YearMonth yearMonth1 = new YearMonth(2011' 1);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,CompareTo_DifferentCalendars_Throws,The following statement contains a magic number: YearMonth yearMonth2 = new YearMonth(1500' 1' islamic);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var instance = new YearMonth(2012' 3);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var instance = new YearMonth(2012' 3);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var later = new YearMonth(2012' 6);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var later = new YearMonth(2012' 6);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var earlier = new YearMonth(2012' 1);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var same = new YearMonth(2012' 3);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_SameCalendar,The following statement contains a magic number: var same = new YearMonth(2012' 3);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_Null_Positive,The following statement contains a magic number: var instance = new YearMonth(2012' 3);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_Null_Positive,The following statement contains a magic number: var instance = new YearMonth(2012' 3);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var instance = new YearMonth(2012' 3);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var instance = new YearMonth(2012' 3);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDateTime(2012' 3' 6' 15' 42);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDateTime(2012' 3' 6' 15' 42);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDateTime(2012' 3' 6' 15' 42);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDateTime(2012' 3' 6' 15' 42);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,IComparableCompareTo_WrongType_ArgumentException,The following statement contains a magic number: var arg = new LocalDateTime(2012' 3' 6' 15' 42);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new YearMonth(2013' 4);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new YearMonth(2013' 4);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new YearMonth(2013' 4' CalendarSystem.Julian);
Magic Number,NodaTime.Test,YearMonthTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\YearMonthTest.BasicProperties.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new YearMonth(2013' 4' CalendarSystem.Julian);
Magic Number,NodaTime.Test,ZonedClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedClockTest.cs,GetCurrent,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1969' 12' 19' 2' 0' julian)' zonedClock.GetCurrentLocalDateTime());
Magic Number,NodaTime.Test,ZonedClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedClockTest.cs,GetCurrent,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1969' 12' 19' 2' 0' julian)' zonedClock.GetCurrentLocalDateTime());
Magic Number,NodaTime.Test,ZonedClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedClockTest.cs,GetCurrent,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1969' 12' 19' 2' 0' julian)' zonedClock.GetCurrentLocalDateTime());
Magic Number,NodaTime.Test,ZonedClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedClockTest.cs,GetCurrent,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1969' 12' 19' 2' 0' julian)' zonedClock.GetCurrentLocalDateTime());
Magic Number,NodaTime.Test,ZonedClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedClockTest.cs,GetCurrent,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1969' 12' 19' 2' 0' julian).WithOffset(Offset.FromHours(2))'                  zonedClock.GetCurrentOffsetDateTime());
Magic Number,NodaTime.Test,ZonedClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedClockTest.cs,GetCurrent,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1969' 12' 19' 2' 0' julian).WithOffset(Offset.FromHours(2))'                  zonedClock.GetCurrentOffsetDateTime());
Magic Number,NodaTime.Test,ZonedClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedClockTest.cs,GetCurrent,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1969' 12' 19' 2' 0' julian).WithOffset(Offset.FromHours(2))'                  zonedClock.GetCurrentOffsetDateTime());
Magic Number,NodaTime.Test,ZonedClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedClockTest.cs,GetCurrent,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1969' 12' 19' 2' 0' julian).WithOffset(Offset.FromHours(2))'                  zonedClock.GetCurrentOffsetDateTime());
Magic Number,NodaTime.Test,ZonedClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedClockTest.cs,GetCurrent,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1969' 12' 19' 2' 0' julian).WithOffset(Offset.FromHours(2))'                  zonedClock.GetCurrentOffsetDateTime());
Magic Number,NodaTime.Test,ZonedClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedClockTest.cs,GetCurrent,The following statement contains a magic number: Assert.AreEqual(new LocalDate(1969' 12' 19' julian)' zonedClock.GetCurrentDate());
Magic Number,NodaTime.Test,ZonedClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedClockTest.cs,GetCurrent,The following statement contains a magic number: Assert.AreEqual(new LocalDate(1969' 12' 19' julian)' zonedClock.GetCurrentDate());
Magic Number,NodaTime.Test,ZonedClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedClockTest.cs,GetCurrent,The following statement contains a magic number: Assert.AreEqual(new LocalDate(1969' 12' 19' julian)' zonedClock.GetCurrentDate());
Magic Number,NodaTime.Test,ZonedClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedClockTest.cs,GetCurrent,The following statement contains a magic number: Assert.AreEqual(new LocalTime(2' 0' 0)' zonedClock.GetCurrentTimeOfDay());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: var value = SampleZone.AtStrictly(new LocalDateTime(2012' 2' 10' 8' 9' 10).PlusNanoseconds(123456789));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: var value = SampleZone.AtStrictly(new LocalDateTime(2012' 2' 10' 8' 9' 10).PlusNanoseconds(123456789));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: var value = SampleZone.AtStrictly(new LocalDateTime(2012' 2' 10' 8' 9' 10).PlusNanoseconds(123456789));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: var value = SampleZone.AtStrictly(new LocalDateTime(2012' 2' 10' 8' 9' 10).PlusNanoseconds(123456789));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: var value = SampleZone.AtStrictly(new LocalDateTime(2012' 2' 10' 8' 9' 10).PlusNanoseconds(123456789));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: var value = SampleZone.AtStrictly(new LocalDateTime(2012' 2' 10' 8' 9' 10).PlusNanoseconds(123456789));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: var value = SampleZone.AtStrictly(new LocalDateTime(2012' 2' 10' 8' 9' 10).PlusNanoseconds(123456789));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2012' 2' 10)' value.Date);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2012' 2' 10)' value.Date);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2012' 2' 10)' value.Date);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(LocalTime.FromHourMinuteSecondNanosecond(8' 9' 10' 123456789)' value.TimeOfDay);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(LocalTime.FromHourMinuteSecondNanosecond(8' 9' 10' 123456789)' value.TimeOfDay);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(LocalTime.FromHourMinuteSecondNanosecond(8' 9' 10' 123456789)' value.TimeOfDay);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(LocalTime.FromHourMinuteSecondNanosecond(8' 9' 10' 123456789)' value.TimeOfDay);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(2012' value.Year);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(2012' value.YearOfEra);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(2' value.Month);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(10' value.Day);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(41' value.DayOfYear);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(8' value.ClockHourOfHalfDay);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(8' value.Hour);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(9' value.Minute);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(10' value.Second);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(123' value.Millisecond);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(1234567' value.TickOfSecond);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(8 * NodaConstants.TicksPerHour +                              9 * NodaConstants.TicksPerMinute +                              10 * NodaConstants.TicksPerSecond +                              1234567'                              value.TickOfDay);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(8 * NodaConstants.TicksPerHour +                              9 * NodaConstants.TicksPerMinute +                              10 * NodaConstants.TicksPerSecond +                              1234567'                              value.TickOfDay);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(8 * NodaConstants.TicksPerHour +                              9 * NodaConstants.TicksPerMinute +                              10 * NodaConstants.TicksPerSecond +                              1234567'                              value.TickOfDay);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(8 * NodaConstants.TicksPerHour +                              9 * NodaConstants.TicksPerMinute +                              10 * NodaConstants.TicksPerSecond +                              1234567'                              value.TickOfDay);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(8 * NodaConstants.NanosecondsPerHour +                              9 * NodaConstants.NanosecondsPerMinute +                              10 * NodaConstants.NanosecondsPerSecond +                              123456789'                              value.NanosecondOfDay);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(8 * NodaConstants.NanosecondsPerHour +                              9 * NodaConstants.NanosecondsPerMinute +                              10 * NodaConstants.NanosecondsPerSecond +                              123456789'                              value.NanosecondOfDay);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(8 * NodaConstants.NanosecondsPerHour +                              9 * NodaConstants.NanosecondsPerMinute +                              10 * NodaConstants.NanosecondsPerSecond +                              123456789'                              value.NanosecondOfDay);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SimpleProperties,The following statement contains a magic number: Assert.AreEqual(8 * NodaConstants.NanosecondsPerHour +                              9 * NodaConstants.NanosecondsPerMinute +                              10 * NodaConstants.NanosecondsPerSecond +                              123456789'                              value.NanosecondOfDay);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime before = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 12' 15' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime before = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 12' 15' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime before = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 12' 15' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime before = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 12' 15' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime afterExpected = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 13' 16' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime afterExpected = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 13' 16' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime afterExpected = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 13' 16' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime afterExpected = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 13' 16' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_MethodEquivalents,The following statement contains a magic number: const int minutes = 23;
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_MethodEquivalents,The following statement contains a magic number: const int hours = 3;
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_MethodEquivalents,The following statement contains a magic number: const int milliseconds = 40000;
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_MethodEquivalents,The following statement contains a magic number: const long seconds = 321;
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_MethodEquivalents,The following statement contains a magic number: const long nanoseconds = 12345;
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_MethodEquivalents,The following statement contains a magic number: const long ticks = 5432112345;
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_MethodEquivalents,The following statement contains a magic number: ZonedDateTime before = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 12' 15' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_MethodEquivalents,The following statement contains a magic number: ZonedDateTime before = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 12' 15' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_MethodEquivalents,The following statement contains a magic number: ZonedDateTime before = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 12' 15' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Add_MethodEquivalents,The following statement contains a magic number: ZonedDateTime before = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 12' 15' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtract_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime after = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 13' 16' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtract_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime after = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 13' 16' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtract_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime after = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 13' 16' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtract_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime after = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 13' 16' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtract_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime beforeExpected = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 12' 15' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtract_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime beforeExpected = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 12' 15' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtract_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime beforeExpected = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 12' 15' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtract_AroundTimeZoneTransition,The following statement contains a magic number: ZonedDateTime beforeExpected = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 12' 15' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SubtractDuration_MethodEquivalents,The following statement contains a magic number: ZonedDateTime after = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 13' 16' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SubtractDuration_MethodEquivalents,The following statement contains a magic number: ZonedDateTime after = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 13' 16' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SubtractDuration_MethodEquivalents,The following statement contains a magic number: ZonedDateTime after = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 13' 16' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,SubtractDuration_MethodEquivalents,The following statement contains a magic number: ZonedDateTime after = SampleZone.AtStrictly(new LocalDateTime(2011' 6' 13' 16' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtraction_ZonedDateTime,The following statement contains a magic number: ZonedDateTime start = new LocalDateTime(2014' 08' 14' 5' 51).InUtc();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtraction_ZonedDateTime,The following statement contains a magic number: ZonedDateTime start = new LocalDateTime(2014' 08' 14' 5' 51).InUtc();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtraction_ZonedDateTime,The following statement contains a magic number: ZonedDateTime start = new LocalDateTime(2014' 08' 14' 5' 51).InUtc();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtraction_ZonedDateTime,The following statement contains a magic number: ZonedDateTime start = new LocalDateTime(2014' 08' 14' 5' 51).InUtc();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtraction_ZonedDateTime,The following statement contains a magic number: ZonedDateTime start = new LocalDateTime(2014' 08' 14' 5' 51).InUtc();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtraction_ZonedDateTime,The following statement contains a magic number: ZonedDateTime end = SampleZone.AtStrictly(new LocalDateTime(2014' 08' 14' 18' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtraction_ZonedDateTime,The following statement contains a magic number: ZonedDateTime end = SampleZone.AtStrictly(new LocalDateTime(2014' 08' 14' 18' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtraction_ZonedDateTime,The following statement contains a magic number: ZonedDateTime end = SampleZone.AtStrictly(new LocalDateTime(2014' 08' 14' 18' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtraction_ZonedDateTime,The following statement contains a magic number: ZonedDateTime end = SampleZone.AtStrictly(new LocalDateTime(2014' 08' 14' 18' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtraction_ZonedDateTime,The following statement contains a magic number: Duration expected = Duration.FromHours(8) + Duration.FromMinutes(9);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Subtraction_ZonedDateTime,The following statement contains a magic number: Duration expected = Duration.FromHours(8) + Duration.FromMinutes(9);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Instant instant = Instant.FromUtc(2012' 2' 4' 12' 35);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Instant instant = Instant.FromUtc(2012' 2' 4' 12' 35);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Instant instant = Instant.FromUtc(2012' 2' 4' 12' 35);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Instant instant = Instant.FromUtc(2012' 2' 4' 12' 35);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Instant instant = Instant.FromUtc(2012' 2' 4' 12' 35);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2012' 2' 4' 16' 35' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2012' 2' 4' 16' 35' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2012' 2' 4' 16' 35' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2012' 2' 4' 16' 35' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2012' 2' 4' 16' 35' 0)' zoned.LocalDateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: DateTimeZone newZone = new SingleTransitionDateTimeZone(Instant.FromUtc(2000' 1' 1' 0' 0)' -7' -8);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: DateTimeZone newZone = new SingleTransitionDateTimeZone(Instant.FromUtc(2000' 1' 1' 0' 0)' -7' -8);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: DateTimeZone newZone = new SingleTransitionDateTimeZone(Instant.FromUtc(2000' 1' 1' 0' 0)' -7' -8);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2012' 2' 4' 4' 35' 0)' converted.LocalDateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2012' 2' 4' 4' 35' 0)' converted.LocalDateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2012' 2' 4' 4' 35' 0)' converted.LocalDateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2012' 2' 4' 4' 35' 0)' converted.LocalDateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,WithZone,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2012' 2' 4' 4' 35' 0)' converted.LocalDateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,IsDaylightSavings,The following statement contains a magic number: var winterSummerTransition = Instant.FromUtc(2014' 3' 30' 1' 0);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,IsDaylightSavings,The following statement contains a magic number: var winterSummerTransition = Instant.FromUtc(2014' 3' 30' 1' 0);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,IsDaylightSavings,The following statement contains a magic number: var winterSummerTransition = Instant.FromUtc(2014' 3' 30' 1' 0);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset dateTimeOffset = new DateTimeOffset(2011' 3' 5' 1' 0' 0' TimeSpan.FromHours(3));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset dateTimeOffset = new DateTimeOffset(2011' 3' 5' 1' 0' 0' TimeSpan.FromHours(3));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset dateTimeOffset = new DateTimeOffset(2011' 3' 5' 1' 0' 0' TimeSpan.FromHours(3));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeOffset dateTimeOffset = new DateTimeOffset(2011' 3' 5' 1' 0' 0' TimeSpan.FromHours(3));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: DateTimeZone fixedZone = new FixedDateTimeZone(Offset.FromHours(3));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: ZonedDateTime expected = fixedZone.AtStrictly(new LocalDateTime(2011' 3' 5' 1' 0' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: ZonedDateTime expected = fixedZone.AtStrictly(new LocalDateTime(2011' 3' 5' 1' 0' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,FromDateTimeOffset,The following statement contains a magic number: ZonedDateTime expected = fixedZone.AtStrictly(new LocalDateTime(2011' 3' 5' 1' 0' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: ZonedDateTime zoned = SampleZone.AtStrictly(new LocalDateTime(2011' 3' 5' 1' 0' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: ZonedDateTime zoned = SampleZone.AtStrictly(new LocalDateTime(2011' 3' 5' 1' 0' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: ZonedDateTime zoned = SampleZone.AtStrictly(new LocalDateTime(2011' 3' 5' 1' 0' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(2011' 3' 5' 1' 0' 0' TimeSpan.FromHours(3));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(2011' 3' 5' 1' 0' 0' TimeSpan.FromHours(3));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(2011' 3' 5' 1' 0' 0' TimeSpan.FromHours(3));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset,The following statement contains a magic number: DateTimeOffset expected = new DateTimeOffset(2011' 3' 5' 1' 0' 0' TimeSpan.FromHours(3));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2017' 1' 9' 21' 45' 20' DateTimeKind.Unspecified)' dto.DateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2017' 1' 9' 21' 45' 20' DateTimeKind.Unspecified)' dto.DateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2017' 1' 9' 21' 45' 20' DateTimeKind.Unspecified)' dto.DateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2017' 1' 9' 21' 45' 20' DateTimeKind.Unspecified)' dto.DateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_TruncatedOffset,The following statement contains a magic number: Assert.AreEqual(new DateTime(2017' 1' 9' 21' 45' 20' DateTimeKind.Unspecified)' dto.DateTime);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_OffsetOutOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_OffsetOutOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_OffsetOutOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_OffsetOutOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_OffsetOutOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_OffsetEdgeOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_OffsetEdgeOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_OffsetEdgeOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_OffsetEdgeOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeOffset_OffsetEdgeOfRange,The following statement contains a magic number: var ldt = new LocalDateTime(2017' 1' 9' 21' 45' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var zdt = new LocalDateTime(year' 1' 1' 13' 15' 55).PlusNanoseconds(NodaConstants.NanosecondsPerSecond - 1)                  .InZoneStrictly(zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var zdt = new LocalDateTime(year' 1' 1' 13' 15' 55).PlusNanoseconds(NodaConstants.NanosecondsPerSecond - 1)                  .InZoneStrictly(zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var zdt = new LocalDateTime(year' 1' 1' 13' 15' 55).PlusNanoseconds(NodaConstants.NanosecondsPerSecond - 1)                  .InZoneStrictly(zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var expectedDateTimeUtc = new DateTime(year' 1' 1' 12' 15' 55' DateTimeKind.Utc)                  .AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var expectedDateTimeUtc = new DateTime(year' 1' 1' 12' 15' 55' DateTimeKind.Utc)                  .AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var expectedDateTimeUtc = new DateTime(year' 1' 1' 12' 15' 55' DateTimeKind.Utc)                  .AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var expectedDateTimeOffset = new DateTimeOffset(year' 1' 1' 13' 15' 55' TimeSpan.FromHours(1))                  .AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var expectedDateTimeOffset = new DateTimeOffset(year' 1' 1' 13' 15' 55' TimeSpan.FromHours(1))                  .AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToBclTypes_TruncateNanosTowardStartOfTime,The following statement contains a magic number: var expectedDateTimeOffset = new DateTimeOffset(year' 1' 1' 13' 15' 55' TimeSpan.FromHours(1))                  .AddTicks(NodaConstants.TicksPerSecond - 1);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUtc,The following statement contains a magic number: ZonedDateTime zoned = SampleZone.AtStrictly(new LocalDateTime(2011' 3' 5' 1' 0' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUtc,The following statement contains a magic number: ZonedDateTime zoned = SampleZone.AtStrictly(new LocalDateTime(2011' 3' 5' 1' 0' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUtc,The following statement contains a magic number: ZonedDateTime zoned = SampleZone.AtStrictly(new LocalDateTime(2011' 3' 5' 1' 0' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUtc,The following statement contains a magic number: DateTime expected = new DateTime(2011' 3' 4' 22' 0' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUtc,The following statement contains a magic number: DateTime expected = new DateTime(2011' 3' 4' 22' 0' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUtc,The following statement contains a magic number: DateTime expected = new DateTime(2011' 3' 4' 22' 0' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUtc,The following statement contains a magic number: DateTime expected = new DateTime(2011' 3' 4' 22' 0' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUtc_InRangeAfterUtcAdjustment,The following statement contains a magic number: var zdt = new LocalDateTime(0' 12' 31' 23' 30).InZoneStrictly(zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUtc_InRangeAfterUtcAdjustment,The following statement contains a magic number: var zdt = new LocalDateTime(0' 12' 31' 23' 30).InZoneStrictly(zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUtc_InRangeAfterUtcAdjustment,The following statement contains a magic number: var zdt = new LocalDateTime(0' 12' 31' 23' 30).InZoneStrictly(zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUtc_InRangeAfterUtcAdjustment,The following statement contains a magic number: var zdt = new LocalDateTime(0' 12' 31' 23' 30).InZoneStrictly(zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUtc_InRangeAfterUtcAdjustment,The following statement contains a magic number: var expected = new DateTime(1' 1' 1' 0' 30' 0' DateTimeKind.Utc);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUnspecified,The following statement contains a magic number: ZonedDateTime zoned = SampleZone.AtStrictly(new LocalDateTime(2011' 3' 5' 1' 0' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUnspecified,The following statement contains a magic number: ZonedDateTime zoned = SampleZone.AtStrictly(new LocalDateTime(2011' 3' 5' 1' 0' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUnspecified,The following statement contains a magic number: ZonedDateTime zoned = SampleZone.AtStrictly(new LocalDateTime(2011' 3' 5' 1' 0' 0));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUnspecified,The following statement contains a magic number: DateTime expected = new DateTime(2011' 3' 5' 1' 0' 0' DateTimeKind.Unspecified);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUnspecified,The following statement contains a magic number: DateTime expected = new DateTime(2011' 3' 5' 1' 0' 0' DateTimeKind.Unspecified);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToDateTimeUnspecified,The following statement contains a magic number: DateTime expected = new DateTime(2011' 3' 5' 1' 0' 0' DateTimeKind.Unspecified);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToOffsetDateTime,The following statement contains a magic number: var local = new LocalDateTime(1911' 3' 5' 1' 0' 0);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToOffsetDateTime,The following statement contains a magic number: var local = new LocalDateTime(1911' 3' 5' 1' 0' 0);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ToOffsetDateTime,The following statement contains a magic number: var local = new LocalDateTime(1911' 3' 5' 1' 0' 0);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var sample = zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 30)).First();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var sample = zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 30)).First();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var sample = zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 30)).First();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var sample = zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 30)).First();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var fromUtc = Instant.FromUtc(2011' 6' 12' 21' 30).InZone(zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var fromUtc = Instant.FromUtc(2011' 6' 12' 21' 30).InZone(zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var fromUtc = Instant.FromUtc(2011' 6' 12' 21' 30).InZone(zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var fromUtc = Instant.FromUtc(2011' 6' 12' 21' 30).InZone(zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var fromUtc = Instant.FromUtc(2011' 6' 12' 21' 30).InZone(zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(sample' fromUtc' Instant.FromUtc(2011' 6' 12' 21' 30).InUtc());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(sample' fromUtc' Instant.FromUtc(2011' 6' 12' 21' 30).InUtc());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(sample' fromUtc' Instant.FromUtc(2011' 6' 12' 21' 30).InUtc());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(sample' fromUtc' Instant.FromUtc(2011' 6' 12' 21' 30).InUtc());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsStruct(sample' fromUtc' Instant.FromUtc(2011' 6' 12' 21' 30).InUtc());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: TestHelper.TestOperatorEquality(sample' fromUtc' Instant.FromUtc(2011' 6' 12' 21' 30).InUtc());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: TestHelper.TestOperatorEquality(sample' fromUtc' Instant.FromUtc(2011' 6' 12' 21' 30).InUtc());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: TestHelper.TestOperatorEquality(sample' fromUtc' Instant.FromUtc(2011' 6' 12' 21' 30).InUtc());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: TestHelper.TestOperatorEquality(sample' fromUtc' Instant.FromUtc(2011' 6' 12' 21' 30).InUtc());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: TestHelper.TestOperatorEquality(sample' fromUtc' Instant.FromUtc(2011' 6' 12' 21' 30).InUtc());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var later = zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 30)).Last();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var later = zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 30)).Last();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var later = zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 30)).Last();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var later = zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 30)).Last();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: Assert.AreNotEqual(sample' zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 29)).First());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: Assert.AreNotEqual(sample' zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 29)).First());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: Assert.AreNotEqual(sample' zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 29)).First());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: Assert.AreNotEqual(sample' zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 29)).First());
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var withOtherCalendar = zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 30' CalendarSystem.Gregorian)).First();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var withOtherCalendar = zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 30' CalendarSystem.Gregorian)).First();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var withOtherCalendar = zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 30' CalendarSystem.Gregorian)).First();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Equality,The following statement contains a magic number: var withOtherCalendar = zone.MapLocal(new LocalDateTime(2011' 6' 13' 1' 30' CalendarSystem.Gregorian)).First();
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Constructor_ArgumentValidation,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => new ZonedDateTime(Instant.FromUnixTimeTicks(1000)' null!));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Constructor_ArgumentValidation,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => new ZonedDateTime(Instant.FromUnixTimeTicks(1000)' null!' CalendarSystem.Iso));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Constructor_ArgumentValidation,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => new ZonedDateTime(Instant.FromUnixTimeTicks(1000)' SampleZone' null!));
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidUnambiguousOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidUnambiguousOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidUnambiguousOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidUnambiguousOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidUnambiguousOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidUnambiguousOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidUnambiguousOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2000' 1' 2' 3' 4' 5);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidUnambiguousOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2000' 1' 2' 3' 4' 5);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidUnambiguousOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2000' 1' 2' 3' 4' 5);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidUnambiguousOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2000' 1' 2' 3' 4' 5);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidUnambiguousOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2000' 1' 2' 3' 4' 5);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidEarlierOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidEarlierOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidEarlierOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidEarlierOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidEarlierOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidEarlierOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidEarlierOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2011' 6' 13' 1' 30);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidEarlierOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2011' 6' 13' 1' 30);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidEarlierOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2011' 6' 13' 1' 30);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidEarlierOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2011' 6' 13' 1' 30);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidLaterOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidLaterOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidLaterOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidLaterOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidLaterOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidLaterOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidLaterOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2011' 6' 13' 1' 30);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidLaterOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2011' 6' 13' 1' 30);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidLaterOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2011' 6' 13' 1' 30);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_ValidLaterOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2011' 6' 13' 1' 30);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_InvalidOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_InvalidOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_InvalidOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_InvalidOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_InvalidOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_InvalidOffset,The following statement contains a magic number: SingleTransitionDateTimeZone zone = new SingleTransitionDateTimeZone(Instant.FromUtc(2011' 6' 12' 22' 0)' 4' 3);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Construct_FromLocal_InvalidOffset,The following statement contains a magic number: LocalDateTime local = new LocalDateTime(2000' 1' 1' 0' 0' 0);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Iso,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Bcl,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Bcl,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Bcl,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Bcl,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Bcl,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Bcl,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_Bcl,The following statement contains a magic number: var value = new ZonedDateTime(new LocalDateTime(2013' 4' 12' 17' 53' 23).WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var localDateTime = new LocalDateTime(2013' 6' 12' 17' 53' 23' CalendarSystem.Julian);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var localDateTime = new LocalDateTime(2013' 6' 12' 17' 53' 23' CalendarSystem.Julian);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var localDateTime = new LocalDateTime(2013' 6' 12' 17' 53' 23' CalendarSystem.Julian);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var localDateTime = new LocalDateTime(2013' 6' 12' 17' 53' 23' CalendarSystem.Julian);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var localDateTime = new LocalDateTime(2013' 6' 12' 17' 53' 23' CalendarSystem.Julian);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var localDateTime = new LocalDateTime(2013' 6' 12' 17' 53' 23' CalendarSystem.Julian);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,XmlSerialization_NonIso,The following statement contains a magic number: var value = new ZonedDateTime(localDateTime.WithOffset(Offset.FromHours(-4))' zone);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ZonedDateTime_ToString,The following statement contains a magic number: var local = new LocalDateTime(2013' 7' 23' 13' 05' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ZonedDateTime_ToString,The following statement contains a magic number: var local = new LocalDateTime(2013' 7' 23' 13' 05' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ZonedDateTime_ToString,The following statement contains a magic number: var local = new LocalDateTime(2013' 7' 23' 13' 05' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ZonedDateTime_ToString,The following statement contains a magic number: var local = new LocalDateTime(2013' 7' 23' 13' 05' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ZonedDateTime_ToString,The following statement contains a magic number: var local = new LocalDateTime(2013' 7' 23' 13' 05' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ZonedDateTime_ToString,The following statement contains a magic number: var local = new LocalDateTime(2013' 7' 23' 13' 05' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ZonedDateTime_ToString_WithFormat,The following statement contains a magic number: var local = new LocalDateTime(2013' 7' 23' 13' 05' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ZonedDateTime_ToString_WithFormat,The following statement contains a magic number: var local = new LocalDateTime(2013' 7' 23' 13' 05' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ZonedDateTime_ToString_WithFormat,The following statement contains a magic number: var local = new LocalDateTime(2013' 7' 23' 13' 05' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ZonedDateTime_ToString_WithFormat,The following statement contains a magic number: var local = new LocalDateTime(2013' 7' 23' 13' 05' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ZonedDateTime_ToString_WithFormat,The following statement contains a magic number: var local = new LocalDateTime(2013' 7' 23' 13' 05' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,ZonedDateTime_ToString_WithFormat,The following statement contains a magic number: var local = new LocalDateTime(2013' 7' 23' 13' 05' 20);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var londonEvening = new LocalDateTime(2014' 7' 9' 20' 32).InZoneStrictly(london);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var londonEvening = new LocalDateTime(2014' 7' 9' 20' 32).InZoneStrictly(london);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var londonEvening = new LocalDateTime(2014' 7' 9' 20' 32).InZoneStrictly(london);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var londonEvening = new LocalDateTime(2014' 7' 9' 20' 32).InZoneStrictly(london);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var londonEvening = new LocalDateTime(2014' 7' 9' 20' 32).InZoneStrictly(london);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var losAngelesAfternoon = new LocalDateTime(2014' 7' 9' 14' 0).InZoneStrictly(losAngeles);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var losAngelesAfternoon = new LocalDateTime(2014' 7' 9' 14' 0).InZoneStrictly(losAngeles);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var losAngelesAfternoon = new LocalDateTime(2014' 7' 9' 14' 0).InZoneStrictly(losAngeles);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,LocalComparer,The following statement contains a magic number: var losAngelesAfternoon = new LocalDateTime(2014' 7' 9' 14' 0).InZoneStrictly(losAngeles);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var londonEvening = new LocalDateTime(2014' 7' 9' 20' 32).InZoneStrictly(london);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var londonEvening = new LocalDateTime(2014' 7' 9' 20' 32).InZoneStrictly(london);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var londonEvening = new LocalDateTime(2014' 7' 9' 20' 32).InZoneStrictly(london);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var londonEvening = new LocalDateTime(2014' 7' 9' 20' 32).InZoneStrictly(london);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var londonEvening = new LocalDateTime(2014' 7' 9' 20' 32).InZoneStrictly(london);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var losAngelesAfternoon = new LocalDateTime(2014' 7' 9' 14' 0).InZoneStrictly(losAngeles);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var losAngelesAfternoon = new LocalDateTime(2014' 7' 9' 14' 0).InZoneStrictly(losAngeles);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var losAngelesAfternoon = new LocalDateTime(2014' 7' 9' 14' 0).InZoneStrictly(losAngeles);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var losAngelesAfternoon = new LocalDateTime(2014' 7' 9' 14' 0).InZoneStrictly(losAngeles);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var losAngelesLunchtime = new LocalDateTime(2014' 7' 9' 12' 32).InZoneStrictly(losAngeles);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var losAngelesLunchtime = new LocalDateTime(2014' 7' 9' 12' 32).InZoneStrictly(losAngeles);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var losAngelesLunchtime = new LocalDateTime(2014' 7' 9' 12' 32).InZoneStrictly(losAngeles);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var losAngelesLunchtime = new LocalDateTime(2014' 7' 9' 12' 32).InZoneStrictly(losAngeles);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,InstantComparer,The following statement contains a magic number: var losAngelesLunchtime = new LocalDateTime(2014' 7' 9' 12' 32).InZoneStrictly(losAngeles);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Deconstruction,The following statement contains a magic number: ZonedDateTime value = new LocalDateTime(2017' 10' 15' 21' 30' 15).InZoneStrictly(saoPaulo);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Deconstruction,The following statement contains a magic number: ZonedDateTime value = new LocalDateTime(2017' 10' 15' 21' 30' 15).InZoneStrictly(saoPaulo);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Deconstruction,The following statement contains a magic number: ZonedDateTime value = new LocalDateTime(2017' 10' 15' 21' 30' 15).InZoneStrictly(saoPaulo);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Deconstruction,The following statement contains a magic number: ZonedDateTime value = new LocalDateTime(2017' 10' 15' 21' 30' 15).InZoneStrictly(saoPaulo);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Deconstruction,The following statement contains a magic number: ZonedDateTime value = new LocalDateTime(2017' 10' 15' 21' 30' 15).InZoneStrictly(saoPaulo);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Deconstruction,The following statement contains a magic number: ZonedDateTime value = new LocalDateTime(2017' 10' 15' 21' 30' 15).InZoneStrictly(saoPaulo);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var expectedDateTime = new LocalDateTime(2017' 10' 15' 21' 30' 15);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var expectedDateTime = new LocalDateTime(2017' 10' 15' 21' 30' 15);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var expectedDateTime = new LocalDateTime(2017' 10' 15' 21' 30' 15);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var expectedDateTime = new LocalDateTime(2017' 10' 15' 21' 30' 15);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var expectedDateTime = new LocalDateTime(2017' 10' 15' 21' 30' 15);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var expectedDateTime = new LocalDateTime(2017' 10' 15' 21' 30' 15);
Magic Number,NodaTime.Test,ZonedDateTimeTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\ZonedDateTimeTest.cs,Deconstruction,The following statement contains a magic number: var expectedOffset = Offset.FromHours(-2);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BadiEpoch,The following statement contains a magic number: LocalDate expected = new LocalDate(1844' 3' 21);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BadiEpoch,The following statement contains a magic number: LocalDate expected = new LocalDate(1844' 3' 21);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BadiEpoch,The following statement contains a magic number: LocalDate expected = new LocalDate(1844' 3' 21);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,UnixEpoch,The following statement contains a magic number: LocalDate expected = CreateBadiDate(126' 16' 2);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,UnixEpoch,The following statement contains a magic number: LocalDate expected = CreateBadiDate(126' 16' 2);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,UnixEpoch,The following statement contains a magic number: LocalDate expected = CreateBadiDate(126' 16' 2);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: LocalDate iso = new LocalDate(2017' 3' 4);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: LocalDate iso = new LocalDate(2017' 3' 4);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: LocalDate iso = new LocalDate(2017' 3' 4);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: Assert.AreEqual(19' BadiMonth(badi));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: Assert.AreEqual(173' badi.YearOfEra);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: Assert.AreEqual(173' badi.Year);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: Assert.IsFalse(badiCalendar.IsLeapYear(173));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: Assert.AreEqual(4' BadiDay(badi));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,LeapYear,The following statement contains a magic number: Assert.IsFalse(calendar.IsLeapYear(172));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,LeapYear,The following statement contains a magic number: Assert.IsFalse(calendar.IsLeapYear(173));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,LeapYear,The following statement contains a magic number: Assert.IsTrue(calendar.IsLeapYear(207));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,LeapYear,The following statement contains a magic number: Assert.IsTrue(calendar.IsLeapYear(220));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,GetMonthsInYear,The following statement contains a magic number: Assert.AreEqual(19' calendar.GetMonthsInYear(180));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,GetMonthsInYear,The following statement contains a magic number: Assert.AreEqual(19' calendar.GetMonthsInYear(180));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,CreateDate_InAyyamiHa,The following statement contains a magic number: var d1 = CreateBadiDate(180' 0' 3);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,CreateDate_InAyyamiHa,The following statement contains a magic number: var d1 = CreateBadiDate(180' 0' 3);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,CreateDate_InAyyamiHa,The following statement contains a magic number: var d3 = CreateBadiDate(180' 18' 22);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,CreateDate_InAyyamiHa,The following statement contains a magic number: var d3 = CreateBadiDate(180' 18' 22);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,CreateDate_InAyyamiHa,The following statement contains a magic number: var d3 = CreateBadiDate(180' 18' 22);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,SetYear,The following statement contains a magic number: var d1 = CreateBadiDate(180' 1' 1);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,SetYear,The following statement contains a magic number: Assert.AreEqual(180' result.Year);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_MovingForwardNoLeapYears_WithExactResults,The following statement contains a magic number: Period expected = Period.FromDays(11);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_MovingForwardNoLeapYears_WithExactResults_2,The following statement contains a magic number: Period expected = Period.FromMonths(13) + Period.FromDays(8);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_MovingForwardNoLeapYears_WithExactResults_2,The following statement contains a magic number: Period expected = Period.FromMonths(13) + Period.FromDays(8);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_MovingForwardInLeapYear_WithExactResults,The following statement contains a magic number: Period expected = Period.FromYears(1) + Period.FromMonths(13) + Period.FromDays(9);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_MovingForwardInLeapYear_WithExactResults,The following statement contains a magic number: Period expected = Period.FromYears(1) + Period.FromMonths(13) + Period.FromDays(9);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_MovingBackwardNoLeapYears_WithExactResults,The following statement contains a magic number: Period expected = Period.FromMonths(-13) + Period.FromDays(-8);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_MovingBackwardNoLeapYears_WithExactResults,The following statement contains a magic number: Period expected = Period.FromMonths(-13) + Period.FromDays(-8);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_MovingBackward_WithExactResults,The following statement contains a magic number: Period expected = Period.FromYears(-1) + Period.FromMonths(-13) + Period.FromDays(-8);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_MovingBackward_WithExactResults,The following statement contains a magic number: Period expected = Period.FromYears(-1) + Period.FromMonths(-13) + Period.FromDays(-8);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_MovingForward_WithJustMonths,The following statement contains a magic number: Period expected = Period.FromMonths(32);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_MovingBackward_WithJustMonths,The following statement contains a magic number: Period expected = Period.FromMonths(-32);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AsymmetricForwardAndBackward,The following statement contains a magic number: LocalDate d1 = CreateBadiDate(166' 18' 4);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AsymmetricForwardAndBackward,The following statement contains a magic number: LocalDate d1 = CreateBadiDate(166' 18' 4);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AsymmetricForwardAndBackward,The following statement contains a magic number: LocalDate d1 = CreateBadiDate(166' 18' 4);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AsymmetricForwardAndBackward,The following statement contains a magic number: LocalDate d2 = CreateBadiDate(167' 1' 10);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AsymmetricForwardAndBackward,The following statement contains a magic number: LocalDate d2 = CreateBadiDate(167' 1' 10);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AsymmetricForwardAndBackward,The following statement contains a magic number: Assert.AreEqual(Period.FromMonths(2) + Period.FromDays(6)' Period.Between(d1' d2));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AsymmetricForwardAndBackward,The following statement contains a magic number: Assert.AreEqual(Period.FromMonths(2) + Period.FromDays(6)' Period.Between(d1' d2));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AsymmetricForwardAndBackward,The following statement contains a magic number: Assert.AreEqual(Period.FromMonths(-2) + Period.FromDays(-6)' Period.Between(d2' d1));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AsymmetricForwardAndBackward,The following statement contains a magic number: Assert.AreEqual(Period.FromMonths(-2) + Period.FromDays(-6)' Period.Between(d2' d1));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_EndOfMonth,The following statement contains a magic number: LocalDate d1 = CreateBadiDate(171' 5' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_EndOfMonth,The following statement contains a magic number: LocalDate d1 = CreateBadiDate(171' 5' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_EndOfMonth,The following statement contains a magic number: LocalDate d1 = CreateBadiDate(171' 5' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_EndOfMonth,The following statement contains a magic number: LocalDate d2 = CreateBadiDate(171' 6' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_EndOfMonth,The following statement contains a magic number: LocalDate d2 = CreateBadiDate(171' 6' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_EndOfMonth,The following statement contains a magic number: LocalDate d2 = CreateBadiDate(171' 6' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: LocalDate d1 = new LocalDate(2012' 2' 29).WithCalendar(CalendarSystem.Badi);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: LocalDate d1 = new LocalDate(2012' 2' 29).WithCalendar(CalendarSystem.Badi);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: LocalDate d1 = new LocalDate(2012' 2' 29).WithCalendar(CalendarSystem.Badi);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: LocalDate d2 = new LocalDate(2013' 2' 28).WithCalendar(CalendarSystem.Badi);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: LocalDate d2 = new LocalDate(2013' 2' 28).WithCalendar(CalendarSystem.Badi);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: LocalDate d2 = new LocalDate(2013' 2' 28).WithCalendar(CalendarSystem.Badi);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: Assert.AreEqual(Period.FromMonths(19) + Period.FromDays(18)' Period.Between(d1' d2));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_OnLeapYear,The following statement contains a magic number: Assert.AreEqual(Period.FromMonths(19) + Period.FromDays(18)' Period.Between(d1' d2));
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AfterLeapYear,The following statement contains a magic number: LocalDate d1 = CreateBadiDate(180' 19' 5);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AfterLeapYear,The following statement contains a magic number: LocalDate d1 = CreateBadiDate(180' 19' 5);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AfterLeapYear,The following statement contains a magic number: LocalDate d1 = CreateBadiDate(180' 19' 5);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AfterLeapYear,The following statement contains a magic number: LocalDate d2 = CreateBadiDate(181' 19' 5);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AfterLeapYear,The following statement contains a magic number: LocalDate d2 = CreateBadiDate(181' 19' 5);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,BetweenLocalDates_AfterLeapYear,The following statement contains a magic number: LocalDate d2 = CreateBadiDate(181' 19' 5);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: LocalDate start = CreateBadiDate(182' 4' 13);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: LocalDate start = CreateBadiDate(182' 4' 13);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: LocalDate start = CreateBadiDate(182' 4' 13);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: LocalDate result = start + Period.FromDays(10);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(182' 5' 4)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(182' 5' 4)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_DayCrossingMonthBoundary,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(182' 5' 4)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition,The following statement contains a magic number: var start = CreateBadiDate(182' 1' 1);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition,The following statement contains a magic number: var result = start + Period.FromDays(3);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(182' 1' 4)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(182' 1' 4)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition,The following statement contains a magic number: result = start + Period.FromDays(20);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(182' 2' 2)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(182' 2' 2)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(182' 2' 2)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_DayCrossingMonthBoundaryFromAyyamiHa,The following statement contains a magic number: var start = CreateBadiDate(182' AyyamiHaMonth' 3);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_DayCrossingMonthBoundaryFromAyyamiHa,The following statement contains a magic number: var start = CreateBadiDate(182' AyyamiHaMonth' 3);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_DayCrossingMonthBoundaryFromAyyamiHa,The following statement contains a magic number: var result = start + Period.FromDays(10);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_DayCrossingMonthBoundaryFromAyyamiHa,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(182' 19' 8)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_DayCrossingMonthBoundaryFromAyyamiHa,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(182' 19' 8)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_DayCrossingMonthBoundaryFromAyyamiHa,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(182' 19' 8)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_OneYearOnLeapDay,The following statement contains a magic number: LocalDate start = CreateBadiDate(182' AyyamiHaMonth' 5);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_OneYearOnLeapDay,The following statement contains a magic number: LocalDate start = CreateBadiDate(182' AyyamiHaMonth' 5);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_OneYearOnLeapDay,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(183' AyyamiHaMonth' 4)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_OneYearOnLeapDay,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(183' AyyamiHaMonth' 4)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_FiveYearsOnLeapDay,The following statement contains a magic number: LocalDate start = CreateBadiDate(182' AyyamiHaMonth' 5);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_FiveYearsOnLeapDay,The following statement contains a magic number: LocalDate start = CreateBadiDate(182' AyyamiHaMonth' 5);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_FiveYearsOnLeapDay,The following statement contains a magic number: LocalDate result = start + Period.FromYears(5);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_FiveYearsOnLeapDay,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(187' AyyamiHaMonth' 5)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_FiveYearsOnLeapDay,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(187' AyyamiHaMonth' 5)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_YearMonthDay,The following statement contains a magic number: Period period = Period.FromYears(1) + Period.FromMonths(1) + Period.FromDays(2);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_YearMonthDay,The following statement contains a magic number: LocalDate start = CreateBadiDate(171' 1' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_YearMonthDay,The following statement contains a magic number: LocalDate start = CreateBadiDate(171' 1' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_YearMonthDay,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(172' 3' 2)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_YearMonthDay,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(172' 3' 2)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,Addition_YearMonthDay,The following statement contains a magic number: Assert.AreEqual(CreateBadiDate(172' 3' 2)' result);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,PlusMonths_Overflow,The following statement contains a magic number: var lateDate = new LocalDate(calendar.MaxYear' 19' 1' calendar);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiDay,The following statement contains a magic number: Assert.AreEqual(BadiDay(CreateBadiDate(180' 10' 10))' 10);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiDay,The following statement contains a magic number: Assert.AreEqual(BadiDay(CreateBadiDate(180' 10' 10))' 10);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiDay,The following statement contains a magic number: Assert.AreEqual(BadiDay(CreateBadiDate(180' 10' 10))' 10);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiDay,The following statement contains a magic number: Assert.AreEqual(BadiDay(CreateBadiDate(180' 10' 10))' 10);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiDay,The following statement contains a magic number: Assert.AreEqual(BadiDay(CreateBadiDate(180' 18' 19))' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiDay,The following statement contains a magic number: Assert.AreEqual(BadiDay(CreateBadiDate(180' 18' 19))' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiDay,The following statement contains a magic number: Assert.AreEqual(BadiDay(CreateBadiDate(180' 18' 19))' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiDay,The following statement contains a magic number: Assert.AreEqual(BadiDay(CreateBadiDate(180' 18' 19))' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiDay,The following statement contains a magic number: Assert.AreEqual(BadiDay(CreateBadiDate(180' 0' 3))' 3);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiDay,The following statement contains a magic number: Assert.AreEqual(BadiDay(CreateBadiDate(180' 0' 3))' 3);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiDay,The following statement contains a magic number: Assert.AreEqual(BadiDay(CreateBadiDate(180' 0' 3))' 3);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiDay,The following statement contains a magic number: Assert.AreEqual(BadiDay(CreateBadiDate(180' 19' 1))' 1);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiDay,The following statement contains a magic number: Assert.AreEqual(BadiDay(CreateBadiDate(180' 19' 1))' 1);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiMonth,The following statement contains a magic number: Assert.AreEqual(BadiMonth(CreateBadiDate(180' 10' 10))' 10);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiMonth,The following statement contains a magic number: Assert.AreEqual(BadiMonth(CreateBadiDate(180' 10' 10))' 10);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiMonth,The following statement contains a magic number: Assert.AreEqual(BadiMonth(CreateBadiDate(180' 10' 10))' 10);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiMonth,The following statement contains a magic number: Assert.AreEqual(BadiMonth(CreateBadiDate(180' 10' 10))' 10);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiMonth,The following statement contains a magic number: Assert.AreEqual(BadiMonth(CreateBadiDate(180' 18' 19))' 18);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiMonth,The following statement contains a magic number: Assert.AreEqual(BadiMonth(CreateBadiDate(180' 18' 19))' 18);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiMonth,The following statement contains a magic number: Assert.AreEqual(BadiMonth(CreateBadiDate(180' 18' 19))' 18);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiMonth,The following statement contains a magic number: Assert.AreEqual(BadiMonth(CreateBadiDate(180' 18' 19))' 18);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiMonth,The following statement contains a magic number: Assert.AreEqual(BadiMonth(CreateBadiDate(180' 0' 3))' 0);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiMonth,The following statement contains a magic number: Assert.AreEqual(BadiMonth(CreateBadiDate(180' 0' 3))' 0);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiMonth,The following statement contains a magic number: Assert.AreEqual(BadiMonth(CreateBadiDate(180' 19' 1))' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiMonth,The following statement contains a magic number: Assert.AreEqual(BadiMonth(CreateBadiDate(180' 19' 1))' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_BadiMonth,The following statement contains a magic number: Assert.AreEqual(BadiMonth(CreateBadiDate(180' 19' 1))' 19);
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_AsBadiString,The following statement contains a magic number: Assert.AreEqual(AsBadiString(CreateBadiDate(180' 10' 10))' "180-10-10");
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_AsBadiString,The following statement contains a magic number: Assert.AreEqual(AsBadiString(CreateBadiDate(180' 10' 10))' "180-10-10");
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_AsBadiString,The following statement contains a magic number: Assert.AreEqual(AsBadiString(CreateBadiDate(180' 10' 10))' "180-10-10");
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_AsBadiString,The following statement contains a magic number: Assert.AreEqual(AsBadiString(CreateBadiDate(180' 18' 19))' "180-18-19");
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_AsBadiString,The following statement contains a magic number: Assert.AreEqual(AsBadiString(CreateBadiDate(180' 18' 19))' "180-18-19");
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_AsBadiString,The following statement contains a magic number: Assert.AreEqual(AsBadiString(CreateBadiDate(180' 18' 19))' "180-18-19");
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_AsBadiString,The following statement contains a magic number: Assert.AreEqual(AsBadiString(CreateBadiDate(180' 0' 3))' "180-0-3");
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_AsBadiString,The following statement contains a magic number: Assert.AreEqual(AsBadiString(CreateBadiDate(180' 0' 3))' "180-0-3");
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_AsBadiString,The following statement contains a magic number: Assert.AreEqual(AsBadiString(CreateBadiDate(180' 19' 1))' "180-19-1");
Magic Number,NodaTime.Test.Calendars,BadiCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\BadiCalendarSystemTest.cs,HelperMethod_AsBadiString,The following statement contains a magic number: Assert.AreEqual(AsBadiString(CreateBadiDate(180' 19' 1))' "180-19-1");
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,CopticEpoch,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(284' 8' 29' 0' 0' julian);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,CopticEpoch,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(284' 8' 29' 0' 0' julian);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,CopticEpoch,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(284' 8' 29' 0' 0' julian);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,UnixEpoch,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(1686' 4' 23' 0' 0' coptic);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,UnixEpoch,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(1686' 4' 23' 0' 0' coptic);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,UnixEpoch,The following statement contains a magic number: LocalDateTime expected = new LocalDateTime(1686' 4' 23' 0' 0' coptic);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: LocalDateTime iso = new LocalDateTime(2004' 6' 9' 0' 0' 0' 0);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: LocalDateTime iso = new LocalDateTime(2004' 6' 9' 0' 0' 0' 0);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: LocalDateTime iso = new LocalDateTime(2004' 6' 9' 0' 0' 0' 0);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: Assert.AreEqual(1720' coptic.YearOfEra);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: Assert.AreEqual(1720' coptic.Year);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: Assert.IsFalse(copticCalendar.IsLeapYear(1720));
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: Assert.AreEqual(10' coptic.Month);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: Assert.AreEqual(2' coptic.Day);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: Assert.AreEqual(9 * 30 + 2' coptic.DayOfYear);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: Assert.AreEqual(9 * 30 + 2' coptic.DayOfYear);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,SampleDate,The following statement contains a magic number: Assert.AreEqual(9 * 30 + 2' coptic.DayOfYear);
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,InvalidEra,The following statement contains a magic number: Assert.Throws<ArgumentNullException>(() => CalendarSystem.Coptic.GetAbsoluteYear(1720' null!));
Magic Number,NodaTime.Test.Calendars,CopticCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\CopticCalendarSystemTest.cs,InvalidEra,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => CalendarSystem.Coptic.GetAbsoluteYear(1720' Era.AnnoHegirae));
Magic Number,NodaTime.Test.Calendars,GregorianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\GregorianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsFalse(calendar.IsLeapYear(1900));
Magic Number,NodaTime.Test.Calendars,GregorianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\GregorianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsFalse(calendar.IsLeapYear(1901));
Magic Number,NodaTime.Test.Calendars,GregorianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\GregorianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsTrue(calendar.IsLeapYear(1904));
Magic Number,NodaTime.Test.Calendars,GregorianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\GregorianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsTrue(calendar.IsLeapYear(1996));
Magic Number,NodaTime.Test.Calendars,GregorianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\GregorianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsTrue(calendar.IsLeapYear(2000));
Magic Number,NodaTime.Test.Calendars,GregorianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\GregorianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsFalse(calendar.IsLeapYear(2100));
Magic Number,NodaTime.Test.Calendars,GregorianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\GregorianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsTrue(calendar.IsLeapYear(2400));
Magic Number,NodaTime.Test.Calendars,GregorianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\GregorianCalendarSystemTest.cs,AddMonths_BoundaryCondition,The following statement contains a magic number: var start = new LocalDate(2017' 8' 20);
Magic Number,NodaTime.Test.Calendars,GregorianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\GregorianCalendarSystemTest.cs,AddMonths_BoundaryCondition,The following statement contains a magic number: var start = new LocalDate(2017' 8' 20);
Magic Number,NodaTime.Test.Calendars,GregorianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\GregorianCalendarSystemTest.cs,AddMonths_BoundaryCondition,The following statement contains a magic number: var start = new LocalDate(2017' 8' 20);
Magic Number,NodaTime.Test.Calendars,GregorianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\GregorianCalendarSystemTest.cs,AddMonths_BoundaryCondition,The following statement contains a magic number: var end = start.PlusMonths(-19);
Magic Number,NodaTime.Test.Calendars,GregorianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\GregorianCalendarSystemTest.cs,AddMonths_BoundaryCondition,The following statement contains a magic number: var expected = new LocalDate(2016' 1' 20);
Magic Number,NodaTime.Test.Calendars,GregorianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\GregorianCalendarSystemTest.cs,AddMonths_BoundaryCondition,The following statement contains a magic number: var expected = new LocalDate(2016' 1' 20);
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,SetYear,The following statement contains a magic number: var pattern = LocalDatePattern.CreateWithInvariantCulture("uuuu-MM-dd")                  .WithTemplateValue(new LocalDate(5774' 1' 1' scriptural));
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,AddMonths_MonthsBetween,The following statement contains a magic number: var pattern = LocalDatePattern.CreateWithInvariantCulture("uuuu-MM-dd")                  .WithTemplateValue(new LocalDate(5774' 1' 1' civil));
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,MonthsBetween,The following statement contains a magic number: var pattern = LocalDatePattern.CreateWithInvariantCulture("uuuu-MM-dd")                  .WithTemplateValue(new LocalDate(5774' 1' 1' civil));
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,MonthsBetween_TimeOfDay,The following statement contains a magic number: var start = new LocalDateTime(5774' 5' 10' 15' 0' civil);
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,MonthsBetween_TimeOfDay,The following statement contains a magic number: var start = new LocalDateTime(5774' 5' 10' 15' 0' civil);
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,MonthsBetween_TimeOfDay,The following statement contains a magic number: var start = new LocalDateTime(5774' 5' 10' 15' 0' civil);
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,MonthsBetween_TimeOfDay,The following statement contains a magic number: var start = new LocalDateTime(5774' 5' 10' 15' 0' civil);
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,MonthsBetween_TimeOfDay,The following statement contains a magic number: var end = new LocalDateTime(5774' 7' 10' 5' 0' civil);
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,MonthsBetween_TimeOfDay,The following statement contains a magic number: var end = new LocalDateTime(5774' 7' 10' 5' 0' civil);
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,MonthsBetween_TimeOfDay,The following statement contains a magic number: var end = new LocalDateTime(5774' 7' 10' 5' 0' civil);
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,MonthsBetween_TimeOfDay,The following statement contains a magic number: var end = new LocalDateTime(5774' 7' 10' 5' 0' civil);
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,DayOfYearAndReverse,The following statement contains a magic number: year < 5419
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,GetDaysSinceEpoch,The following statement contains a magic number: var unixEpoch = new YearMonthDay(5730' 10' 23);
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,GetDaysSinceEpoch,The following statement contains a magic number: var unixEpoch = new YearMonthDay(5730' 10' 23);
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,GetDaysSinceEpoch,The following statement contains a magic number: var unixEpoch = new YearMonthDay(5730' 10' 23);
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,DaysAtStartOfYear,The following statement contains a magic number: Assert.AreEqual(-110' calculator.GetStartOfYearInDays(5730));
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,DaysAtStartOfYear,The following statement contains a magic number: Assert.AreEqual(-110' calculator.GetStartOfYearInDays(5730));
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,DaysAtStartOfYear,The following statement contains a magic number: Assert.AreEqual(273' calculator.GetStartOfYearInDays(5731));
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,DaysAtStartOfYear,The following statement contains a magic number: Assert.AreEqual(273' calculator.GetStartOfYearInDays(5731));
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,DaysAtStartOfYear,The following statement contains a magic number: Assert.AreEqual(-140735' calculator.GetStartOfYearInDays(5345));
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,DaysAtStartOfYear,The following statement contains a magic number: Assert.AreEqual(-140735' calculator.GetStartOfYearInDays(5345));
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,DaysAtStartOfYear,The following statement contains a magic number: Assert.AreEqual(new YearMonthDay(5345' 1' 1)' calculator.GetYearMonthDay(-140529));
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,DaysAtStartOfYear,The following statement contains a magic number: Assert.AreEqual(new YearMonthDay(5345' 1' 1)' calculator.GetYearMonthDay(-140529));
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,ScripturalGetDaysFromStartOfYearToStartOfMonth_InvalidForCoverage,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => HebrewScripturalCalculator.GetDaysFromStartOfYearToStartOfMonth(5502' 0));
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,PlusMonths_Overflow,The following statement contains a magic number: var lateDate = new LocalDate(calendar.MaxYear' 12' 1' calendar);
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,PlusMonths_Overflow,The following statement contains a magic number: Assert.Throws<OverflowException>(() => earlyDate.PlusMonths(-7));
Magic Number,NodaTime.Test.Calendars,HebrewCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\HebrewCalendarSystemTest.cs,PlusMonths_Overflow,The following statement contains a magic number: Assert.Throws<OverflowException>(() => lateDate.PlusMonths(7));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate1,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(1945' 11' 12' 0' 0' 0' 0' CalendarSystem.Iso);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate1,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(1945' 11' 12' 0' 0' 0' 0' CalendarSystem.Iso);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate1,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(1945' 11' 12' 0' 0' 0' 0' CalendarSystem.Iso);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate1,The following statement contains a magic number: Assert.AreEqual(1364' ldt.YearOfEra);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate1,The following statement contains a magic number: Assert.AreEqual(1364' ldt.Year);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate1,The following statement contains a magic number: Assert.AreEqual(12' ldt.Month);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate1,The following statement contains a magic number: Assert.AreEqual(6' ldt.Day);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate1,The following statement contains a magic number: Assert.AreEqual(6 * 30 + 5 * 29 + 6' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate1,The following statement contains a magic number: Assert.AreEqual(6 * 30 + 5 * 29 + 6' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate1,The following statement contains a magic number: Assert.AreEqual(6 * 30 + 5 * 29 + 6' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate1,The following statement contains a magic number: Assert.AreEqual(6 * 30 + 5 * 29 + 6' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate1,The following statement contains a magic number: Assert.AreEqual(6 * 30 + 5 * 29 + 6' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate2,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(2005' 11' 26' 0' 0' 0' 0' CalendarSystem.Iso);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate2,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(2005' 11' 26' 0' 0' 0' 0' CalendarSystem.Iso);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate2,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(2005' 11' 26' 0' 0' 0' 0' CalendarSystem.Iso);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate2,The following statement contains a magic number: Assert.AreEqual(1426' ldt.YearOfEra);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate2,The following statement contains a magic number: Assert.AreEqual(1426' ldt.Year);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate2,The following statement contains a magic number: Assert.AreEqual(10' ldt.Month);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate2,The following statement contains a magic number: Assert.AreEqual(24' ldt.Day);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate2,The following statement contains a magic number: Assert.AreEqual(5 * 30 + 4 * 29 + 24' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate2,The following statement contains a magic number: Assert.AreEqual(5 * 30 + 4 * 29 + 24' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate2,The following statement contains a magic number: Assert.AreEqual(5 * 30 + 4 * 29 + 24' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate2,The following statement contains a magic number: Assert.AreEqual(5 * 30 + 4 * 29 + 24' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate2,The following statement contains a magic number: Assert.AreEqual(5 * 30 + 4 * 29 + 24' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate3,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(1426' 12' 24' 0' 0' 0' 0' SampleCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate3,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(1426' 12' 24' 0' 0' 0' 0' SampleCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate3,The following statement contains a magic number: LocalDateTime ldt = new LocalDateTime(1426' 12' 24' 0' 0' 0' 0' SampleCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate3,The following statement contains a magic number: Assert.AreEqual(1426' ldt.Year);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate3,The following statement contains a magic number: Assert.AreEqual(12' ldt.Month);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate3,The following statement contains a magic number: Assert.AreEqual(24' ldt.Day);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate3,The following statement contains a magic number: Assert.AreEqual(6 * 30 + 5 * 29 + 24' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate3,The following statement contains a magic number: Assert.AreEqual(6 * 30 + 5 * 29 + 24' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate3,The following statement contains a magic number: Assert.AreEqual(6 * 30 + 5 * 29 + 24' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate3,The following statement contains a magic number: Assert.AreEqual(6 * 30 + 5 * 29 + 24' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDate3,The following statement contains a magic number: Assert.AreEqual(6 * 30 + 5 * 29 + 24' ldt.DayOfYear);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,InternalConsistency,The following statement contains a magic number: month <= 12
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,InternalConsistency,The following statement contains a magic number: year <= 30
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(2));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(3));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(4));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(5));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(6));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(7));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(8));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(9));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(10));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(11));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(12));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(13));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(14));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(15));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(16));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(17));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(18));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(19));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(20));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(21));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(22));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(23));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(24));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(25));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(26));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(27));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(28));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(29));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base15LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(30));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(2));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(3));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(4));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(5));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(6));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(7));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(8));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(9));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(10));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(11));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(12));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(13));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(14));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(15));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(16));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(17));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(18));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(19));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(20));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(21));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(22));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(23));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(24));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(25));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(26));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(27));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(28));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(29));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Base16LeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(30));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(2));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(3));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(4));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(5));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(6));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(7));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(8));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(9));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(10));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(11));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(12));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(13));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(14));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(15));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(16));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(17));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(18));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(19));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(20));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(21));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(22));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(23));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(24));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(25));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(26));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(27));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(28));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(29));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,IndianBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(30));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(2));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(3));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(4));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(5));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(6));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(7));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(8));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(9));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(10));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(11));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(12));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(13));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(14));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(15));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(16));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(17));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(18));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(19));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(20));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(21));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(22));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(23));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(24));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(25));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(26));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(27));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(28));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(false' calendar.IsLeapYear(29));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,HabashAlHasibBasedLeapYear,The following statement contains a magic number: Assert.AreEqual(true' calendar.IsLeapYear(30));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,ThursdayEpoch,The following statement contains a magic number: LocalDate thursdayEpochJulian = new LocalDate(622' 7' 15' julianCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,ThursdayEpoch,The following statement contains a magic number: LocalDate thursdayEpochJulian = new LocalDate(622' 7' 15' julianCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,ThursdayEpoch,The following statement contains a magic number: LocalDate thursdayEpochJulian = new LocalDate(622' 7' 15' julianCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,FridayEpoch,The following statement contains a magic number: LocalDate fridayEpochJulian = new LocalDate(622' 7' 16' julianCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,FridayEpoch,The following statement contains a magic number: LocalDate fridayEpochJulian = new LocalDate(622' 7' 16' julianCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,FridayEpoch,The following statement contains a magic number: LocalDate fridayEpochJulian = new LocalDate(622' 7' 16' julianCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,BclUsesAstronomicalEpoch,The following statement contains a magic number: LocalDate julianIslamicEpoch = new LocalDate(622' 7' 15' julianCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,BclUsesAstronomicalEpoch,The following statement contains a magic number: LocalDate julianIslamicEpoch = new LocalDate(622' 7' 15' julianCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,BclUsesAstronomicalEpoch,The following statement contains a magic number: LocalDate julianIslamicEpoch = new LocalDate(622' 7' 15' julianCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDateBclCompatibility,The following statement contains a magic number: DateTime bclDirect = hijri.ToDateTime(1302' 10' 15' 0' 0' 0' 0);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDateBclCompatibility,The following statement contains a magic number: DateTime bclDirect = hijri.ToDateTime(1302' 10' 15' 0' 0' 0' 0);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDateBclCompatibility,The following statement contains a magic number: DateTime bclDirect = hijri.ToDateTime(1302' 10' 15' 0' 0' 0' 0);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDateBclCompatibility,The following statement contains a magic number: LocalDate iso = new LocalDate(1302' 10' 15' islamicCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDateBclCompatibility,The following statement contains a magic number: LocalDate iso = new LocalDate(1302' 10' 15' islamicCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,SampleDateBclCompatibility,The following statement contains a magic number: LocalDate iso = new LocalDate(1302' 10' 15' islamicCalendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 1));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 1));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 2));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 2));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 2));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 3));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 3));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 3));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 4));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 4));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 4));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 5));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 5));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 5));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 6));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 6));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 6));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 7));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 7));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 7));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 8));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 8));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 8));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 9));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 9));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 9));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 10));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 10));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 10));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 11));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 11));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(7' 11));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 12));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 12));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' calendar.GetDaysInMonth(7' 12));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(8' 12));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(8' 12));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' calendar.GetDaysInMonth(8' 12));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(5' 8' 20' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(5' 8' 20' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(5' 8' 20' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(5' 8' 20' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_Simple,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(10' 8' 20' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_Simple,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(10' 8' 20' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_Simple,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(10' 8' 20' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_Simple,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(10' 8' 20' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_Simple,The following statement contains a magic number: Assert.AreEqual(expectedEnd' start.PlusYears(5));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_TruncatesAtLeapYear,The following statement contains a magic number: Assert.IsTrue(calendar.IsLeapYear(2));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_TruncatesAtLeapYear,The following statement contains a magic number: Assert.IsFalse(calendar.IsLeapYear(3));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_TruncatesAtLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_TruncatesAtLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_TruncatesAtLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_TruncatesAtLeapYear,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_TruncatesAtLeapYear,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(3' 12' 29' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_TruncatesAtLeapYear,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(3' 12' 29' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_TruncatesAtLeapYear,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(3' 12' 29' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_TruncatesAtLeapYear,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(3' 12' 29' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_DoesNotTruncateFromOneLeapYearToAnother,The following statement contains a magic number: Assert.IsTrue(calendar.IsLeapYear(2));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_DoesNotTruncateFromOneLeapYearToAnother,The following statement contains a magic number: Assert.IsTrue(calendar.IsLeapYear(5));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_DoesNotTruncateFromOneLeapYearToAnother,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_DoesNotTruncateFromOneLeapYearToAnother,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_DoesNotTruncateFromOneLeapYearToAnother,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_DoesNotTruncateFromOneLeapYearToAnother,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_DoesNotTruncateFromOneLeapYearToAnother,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(5' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_DoesNotTruncateFromOneLeapYearToAnother,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(5' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_DoesNotTruncateFromOneLeapYearToAnother,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(5' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_DoesNotTruncateFromOneLeapYearToAnother,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(5' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusYears_DoesNotTruncateFromOneLeapYearToAnother,The following statement contains a magic number: Assert.AreEqual(expectedEnd' start.PlusYears(3));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusMonths_Simple,The following statement contains a magic number: Assert.IsTrue(calendar.IsLeapYear(2));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusMonths_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusMonths_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusMonths_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusMonths_Simple,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2' 12' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusMonths_Simple,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(3' 11' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusMonths_Simple,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(3' 11' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusMonths_Simple,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(3' 11' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusMonths_Simple,The following statement contains a magic number: LocalDateTime expectedEnd = new LocalDateTime(3' 11' 30' 2' 0' calendar);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusMonths_Simple,The following statement contains a magic number: Assert.AreEqual(11' expectedEnd.Month);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusMonths_Simple,The following statement contains a magic number: Assert.AreEqual(30' expectedEnd.Day);
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,PlusMonths_Simple,The following statement contains a magic number: Assert.AreEqual(expectedEnd' start.PlusMonths(11));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Constructor_InvalidEnumsForCoverage,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new IslamicYearMonthDayCalculator(IslamicLeapYearPattern.Base15 + 100' IslamicEpoch.Astronomical));
Magic Number,NodaTime.Test.Calendars,IslamicCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IslamicCalendarSystemTest.cs,Constructor_InvalidEnumsForCoverage,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new IslamicYearMonthDayCalculator(IslamicLeapYearPattern.Base15' IslamicEpoch.Astronomical + 100));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_UnixEpoch,The following statement contains a magic number: Assert.AreEqual(1970' epoch.Year);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_UnixEpoch,The following statement contains a magic number: Assert.AreEqual(1970' epoch.YearOfEra);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_UnixEpoch,The following statement contains a magic number: Assert.AreEqual(1970' WeekYearRules.Iso.GetWeekYear(epoch.Date));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(2009' now.Year);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(2009' now.YearOfEra);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(2009' WeekYearRules.Iso.GetWeekYear(now.Date));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(48' WeekYearRules.Iso.GetWeekOfWeekYear(now.Date));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(11' now.Month);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(27' now.Day);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(18' now.Hour);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(38' now.Minute);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(25' now.Second);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(345' now.Millisecond);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(3458765' now.TickOfSecond);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(18 * NodaConstants.TicksPerHour +                              38 * NodaConstants.TicksPerMinute +                              25 * NodaConstants.TicksPerSecond +                              3458765'                              now.TickOfDay);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(18 * NodaConstants.TicksPerHour +                              38 * NodaConstants.TicksPerMinute +                              25 * NodaConstants.TicksPerSecond +                              3458765'                              now.TickOfDay);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(18 * NodaConstants.TicksPerHour +                              38 * NodaConstants.TicksPerMinute +                              25 * NodaConstants.TicksPerSecond +                              3458765'                              now.TickOfDay);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,FieldsOf_GreatAchievement,The following statement contains a magic number: Assert.AreEqual(18 * NodaConstants.TicksPerHour +                              38 * NodaConstants.TicksPerMinute +                              25 * NodaConstants.TicksPerSecond +                              3458765'                              now.TickOfDay);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ConstructLocalInstant_WithAllFields,The following statement contains a magic number: LocalInstant localAchievement = new LocalDateTime(2009' 11' 27' 18' 38' 25' 345).PlusTicks(8765).ToLocalInstant();
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ConstructLocalInstant_WithAllFields,The following statement contains a magic number: LocalInstant localAchievement = new LocalDateTime(2009' 11' 27' 18' 38' 25' 345).PlusTicks(8765).ToLocalInstant();
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ConstructLocalInstant_WithAllFields,The following statement contains a magic number: LocalInstant localAchievement = new LocalDateTime(2009' 11' 27' 18' 38' 25' 345).PlusTicks(8765).ToLocalInstant();
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ConstructLocalInstant_WithAllFields,The following statement contains a magic number: LocalInstant localAchievement = new LocalDateTime(2009' 11' 27' 18' 38' 25' 345).PlusTicks(8765).ToLocalInstant();
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ConstructLocalInstant_WithAllFields,The following statement contains a magic number: LocalInstant localAchievement = new LocalDateTime(2009' 11' 27' 18' 38' 25' 345).PlusTicks(8765).ToLocalInstant();
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ConstructLocalInstant_WithAllFields,The following statement contains a magic number: LocalInstant localAchievement = new LocalDateTime(2009' 11' 27' 18' 38' 25' 345).PlusTicks(8765).ToLocalInstant();
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ConstructLocalInstant_WithAllFields,The following statement contains a magic number: LocalInstant localAchievement = new LocalDateTime(2009' 11' 27' 18' 38' 25' 345).PlusTicks(8765).ToLocalInstant();
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ConstructLocalInstant_WithAllFields,The following statement contains a magic number: LocalInstant localAchievement = new LocalDateTime(2009' 11' 27' 18' 38' 25' 345).PlusTicks(8765).ToLocalInstant();
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,IsLeapYear,The following statement contains a magic number: Assert.IsTrue(CalendarSystem.Iso.IsLeapYear(2012));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,IsLeapYear,The following statement contains a magic number: Assert.IsFalse(CalendarSystem.Iso.IsLeapYear(2011));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,IsLeapYear,The following statement contains a magic number: Assert.IsFalse(CalendarSystem.Iso.IsLeapYear(2100));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,IsLeapYear,The following statement contains a magic number: Assert.IsTrue(CalendarSystem.Iso.IsLeapYear(2000));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' CalendarSystem.Iso.GetDaysInMonth(2010' 9));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' CalendarSystem.Iso.GetDaysInMonth(2010' 9));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(30' CalendarSystem.Iso.GetDaysInMonth(2010' 9));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(31' CalendarSystem.Iso.GetDaysInMonth(2010' 1));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(31' CalendarSystem.Iso.GetDaysInMonth(2010' 1));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(28' CalendarSystem.Iso.GetDaysInMonth(2010' 2));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(28' CalendarSystem.Iso.GetDaysInMonth(2010' 2));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(28' CalendarSystem.Iso.GetDaysInMonth(2010' 2));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' CalendarSystem.Iso.GetDaysInMonth(2012' 2));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' CalendarSystem.Iso.GetDaysInMonth(2012' 2));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetDaysInMonth,The following statement contains a magic number: Assert.AreEqual(29' CalendarSystem.Iso.GetDaysInMonth(2012' 2));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,BeforeCommonEra,The following statement contains a magic number: Assert.AreEqual(2' localDate.YearOfEra);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,BeforeCommonEra_BySpecifyingEra,The following statement contains a magic number: LocalDate localDate = new LocalDate(Era.BeforeCommon' 2' 1' 1);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,BeforeCommonEra_BySpecifyingEra,The following statement contains a magic number: Assert.AreEqual(2' localDate.YearOfEra);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetAbsoluteYear,The following statement contains a magic number: Assert.AreEqual(-1' Iso.GetAbsoluteYear(2' Era.BeforeCommon));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ValidateYearMonthDay_AllValues_ValidValuesDoesntThrow,The following statement contains a magic number: Iso.ValidateYearMonthDay(20' 2' 20);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ValidateYearMonthDay_AllValues_ValidValuesDoesntThrow,The following statement contains a magic number: Iso.ValidateYearMonthDay(20' 2' 20);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ValidateYearMonthDay_AllValues_ValidValuesDoesntThrow,The following statement contains a magic number: Iso.ValidateYearMonthDay(20' 2' 20);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ValidateYearMonthDay_InvalidYear_Throws,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Iso.ValidateYearMonthDay(50000' 2' 20));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ValidateYearMonthDay_InvalidYear_Throws,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Iso.ValidateYearMonthDay(50000' 2' 20));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,ValidateYearMonthDay_InvalidYear_Throws,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Iso.ValidateYearMonthDay(50000' 2' 20));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetLocalInstant_InvalidMonth_Throws,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Iso.ValidateYearMonthDay(2010' 13' 20));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetLocalInstant_InvalidMonth_Throws,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Iso.ValidateYearMonthDay(2010' 13' 20));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetLocalInstant_InvalidMonth_Throws,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Iso.ValidateYearMonthDay(2010' 13' 20));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetLocalInstant_29thOfFebruaryInNonLeapYear_Throws,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Iso.ValidateYearMonthDay(2010' 2' 29));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetLocalInstant_29thOfFebruaryInNonLeapYear_Throws,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Iso.ValidateYearMonthDay(2010' 2' 29));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetLocalInstant_29thOfFebruaryInNonLeapYear_Throws,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => Iso.ValidateYearMonthDay(2010' 2' 29));
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetLocalInstant_29thOfFebruaryInLeapYear_DoesntThrow,The following statement contains a magic number: Iso.ValidateYearMonthDay(2012' 2' 29);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetLocalInstant_29thOfFebruaryInLeapYear_DoesntThrow,The following statement contains a magic number: Iso.ValidateYearMonthDay(2012' 2' 29);
Magic Number,NodaTime.Test.Calendars,IsoCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\IsoCalendarSystemTest.cs,GetLocalInstant_29thOfFebruaryInLeapYear_DoesntThrow,The following statement contains a magic number: Iso.ValidateYearMonthDay(2012' 2' 29);
Magic Number,NodaTime.Test.Calendars,JulianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\JulianCalendarSystemTest.cs,Epoch,The following statement contains a magic number: Assert.AreEqual(1969' julianEpoch.Year);
Magic Number,NodaTime.Test.Calendars,JulianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\JulianCalendarSystemTest.cs,Epoch,The following statement contains a magic number: Assert.AreEqual(12' julianEpoch.Month);
Magic Number,NodaTime.Test.Calendars,JulianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\JulianCalendarSystemTest.cs,Epoch,The following statement contains a magic number: Assert.AreEqual(19' julianEpoch.Day);
Magic Number,NodaTime.Test.Calendars,JulianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\JulianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsTrue(Julian.IsLeapYear(1900));
Magic Number,NodaTime.Test.Calendars,JulianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\JulianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsFalse(Julian.IsLeapYear(1901));
Magic Number,NodaTime.Test.Calendars,JulianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\JulianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsTrue(Julian.IsLeapYear(1904));
Magic Number,NodaTime.Test.Calendars,JulianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\JulianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsTrue(Julian.IsLeapYear(2000));
Magic Number,NodaTime.Test.Calendars,JulianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\JulianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsTrue(Julian.IsLeapYear(2100));
Magic Number,NodaTime.Test.Calendars,JulianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\JulianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsTrue(Julian.IsLeapYear(2400));
Magic Number,NodaTime.Test.Calendars,JulianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\JulianCalendarSystemTest.cs,LeapYears,The following statement contains a magic number: Assert.IsTrue(Julian.IsLeapYear(-4));
Magic Number,NodaTime.Test.Calendars,JulianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\JulianCalendarSystemTest.cs,GetAbsoluteYear,The following statement contains a magic number: Assert.AreEqual(-1' Julian.GetAbsoluteYear(2' Era.BeforeCommon));
Magic Number,NodaTime.Test.Calendars,PersianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\PersianCalendarSystemTest.cs,ArithmeticExamples,The following statement contains a magic number: Assert.AreEqual(3' gregorian.Month);
Magic Number,NodaTime.Test.Calendars,PersianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\PersianCalendarSystemTest.cs,GenerateData,The following statement contains a magic number: byte[] data = new byte[maxYear / 8 + 1];
Magic Number,NodaTime.Test.Calendars,PersianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\PersianCalendarSystemTest.cs,GenerateData,The following statement contains a magic number: data[year >> 3] |= (byte)(1 << (year & 7));
Magic Number,NodaTime.Test.Calendars,PersianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\PersianCalendarSystemTest.cs,GenerateData,The following statement contains a magic number: data[year >> 3] |= (byte)(1 << (year & 7));
Magic Number,NodaTime.Test.Calendars,PersianCalendarSystemTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\PersianCalendarSystemTest.cs,GenerateData,The following statement contains a magic number: var lineLength = 80;
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,RoundtripFirstDay_Iso7,The following statement contains a magic number: var rule = WeekYearRules.ForMinDaysInFirstWeek(7);
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,RoundtripFirstDay_Iso7,The following statement contains a magic number: var date = new LocalDate(-9998' 1' 1);
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,RoundtripLastDay_Iso1,The following statement contains a magic number: var date = new LocalDate(9999' 12' 31);
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,RoundtripLastDay_Iso1,The following statement contains a magic number: var date = new LocalDate(9999' 12' 31);
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,RoundtripLastDay_Iso1,The following statement contains a magic number: var date = new LocalDate(9999' 12' 31);
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,OutOfRange_ValidWeekYearAndWeek_TooEarly,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(                  () => WeekYearRules.Iso.GetLocalDate(-9998' 1' Monday));
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,OutOfRange_ValidWeekYearAndWeek_TooEarly,The following statement contains a magic number: WeekYearRules.Iso.GetLocalDate(-9998' 1' Tuesday);
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,OutOfRange_ValidWeekYearAndWeek_TooLate,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(                  () => WeekYearRules.Iso.GetLocalDate(9999' 52' Saturday));
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,OutOfRange_ValidWeekYearAndWeek_TooLate,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(                  () => WeekYearRules.Iso.GetLocalDate(9999' 52' Saturday));
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,OutOfRange_ValidWeekYearAndWeek_TooLate,The following statement contains a magic number: WeekYearRules.Iso.GetLocalDate(9999' 52' Friday);
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,OutOfRange_ValidWeekYearAndWeek_TooLate,The following statement contains a magic number: WeekYearRules.Iso.GetLocalDate(9999' 52' Friday);
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,Gregorian,The following statement contains a magic number: i <= 7
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,BclEquivalence,The following statement contains a magic number: var startYear = new LocalDate(2016' 1' 1).WithCalendar(nodaCalendar).Year;
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,BclEquivalence,The following statement contains a magic number: var startDate = new LocalDate(year' 1' 1' nodaCalendar).PlusDays(-15);
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,BclEquivalence,The following statement contains a magic number: var bclWeekYear = bclWeek < 10 ? year : year - 1;
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,BclEquivalence,The following statement contains a magic number: day < 30
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,BclEquivalence,The following statement contains a magic number: year < startYear + 30
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,GetWeeksInWeekYear,The following statement contains a magic number: var startYear = new LocalDate(2016' 1' 1).WithCalendar(nodaCalendar).Year;
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,GetWeeksInWeekYear,The following statement contains a magic number: year < startYear + 30
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,RoundtripFirstDayBcl,The following statement contains a magic number: var date = new LocalDate(-9998' 1' 1);
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,RoundtripLastDayBcl,The following statement contains a magic number: var date = new LocalDate(9999' 12' 31);
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,RoundtripLastDayBcl,The following statement contains a magic number: var date = new LocalDate(9999' 12' 31);
Magic Number,NodaTime.Test.Calendars,SimpleWeekYearRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\SimpleWeekYearRuleTest.cs,RoundtripLastDayBcl,The following statement contains a magic number: var date = new LocalDate(9999' 12' 31);
Magic Number,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GetStartOfYearInDays,The following statement contains a magic number: var days = (bcl - new DateTime(1970' 1' 1)).Days;
Magic Number,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GetYearMonthDay_DaysSinceEpoch,The following statement contains a magic number: month <= 12
Magic Number,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GetYearMonthDay_YearAndDayOfYear,The following statement contains a magic number: month <= 12
Magic Number,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GetDaysFromStartOfYearToStartOfMonth,The following statement contains a magic number: month <= 12
Magic Number,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GetYearMonthDay_InvalidValueForCoverage,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => calculator.GetYearMonthDay(calculator.MinYear' 1000));
Magic Number,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GenerateData,The following statement contains a magic number: bclCalendar.GetMonth(maxDateTime) != 12 || bclCalendar.GetDayOfMonth(maxDateTime) != bclCalendar.GetDaysInMonth(maxYear' 12)
Magic Number,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GenerateData,The following statement contains a magic number: bclCalendar.GetMonth(maxDateTime) != 12 || bclCalendar.GetDayOfMonth(maxDateTime) != bclCalendar.GetDaysInMonth(maxYear' 12)
Magic Number,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GenerateData,The following statement contains a magic number: var monthLengths = new ushort[maxYear - minYear + 3];
Magic Number,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GenerateData,The following statement contains a magic number: bclCalendar.GetDaysInMonth(year' month) == 30
Magic Number,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GenerateData,The following statement contains a magic number: month <= 12
Magic Number,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GenerateData,The following statement contains a magic number: byte[] data = monthLengths.SelectMany(value => new[] { (byte)(value >> 8)' (byte)(value & 0xff) }).ToArray();
Magic Number,NodaTime.Test.Calendars,UmAlQuraYearMonthDayCalculatorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\UmAlQuraYearMonthDayCalculatorTest.cs,GenerateData,The following statement contains a magic number: var lineLength = 80;
Magic Number,NodaTime.Test.Calendars,WeekYearRulesTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Calendars\WeekYearRulesTest.cs,UnsupportedCalendarWeekRule,The following statement contains a magic number: Assert.Throws<ArgumentException>(() => WeekYearRules.FromCalendarWeekRule(CalendarWeekRule.FirstDay + 1000' DayOfWeek.Monday));
Magic Number,NodaTime.Test.Extensions,ClockExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\ClockExtensionsTest.cs,InTzdbSystemDefaultZone,The following statement contains a magic number: var fakeGreenlandZone = TimeZoneInfo.CreateCustomTimeZone("Greenland Standard Time"' TimeSpan.FromHours(-3)' "Godthab"' "Godthab");
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_LocalKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_LocalKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_LocalKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_LocalKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_LocalKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_LocalKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_UnspecifiedKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_UnspecifiedKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_UnspecifiedKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_UnspecifiedKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_UnspecifiedKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_UnspecifiedKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_UtcKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_UtcKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_UtcKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_UtcKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_UtcKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToLocalDateTime_UtcKind,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToInstant_UtcKind,The following statement contains a magic number: var expected = Instant.FromUtc(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToInstant_UtcKind,The following statement contains a magic number: var expected = Instant.FromUtc(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToInstant_UtcKind,The following statement contains a magic number: var expected = Instant.FromUtc(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToInstant_UtcKind,The following statement contains a magic number: var expected = Instant.FromUtc(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToInstant_UtcKind,The following statement contains a magic number: var expected = Instant.FromUtc(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeExtensionsTest.cs,ToInstant_UtcKind,The following statement contains a magic number: var expected = Instant.FromUtc(2017' 8' 21' 12' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToOffsetDateTime,The following statement contains a magic number: var expected = new OffsetDateTime(new LocalDateTime(2017' 8' 21' 12' 46' 13)' Offset.FromHours(1));
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToOffsetDateTime,The following statement contains a magic number: var expected = new OffsetDateTime(new LocalDateTime(2017' 8' 21' 12' 46' 13)' Offset.FromHours(1));
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToOffsetDateTime,The following statement contains a magic number: var expected = new OffsetDateTime(new LocalDateTime(2017' 8' 21' 12' 46' 13)' Offset.FromHours(1));
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToOffsetDateTime,The following statement contains a magic number: var expected = new OffsetDateTime(new LocalDateTime(2017' 8' 21' 12' 46' 13)' Offset.FromHours(1));
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToOffsetDateTime,The following statement contains a magic number: var expected = new OffsetDateTime(new LocalDateTime(2017' 8' 21' 12' 46' 13)' Offset.FromHours(1));
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToOffsetDateTime,The following statement contains a magic number: var expected = new OffsetDateTime(new LocalDateTime(2017' 8' 21' 12' 46' 13)' Offset.FromHours(1));
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToZonedDateTime,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13).InZoneStrictly(DateTimeZone.ForOffset(Offset.FromHours(1)));
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToZonedDateTime,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13).InZoneStrictly(DateTimeZone.ForOffset(Offset.FromHours(1)));
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToZonedDateTime,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13).InZoneStrictly(DateTimeZone.ForOffset(Offset.FromHours(1)));
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToZonedDateTime,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13).InZoneStrictly(DateTimeZone.ForOffset(Offset.FromHours(1)));
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToZonedDateTime,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13).InZoneStrictly(DateTimeZone.ForOffset(Offset.FromHours(1)));
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToZonedDateTime,The following statement contains a magic number: var expected = new LocalDateTime(2017' 8' 21' 12' 46' 13).InZoneStrictly(DateTimeZone.ForOffset(Offset.FromHours(1)));
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToInstant,The following statement contains a magic number: var expected = Instant.FromUtc(2017' 8' 21' 11' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToInstant,The following statement contains a magic number: var expected = Instant.FromUtc(2017' 8' 21' 11' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToInstant,The following statement contains a magic number: var expected = Instant.FromUtc(2017' 8' 21' 11' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToInstant,The following statement contains a magic number: var expected = Instant.FromUtc(2017' 8' 21' 11' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToInstant,The following statement contains a magic number: var expected = Instant.FromUtc(2017' 8' 21' 11' 46' 13);
Magic Number,NodaTime.Test.Extensions,DateTimeOffsetExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\DateTimeOffsetExtensionsTest.cs,ToInstant,The following statement contains a magic number: var expected = Instant.FromUtc(2017' 8' 21' 11' 46' 13);
Magic Number,NodaTime.Test.Extensions,TimeSpanExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\TimeSpanExtensionsTest.cs,ToDuration,The following statement contains a magic number: var timeSpan = TimeSpan.FromTicks(123456789012345L);
Magic Number,NodaTime.Test.Extensions,TimeSpanExtensionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Extensions\TimeSpanExtensionsTest.cs,ToDuration,The following statement contains a magic number: Assert.AreEqual(123456789012345' duration.BclCompatibleTicks);
Magic Number,NodaTime.Test.Fields,TimePeriodFieldTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Fields\TimePeriodFieldTest.cs,GetUnitsInDuration,The following statement contains a magic number: var duration = Duration.FromHours(hours) + Duration.FromMinutes(30 * Math.Sign(hours));
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Days,The following statement contains a magic number: Assert.AreEqual(Duration.FromDays(2)' 2.Days());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Days,The following statement contains a magic number: Assert.AreEqual(Duration.FromDays(2)' 2.Days());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Days,The following statement contains a magic number: Assert.AreEqual(Duration.FromDays(2.5)' 2.5.Days());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Days,The following statement contains a magic number: Assert.AreEqual(Duration.FromDays(2.5)' 2.5.Days());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Hours,The following statement contains a magic number: Assert.AreEqual(Duration.FromHours(2)' 2.Hours());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Hours,The following statement contains a magic number: Assert.AreEqual(Duration.FromHours(2)' 2.Hours());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Hours,The following statement contains a magic number: Assert.AreEqual(Duration.FromHours(2.5)' 2.5.Hours());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Hours,The following statement contains a magic number: Assert.AreEqual(Duration.FromHours(2.5)' 2.5.Hours());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Minutes,The following statement contains a magic number: Assert.AreEqual(Duration.FromMinutes(2)' 2.Minutes());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Minutes,The following statement contains a magic number: Assert.AreEqual(Duration.FromMinutes(2)' 2.Minutes());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Minutes,The following statement contains a magic number: Assert.AreEqual(Duration.FromMinutes(2)' 2L.Minutes());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Minutes,The following statement contains a magic number: Assert.AreEqual(Duration.FromMinutes(2)' 2L.Minutes());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Minutes,The following statement contains a magic number: Assert.AreEqual(Duration.FromMinutes(2.5)' 2.5.Minutes());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Minutes,The following statement contains a magic number: Assert.AreEqual(Duration.FromMinutes(2.5)' 2.5.Minutes());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Seconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromSeconds(2)' 2.Seconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Seconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromSeconds(2)' 2.Seconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Seconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromSeconds(2)' 2L.Seconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Seconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromSeconds(2)' 2L.Seconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Seconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromSeconds(2.5)' 2.5.Seconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Seconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromSeconds(2.5)' 2.5.Seconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Milliseconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromMilliseconds(2)' 2.Milliseconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Milliseconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromMilliseconds(2)' 2.Milliseconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Milliseconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromMilliseconds(2)' 2L.Milliseconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Milliseconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromMilliseconds(2)' 2L.Milliseconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Milliseconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromMilliseconds(2.5)' 2.5.Milliseconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Milliseconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromMilliseconds(2.5)' 2.5.Milliseconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Ticks,The following statement contains a magic number: Assert.AreEqual(Duration.FromTicks(2)' 2.Ticks());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Ticks,The following statement contains a magic number: Assert.AreEqual(Duration.FromTicks(2)' 2.Ticks());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Ticks,The following statement contains a magic number: Assert.AreEqual(Duration.FromTicks(2)' 2L.Ticks());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Ticks,The following statement contains a magic number: Assert.AreEqual(Duration.FromTicks(2)' 2L.Ticks());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Ticks,The following statement contains a magic number: Assert.AreEqual(Duration.FromTicks(2.5)' 2.5.Ticks());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Ticks,The following statement contains a magic number: Assert.AreEqual(Duration.FromTicks(2.5)' 2.5.Ticks());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Nanoseconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(2)' 2.Nanoseconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Nanoseconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(2)' 2.Nanoseconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Nanoseconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(2)' 2L.Nanoseconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Nanoseconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(2)' 2L.Nanoseconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Nanoseconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(2.5)' 2.5.Nanoseconds());
Magic Number,NodaTime.Test.Testing.Extensions,DurationConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\DurationConstructionTest.cs,Nanoseconds,The following statement contains a magic number: Assert.AreEqual(Duration.FromNanoseconds(2.5)' 2.5.Nanoseconds());
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 1' 18)' 18.January(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 1' 18)' 18.January(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 1' 18)' 18.January(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 1' 18)' 18.January(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 2' 18)' 18.February(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 2' 18)' 18.February(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 2' 18)' 18.February(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 2' 18)' 18.February(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 2' 18)' 18.February(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 3' 18)' 18.March(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 3' 18)' 18.March(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 3' 18)' 18.March(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 3' 18)' 18.March(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 3' 18)' 18.March(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 4' 18)' 18.April(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 4' 18)' 18.April(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 4' 18)' 18.April(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 4' 18)' 18.April(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 4' 18)' 18.April(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 5' 18)' 18.May(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 5' 18)' 18.May(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 5' 18)' 18.May(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 5' 18)' 18.May(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 5' 18)' 18.May(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 6' 18)' 18.June(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 6' 18)' 18.June(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 6' 18)' 18.June(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 6' 18)' 18.June(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 6' 18)' 18.June(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 7' 18)' 18.July(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 7' 18)' 18.July(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 7' 18)' 18.July(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 7' 18)' 18.July(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 7' 18)' 18.July(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 8' 18)' 18.August(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 8' 18)' 18.August(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 8' 18)' 18.August(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 8' 18)' 18.August(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 8' 18)' 18.August(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 9' 18)' 18.September(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 9' 18)' 18.September(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 9' 18)' 18.September(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 9' 18)' 18.September(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 9' 18)' 18.September(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 10' 18)' 18.October(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 10' 18)' 18.October(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 10' 18)' 18.October(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 10' 18)' 18.October(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 10' 18)' 18.October(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 11' 18)' 18.November(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 11' 18)' 18.November(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 11' 18)' 18.November(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 11' 18)' 18.November(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 11' 18)' 18.November(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 12' 18)' 18.December(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 12' 18)' 18.December(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 12' 18)' 18.December(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 12' 18)' 18.December(2017));
Magic Number,NodaTime.Test.Testing.Extensions,LocalDateConstructionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\Extensions\LocalDateConstructionTest.cs,Construction,The following statement contains a magic number: Assert.AreEqual(new LocalDate(2017' 12' 18)' 18.December(2017));
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,DirectConstruction,The following statement contains a magic number: Instant instant = Instant.FromUnixTimeTicks(100L);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,ConstructionWithAdvance,The following statement contains a magic number: Instant instant = Instant.FromUnixTimeTicks(100L);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,ConstructionWithAdvance,The following statement contains a magic number: Duration advance = Duration.FromTicks(5);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,ConstructionThenAdvance,The following statement contains a magic number: Instant instant = Instant.FromUnixTimeTicks(100L);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,ConstructionThenAdvance,The following statement contains a magic number: Duration advance = Duration.FromTicks(5);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,UtcDateConstruction,The following statement contains a magic number: Instant instant = Instant.FromUtc(2010' 1' 1' 0' 0);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,UtcDateConstruction,The following statement contains a magic number: FakeClock clock = FakeClock.FromUtc(2010' 1' 1);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,UtcDateTimeConstruction,The following statement contains a magic number: Instant instant = Instant.FromUtc(2010' 1' 1' 10' 30' 25);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,UtcDateTimeConstruction,The following statement contains a magic number: Instant instant = Instant.FromUtc(2010' 1' 1' 10' 30' 25);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,UtcDateTimeConstruction,The following statement contains a magic number: Instant instant = Instant.FromUtc(2010' 1' 1' 10' 30' 25);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,UtcDateTimeConstruction,The following statement contains a magic number: Instant instant = Instant.FromUtc(2010' 1' 1' 10' 30' 25);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,UtcDateTimeConstruction,The following statement contains a magic number: FakeClock clock = FakeClock.FromUtc(2010' 1' 1' 10' 30' 25);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,UtcDateTimeConstruction,The following statement contains a magic number: FakeClock clock = FakeClock.FromUtc(2010' 1' 1' 10' 30' 25);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,UtcDateTimeConstruction,The following statement contains a magic number: FakeClock clock = FakeClock.FromUtc(2010' 1' 1' 10' 30' 25);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,UtcDateTimeConstruction,The following statement contains a magic number: FakeClock clock = FakeClock.FromUtc(2010' 1' 1' 10' 30' 25);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,Advance,The following statement contains a magic number: FakeClock clock = new FakeClock(Instant.FromUnixTimeTicks(100L));
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,Advance,The following statement contains a magic number: Duration d = Duration.FromTicks(25);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,Advance,The following statement contains a magic number: Assert.AreEqual(125' clock.GetCurrentInstant().ToUnixTimeTicks());
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceNanoseconds,The following statement contains a magic number: clock.AdvanceNanoseconds(3);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceTicks,The following statement contains a magic number: FakeClock clock = new FakeClock(Instant.FromUnixTimeTicks(100L));
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceTicks,The following statement contains a magic number: clock.AdvanceTicks(3);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceTicks,The following statement contains a magic number: Assert.AreEqual(103' clock.GetCurrentInstant().ToUnixTimeTicks());
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceMilliseconds,The following statement contains a magic number: FakeClock clock = new FakeClock(Instant.FromUnixTimeTicks(100L));
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceMilliseconds,The following statement contains a magic number: clock.AdvanceMilliseconds(3);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceMilliseconds,The following statement contains a magic number: Assert.AreEqual(100 + 3 * NodaConstants.TicksPerMillisecond' clock.GetCurrentInstant().ToUnixTimeTicks());
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceMilliseconds,The following statement contains a magic number: Assert.AreEqual(100 + 3 * NodaConstants.TicksPerMillisecond' clock.GetCurrentInstant().ToUnixTimeTicks());
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceSeconds,The following statement contains a magic number: FakeClock clock = new FakeClock(Instant.FromUnixTimeTicks(100L));
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceSeconds,The following statement contains a magic number: clock.AdvanceSeconds(3);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceSeconds,The following statement contains a magic number: Assert.AreEqual(100 + 3 * NodaConstants.TicksPerSecond' clock.GetCurrentInstant().ToUnixTimeTicks());
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceSeconds,The following statement contains a magic number: Assert.AreEqual(100 + 3 * NodaConstants.TicksPerSecond' clock.GetCurrentInstant().ToUnixTimeTicks());
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceMinutes,The following statement contains a magic number: FakeClock clock = new FakeClock(Instant.FromUnixTimeTicks(100L));
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceMinutes,The following statement contains a magic number: clock.AdvanceMinutes(3);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceMinutes,The following statement contains a magic number: Assert.AreEqual(100 + 3 * NodaConstants.TicksPerMinute' clock.GetCurrentInstant().ToUnixTimeTicks());
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceMinutes,The following statement contains a magic number: Assert.AreEqual(100 + 3 * NodaConstants.TicksPerMinute' clock.GetCurrentInstant().ToUnixTimeTicks());
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceHours,The following statement contains a magic number: FakeClock clock = new FakeClock(Instant.FromUnixTimeTicks(100L));
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceHours,The following statement contains a magic number: clock.AdvanceHours(3);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceHours,The following statement contains a magic number: Assert.AreEqual(100 + 3 * NodaConstants.TicksPerHour' clock.GetCurrentInstant().ToUnixTimeTicks());
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceHours,The following statement contains a magic number: Assert.AreEqual(100 + 3 * NodaConstants.TicksPerHour' clock.GetCurrentInstant().ToUnixTimeTicks());
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceDays,The following statement contains a magic number: FakeClock clock = new FakeClock(Instant.FromUnixTimeTicks(100L));
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceDays,The following statement contains a magic number: clock.AdvanceDays(3);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceDays,The following statement contains a magic number: Assert.AreEqual(100 + 3 * NodaConstants.TicksPerDay' clock.GetCurrentInstant().ToUnixTimeTicks());
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,AdvanceDays,The following statement contains a magic number: Assert.AreEqual(100 + 3 * NodaConstants.TicksPerDay' clock.GetCurrentInstant().ToUnixTimeTicks());
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,Reset,The following statement contains a magic number: Instant instant1 = Instant.FromUnixTimeTicks(100L);
Magic Number,NodaTime.Test.Testing,FakeClockTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\FakeClockTest.cs,Reset,The following statement contains a magic number: Instant instant2 = Instant.FromUnixTimeTicks(500L);
Magic Number,NodaTime.Test.Testing.TimeZones,FakeDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\FakeDateTimeZoneSourceTest.cs,CreateZone,The following statement contains a magic number: return new SingleTransitionDateTimeZone(NodaConstants.UnixEpoch' Offset.FromHours(1)' Offset.FromHours(2)' id);
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,SimpleBuilding,The following statement contains a magic number: var transition2 = Instant.FromUnixTimeTicks(100000L);
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,SimpleBuilding,The following statement contains a magic number: var zone = new MultiTransitionDateTimeZone.Builder              {                  { transition1' 5 }'                  { transition2' 3 }              }.Build();
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,SimpleBuilding,The following statement contains a magic number: var zone = new MultiTransitionDateTimeZone.Builder              {                  { transition1' 5 }'                  { transition2' 3 }              }.Build();
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,SimpleBuilding,The following statement contains a magic number: Assert.AreEqual(3' intervals.Count);
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,SimpleBuilding,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(5)' intervals[1].WallOffset);
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,SimpleBuilding,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(3)' intervals[2].WallOffset);
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,SimpleBuilding,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(3)' intervals[2].WallOffset);
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,SimpleBuilding,The following statement contains a magic number: Assert.AreEqual(transition2' intervals[2].Start);
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,SimpleBuilding,The following statement contains a magic number: Assert.AreEqual(Instant.AfterMaxValue' intervals[2].RawEnd);
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,Transitions,The following statement contains a magic number: var transition2 = Instant.FromUnixTimeTicks(100000L);
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,Transitions,The following statement contains a magic number: var zone = new MultiTransitionDateTimeZone.Builder              {                  { transition1' 5 }'                  { transition2' 3 }              }.Build();
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,Transitions,The following statement contains a magic number: var zone = new MultiTransitionDateTimeZone.Builder              {                  { transition1' 5 }'                  { transition2' 3 }              }.Build();
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,ComplexBuilding,The following statement contains a magic number: var transition2 = Instant.FromUnixTimeTicks(100000L);
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,ComplexBuilding,The following statement contains a magic number: var zone = new MultiTransitionDateTimeZone.Builder(2' 1' "X")              {                  { transition1' 2' 0' "Y" }'                  { transition2' 1' 1' "Z" }              }.Build();
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,ComplexBuilding,The following statement contains a magic number: var zone = new MultiTransitionDateTimeZone.Builder(2' 1' "X")              {                  { transition1' 2' 0' "Y" }'                  { transition2' 1' 1' "Z" }              }.Build();
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,ComplexBuilding,The following statement contains a magic number: var expected = new[]              {                  new ZoneInterval("X"' Instant.BeforeMinValue' transition1' Offset.FromHours(3)' Offset.FromHours(1))'                  new ZoneInterval("Y"' transition1' transition2' Offset.FromHours(2)' Offset.FromHours(0))'                  new ZoneInterval("Z"' transition2' Instant.AfterMaxValue' Offset.FromHours(2)' Offset.FromHours(1))'              };
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,ComplexBuilding,The following statement contains a magic number: var expected = new[]              {                  new ZoneInterval("X"' Instant.BeforeMinValue' transition1' Offset.FromHours(3)' Offset.FromHours(1))'                  new ZoneInterval("Y"' transition1' transition2' Offset.FromHours(2)' Offset.FromHours(0))'                  new ZoneInterval("Z"' transition2' Instant.AfterMaxValue' Offset.FromHours(2)' Offset.FromHours(1))'              };
Magic Number,NodaTime.Test.Testing.TimeZones,MultiTransitionDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Testing\TimeZones\MultiTransitionDateTimeZoneTest.cs,ComplexBuilding,The following statement contains a magic number: var expected = new[]              {                  new ZoneInterval("X"' Instant.BeforeMinValue' transition1' Offset.FromHours(3)' Offset.FromHours(1))'                  new ZoneInterval("Y"' transition1' transition2' Offset.FromHours(2)' Offset.FromHours(0))'                  new ZoneInterval("Z"' transition2' Instant.AfterMaxValue' Offset.FromHours(2)' Offset.FromHours(1))'              };
Magic Number,NodaTime.Test.Text,AnnualDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var date = new AnnualDate(8' 23);
Magic Number,NodaTime.Test.Text,AnnualDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var date = new AnnualDate(8' 23);
Magic Number,NodaTime.Test.Text,AnnualDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,CreateWithCulture,The following statement contains a magic number: var date = new AnnualDate(8' 23);
Magic Number,NodaTime.Test.Text,AnnualDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,CreateWithCulture,The following statement contains a magic number: var date = new AnnualDate(8' 23);
Magic Number,NodaTime.Test.Text,AnnualDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,CreateWithCultureAndTemplateValue,The following statement contains a magic number: var date = new AnnualDate(8' 23);
Magic Number,NodaTime.Test.Text,AnnualDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,CreateWithCultureAndTemplateValue,The following statement contains a magic number: var date = new AnnualDate(8' 23);
Magic Number,NodaTime.Test.Text,AnnualDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,CreateWithCultureAndTemplateValue,The following statement contains a magic number: var template = new AnnualDate(5' 3);
Magic Number,NodaTime.Test.Text,AnnualDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,CreateWithCultureAndTemplateValue,The following statement contains a magic number: var template = new AnnualDate(5' 3);
Magic Number,NodaTime.Test.Text,AnnualDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,CreateWithCultureAndTemplateValue,The following statement contains a magic number: Assert.AreEqual(new AnnualDate(8' 3)' parsed);
Magic Number,NodaTime.Test.Text,AnnualDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\AnnualDatePatternTest.cs,CreateWithCultureAndTemplateValue,The following statement contains a magic number: Assert.AreEqual(new AnnualDate(8' 3)' parsed);
Magic Number,NodaTime.Test.Text,CompositePatternBuilderPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\CompositePatternBuilderPatternTest.cs,Format_NoValidPattern,The following statement contains a magic number: Assert.Throws<FormatException>(() => pattern.Format(new LocalDate(2017' 1' 1)));
Magic Number,NodaTime.Test.Text,DurationPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\DurationPatternTest.cs,WithCulture,The following statement contains a magic number: var text = pattern.Format(Duration.FromMinutes(90));
Magic Number,NodaTime.Test.Text,DurationPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\DurationPatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var text = pattern.Format(Duration.FromMinutes(90));
Magic Number,NodaTime.Test.Text,InstantPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\InstantPatternTest.cs,IsoHandlesCommas,The following statement contains a magic number: Instant expected = Instant.FromUtc(2012' 1' 1' 0' 0) + Duration.Epsilon;
Magic Number,NodaTime.Test.Text,InstantPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\InstantPatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 12' 34' 56));
Magic Number,NodaTime.Test.Text,InstantPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\InstantPatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 12' 34' 56));
Magic Number,NodaTime.Test.Text,InstantPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\InstantPatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 12' 34' 56));
Magic Number,NodaTime.Test.Text,InstantPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\InstantPatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 12' 34' 56));
Magic Number,NodaTime.Test.Text,InstantPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\InstantPatternTest.cs,Create,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 12' 34' 56));
Magic Number,NodaTime.Test.Text,InstantPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\InstantPatternTest.cs,Create,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 12' 34' 56));
Magic Number,NodaTime.Test.Text,InstantPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\InstantPatternTest.cs,Create,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 12' 34' 56));
Magic Number,NodaTime.Test.Text,InstantPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\InstantPatternTest.cs,Create,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 12' 34' 56));
Magic Number,NodaTime.Test.Text,LocalDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDatePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDate(284' 8' 29' CalendarSystem.Coptic)' value);
Magic Number,NodaTime.Test.Text,LocalDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDatePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDate(284' 8' 29' CalendarSystem.Coptic)' value);
Magic Number,NodaTime.Test.Text,LocalDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDatePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDate(284' 8' 29' CalendarSystem.Coptic)' value);
Magic Number,NodaTime.Test.Text,LocalDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDatePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var date = new LocalDate(2017' 8' 23);
Magic Number,NodaTime.Test.Text,LocalDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDatePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var date = new LocalDate(2017' 8' 23);
Magic Number,NodaTime.Test.Text,LocalDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDatePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var date = new LocalDate(2017' 8' 23);
Magic Number,NodaTime.Test.Text,LocalDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDatePatternTest.cs,AssertBclNodaEquality,The following statement contains a magic number: DateTime sampleDateTime = (SampleLocalDate + new LocalTime(2' 3' 5)).ToDateTimeUnspecified();
Magic Number,NodaTime.Test.Text,LocalDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDatePatternTest.cs,AssertBclNodaEquality,The following statement contains a magic number: DateTime sampleDateTime = (SampleLocalDate + new LocalTime(2' 3' 5)).ToDateTimeUnspecified();
Magic Number,NodaTime.Test.Text,LocalDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDatePatternTest.cs,AssertBclNodaEquality,The following statement contains a magic number: DateTime sampleDateTime = (SampleLocalDate + new LocalTime(2' 3' 5)).ToDateTimeUnspecified();
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(284' 8' 29' 12' 34' 56' CalendarSystem.Coptic)' value);
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(284' 8' 29' 12' 34' 56' CalendarSystem.Coptic)' value);
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(284' 8' 29' 12' 34' 56' CalendarSystem.Coptic)' value);
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(284' 8' 29' 12' 34' 56' CalendarSystem.Coptic)' value);
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(284' 8' 29' 12' 34' 56' CalendarSystem.Coptic)' value);
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(284' 8' 29' 12' 34' 56' CalendarSystem.Coptic)' value);
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var dateTime = new LocalDateTime(2017' 8' 23' 12' 34' 56);
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var dateTime = new LocalDateTime(2017' 8' 23' 12' 34' 56);
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var dateTime = new LocalDateTime(2017' 8' 23' 12' 34' 56);
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var dateTime = new LocalDateTime(2017' 8' 23' 12' 34' 56);
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var dateTime = new LocalDateTime(2017' 8' 23' 12' 34' 56);
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var dateTime = new LocalDateTime(2017' 8' 23' 12' 34' 56);
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,ParseFormattedStandardPattern,The following statement contains a magic number: var pattern = CreatePatternOrNull(patternText' culture' new LocalDateTime(2000' 1' 1' 0' 0));
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,ParseFormattedStandardPattern,The following statement contains a magic number: pattern.Format(SampleLocalDateTime) == pattern.Format(SampleLocalDateTime.PlusHours(-12))
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,ParseFormattedStandardPattern,The following statement contains a magic number: pattern = pattern.WithTemplateValue(new LocalDateTime(2000' 1' 1' 12' 0));
Magic Number,NodaTime.Test.Text,LocalDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalDateTimePatternTest.cs,ParseFormattedStandardPattern,The following statement contains a magic number: pattern = pattern.WithTemplateValue(new LocalDateTime(2000' 1' 1' 12' 0));
Magic Number,NodaTime.Test.Text,LocalTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var text = pattern.Format(new LocalTime(13' 45));
Magic Number,NodaTime.Test.Text,LocalTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var text = pattern.Format(new LocalTime(13' 45));
Magic Number,NodaTime.Test.Text,LocalTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalTimePatternTest.cs,WithTemplateValue_PropertyFetch,The following statement contains a magic number: LocalTime newValue = new LocalTime(1' 23' 45);
Magic Number,NodaTime.Test.Text,LocalTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\LocalTimePatternTest.cs,WithTemplateValue_PropertyFetch,The following statement contains a magic number: LocalTime newValue = new LocalTime(1' 23' 45);
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var od = new LocalDate(2017' 8' 23).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var od = new LocalDate(2017' 8' 23).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var od = new LocalDate(2017' 8' 23).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var od = new LocalDate(2017' 8' 23).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var od = new LocalDate(2017' 8' 23).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var od = new LocalDate(2017' 8' 23).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var od = new LocalDate(2017' 8' 23).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var od = new LocalDate(2017' 8' 23).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,WithCulture,The following statement contains a magic number: var text = pattern.Format(new LocalDate(2000' 1' 1).WithOffset(Offset.FromHours(1)));
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,WithPatternText,The following statement contains a magic number: var value = new LocalDate(1970' 1' 1).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,WithPatternText,The following statement contains a magic number: var value = new LocalDate(1970' 1' 1).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,WithTemplateValue,The following statement contains a magic number: var pattern = OffsetDatePattern.CreateWithInvariantCulture("MM-dd")                  .WithTemplateValue(new LocalDate(1970' 1' 1).WithOffset(Offset.FromHours(2)));
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,WithTemplateValue,The following statement contains a magic number: var pattern = OffsetDatePattern.CreateWithInvariantCulture("MM-dd")                  .WithTemplateValue(new LocalDate(1970' 1' 1).WithOffset(Offset.FromHours(2)));
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalDate(1970' 8' 23)' parsed.Date);
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalDate(1970' 8' 23)' parsed.Date);
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalDate(1970' 8' 23)' parsed.Date);
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(2)' parsed.Offset);
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDate(284' 8' 29' CalendarSystem.Coptic)' parsed.Date);
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDate(284' 8' 29' CalendarSystem.Coptic)' parsed.Date);
Magic Number,NodaTime.Test.Text,OffsetDatePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDatePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDate(284' 8' 29' CalendarSystem.Coptic)' parsed.Date);
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var odt = new LocalDateTime(2017' 8' 23' 12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithCulture,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 19' 30).WithOffset(Offset.Zero));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithCulture,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 19' 30).WithOffset(Offset.Zero));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithCulture,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 19' 30).WithOffset(Offset.Zero));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithPatternText,The following statement contains a magic number: var value = Instant.FromUtc(1970' 1' 1' 11' 30).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithPatternText,The following statement contains a magic number: var value = Instant.FromUtc(1970' 1' 1' 11' 30).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithPatternText,The following statement contains a magic number: var value = Instant.FromUtc(1970' 1' 1' 11' 30).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithPatternText,The following statement contains a magic number: var value = Instant.FromUtc(1970' 1' 1' 11' 30).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: var pattern = OffsetDateTimePattern.CreateWithInvariantCulture("uuuu-MM-dd")                  .WithTemplateValue(Instant.FromUtc(1970' 1' 1' 11' 30).WithOffset(Offset.FromHours(2)));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: var pattern = OffsetDateTimePattern.CreateWithInvariantCulture("uuuu-MM-dd")                  .WithTemplateValue(Instant.FromUtc(1970' 1' 1' 11' 30).WithOffset(Offset.FromHours(2)));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: var pattern = OffsetDateTimePattern.CreateWithInvariantCulture("uuuu-MM-dd")                  .WithTemplateValue(Instant.FromUtc(1970' 1' 1' 11' 30).WithOffset(Offset.FromHours(2)));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: var pattern = OffsetDateTimePattern.CreateWithInvariantCulture("uuuu-MM-dd")                  .WithTemplateValue(Instant.FromUtc(1970' 1' 1' 11' 30).WithOffset(Offset.FromHours(2)));
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 13' 30' 0)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 13' 30' 0)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 13' 30' 0)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 13' 30' 0)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 13' 30' 0)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(2)' parsed.Offset);
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(284' 8' 29' 0' 0' CalendarSystem.Coptic)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(284' 8' 29' 0' 0' CalendarSystem.Coptic)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,OffsetDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetDateTimePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(284' 8' 29' 0' 0' CalendarSystem.Coptic)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,OffsetPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetPatternTest.cs,NumberFormatIgnored,The following statement contains a magic number: Assert.AreEqual("+05:00"' pattern.Format(Offset.FromHours(5)));
Magic Number,NodaTime.Test.Text,OffsetPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetPatternTest.cs,NumberFormatIgnored,The following statement contains a magic number: Assert.AreEqual("-05:00"' pattern.Format(Offset.FromHours(-5)));
Magic Number,NodaTime.Test.Text,OffsetPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetPatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var text = pattern.Format(Offset.FromHoursAndMinutes(1' 30));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var ot = new LocalTime(12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var ot = new LocalTime(12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var ot = new LocalTime(12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,CreateWithInvariantCulture,The following statement contains a magic number: var ot = new LocalTime(12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var ot = new LocalTime(12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var ot = new LocalTime(12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var ot = new LocalTime(12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var ot = new LocalTime(12' 34' 56).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,WithCulture,The following statement contains a magic number: var text = pattern.Format(new LocalTime(19' 30).WithOffset(Offset.Zero));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,WithCulture,The following statement contains a magic number: var text = pattern.Format(new LocalTime(19' 30).WithOffset(Offset.Zero));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,WithPatternText,The following statement contains a magic number: var value = new LocalTime(13' 30).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,WithPatternText,The following statement contains a magic number: var value = new LocalTime(13' 30).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,WithPatternText,The following statement contains a magic number: var value = new LocalTime(13' 30).WithOffset(Offset.FromHours(2));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: var pattern = OffsetTimePattern.CreateWithInvariantCulture("o<G>")                  .WithTemplateValue(new LocalTime(13' 30).WithOffset(Offset.Zero));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: var pattern = OffsetTimePattern.CreateWithInvariantCulture("o<G>")                  .WithTemplateValue(new LocalTime(13' 30).WithOffset(Offset.Zero));
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalTime(13' 30)' parsed.TimeOfDay);
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalTime(13' 30)' parsed.TimeOfDay);
Magic Number,NodaTime.Test.Text,OffsetTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\OffsetTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(2)' parsed.Offset);
Magic Number,NodaTime.Test.Text,ParseResultTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ParseResultTest.cs,Value_Success,The following statement contains a magic number: ParseResult<int> result = ParseResult<int>.ForValue(5);
Magic Number,NodaTime.Test.Text,ParseResultTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ParseResultTest.cs,Value_Success,The following statement contains a magic number: Assert.AreEqual(5' result.Value);
Magic Number,NodaTime.Test.Text,ParseResultTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ParseResultTest.cs,Exception_Success,The following statement contains a magic number: ParseResult<int> result = ParseResult<int>.ForValue(5);
Magic Number,NodaTime.Test.Text,ParseResultTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ParseResultTest.cs,GetValueOrThrow_Success,The following statement contains a magic number: ParseResult<int> result = ParseResult<int>.ForValue(5);
Magic Number,NodaTime.Test.Text,ParseResultTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ParseResultTest.cs,GetValueOrThrow_Success,The following statement contains a magic number: Assert.AreEqual(5' result.GetValueOrThrow());
Magic Number,NodaTime.Test.Text,ParseResultTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ParseResultTest.cs,TryGetValue_Success,The following statement contains a magic number: ParseResult<int> result = ParseResult<int>.ForValue(5);
Magic Number,NodaTime.Test.Text,ParseResultTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ParseResultTest.cs,TryGetValue_Success,The following statement contains a magic number: Assert.AreEqual(5' actual);
Magic Number,NodaTime.Test.Text,ParseResultTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ParseResultTest.cs,Convert_ForSuccessResult,The following statement contains a magic number: ParseResult<int> original = ParseResult<int>.ForValue(10);
Magic Number,NodaTime.Test.Text,ParseResultTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ParseResultTest.cs,ConvertError_ForSuccessResult,The following statement contains a magic number: ParseResult<int> original = ParseResult<int>.ForValue(10);
Magic Number,NodaTime.Test.Text,TextCursorTestBase,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TextCursorTestBase.cs,TestMove,The following statement contains a magic number: Assert.True(cursor.Move(2));
Magic Number,NodaTime.Test.Text,TextCursorTestBase,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TextCursorTestBase.cs,TestMove,The following statement contains a magic number: ValidateCurrentCharacter(cursor' 2' 's');
Magic Number,NodaTime.Test.Text,TextCursorTestBase,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TextCursorTestBase.cs,TestMove,The following statement contains a magic number: Assert.True(cursor.Move(3));
Magic Number,NodaTime.Test.Text,TextCursorTestBase,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TextCursorTestBase.cs,TestMove,The following statement contains a magic number: ValidateCurrentCharacter(cursor' 3' 't');
Magic Number,NodaTime.Test.Text,TextCursorTestBase,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TextCursorTestBase.cs,TestMove,The following statement contains a magic number: Assert.False(cursor.Move(4));
Magic Number,NodaTime.Test.Text,TextCursorTestBase,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TextCursorTestBase.cs,TestMove_NextPrevious,The following statement contains a magic number: Assert.True(cursor.Move(2)' "Move(2)");
Magic Number,NodaTime.Test.Text,TextCursorTestBase,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TextCursorTestBase.cs,TestMove_NextPrevious,The following statement contains a magic number: ValidateCurrentCharacter(cursor' 2' 's');
Magic Number,NodaTime.Test.Text,TextCursorTestBase,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TextCursorTestBase.cs,TestMove_NextPrevious,The following statement contains a magic number: ValidateCurrentCharacter(cursor' 2' 's');
Magic Number,NodaTime.Test.Text,TextCursorTestBase,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TextCursorTestBase.cs,TestMove_invalid,The following statement contains a magic number: Assert.False(cursor.Move(-1000));
Magic Number,NodaTime.Test.Text,TextCursorTestBase,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TextCursorTestBase.cs,TestMove_invalid,The following statement contains a magic number: Assert.False(cursor.Move(1000));
Magic Number,NodaTime.Test.Text,TextCursorTestBase,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\TextCursorTestBase.cs,TestMove_invalid,The following statement contains a magic number: Assert.False(cursor.Move(-1000));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,MatchCaseInsensitive_MatchAndMove,The following statement contains a magic number: ValidateCurrentCharacter(value' 3' 'd');
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,Match_StringPartial,The following statement contains a magic number: ValidateCurrentCharacter(value' 3' 'd');
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseDigits_TooFewDigits,The following statement contains a magic number: Assert.False(value.ParseDigits(3' 3' out int actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseDigits_TooFewDigits,The following statement contains a magic number: Assert.False(value.ParseDigits(3' 3' out int actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseDigits_NoNumber,The following statement contains a magic number: Assert.False(value.ParseDigits(1' 2' out int actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseDigits_Maximum,The following statement contains a magic number: Assert.True(value.ParseDigits(1' 2' out int actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseDigits_Maximum,The following statement contains a magic number: Assert.AreEqual(12' actual);
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseDigits_MaximumMoreDigits,The following statement contains a magic number: Assert.True(value.ParseDigits(1' 2' out int actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseDigits_MaximumMoreDigits,The following statement contains a magic number: Assert.AreEqual(12' actual);
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseDigits_MaximumMoreDigits,The following statement contains a magic number: ValidateCurrentCharacter(value' 2' '3');
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseDigits_Minimum,The following statement contains a magic number: Assert.True(value.ParseDigits(1' 2' out int actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseDigits_MinimumNonDigits,The following statement contains a magic number: Assert.True(value.ParseDigits(1' 2' out int actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseDigits_NonAscii_NeverMatches,The following statement contains a magic number: Assert.False(value.ParseDigits(1' 2' out int actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_TooFewDigits,The following statement contains a magic number: Assert.False(value.ParseInt64Digits(3' 3' out long actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_TooFewDigits,The following statement contains a magic number: Assert.False(value.ParseInt64Digits(3' 3' out long actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_NoNumber,The following statement contains a magic number: Assert.False(value.ParseInt64Digits(1' 2' out long actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_Maximum,The following statement contains a magic number: Assert.True(value.ParseInt64Digits(1' 2' out long actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_Maximum,The following statement contains a magic number: Assert.AreEqual(12' actual);
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_MaximumMoreDigits,The following statement contains a magic number: Assert.True(value.ParseInt64Digits(1' 2' out long actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_MaximumMoreDigits,The following statement contains a magic number: Assert.AreEqual(12' actual);
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_MaximumMoreDigits,The following statement contains a magic number: ValidateCurrentCharacter(value' 2' '3');
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_Minimum,The following statement contains a magic number: Assert.True(value.ParseInt64Digits(1' 2' out long actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_MinimumNonDigits,The following statement contains a magic number: Assert.True(value.ParseInt64Digits(1' 2' out long actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_NonAscii_NeverMatches,The following statement contains a magic number: Assert.False(value.ParseInt64Digits(1' 2' out long actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_LargeNumber,The following statement contains a magic number: Assert.True(value.ParseInt64Digits(1' 13' out long actual));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_LargeNumber,The following statement contains a magic number: Assert.AreEqual(actual' 9999999999999L);
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64Digits_LargeNumber,The following statement contains a magic number: Assert.Greater(9999999999999L' int.MaxValue);
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseFraction_NonAscii_NeverMatches,The following statement contains a magic number: Assert.False(value.ParseFraction(2' 2' out int actual' 2));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseFraction_NonAscii_NeverMatches,The following statement contains a magic number: Assert.False(value.ParseFraction(2' 2' out int actual' 2));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseFraction_NonAscii_NeverMatches,The following statement contains a magic number: Assert.False(value.ParseFraction(2' 2' out int actual' 2));
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64_Simple,The following statement contains a magic number: Assert.AreEqual(56L' result);
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64_Simple,The following statement contains a magic number: Assert.AreEqual(2' value.Index);
Magic Number,NodaTime.Test.Text,ValueCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ValueCursorTest.cs,ParseInt64_Negative,The following statement contains a magic number: Assert.AreEqual(-56L' result);
Magic Number,NodaTime.Test.Text,YearMonthPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\YearMonthPatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var yearMonth = new YearMonth(2017' 8);
Magic Number,NodaTime.Test.Text,YearMonthPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\YearMonthPatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var yearMonth = new YearMonth(2017' 8);
Magic Number,NodaTime.Test.Text,YearMonthPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\YearMonthPatternTest.cs,CreateWithSpecificCulture,The following statement contains a magic number: Assert.AreEqual("2017-08"' pattern.Format(new YearMonth(2017' 8)));
Magic Number,NodaTime.Test.Text,YearMonthPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\YearMonthPatternTest.cs,CreateWithSpecificCulture,The following statement contains a magic number: Assert.AreEqual("2017-08"' pattern.Format(new YearMonth(2017' 8)));
Magic Number,NodaTime.Test.Text,YearMonthPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\YearMonthPatternTest.cs,CreateWithTemplateValue,The following statement contains a magic number: var template = new YearMonth(2000' 6);
Magic Number,NodaTime.Test.Text,YearMonthPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\YearMonthPatternTest.cs,CreateWithTemplateValue,The following statement contains a magic number: var template = new YearMonth(2000' 6);
Magic Number,NodaTime.Test.Text,YearMonthPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\YearMonthPatternTest.cs,CreateWithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new YearMonth(1990' 6)' parseResult.Value);
Magic Number,NodaTime.Test.Text,YearMonthPatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\YearMonthPatternTest.cs,CreateWithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new YearMonth(1990' 6)' parseResult.Value);
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: var pattern = ZonedDateTimePattern.CreateWithInvariantCulture("uuuu-MM-dd"' TestProvider)                  .WithTemplateValue(Instant.FromUtc(1970' 1' 1' 11' 30).InZone(TestZone3));
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: var pattern = ZonedDateTimePattern.CreateWithInvariantCulture("uuuu-MM-dd"' TestProvider)                  .WithTemplateValue(Instant.FromUtc(1970' 1' 1' 11' 30).InZone(TestZone3));
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: var pattern = ZonedDateTimePattern.CreateWithInvariantCulture("uuuu-MM-dd"' TestProvider)                  .WithTemplateValue(Instant.FromUtc(1970' 1' 1' 11' 30).InZone(TestZone3));
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 12' 30' 0)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 12' 30' 0)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 12' 30' 0)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 12' 30' 0)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2017' 8' 23' 12' 30' 0)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithTemplateValue,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(2)' parsed.Offset);
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(284' 8' 29' 0' 0' CalendarSystem.Coptic)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(284' 8' 29' 0' 0' CalendarSystem.Coptic)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithCalendar,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(284' 8' 29' 0' 0' CalendarSystem.Coptic)' parsed.LocalDateTime);
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 19' 30).InUtc());
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 19' 30).InUtc());
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,CreateWithCurrentCulture,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 19' 30).InUtc());
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithCulture,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 19' 30).InUtc());
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithCulture,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 19' 30).InUtc());
Magic Number,NodaTime.Test.Text,ZonedDateTimePatternTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\ZonedDateTimePatternTest.cs,WithCulture,The following statement contains a magic number: var text = pattern.Format(Instant.FromUtc(2000' 1' 1' 19' 30).InUtc());
Magic Number,NodaTime.Test.Text.Patterns,PatternCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\Patterns\PatternCursorTest.cs,GetQuotedString_NotAtEnd,The following statement contains a magic number: ValidateCurrentCharacter(cursor' 4' '\'');
Magic Number,NodaTime.Test.Text.Patterns,PatternCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\Patterns\PatternCursorTest.cs,GetRepeatCount_Valid,The following statement contains a magic number: int actual = cursor.GetRepeatCount(10);
Magic Number,NodaTime.Test.Text.Patterns,PatternCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\Patterns\PatternCursorTest.cs,GetRepeatCount_ExceedsMax,The following statement contains a magic number: Assert.Throws<InvalidPatternException>(() => cursor.GetRepeatCount(2));
Magic Number,NodaTime.Test.Text.Patterns,PatternCursorTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\Patterns\PatternCursorTest.cs,GetEmbeddedPattern_Valid,The following statement contains a magic number: ValidateCurrentCharacter(cursor' expectedEmbedded.Length + 2' '>');
Magic Number,NodaTime.Test.Text.Patterns,SteppedPatternBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\Patterns\SteppedPatternBuilderTest.cs,ParsePartial_ValidInMiddle,The following statement contains a magic number: Assert.AreEqual(Offset.FromHoursAndMinutes(17' 30)' result.Value);
Magic Number,NodaTime.Test.Text.Patterns,SteppedPatternBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\Patterns\SteppedPatternBuilderTest.cs,ParsePartial_ValidInMiddle,The following statement contains a magic number: Assert.AreEqual(Offset.FromHoursAndMinutes(17' 30)' result.Value);
Magic Number,NodaTime.Test.Text.Patterns,SteppedPatternBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\Patterns\SteppedPatternBuilderTest.cs,ParsePartial_ValidAtEnd,The following statement contains a magic number: Assert.AreEqual(Offset.FromHoursAndMinutes(17' 30)' result.Value);
Magic Number,NodaTime.Test.Text.Patterns,SteppedPatternBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\Patterns\SteppedPatternBuilderTest.cs,ParsePartial_ValidAtEnd,The following statement contains a magic number: Assert.AreEqual(Offset.FromHoursAndMinutes(17' 30)' result.Value);
Magic Number,NodaTime.Test.Text.Patterns,SteppedPatternBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\Patterns\SteppedPatternBuilderTest.cs,AppendFormat,The following statement contains a magic number: var offset = Offset.FromHoursAndMinutes(17' 30);
Magic Number,NodaTime.Test.Text.Patterns,SteppedPatternBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Text\Patterns\SteppedPatternBuilderTest.cs,AppendFormat,The following statement contains a magic number: var offset = Offset.FromHoursAndMinutes(17' 30);
Magic Number,NodaTime.Test.TimeZones,AlgiersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\AlgiersTest.cs,GetPeriod_BeforeLast,The following statement contains a magic number: Instant april1981 = Instant.FromUtc(1981' 4' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,AlgiersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\AlgiersTest.cs,GetPeriod_BeforeLast,The following statement contains a magic number: Instant april1981 = Instant.FromUtc(1981' 4' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,AlgiersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\AlgiersTest.cs,GetPeriod_BeforeLast,The following statement contains a magic number: var expected = new ZoneInterval("WET"' Instant.FromUnixTimeTicks(3418020000000000L)' Instant.FromUnixTimeTicks(3575232000000000L)' Offset.Zero' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,AlgiersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\AlgiersTest.cs,GetPeriod_BeforeLast,The following statement contains a magic number: var expected = new ZoneInterval("WET"' Instant.FromUnixTimeTicks(3418020000000000L)' Instant.FromUnixTimeTicks(3575232000000000L)' Offset.Zero' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,AlgiersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\AlgiersTest.cs,GetPeriod_AfterLastTransition,The following statement contains a magic number: var may1981 = DateTimeZone.Utc.AtStrictly(new LocalDateTime(1981' 5' 1' 0' 0' 1)).ToInstant();
Magic Number,NodaTime.Test.TimeZones,AlgiersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\AlgiersTest.cs,GetPeriod_AfterLastTransition,The following statement contains a magic number: var may1981 = DateTimeZone.Utc.AtStrictly(new LocalDateTime(1981' 5' 1' 0' 0' 1)).ToInstant();
Magic Number,NodaTime.Test.TimeZones,AlgiersTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\AlgiersTest.cs,GetPeriod_AfterLastTransition,The following statement contains a magic number: var expected = new ZoneInterval("CET"' Instant.FromUnixTimeTicks(3575232000000000L)' null' Offset.FromSeconds(NodaConstants.SecondsPerHour)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneSourceTest.cs,FixedOffsetDoesNotEqualBuiltIn,The following statement contains a magic number: Assert.AreNotEqual(DateTimeZone.ForOffset(Offset.FromHours(-2))' zone);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneSourceTest.cs,FixedOffsetDoesNotEqualBuiltIn,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-2)' zone.GetZoneInterval(NodaConstants.UnixEpoch).WallOffset);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneSourceTest.cs,LocalZoneIsNotSystemZone,The following statement contains a magic number: var localZone = TimeZoneInfo.CreateCustomTimeZone("Local zone not in system zones"' TimeSpan.FromHours(5)' "Foo"' "Bar");
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AllZoneTransitions,The following statement contains a magic number: int endYear = TestHelper.IsRunningOnDotNetCoreUnix ? 2037 : 2050;
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AllZoneTransitions,The following statement contains a magic number: int endYear = TestHelper.IsRunningOnDotNetCoreUnix ? 2037 : 2050;
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AllZoneTransitions,The following statement contains a magic number: Instant instant = Instant.FromUtc(1800' 1' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,ValidateZoneEveryWeek,The following statement contains a magic number: int endYear = TestHelper.IsRunningOnDotNetCoreUnix ? 2037 : 2050;
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,ValidateZoneEveryWeek,The following statement contains a magic number: int endYear = TestHelper.IsRunningOnDotNetCoreUnix ? 2037 : 2050;
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,ValidateZoneEveryWeek,The following statement contains a magic number: Instant instant = Instant.FromUtc(1950' 1' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,DateTimeMinValueStartRuleExtendsToBeginningOfTime,The following statement contains a magic number: var rules = new[]              {                  // Rule for the whole of time' with DST of 1 hour commencing on March 1st                  // and ending on September 1st.                  TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(                      DateTime.MinValue' DateTime.MaxValue.Date' TimeSpan.FromHours(1)'                      TimeZoneInfo.TransitionTime.CreateFixedDateRule(DateTime.MinValue' 3' 1)'                      TimeZoneInfo.TransitionTime.CreateFixedDateRule(DateTime.MinValue' 9' 1))              };
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,DateTimeMinValueStartRuleExtendsToBeginningOfTime,The following statement contains a magic number: var rules = new[]              {                  // Rule for the whole of time' with DST of 1 hour commencing on March 1st                  // and ending on September 1st.                  TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(                      DateTime.MinValue' DateTime.MaxValue.Date' TimeSpan.FromHours(1)'                      TimeZoneInfo.TransitionTime.CreateFixedDateRule(DateTime.MinValue' 3' 1)'                      TimeZoneInfo.TransitionTime.CreateFixedDateRule(DateTime.MinValue' 9' 1))              };
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,DateTimeMinValueStartRuleExtendsToBeginningOfTime,The following statement contains a magic number: Assert.AreEqual(Offset.Zero' nodaZone.GetUtcOffset(Instant.FromUtc(-100' 2' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,DateTimeMinValueStartRuleExtendsToBeginningOfTime,The following statement contains a magic number: Assert.AreEqual(Offset.Zero' nodaZone.GetUtcOffset(Instant.FromUtc(-100' 2' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,DateTimeMinValueStartRuleExtendsToBeginningOfTime,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(1)' nodaZone.GetUtcOffset(Instant.FromUtc(-100' 7' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,DateTimeMinValueStartRuleExtendsToBeginningOfTime,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(1)' nodaZone.GetUtcOffset(Instant.FromUtc(-100' 7' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,DateTimeMinValueStartRuleExtendsToBeginningOfTime,The following statement contains a magic number: Assert.AreEqual(Offset.Zero' nodaZone.GetUtcOffset(Instant.FromUtc(-100' 10' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,DateTimeMinValueStartRuleExtendsToBeginningOfTime,The following statement contains a magic number: Assert.AreEqual(Offset.Zero' nodaZone.GetUtcOffset(Instant.FromUtc(-100' 10' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var rules = new[]              {                  TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(                      dateStart: new DateTime(1948' 1' 1)'                      dateEnd: new DateTime(1949' 1' 1).AddDays(-1)'                      daylightDelta: TimeSpan.FromHours(1)'                      daylightTransitionStart: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 2' 0' 0)' month: 2' day: 29)'                      daylightTransitionEnd: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 3' 0' 0)' month: 10' day: 3))              };
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var rules = new[]              {                  TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(                      dateStart: new DateTime(1948' 1' 1)'                      dateEnd: new DateTime(1949' 1' 1).AddDays(-1)'                      daylightDelta: TimeSpan.FromHours(1)'                      daylightTransitionStart: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 2' 0' 0)' month: 2' day: 29)'                      daylightTransitionEnd: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 3' 0' 0)' month: 10' day: 3))              };
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var rules = new[]              {                  TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(                      dateStart: new DateTime(1948' 1' 1)'                      dateEnd: new DateTime(1949' 1' 1).AddDays(-1)'                      daylightDelta: TimeSpan.FromHours(1)'                      daylightTransitionStart: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 2' 0' 0)' month: 2' day: 29)'                      daylightTransitionEnd: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 3' 0' 0)' month: 10' day: 3))              };
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var rules = new[]              {                  TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(                      dateStart: new DateTime(1948' 1' 1)'                      dateEnd: new DateTime(1949' 1' 1).AddDays(-1)'                      daylightDelta: TimeSpan.FromHours(1)'                      daylightTransitionStart: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 2' 0' 0)' month: 2' day: 29)'                      daylightTransitionEnd: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 3' 0' 0)' month: 10' day: 3))              };
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var rules = new[]              {                  TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(                      dateStart: new DateTime(1948' 1' 1)'                      dateEnd: new DateTime(1949' 1' 1).AddDays(-1)'                      daylightDelta: TimeSpan.FromHours(1)'                      daylightTransitionStart: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 2' 0' 0)' month: 2' day: 29)'                      daylightTransitionEnd: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 3' 0' 0)' month: 10' day: 3))              };
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var rules = new[]              {                  TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(                      dateStart: new DateTime(1948' 1' 1)'                      dateEnd: new DateTime(1949' 1' 1).AddDays(-1)'                      daylightDelta: TimeSpan.FromHours(1)'                      daylightTransitionStart: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 2' 0' 0)' month: 2' day: 29)'                      daylightTransitionEnd: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 3' 0' 0)' month: 10' day: 3))              };
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var rules = new[]              {                  TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(                      dateStart: new DateTime(1948' 1' 1)'                      dateEnd: new DateTime(1949' 1' 1).AddDays(-1)'                      daylightDelta: TimeSpan.FromHours(1)'                      daylightTransitionStart: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 2' 0' 0)' month: 2' day: 29)'                      daylightTransitionEnd: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 3' 0' 0)' month: 10' day: 3))              };
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var rules = new[]              {                  TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(                      dateStart: new DateTime(1948' 1' 1)'                      dateEnd: new DateTime(1949' 1' 1).AddDays(-1)'                      daylightDelta: TimeSpan.FromHours(1)'                      daylightTransitionStart: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 2' 0' 0)' month: 2' day: 29)'                      daylightTransitionEnd: TimeZoneInfo.TransitionTime.CreateFixedDateRule(timeOfDay: new DateTime(1' 1' 1' 3' 0' 0)' month: 10' day: 3))              };
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var expectedTransition1 = Instant.FromUtc(1948' 2' 29' 2' 0' 0);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var expectedTransition1 = Instant.FromUtc(1948' 2' 29' 2' 0' 0);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var expectedTransition1 = Instant.FromUtc(1948' 2' 29' 2' 0' 0);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var expectedTransition1 = Instant.FromUtc(1948' 2' 29' 2' 0' 0);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var expectedTransition2 = Instant.FromUtc(1948' 10' 3' 2' 0' 0);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var expectedTransition2 = Instant.FromUtc(1948' 10' 3' 2' 0' 0);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var expectedTransition2 = Instant.FromUtc(1948' 10' 3' 2' 0' 0);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var expectedTransition2 = Instant.FromUtc(1948' 10' 3' 2' 0' 0);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var zoneIntervalBefore = nodaZone.GetZoneInterval(Instant.FromUtc(1947' 1' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var daylightZoneInterval = nodaZone.GetZoneInterval(Instant.FromUtc(1948' 6' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var daylightZoneInterval = nodaZone.GetZoneInterval(Instant.FromUtc(1948' 6' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,AwkwardLeapYears,The following statement contains a magic number: var zoneIntervalAfter = nodaZone.GetZoneInterval(Instant.FromUtc(1949' 1' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var rule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(DateTime.MinValue' new DateTime(9999' 12' 31)' TimeSpan.Zero'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 3' 10)'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 9' 25));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var rule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(DateTime.MinValue' new DateTime(9999' 12' 31)' TimeSpan.Zero'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 3' 10)'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 9' 25));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var rule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(DateTime.MinValue' new DateTime(9999' 12' 31)' TimeSpan.Zero'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 3' 10)'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 9' 25));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var rule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(DateTime.MinValue' new DateTime(9999' 12' 31)' TimeSpan.Zero'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 3' 10)'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 9' 25));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var rule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(DateTime.MinValue' new DateTime(9999' 12' 31)' TimeSpan.Zero'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 3' 10)'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 9' 25));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var rule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(DateTime.MinValue' new DateTime(9999' 12' 31)' TimeSpan.Zero'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 3' 10)'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 9' 25));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var rule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(DateTime.MinValue' new DateTime(9999' 12' 31)' TimeSpan.Zero'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 3' 10)'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 9' 25));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var rule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(DateTime.MinValue' new DateTime(9999' 12' 31)' TimeSpan.Zero'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 3' 10)'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 9' 25));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var rule = TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(DateTime.MinValue' new DateTime(9999' 12' 31)' TimeSpan.Zero'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 3' 10)'                  TimeZoneInfo.TransitionTime.CreateFixedDateRule(new DateTime(1' 1' 1' 12' 0' 0)' 9' 25));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var bclZone = TimeZoneInfo.CreateCustomTimeZone("Nasty"' TimeSpan.FromHours(4)' "Display"' "Standard"' "Daylight"' new[] { rule });
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var winterInterval = nodaZone.GetZoneInterval(Instant.FromUtc(2017' 2' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var winterInterval = nodaZone.GetZoneInterval(Instant.FromUtc(2017' 2' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var summerInterval = nodaZone.GetZoneInterval(Instant.FromUtc(2017' 6' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var summerInterval = nodaZone.GetZoneInterval(Instant.FromUtc(2017' 6' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedWinter = new ZoneInterval("Standard"' Instant.FromUtc(2016' 9' 25' 8' 0)' Instant.FromUtc(2017' 3' 10' 8' 0)' Offset.FromHours(4)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedWinter = new ZoneInterval("Standard"' Instant.FromUtc(2016' 9' 25' 8' 0)' Instant.FromUtc(2017' 3' 10' 8' 0)' Offset.FromHours(4)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedWinter = new ZoneInterval("Standard"' Instant.FromUtc(2016' 9' 25' 8' 0)' Instant.FromUtc(2017' 3' 10' 8' 0)' Offset.FromHours(4)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedWinter = new ZoneInterval("Standard"' Instant.FromUtc(2016' 9' 25' 8' 0)' Instant.FromUtc(2017' 3' 10' 8' 0)' Offset.FromHours(4)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedWinter = new ZoneInterval("Standard"' Instant.FromUtc(2016' 9' 25' 8' 0)' Instant.FromUtc(2017' 3' 10' 8' 0)' Offset.FromHours(4)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedWinter = new ZoneInterval("Standard"' Instant.FromUtc(2016' 9' 25' 8' 0)' Instant.FromUtc(2017' 3' 10' 8' 0)' Offset.FromHours(4)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedWinter = new ZoneInterval("Standard"' Instant.FromUtc(2016' 9' 25' 8' 0)' Instant.FromUtc(2017' 3' 10' 8' 0)' Offset.FromHours(4)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedWinter = new ZoneInterval("Standard"' Instant.FromUtc(2016' 9' 25' 8' 0)' Instant.FromUtc(2017' 3' 10' 8' 0)' Offset.FromHours(4)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedWinter = new ZoneInterval("Standard"' Instant.FromUtc(2016' 9' 25' 8' 0)' Instant.FromUtc(2017' 3' 10' 8' 0)' Offset.FromHours(4)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedSummer = new ZoneInterval("Daylight"' Instant.FromUtc(2017' 3' 10' 8' 0)' Instant.FromUtc(2017' 9' 25' 8' 0)' Offset.FromHours(4)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedSummer = new ZoneInterval("Daylight"' Instant.FromUtc(2017' 3' 10' 8' 0)' Instant.FromUtc(2017' 9' 25' 8' 0)' Offset.FromHours(4)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedSummer = new ZoneInterval("Daylight"' Instant.FromUtc(2017' 3' 10' 8' 0)' Instant.FromUtc(2017' 9' 25' 8' 0)' Offset.FromHours(4)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedSummer = new ZoneInterval("Daylight"' Instant.FromUtc(2017' 3' 10' 8' 0)' Instant.FromUtc(2017' 9' 25' 8' 0)' Offset.FromHours(4)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedSummer = new ZoneInterval("Daylight"' Instant.FromUtc(2017' 3' 10' 8' 0)' Instant.FromUtc(2017' 9' 25' 8' 0)' Offset.FromHours(4)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedSummer = new ZoneInterval("Daylight"' Instant.FromUtc(2017' 3' 10' 8' 0)' Instant.FromUtc(2017' 9' 25' 8' 0)' Offset.FromHours(4)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedSummer = new ZoneInterval("Daylight"' Instant.FromUtc(2017' 3' 10' 8' 0)' Instant.FromUtc(2017' 9' 25' 8' 0)' Offset.FromHours(4)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedSummer = new ZoneInterval("Daylight"' Instant.FromUtc(2017' 3' 10' 8' 0)' Instant.FromUtc(2017' 9' 25' 8' 0)' Offset.FromHours(4)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,FakeDaylightSavingTime,The following statement contains a magic number: var expectedSummer = new ZoneInterval("Daylight"' Instant.FromUtc(2017' 3' 10' 8' 0)' Instant.FromUtc(2017' 9' 25' 8' 0)' Offset.FromHours(4)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,ValidateZoneEquality,The following statement contains a magic number: (utc.Month == 12 && utc.Day == 31) || (utc.Month == 1 && utc.Day == 1)
Magic Number,NodaTime.Test.TimeZones,BclDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\BclDateTimeZoneTest.cs,ValidateZoneEquality,The following statement contains a magic number: (utc.Month == 12 && utc.Day == 31) || (utc.Month == 1 && utc.Day == 1)
Magic Number,NodaTime.Test.TimeZones,CachedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\CachedDateTimeZoneTest.cs,GetZoneIntervalInstant_RepeatedCallsReturnSameObject,The following statement contains a magic number: i < 100
Magic Number,NodaTime.Test.TimeZones,CachedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\CachedDateTimeZoneTest.cs,GetZoneIntervalInstant_RepeatedCallsReturnSameObjectWithOthersInterspersed,The following statement contains a magic number: Assert.IsNotNull(timeZone.GetZoneInterval(NodaConstants.UnixEpoch + Duration.FromDays(2000 * 7)));
Magic Number,NodaTime.Test.TimeZones,CachedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\CachedDateTimeZoneTest.cs,GetZoneIntervalInstant_RepeatedCallsReturnSameObjectWithOthersInterspersed,The following statement contains a magic number: Assert.IsNotNull(timeZone.GetZoneInterval(NodaConstants.UnixEpoch + Duration.FromDays(2000 * 7)));
Magic Number,NodaTime.Test.TimeZones,CachedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\CachedDateTimeZoneTest.cs,GetZoneIntervalInstant_RepeatedCallsReturnSameObjectWithOthersInterspersed,The following statement contains a magic number: Assert.IsNotNull(timeZone.GetZoneInterval(NodaConstants.UnixEpoch + Duration.FromDays(3000 * 7)));
Magic Number,NodaTime.Test.TimeZones,CachedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\CachedDateTimeZoneTest.cs,GetZoneIntervalInstant_RepeatedCallsReturnSameObjectWithOthersInterspersed,The following statement contains a magic number: Assert.IsNotNull(timeZone.GetZoneInterval(NodaConstants.UnixEpoch + Duration.FromDays(3000 * 7)));
Magic Number,NodaTime.Test.TimeZones,CachedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\CachedDateTimeZoneTest.cs,GetZoneIntervalInstant_RepeatedCallsReturnSameObjectWithOthersInterspersed,The following statement contains a magic number: Assert.IsNotNull(timeZone.GetZoneInterval(NodaConstants.UnixEpoch + Duration.FromDays(4000 * 7)));
Magic Number,NodaTime.Test.TimeZones,CachedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\CachedDateTimeZoneTest.cs,GetZoneIntervalInstant_RepeatedCallsReturnSameObjectWithOthersInterspersed,The following statement contains a magic number: Assert.IsNotNull(timeZone.GetZoneInterval(NodaConstants.UnixEpoch + Duration.FromDays(4000 * 7)));
Magic Number,NodaTime.Test.TimeZones,DateTimeZoneCacheTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\DateTimeZoneCacheTest.cs,FixedOffsetSucceedsWhenNotAdvertised,The following statement contains a magic number: Assert.AreEqual(DateTimeZone.ForOffset(Offset.FromHoursAndMinutes(5' 30))' zone);
Magic Number,NodaTime.Test.TimeZones,DateTimeZoneCacheTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\DateTimeZoneCacheTest.cs,FixedOffsetSucceedsWhenNotAdvertised,The following statement contains a magic number: Assert.AreEqual(DateTimeZone.ForOffset(Offset.FromHoursAndMinutes(5' 30))' zone);
Magic Number,NodaTime.Test.TimeZones,TestDateTimeZoneSource,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\DateTimeZoneCacheTest.cs,ForId,The following statement contains a magic number: return new SingleTransitionDateTimeZone(NodaConstants.UnixEpoch' Offset.Zero' Offset.FromHours(id.GetHashCode() % 18)' id);
Magic Number,NodaTime.Test.TimeZones,EtcTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\EtcTest.cs,FixedEasternZone,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-5)' fixedZone.Offset);
Magic Number,NodaTime.Test.TimeZones,EtcTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\EtcTest.cs,FixedWesternZone,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(4)' fixedZone.Offset);
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,GetZoneIntervals_ReturnsSingleInterval,The following statement contains a magic number: var mapping = TestZone.MapLocal(new LocalDateTime(2001' 7' 1' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,GetZoneIntervals_ReturnsSingleInterval,The following statement contains a magic number: var mapping = TestZone.MapLocal(new LocalDateTime(2001' 7' 1' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,For_Id_FixedOffset,The following statement contains a magic number: Assert.AreEqual(DateTimeZone.ForOffset(Offset.FromHoursAndMinutes(5' 30))' zone);
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,For_Id_FixedOffset,The following statement contains a magic number: Assert.AreEqual(DateTimeZone.ForOffset(Offset.FromHoursAndMinutes(5' 30))' zone);
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,For_Id_FixedOffset_NonCanonicalId,The following statement contains a magic number: Assert.AreEqual(zone' DateTimeZone.ForOffset(Offset.FromHours(5)));
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,ExplicitNameAppearsInZoneInterval,The following statement contains a magic number: var zone = new FixedDateTimeZone("id"' Offset.FromHours(5)' "name");
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,ZoneIntervalNameDefaultsToZoneId,The following statement contains a magic number: var zone = new FixedDateTimeZone("id"' Offset.FromHours(5));
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,Read_NoNameInStream,The following statement contains a magic number: var offset = Offset.FromHours(5);
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,Read_WithNameInStream,The following statement contains a magic number: var offset = Offset.FromHours(5);
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,Roundtrip,The following statement contains a magic number: var oldZone = new FixedDateTimeZone("id"' Offset.FromHours(4)' "name");
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,Equals,The following statement contains a magic number: TestHelper.TestEqualsClass(new FixedDateTimeZone(Offset.FromSeconds(300))'                  new FixedDateTimeZone(Offset.FromSeconds(300))'                  new FixedDateTimeZone(Offset.FromSeconds(500)));
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,Equals,The following statement contains a magic number: TestHelper.TestEqualsClass(new FixedDateTimeZone(Offset.FromSeconds(300))'                  new FixedDateTimeZone(Offset.FromSeconds(300))'                  new FixedDateTimeZone(Offset.FromSeconds(500)));
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,Equals,The following statement contains a magic number: TestHelper.TestEqualsClass(new FixedDateTimeZone(Offset.FromSeconds(300))'                  new FixedDateTimeZone(Offset.FromSeconds(300))'                  new FixedDateTimeZone(Offset.FromSeconds(500)));
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,Equals,The following statement contains a magic number: TestHelper.TestEqualsClass(new FixedDateTimeZone("Foo"' Offset.FromSeconds(300))'                  new FixedDateTimeZone("Foo"' Offset.FromSeconds(300))'                  new FixedDateTimeZone("Bar"' Offset.FromSeconds(300)));
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,Equals,The following statement contains a magic number: TestHelper.TestEqualsClass(new FixedDateTimeZone("Foo"' Offset.FromSeconds(300))'                  new FixedDateTimeZone("Foo"' Offset.FromSeconds(300))'                  new FixedDateTimeZone("Bar"' Offset.FromSeconds(300)));
Magic Number,NodaTime.Test.TimeZones,FixedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\FixedDateTimeZoneTest.cs,Equals,The following statement contains a magic number: TestHelper.TestEqualsClass(new FixedDateTimeZone("Foo"' Offset.FromSeconds(300))'                  new FixedDateTimeZone("Foo"' Offset.FromSeconds(300))'                  new FixedDateTimeZone("Bar"' Offset.FromSeconds(300)));
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: var expectedDates = new[]              {                  new LocalDate(2000' 3' 30)' // Thursday morning                  new LocalDate(2001' 3' 29)' // Thursday morning                  new LocalDate(2002' 3' 29)' // Friday morning from here onwards                  new LocalDate(2003' 3' 28)'                  new LocalDate(2004' 3' 26)'                  new LocalDate(2005' 4' 1)'                  new LocalDate(2006' 3' 31)'                  new LocalDate(2007' 3' 30)'                  new LocalDate(2008' 3' 28)'                  new LocalDate(2009' 3' 27)'                  new LocalDate(2010' 3' 26)              };
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: LocalDate summer = new LocalDate(year' 6' 1);
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: Assert.AreEqual(expectedDates[year - 2000]' intervalPair.EarlyInterval.IsoLocalStart.Date);
Magic Number,NodaTime.Test.TimeZones,JordanTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\JordanTest.cs,Transitions2000To2010,The following statement contains a magic number: year <= 2010
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Niue,The following statement contains a magic number: var offset = niue.GetUtcOffset(niue.AtStrictly(new LocalDateTime(2010' 1' 1' 0' 0' 0)).ToInstant());
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Niue,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-11)' offset);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Kiritimati,The following statement contains a magic number: var offset = kiritimati.GetUtcOffset(kiritimati.AtStrictly(new LocalDateTime(2010' 1' 1' 0' 0' 0)).ToInstant());
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Kiritimati,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(14)' offset);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Pyongyang,The following statement contains a magic number: var offset = pyongyang.GetUtcOffset(pyongyang.AtStrictly(new LocalDateTime(2010' 1' 1' 0' 0' 0)).ToInstant());
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Pyongyang,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(9)' offset);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Khartoum,The following statement contains a magic number: Instant utc = Instant.FromUtc(2000' 1' 1' 0' 0' 0);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Khartoum,The following statement contains a magic number: LocalDateTime expectedLocal = new LocalDateTime(2000' 1' 1' 2' 0);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Khartoum,The following statement contains a magic number: LocalDateTime expectedLocal = new LocalDateTime(2000' 1' 1' 2' 0);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Khartoum,The following statement contains a magic number: utc = Instant.FromUtc(2000' 1' 16' 0' 0' 0);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Khartoum,The following statement contains a magic number: utc = Instant.FromUtc(2000' 1' 16' 0' 0' 0);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Khartoum,The following statement contains a magic number: expectedLocal = new LocalDateTime(2000' 1' 16' 3' 0);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Khartoum,The following statement contains a magic number: expectedLocal = new LocalDateTime(2000' 1' 16' 3' 0);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Khartoum,The following statement contains a magic number: expectedLocal = new LocalDateTime(2000' 1' 16' 3' 0);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Tbilisi,The following statement contains a magic number: Instant summer1996 = Instant.FromUtc(1996' 6' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Tbilisi,The following statement contains a magic number: Instant summer1996 = Instant.FromUtc(1996' 6' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Tbilisi,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1996' 3' 31' 1' 0)' interval.IsoLocalStart);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Tbilisi,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1996' 3' 31' 1' 0)' interval.IsoLocalStart);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Tbilisi,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1996' 3' 31' 1' 0)' interval.IsoLocalStart);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Tbilisi,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1997' 10' 26' 0' 0)' interval.IsoLocalEnd);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Tbilisi,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1997' 10' 26' 0' 0)' interval.IsoLocalEnd);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Tbilisi,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1997' 10' 26' 0' 0)' interval.IsoLocalEnd);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Japan,The following statement contains a magic number: Instant summer1951 = Instant.FromUtc(1951' 8' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Japan,The following statement contains a magic number: Instant summer1951 = Instant.FromUtc(1951' 8' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Japan,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1951' 5' 6' 1' 0)' interval.IsoLocalStart);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Japan,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1951' 5' 6' 1' 0)' interval.IsoLocalStart);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Japan,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1951' 5' 6' 1' 0)' interval.IsoLocalStart);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Japan,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1951' 9' 9' 1' 0)' interval.IsoLocalEnd);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Japan,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1951' 9' 9' 1' 0)' interval.IsoLocalEnd);
Magic Number,NodaTime.Test.TimeZones,MiscellaneousBugReports,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\MiscellaneousBugReports.cs,Japan,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(1951' 9' 9' 1' 0)' interval.IsoLocalEnd);
Magic Number,NodaTime.Test.TimeZones,ParisTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ParisTest.cs,FirstTransitions,The following statement contains a magic number: var nameChangeInstant = Instant.FromUtc(1891' 3' 14' 23' 51' 39);
Magic Number,NodaTime.Test.TimeZones,ParisTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ParisTest.cs,FirstTransitions,The following statement contains a magic number: var nameChangeInstant = Instant.FromUtc(1891' 3' 14' 23' 51' 39);
Magic Number,NodaTime.Test.TimeZones,ParisTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ParisTest.cs,FirstTransitions,The following statement contains a magic number: var nameChangeInstant = Instant.FromUtc(1891' 3' 14' 23' 51' 39);
Magic Number,NodaTime.Test.TimeZones,ParisTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ParisTest.cs,FirstTransitions,The following statement contains a magic number: var nameChangeInstant = Instant.FromUtc(1891' 3' 14' 23' 51' 39);
Magic Number,NodaTime.Test.TimeZones,ParisTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ParisTest.cs,FirstTransitions,The following statement contains a magic number: var nameChangeInstant = Instant.FromUtc(1891' 3' 14' 23' 51' 39);
Magic Number,NodaTime.Test.TimeZones,ParisTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ParisTest.cs,FirstTransitions,The following statement contains a magic number: var nameChangeInstant = Instant.FromUtc(1891' 3' 14' 23' 51' 39);
Magic Number,NodaTime.Test.TimeZones,ParisTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ParisTest.cs,FirstTransitions,The following statement contains a magic number: var utcChangeInstant = Instant.FromUtc(1911' 3' 10' 23' 51' 39);
Magic Number,NodaTime.Test.TimeZones,ParisTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ParisTest.cs,FirstTransitions,The following statement contains a magic number: var utcChangeInstant = Instant.FromUtc(1911' 3' 10' 23' 51' 39);
Magic Number,NodaTime.Test.TimeZones,ParisTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ParisTest.cs,FirstTransitions,The following statement contains a magic number: var utcChangeInstant = Instant.FromUtc(1911' 3' 10' 23' 51' 39);
Magic Number,NodaTime.Test.TimeZones,ParisTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ParisTest.cs,FirstTransitions,The following statement contains a magic number: var utcChangeInstant = Instant.FromUtc(1911' 3' 10' 23' 51' 39);
Magic Number,NodaTime.Test.TimeZones,ParisTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ParisTest.cs,FirstTransitions,The following statement contains a magic number: var utcChangeInstant = Instant.FromUtc(1911' 3' 10' 23' 51' 39);
Magic Number,NodaTime.Test.TimeZones,ParisTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ParisTest.cs,FirstTransitions,The following statement contains a magic number: var utcChangeInstant = Instant.FromUtc(1911' 3' 10' 23' 51' 39);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MinMaxOffsets,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-6)' TestZone.MinOffset);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MinMaxOffsets,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(4)' TestZone.MaxOffset);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MinMaxOffsetsWithOtherTailZone,The following statement contains a magic number: var tailZone = new FixedDateTimeZone("TestFixed"' Offset.FromHours(8));
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MinMaxOffsetsWithOtherTailZone,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-5)' testZone.MinOffset);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MinMaxOffsetsWithOtherTailZone,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(8)' testZone.MaxOffset);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MinMaxOffsetsWithNullTailZone,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-5)' testZone.MinOffset);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MinMaxOffsetsWithNullTailZone,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(4)' testZone.MaxOffset);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_UnambiguousInPrecalculated,The following statement contains a magic number: CheckMapping(new LocalDateTime(2000' 6' 1' 0' 0)' SecondInterval' SecondInterval' 1);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_UnambiguousInPrecalculated,The following statement contains a magic number: CheckMapping(new LocalDateTime(2000' 6' 1' 0' 0)' SecondInterval' SecondInterval' 1);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_UnambiguousInTailZone,The following statement contains a magic number: CheckMapping(new LocalDateTime(2005' 2' 1' 0' 0)' ClampedTailZoneInterval' ClampedTailZoneInterval' 1);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_UnambiguousInTailZone,The following statement contains a magic number: CheckMapping(new LocalDateTime(2005' 2' 1' 0' 0)' ClampedTailZoneInterval' ClampedTailZoneInterval' 1);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_AmbiguousWithinPrecalculated,The following statement contains a magic number: CheckMapping(ThirdInterval.IsoLocalStart' SecondInterval' ThirdInterval' 2);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_AmbiguousAroundTailZoneTransition,The following statement contains a magic number: CheckMapping(ThirdInterval.IsoLocalEnd.PlusNanoseconds(-1L)' ThirdInterval' ClampedTailZoneInterval' 2);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_AmbiguousButTooEarlyInTailZoneTransition,The following statement contains a magic number: var tailZone = new SingleTransitionDateTimeZone(ThirdInterval.End + Duration.FromHours(1)' 10' 8);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_AmbiguousButTooEarlyInTailZoneTransition,The following statement contains a magic number: var tailZone = new SingleTransitionDateTimeZone(ThirdInterval.End + Duration.FromHours(1)' 10' 8);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_SingleIntervalAroundTailZoneTransition,The following statement contains a magic number: var tailZone = new FixedDateTimeZone(Offset.FromHours(5));
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_GapAroundTailZoneTransition,The following statement contains a magic number: var tailZone = new FixedDateTimeZone(Offset.FromHours(5));
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_GapAroundTailZoneTransition,The following statement contains a magic number: Assert.AreEqual(new ZoneInterval("UTC+05"' ThirdInterval.End' Instant.AfterMaxValue' Offset.FromHours(5)' Offset.Zero)'                              mapping.LateInterval);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_GapAroundAndInTailZoneTransition,The following statement contains a magic number: var tailZone = new SingleTransitionDateTimeZone(ThirdInterval.End + Duration.FromHours(1)' -10' +5);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_GapAroundAndInTailZoneTransition,The following statement contains a magic number: var tailZone = new SingleTransitionDateTimeZone(ThirdInterval.End + Duration.FromHours(1)' -10' +5);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,MapLocal_GapAroundAndInTailZoneTransition,The following statement contains a magic number: Assert.AreEqual(new ZoneInterval("Single-Early"' ThirdInterval.End' tailZone.Transition' Offset.FromHours(-10)' Offset.Zero)'                              mapping.LateInterval);
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,GetZoneIntervals_NullTailZone_Eot,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.AfterMaxValue' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,GetZoneIntervals_NullTailZone_Eot,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.AfterMaxValue' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_BadFirstStartingPoint,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(10)' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_BadFirstStartingPoint,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(10)' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_BadFirstStartingPoint,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(10)' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_BadFirstStartingPoint,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(10)' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_NonAdjoiningIntervals,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(25)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_NonAdjoiningIntervals,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(25)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_NonAdjoiningIntervals,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(25)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_Success,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(30)' Instant.FromUnixTimeTicks(100)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(100)' Instant.FromUnixTimeTicks(200)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_Success,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(30)' Instant.FromUnixTimeTicks(100)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(100)' Instant.FromUnixTimeTicks(200)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_Success,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(30)' Instant.FromUnixTimeTicks(100)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(100)' Instant.FromUnixTimeTicks(200)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_Success,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(30)' Instant.FromUnixTimeTicks(100)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(100)' Instant.FromUnixTimeTicks(200)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_Success,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(30)' Instant.FromUnixTimeTicks(100)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(100)' Instant.FromUnixTimeTicks(200)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_Success,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(30)' Instant.FromUnixTimeTicks(100)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(100)' Instant.FromUnixTimeTicks(200)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_Success,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(30)' Instant.FromUnixTimeTicks(100)' Offset.Zero' Offset.Zero)'                                                         new ZoneInterval("foo"' Instant.FromUnixTimeTicks(100)' Instant.FromUnixTimeTicks(200)' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_NullTailZoneWithMiddleOfTimeFinalPeriod,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)                                                    };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_NullTailZoneWithMiddleOfTimeFinalPeriod,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)                                                    };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_NullTailZoneWithMiddleOfTimeFinalPeriod,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.FromUnixTimeTicks(30)' Offset.Zero' Offset.Zero)                                                    };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_NullTailZoneWithEotPeriodEnd,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.AfterMaxValue' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Validation_NullTailZoneWithEotPeriodEnd,The following statement contains a magic number: ZoneInterval[] intervals =              {                  new ZoneInterval("foo"' Instant.BeforeMinValue' Instant.FromUnixTimeTicks(20)' Offset.Zero' Offset.Zero)'                  new ZoneInterval("foo"' Instant.FromUnixTimeTicks(20)' Instant.AfterMaxValue' Offset.Zero' Offset.Zero)              };
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Serialization,The following statement contains a magic number: var interval = new Interval(Instant.FromUtc(1990' 1' 1' 0' 0)' Instant.FromUtc(2010' 1' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,PrecalculatedDateTimeZoneTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\PrecalculatedDateTimeZoneTest.cs,Serialization,The following statement contains a magic number: var interval = new Interval(Instant.FromUtc(1990' 1' 1' 0' 0)' Instant.FromUtc(2010' 1' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,ResolversTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ResolversTest.cs,ReturnEarlier,The following statement contains a magic number: Assert.AreEqual(2' mapping.Count);
Magic Number,NodaTime.Test.TimeZones,ResolversTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ResolversTest.cs,ReturnLater,The following statement contains a magic number: Assert.AreEqual(2' mapping.Count);
Magic Number,NodaTime.Test.TimeZones,ResolversTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ResolversTest.cs,ThrowWhenAmbiguous,The following statement contains a magic number: Assert.AreEqual(2' mapping.Count);
Magic Number,NodaTime.Test.TimeZones,ResolversTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ResolversTest.cs,CreateResolver_Unambiguous,The following statement contains a magic number: LocalDateTime localTime = new LocalDateTime(1900' 1' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MinMaxOffsets,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(6)' TestMap.MaxOffset);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MinMaxOffsets,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(5)' TestMap.MinOffset);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Summer,The following statement contains a magic number: var interval = TestMap.GetZoneInterval(Instant.FromUtc(2010' 6' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Summer,The following statement contains a magic number: var interval = TestMap.GetZoneInterval(Instant.FromUtc(2010' 6' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Summer,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(6)' interval.WallOffset);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Summer,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(5)' interval.StandardOffset);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Summer,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 3' 10' 2' 0)' interval.IsoLocalStart);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Summer,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 3' 10' 2' 0)' interval.IsoLocalStart);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Summer,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 3' 10' 2' 0)' interval.IsoLocalStart);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Summer,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 3' 10' 2' 0)' interval.IsoLocalStart);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Summer,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 10' 5' 2' 0)' interval.IsoLocalEnd);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Summer,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 10' 5' 2' 0)' interval.IsoLocalEnd);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Summer,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 10' 5' 2' 0)' interval.IsoLocalEnd);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Summer,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 10' 5' 2' 0)' interval.IsoLocalEnd);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Winter,The following statement contains a magic number: var interval = TestMap.GetZoneInterval(Instant.FromUtc(2010' 11' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Winter,The following statement contains a magic number: var interval = TestMap.GetZoneInterval(Instant.FromUtc(2010' 11' 1' 0' 0));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Winter,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(5)' interval.WallOffset);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Winter,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(5)' interval.StandardOffset);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Winter,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 10' 5' 1' 0)' interval.IsoLocalStart);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Winter,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 10' 5' 1' 0)' interval.IsoLocalStart);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Winter,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2010' 10' 5' 1' 0)' interval.IsoLocalStart);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Winter,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2011' 3' 10' 1' 0)' interval.IsoLocalEnd);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Winter,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2011' 3' 10' 1' 0)' interval.IsoLocalEnd);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_Winter,The following statement contains a magic number: Assert.AreEqual(new LocalDateTime(2011' 3' 10' 1' 0)' interval.IsoLocalEnd);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_StartOfFirstSummer,The following statement contains a magic number: var firstSummer = Instant.FromUtc(2000' 3' 9' 20' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_StartOfFirstSummer,The following statement contains a magic number: var firstSummer = Instant.FromUtc(2000' 3' 9' 20' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_StartOfFirstSummer,The following statement contains a magic number: var firstSummer = Instant.FromUtc(2000' 3' 9' 20' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,GetZoneInterval_Instant_StartOfFirstSummer,The following statement contains a magic number: var firstSummer = Instant.FromUtc(2000' 3' 9' 20' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinFirstSummer,The following statement contains a magic number: var early = new LocalDateTime(2000' 6' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinFirstSummer,The following statement contains a magic number: var early = new LocalDateTime(2000' 6' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinFirstWinter,The following statement contains a magic number: var winter = new LocalDateTime(2000' 12' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinFirstWinter,The following statement contains a magic number: var winter = new LocalDateTime(2000' 12' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AtFirstGapStart,The following statement contains a magic number: var startOfFirstGap = new LocalDateTime(2000' 3' 10' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AtFirstGapStart,The following statement contains a magic number: var startOfFirstGap = new LocalDateTime(2000' 3' 10' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AtFirstGapStart,The following statement contains a magic number: var startOfFirstGap = new LocalDateTime(2000' 3' 10' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinFirstGap,The following statement contains a magic number: var middleOfFirstGap = new LocalDateTime(2000' 3' 10' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinFirstGap,The following statement contains a magic number: var middleOfFirstGap = new LocalDateTime(2000' 3' 10' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinFirstGap,The following statement contains a magic number: var middleOfFirstGap = new LocalDateTime(2000' 3' 10' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinFirstGap,The following statement contains a magic number: var middleOfFirstGap = new LocalDateTime(2000' 3' 10' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_EndOfFirstGap,The following statement contains a magic number: var endOfFirstGap = new LocalDateTime(2000' 3' 10' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_EndOfFirstGap,The following statement contains a magic number: var endOfFirstGap = new LocalDateTime(2000' 3' 10' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_EndOfFirstGap,The following statement contains a magic number: var endOfFirstGap = new LocalDateTime(2000' 3' 10' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_EndOfFirstGap,The following statement contains a magic number: var endOfFirstGap = new LocalDateTime(2000' 3' 10' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_StartOfFirstAmbiguity,The following statement contains a magic number: var firstAmbiguity = new LocalDateTime(2000' 10' 5' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_StartOfFirstAmbiguity,The following statement contains a magic number: var firstAmbiguity = new LocalDateTime(2000' 10' 5' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_StartOfFirstAmbiguity,The following statement contains a magic number: var firstAmbiguity = new LocalDateTime(2000' 10' 5' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_StartOfFirstAmbiguity,The following statement contains a magic number: CheckMapping(TestZone.MapLocal(firstAmbiguity)' "Summer"' "Winter"' 2);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_MiddleOfFirstAmbiguity,The following statement contains a magic number: var firstAmbiguity = new LocalDateTime(2000' 10' 5' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_MiddleOfFirstAmbiguity,The following statement contains a magic number: var firstAmbiguity = new LocalDateTime(2000' 10' 5' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_MiddleOfFirstAmbiguity,The following statement contains a magic number: var firstAmbiguity = new LocalDateTime(2000' 10' 5' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_MiddleOfFirstAmbiguity,The following statement contains a magic number: var firstAmbiguity = new LocalDateTime(2000' 10' 5' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_MiddleOfFirstAmbiguity,The following statement contains a magic number: CheckMapping(TestZone.MapLocal(firstAmbiguity)' "Summer"' "Winter"' 2);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AfterFirstAmbiguity,The following statement contains a magic number: var unambiguousWinter = new LocalDateTime(2000' 10' 5' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AfterFirstAmbiguity,The following statement contains a magic number: var unambiguousWinter = new LocalDateTime(2000' 10' 5' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AfterFirstAmbiguity,The following statement contains a magic number: var unambiguousWinter = new LocalDateTime(2000' 10' 5' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AfterFirstAmbiguity,The following statement contains a magic number: var unambiguousWinter = new LocalDateTime(2000' 10' 5' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinArbitrarySummer,The following statement contains a magic number: var summer = new LocalDateTime(2010' 6' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinArbitrarySummer,The following statement contains a magic number: var summer = new LocalDateTime(2010' 6' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinArbitraryWinter,The following statement contains a magic number: var winter = new LocalDateTime(2010' 12' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinArbitraryWinter,The following statement contains a magic number: var winter = new LocalDateTime(2010' 12' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AtArbitraryGapStart,The following statement contains a magic number: var startOfGap = new LocalDateTime(2010' 3' 10' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AtArbitraryGapStart,The following statement contains a magic number: var startOfGap = new LocalDateTime(2010' 3' 10' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AtArbitraryGapStart,The following statement contains a magic number: var startOfGap = new LocalDateTime(2010' 3' 10' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinArbitraryGap,The following statement contains a magic number: var middleOfGap = new LocalDateTime(2010' 3' 10' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinArbitraryGap,The following statement contains a magic number: var middleOfGap = new LocalDateTime(2010' 3' 10' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinArbitraryGap,The following statement contains a magic number: var middleOfGap = new LocalDateTime(2010' 3' 10' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_WithinArbitraryGap,The following statement contains a magic number: var middleOfGap = new LocalDateTime(2010' 3' 10' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_EndOfArbitraryGap,The following statement contains a magic number: var endOfGap = new LocalDateTime(2010' 3' 10' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_EndOfArbitraryGap,The following statement contains a magic number: var endOfGap = new LocalDateTime(2010' 3' 10' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_EndOfArbitraryGap,The following statement contains a magic number: var endOfGap = new LocalDateTime(2010' 3' 10' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_EndOfArbitraryGap,The following statement contains a magic number: var endOfGap = new LocalDateTime(2010' 3' 10' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_StartOfArbitraryAmbiguity,The following statement contains a magic number: var ambiguity = new LocalDateTime(2010' 10' 5' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_StartOfArbitraryAmbiguity,The following statement contains a magic number: var ambiguity = new LocalDateTime(2010' 10' 5' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_StartOfArbitraryAmbiguity,The following statement contains a magic number: var ambiguity = new LocalDateTime(2010' 10' 5' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_StartOfArbitraryAmbiguity,The following statement contains a magic number: CheckMapping(TestZone.MapLocal(ambiguity)' "Summer"' "Winter"' 2);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_MiddleOfArbitraryAmbiguity,The following statement contains a magic number: var ambiguity = new LocalDateTime(2010' 10' 5' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_MiddleOfArbitraryAmbiguity,The following statement contains a magic number: var ambiguity = new LocalDateTime(2010' 10' 5' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_MiddleOfArbitraryAmbiguity,The following statement contains a magic number: var ambiguity = new LocalDateTime(2010' 10' 5' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_MiddleOfArbitraryAmbiguity,The following statement contains a magic number: var ambiguity = new LocalDateTime(2010' 10' 5' 1' 30);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_MiddleOfArbitraryAmbiguity,The following statement contains a magic number: CheckMapping(TestZone.MapLocal(ambiguity)' "Summer"' "Winter"' 2);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AfterArbitraryAmbiguity,The following statement contains a magic number: var unambiguousWinter = new LocalDateTime(2010' 10' 5' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AfterArbitraryAmbiguity,The following statement contains a magic number: var unambiguousWinter = new LocalDateTime(2010' 10' 5' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AfterArbitraryAmbiguity,The following statement contains a magic number: var unambiguousWinter = new LocalDateTime(2010' 10' 5' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,MapLocal_AfterArbitraryAmbiguity,The following statement contains a magic number: var unambiguousWinter = new LocalDateTime(2010' 10' 5' 2' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var map3 = new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter'                  // Summer' but starting from 1900                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 1900' int.MaxValue));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var map3 = new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter'                  // Summer' but starting from 1900                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 1900' int.MaxValue));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var map3 = new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter'                  // Summer' but starting from 1900                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 1900' int.MaxValue));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Equality,The following statement contains a magic number: var unequalMaps = new[]              {                  new ZoneRecurrence("Different name"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(2)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Standard' 3' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 4' 10' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 9' 0' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 1' false' new LocalTime(1' 0))' 2000' int.MaxValue)'                  // Advance with day-of-week 0 doesn't make any real difference' but they compare non-equal...                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' true' new LocalTime(1' 0))' 2000' int.MaxValue)'                  new ZoneRecurrence("Summer"' Offset.FromHours(1)'                      new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(2' 0))' 2000' int.MaxValue)              }.Select(recurrence => new StandardDaylightAlternatingMap(Offset.FromHours(1)' Winter' recurrence)).ToArray();
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: ZoneRecurrence winter = new ZoneRecurrence("Winter"' Offset.Zero'                  new ZoneYearOffset(TransitionMode.Wall' 10' 5' 0' false' new LocalTime(2' 0))' int.MinValue' int.MaxValue);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: ZoneRecurrence winter = new ZoneRecurrence("Winter"' Offset.Zero'                  new ZoneYearOffset(TransitionMode.Wall' 10' 5' 0' false' new LocalTime(2' 0))' int.MinValue' int.MaxValue);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: ZoneRecurrence winter = new ZoneRecurrence("Winter"' Offset.Zero'                  new ZoneYearOffset(TransitionMode.Wall' 10' 5' 0' false' new LocalTime(2' 0))' int.MinValue' int.MaxValue);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: ZoneRecurrence summer = new ZoneRecurrence("Summer"' Offset.FromHours(1)'                  new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' int.MinValue' int.MaxValue);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: ZoneRecurrence summer = new ZoneRecurrence("Summer"' Offset.FromHours(1)'                  new ZoneYearOffset(TransitionMode.Wall' 3' 10' 0' false' new LocalTime(1' 0))' int.MinValue' int.MaxValue);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: var firstSpring = Instant.FromUtc(-9998' 3' 10' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: var firstSpring = Instant.FromUtc(-9998' 3' 10' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: var firstSpring = Instant.FromUtc(-9998' 3' 10' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: var firstAutumn = Instant.FromUtc(-9998' 10' 5' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: var firstAutumn = Instant.FromUtc(-9998' 10' 5' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: var firstAutumn = Instant.FromUtc(-9998' 10' 5' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: var lastSpring = Instant.FromUtc(9999' 3' 10' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: var lastSpring = Instant.FromUtc(9999' 3' 10' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: var lastSpring = Instant.FromUtc(9999' 3' 10' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: var lastAutumn = Instant.FromUtc(9999' 10' 5' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: var lastAutumn = Instant.FromUtc(9999' 10' 5' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: var lastAutumn = Instant.FromUtc(9999' 10' 5' 1' 0);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: Assert.AreEqual(firstWinter' zone.GetZoneInterval(Instant.FromUtc(-9998' 2' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: Assert.AreEqual(firstWinter' zone.GetZoneInterval(Instant.FromUtc(-9998' 2' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: Assert.AreEqual(firstSummer' zone.GetZoneInterval(Instant.FromUtc(-9998' 5' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: Assert.AreEqual(firstSummer' zone.GetZoneInterval(Instant.FromUtc(-9998' 5' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: Assert.AreEqual(lastSummer' zone.GetZoneInterval(Instant.FromUtc(9999' 5' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: Assert.AreEqual(lastSummer' zone.GetZoneInterval(Instant.FromUtc(9999' 5' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: Assert.AreEqual(lastWinter' zone.GetZoneInterval(Instant.FromUtc(9999' 11' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,Extremes,The following statement contains a magic number: Assert.AreEqual(lastWinter' zone.GetZoneInterval(Instant.FromUtc(9999' 11' 1' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,InvalidMap_SimultaneousTransition,The following statement contains a magic number: ZoneRecurrence r1 = new ZoneRecurrence("Recurrence1"' Offset.Zero'                  new ZoneYearOffset(TransitionMode.Utc' 10' 5' 0' false' new LocalTime(2' 0))' int.MinValue' int.MaxValue);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,InvalidMap_SimultaneousTransition,The following statement contains a magic number: ZoneRecurrence r1 = new ZoneRecurrence("Recurrence1"' Offset.Zero'                  new ZoneYearOffset(TransitionMode.Utc' 10' 5' 0' false' new LocalTime(2' 0))' int.MinValue' int.MaxValue);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,InvalidMap_SimultaneousTransition,The following statement contains a magic number: ZoneRecurrence r1 = new ZoneRecurrence("Recurrence1"' Offset.Zero'                  new ZoneYearOffset(TransitionMode.Utc' 10' 5' 0' false' new LocalTime(2' 0))' int.MinValue' int.MaxValue);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,InvalidMap_SimultaneousTransition,The following statement contains a magic number: ZoneRecurrence r2 = new ZoneRecurrence("Recurrence2"' Offset.FromHours(1)'                  new ZoneYearOffset(TransitionMode.Utc' 10' 5' 0' false' new LocalTime(2' 0))' int.MinValue' int.MaxValue);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,InvalidMap_SimultaneousTransition,The following statement contains a magic number: ZoneRecurrence r2 = new ZoneRecurrence("Recurrence2"' Offset.FromHours(1)'                  new ZoneYearOffset(TransitionMode.Utc' 10' 5' 0' false' new LocalTime(2' 0))' int.MinValue' int.MaxValue);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,InvalidMap_SimultaneousTransition,The following statement contains a magic number: ZoneRecurrence r2 = new ZoneRecurrence("Recurrence2"' Offset.FromHours(1)'                  new ZoneYearOffset(TransitionMode.Utc' 10' 5' 0' false' new LocalTime(2' 0))' int.MinValue' int.MaxValue);
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,InvalidMap_SimultaneousTransition,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => map.GetZoneInterval(Instant.FromUtc(2017' 8' 25' 0' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,InvalidMap_SimultaneousTransition,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => map.GetZoneInterval(Instant.FromUtc(2017' 8' 25' 0' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,StandardDaylightAlternatingMapTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\StandardDaylightAlternatingMapTest.cs,InvalidMap_SimultaneousTransition,The following statement contains a magic number: Assert.Throws<InvalidOperationException>(() => map.GetZoneInterval(Instant.FromUtc(2017' 8' 25' 0' 0' 0)));
Magic Number,NodaTime.Test.TimeZones,TransitionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TransitionTest.cs,Equality,The following statement contains a magic number: var equal1 = new Transition(Instant.FromUnixTimeSeconds(100)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,TransitionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TransitionTest.cs,Equality,The following statement contains a magic number: var equal2 = new Transition(Instant.FromUnixTimeSeconds(100)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,TransitionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TransitionTest.cs,Equality,The following statement contains a magic number: var unequal1 = new Transition(Instant.FromUnixTimeSeconds(101)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,TransitionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TransitionTest.cs,Equality,The following statement contains a magic number: var unequal2 = new Transition(Instant.FromUnixTimeSeconds(100)' Offset.FromHours(2));
Magic Number,NodaTime.Test.TimeZones,TransitionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TransitionTest.cs,Equality,The following statement contains a magic number: var unequal2 = new Transition(Instant.FromUnixTimeSeconds(100)' Offset.FromHours(2));
Magic Number,NodaTime.Test.TimeZones,TransitionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TransitionTest.cs,TransitionToString,The following statement contains a magic number: var transition = new Transition(Instant.FromUtc(2017' 8' 25' 15' 26' 30)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,TransitionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TransitionTest.cs,TransitionToString,The following statement contains a magic number: var transition = new Transition(Instant.FromUtc(2017' 8' 25' 15' 26' 30)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,TransitionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TransitionTest.cs,TransitionToString,The following statement contains a magic number: var transition = new Transition(Instant.FromUtc(2017' 8' 25' 15' 26' 30)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,TransitionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TransitionTest.cs,TransitionToString,The following statement contains a magic number: var transition = new Transition(Instant.FromUtc(2017' 8' 25' 15' 26' 30)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,TransitionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TransitionTest.cs,TransitionToString,The following statement contains a magic number: var transition = new Transition(Instant.FromUtc(2017' 8' 25' 15' 26' 30)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,TransitionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TransitionTest.cs,TransitionToString,The following statement contains a magic number: var transition = new Transition(Instant.FromUtc(2017' 8' 25' 15' 26' 30)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: var utc = Instant.FromUtc(2007' 8' 24' 9' 30' 0);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: var utc = Instant.FromUtc(2007' 8' 24' 9' 30' 0);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: var utc = Instant.FromUtc(2007' 8' 24' 9' 30' 0);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: var utc = Instant.FromUtc(2007' 8' 24' 9' 30' 0);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: var utc = Instant.FromUtc(2007' 8' 24' 9' 30' 0);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: var expectedLocal = new LocalDateTime(2007' 8' 24' 10' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: var expectedLocal = new LocalDateTime(2007' 8' 24' 10' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: var expectedLocal = new LocalDateTime(2007' 8' 24' 10' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: var expectedLocal = new LocalDateTime(2007' 8' 24' 10' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: var expectedLocal = new LocalDateTime(2007' 8' 24' 10' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: expectedLocal = new LocalDateTime(2007' 8' 24' 9' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: expectedLocal = new LocalDateTime(2007' 8' 24' 9' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: expectedLocal = new LocalDateTime(2007' 8' 24' 9' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: expectedLocal = new LocalDateTime(2007' 8' 24' 9' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: expectedLocal = new LocalDateTime(2007' 8' 24' 9' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: expectedLocal = new LocalDateTime(2007' 8' 24' 18' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: expectedLocal = new LocalDateTime(2007' 8' 24' 18' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: expectedLocal = new LocalDateTime(2007' 8' 24' 18' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: expectedLocal = new LocalDateTime(2007' 8' 24' 18' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: expectedLocal = new LocalDateTime(2007' 8' 24' 18' 30);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: Assert.AreEqual(48.86666' france.Latitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: Assert.AreEqual(48.86666' france.Latitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: Assert.AreEqual(2.3333' france.Longitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,CanLoadNodaTimeResourceFromOnePointOneRelease,The following statement contains a magic number: Assert.AreEqual(2.3333' france.Longitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,ZoneLocations_ContainsFrance,The following statement contains a magic number: Assert.AreEqual(48.86666' france.Latitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,ZoneLocations_ContainsFrance,The following statement contains a magic number: Assert.AreEqual(48.86666' france.Latitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,ZoneLocations_ContainsFrance,The following statement contains a magic number: Assert.AreEqual(2.3333' france.Longitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,ZoneLocations_ContainsFrance,The following statement contains a magic number: Assert.AreEqual(2.3333' france.Longitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,Zone1970Locations_ContainsBritain,The following statement contains a magic number: Assert.AreEqual(51.5083' britain.Latitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,Zone1970Locations_ContainsBritain,The following statement contains a magic number: Assert.AreEqual(51.5083' britain.Latitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,Zone1970Locations_ContainsBritain,The following statement contains a magic number: Assert.AreEqual(-0.1253' britain.Longitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,Zone1970Locations_ContainsBritain,The following statement contains a magic number: Assert.AreEqual(-0.1253' britain.Longitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,ZoneLocations_ContainsResolute,The following statement contains a magic number: Assert.AreEqual(74.69555' resolute.Latitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,ZoneLocations_ContainsResolute,The following statement contains a magic number: Assert.AreEqual(74.69555' resolute.Latitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,ZoneLocations_ContainsResolute,The following statement contains a magic number: Assert.AreEqual(-94.82916' resolute.Longitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,ZoneLocations_ContainsResolute,The following statement contains a magic number: Assert.AreEqual(-94.82916' resolute.Longitude' 0.00055);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,GuessZoneIdByTransitionsUncached,The following statement contains a magic number: date.Year < thisYear + 2
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,GuessZoneIdByTransitionsUncached,The following statement contains a magic number: Assert.That(correct * 100.0 / total' Is.GreaterThanOrEqualTo(75.0)'                  "Last incorrect date for {0} vs {1}: {2} (BCL: {3}; TZDB: {4})"'                  bclZone.Id'                  id'                  lastIncorrectDate' lastIncorrectBclOffset' lastIncorrectTzdbOffset);
Magic Number,NodaTime.Test.TimeZones,TzdbDateTimeZoneSourceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbDateTimeZoneSourceTest.cs,GuessZoneIdByTransitionsUncached,The following statement contains a magic number: Assert.That(correct * 100.0 / total' Is.GreaterThanOrEqualTo(75.0)'                  "Last incorrect date for {0} vs {1}: {2} (BCL: {3}; TZDB: {4})"'                  bclZone.Id'                  id'                  lastIncorrectDate' lastIncorrectBclOffset' lastIncorrectTzdbOffset);
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(60.25 + 5.0 / 3600' location.Latitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(60.25 + 5.0 / 3600' location.Latitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(60.25 + 5.0 / 3600' location.Latitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(60.25 + 5.0 / 3600' location.Latitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(100.5 + 10.0 / 3600' location.Longitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(100.5 + 10.0 / 3600' location.Longitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(100.5 + 10.0 / 3600' location.Longitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(100.5 + 10.0 / 3600' location.Longitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZone1970Location(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  new[] { SampleCountry }'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LatitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZone1970Location(90 * 3600 + 1' 0' new[] { SampleCountry }' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LatitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZone1970Location(90 * 3600 + 1' 0' new[] { SampleCountry }' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LatitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZone1970Location(-90 * 3600 - 1' 0' new[] { SampleCountry }' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LatitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZone1970Location(-90 * 3600 - 1' 0' new[] { SampleCountry }' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LatitudeRange,The following statement contains a magic number: new TzdbZone1970Location(90 * 3600' 0' new[] { SampleCountry }' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LatitudeRange,The following statement contains a magic number: new TzdbZone1970Location(90 * 3600' 0' new[] { SampleCountry }' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LatitudeRange,The following statement contains a magic number: new TzdbZone1970Location(-90 * 3600' 0' new[] { SampleCountry }' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LatitudeRange,The following statement contains a magic number: new TzdbZone1970Location(-90 * 3600' 0' new[] { SampleCountry }' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LongitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZone1970Location(0' 180 * 3600 + 1' new[] { SampleCountry }' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LongitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZone1970Location(0' 180 * 3600 + 1' new[] { SampleCountry }' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LongitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZone1970Location(0' -180 * 3600 - 1' new[] { SampleCountry }' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LongitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZone1970Location(0' -180 * 3600 - 1' new[] { SampleCountry }' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LongitudeRange,The following statement contains a magic number: new TzdbZone1970Location(0' 180 * 3600' new[] { SampleCountry }' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LongitudeRange,The following statement contains a magic number: new TzdbZone1970Location(0' 180 * 3600' new[] { SampleCountry }' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LongitudeRange,The following statement contains a magic number: new TzdbZone1970Location(0' -180 * 3600' new[] { SampleCountry }' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZone1970LocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZone1970LocationTest.cs,LongitudeRange,The following statement contains a magic number: new TzdbZone1970Location(0' -180 * 3600' new[] { SampleCountry }' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(60.25 + 5.0 / 3600' location.Latitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(60.25 + 5.0 / 3600' location.Latitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(60.25 + 5.0 / 3600' location.Latitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(60.25 + 5.0 / 3600' location.Latitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(100.5 + 10.0 / 3600' location.Longitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(100.5 + 10.0 / 3600' location.Longitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(100.5 + 10.0 / 3600' location.Longitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Valid,The following statement contains a magic number: Assert.AreEqual(100.5 + 10.0 / 3600' location.Longitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LatitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZoneLocation(90 * 3600 + 1' 0' "Name"' "CO"' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LatitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZoneLocation(90 * 3600 + 1' 0' "Name"' "CO"' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LatitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZoneLocation(-90 * 3600 - 1' 0' "Name"' "CO"' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LatitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZoneLocation(-90 * 3600 - 1' 0' "Name"' "CO"' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LatitudeRange,The following statement contains a magic number: new TzdbZoneLocation(90 * 3600' 0' "Name"' "CO"' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LatitudeRange,The following statement contains a magic number: new TzdbZoneLocation(90 * 3600' 0' "Name"' "CO"' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LatitudeRange,The following statement contains a magic number: new TzdbZoneLocation(-90 * 3600' 0' "Name"' "CO"' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LatitudeRange,The following statement contains a magic number: new TzdbZoneLocation(-90 * 3600' 0' "Name"' "CO"' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LongitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZoneLocation(0' 180 * 3600 + 1' "Name"' "CO"' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LongitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZoneLocation(0' 180 * 3600 + 1' "Name"' "CO"' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LongitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZoneLocation(0' -180 * 3600 - 1' "Name"' "CO"' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LongitudeRange,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => new TzdbZoneLocation(0' -180 * 3600 - 1' "Name"' "CO"' "Zone"' ""));
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LongitudeRange,The following statement contains a magic number: new TzdbZoneLocation(0' 180 * 3600' "Name"' "CO"' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LongitudeRange,The following statement contains a magic number: new TzdbZoneLocation(0' 180 * 3600' "Name"' "CO"' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LongitudeRange,The following statement contains a magic number: new TzdbZoneLocation(0' -180 * 3600' "Name"' "CO"' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,LongitudeRange,The following statement contains a magic number: new TzdbZoneLocation(0' -180 * 3600' "Name"' "CO"' "Zone"' "");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: var location = new TzdbZoneLocation(                  60 * 3600 + 15 * 60 + 5'                  100 * 3600 + 30 * 60 + 10'                  "Country name"'                  "CO"'                  "Etc/MadeUpZone"'                  "Comment");
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: Assert.AreEqual(60.25 + 5.0 / 3600' location2.Latitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: Assert.AreEqual(60.25 + 5.0 / 3600' location2.Latitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: Assert.AreEqual(60.25 + 5.0 / 3600' location2.Latitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: Assert.AreEqual(60.25 + 5.0 / 3600' location2.Latitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: Assert.AreEqual(100.5 + 10.0 / 3600' location2.Longitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: Assert.AreEqual(100.5 + 10.0 / 3600' location2.Longitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: Assert.AreEqual(100.5 + 10.0 / 3600' location2.Longitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,Serialization,The following statement contains a magic number: Assert.AreEqual(100.5 + 10.0 / 3600' location2.Longitude' 0.000001);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,ReadInvalid,The following statement contains a magic number: writer.WriteSignedCount(90 * 3600 + 1);
Magic Number,NodaTime.Test.TimeZones,TzdbZoneLocationTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\TzdbZoneLocationTest.cs,ReadInvalid,The following statement contains a magic number: writer.WriteSignedCount(90 * 3600 + 1);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[0]' 1' 0' "xx" }'                  { Instants[2]' 3' 0' "1b" }'                  { Instants[4]' 2' 1' "1c" }'                  { Instants[6]' 4' 0' "1d" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[0]' 1' 0' "xx" }'                  { Instants[2]' 3' 0' "1b" }'                  { Instants[4]' 2' 1' "1c" }'                  { Instants[6]' 4' 0' "1d" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[0]' 1' 0' "xx" }'                  { Instants[2]' 3' 0' "1b" }'                  { Instants[4]' 2' 1' "1c" }'                  { Instants[6]' 4' 0' "1d" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[0]' 1' 0' "xx" }'                  { Instants[2]' 3' 0' "1b" }'                  { Instants[4]' 2' 1' "1c" }'                  { Instants[6]' 4' 0' "1d" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[0]' 1' 0' "xx" }'                  { Instants[2]' 3' 0' "1b" }'                  { Instants[4]' 2' 1' "1c" }'                  { Instants[6]' 4' 0' "1d" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[0]' 1' 0' "xx" }'                  { Instants[2]' 3' 0' "1b" }'                  { Instants[4]' 2' 1' "1c" }'                  { Instants[6]' 4' 0' "1d" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: var zone2 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[1]' 1' 0' "xx" }'                  { Instants[2]' 3' 0' "2b" }'                  { Instants[4]' 1' 2' "2c" }'                  { Instants[6]' 5' 0' "2d"}'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: var zone2 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[1]' 1' 0' "xx" }'                  { Instants[2]' 3' 0' "2b" }'                  { Instants[4]' 1' 2' "2c" }'                  { Instants[6]' 5' 0' "2d"}'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: var zone2 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[1]' 1' 0' "xx" }'                  { Instants[2]' 3' 0' "2b" }'                  { Instants[4]' 1' 2' "2c" }'                  { Instants[6]' 5' 0' "2d"}'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: var zone2 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[1]' 1' 0' "xx" }'                  { Instants[2]' 3' 0' "2b" }'                  { Instants[4]' 1' 2' "2c" }'                  { Instants[6]' 5' 0' "2d"}'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: var zone2 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[1]' 1' 0' "xx" }'                  { Instants[2]' 3' 0' "2b" }'                  { Instants[4]' 1' 2' "2c" }'                  { Instants[6]' 5' 0' "2d"}'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: var zone2 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[1]' 1' 0' "xx" }'                  { Instants[2]' 3' 0' "2b" }'                  { Instants[4]' 1' 2' "2c" }'                  { Instants[6]' 5' 0' "2d"}'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: AssertEqual(zone1' zone2' Instants[1]' Instants[5]' ZoneEqualityComparer.Options.OnlyMatchWallOffset);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: AssertNotEqual(zone1' zone2' Instants[1] - Duration.Epsilon' Instants[5]' ZoneEqualityComparer.Options.OnlyMatchWallOffset);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: AssertNotEqual(zone1' zone2' Instants[1]' Instants[5]' ZoneEqualityComparer.Options.MatchStartAndEndTransitions);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: AssertEqual(zone1' zone2' Instants[1]' Instants[4]' ZoneEqualityComparer.Options.MatchOffsetComponents);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: AssertNotEqual(zone1' zone2' Instants[1]' Instants[5]' ZoneEqualityComparer.Options.MatchOffsetComponents);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: AssertEqual(zone1' zone2' Instants[1]' Instants[2]' ZoneEqualityComparer.Options.MatchNames);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,Various,The following statement contains a magic number: AssertNotEqual(zone1' zone2' Instants[1]' Instants[3]' ZoneEqualityComparer.Options.MatchNames);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 0' 0' "a" }'                  { Instants[4]' 1' 2' "b" }'                  { Instants[5]' 2' 1' "b" }'                  { Instants[6]' 1' 0' "d" }'                  { Instants[7]' 1' 0' "e" }'                  { Instants[8]' 0' 0' "x" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 0' 0' "a" }'                  { Instants[4]' 1' 2' "b" }'                  { Instants[5]' 2' 1' "b" }'                  { Instants[6]' 1' 0' "d" }'                  { Instants[7]' 1' 0' "e" }'                  { Instants[8]' 0' 0' "x" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 0' 0' "a" }'                  { Instants[4]' 1' 2' "b" }'                  { Instants[5]' 2' 1' "b" }'                  { Instants[6]' 1' 0' "d" }'                  { Instants[7]' 1' 0' "e" }'                  { Instants[8]' 0' 0' "x" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 0' 0' "a" }'                  { Instants[4]' 1' 2' "b" }'                  { Instants[5]' 2' 1' "b" }'                  { Instants[6]' 1' 0' "d" }'                  { Instants[7]' 1' 0' "e" }'                  { Instants[8]' 0' 0' "x" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 0' 0' "a" }'                  { Instants[4]' 1' 2' "b" }'                  { Instants[5]' 2' 1' "b" }'                  { Instants[6]' 1' 0' "d" }'                  { Instants[7]' 1' 0' "e" }'                  { Instants[8]' 0' 0' "x" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 0' 0' "a" }'                  { Instants[4]' 1' 2' "b" }'                  { Instants[5]' 2' 1' "b" }'                  { Instants[6]' 1' 0' "d" }'                  { Instants[7]' 1' 0' "e" }'                  { Instants[8]' 0' 0' "x" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 0' 0' "a" }'                  { Instants[4]' 1' 2' "b" }'                  { Instants[5]' 2' 1' "b" }'                  { Instants[6]' 1' 0' "d" }'                  { Instants[7]' 1' 0' "e" }'                  { Instants[8]' 0' 0' "x" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 0' 0' "a" }'                  { Instants[4]' 1' 2' "b" }'                  { Instants[5]' 2' 1' "b" }'                  { Instants[6]' 1' 0' "d" }'                  { Instants[7]' 1' 0' "e" }'                  { Instants[8]' 0' 0' "x" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: var zone2 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 0' 0' "a" }'                  { Instants[4]' 3' 0' "b" }'                  // Instants[5] isn't included here: wall offset is the same; components change in zone1                  { Instants[6]' 1' 0' "d" }'                  // Instants[7] isn't included here: offset components are the same; names change in zone1                  { Instants[8]' 0' 0' "x" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: var zone2 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 0' 0' "a" }'                  { Instants[4]' 3' 0' "b" }'                  // Instants[5] isn't included here: wall offset is the same; components change in zone1                  { Instants[6]' 1' 0' "d" }'                  // Instants[7] isn't included here: offset components are the same; names change in zone1                  { Instants[8]' 0' 0' "x" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: var zone2 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 0' 0' "a" }'                  { Instants[4]' 3' 0' "b" }'                  // Instants[5] isn't included here: wall offset is the same; components change in zone1                  { Instants[6]' 1' 0' "d" }'                  // Instants[7] isn't included here: offset components are the same; names change in zone1                  { Instants[8]' 0' 0' "x" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: var zone2 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 0' 0' "a" }'                  { Instants[4]' 3' 0' "b" }'                  // Instants[5] isn't included here: wall offset is the same; components change in zone1                  { Instants[6]' 1' 0' "d" }'                  // Instants[7] isn't included here: offset components are the same; names change in zone1                  { Instants[8]' 0' 0' "x" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: var zone2 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 0' 0' "a" }'                  { Instants[4]' 3' 0' "b" }'                  // Instants[5] isn't included here: wall offset is the same; components change in zone1                  { Instants[6]' 1' 0' "d" }'                  // Instants[7] isn't included here: offset components are the same; names change in zone1                  { Instants[8]' 0' 0' "x" }'              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: AssertEqual(zone1' zone2' Instant.MinValue' Instants[6]' ZoneEqualityComparer.Options.MatchNames);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: AssertNotEqual(zone1' zone2' Instant.MinValue' Instants[6]' ZoneEqualityComparer.Options.MatchOffsetComponents);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: AssertEqual(zone1' zone2' Instants[6]' Instant.MaxValue' ZoneEqualityComparer.Options.MatchOffsetComponents);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: AssertNotEqual(zone1' zone2' Instants[6]' Instant.MaxValue' ZoneEqualityComparer.Options.MatchNames);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: AssertNotEqual(zone1' zone2' Instant.MinValue' Instants[6]' ZoneEqualityComparer.Options.MatchAllTransitions);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions,The following statement contains a magic number: AssertNotEqual(zone1' zone2' Instants[6]' Instant.MaxValue' ZoneEqualityComparer.Options.MatchAllTransitions);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ForInterval,The following statement contains a magic number: var interval = new Interval(Instants[3]' Instants[5]);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ForInterval,The following statement contains a magic number: var interval = new Interval(Instants[3]' Instants[5]);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,WithOptions,The following statement contains a magic number: var interval = new Interval(Instants[3]' Instants[5]);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,WithOptions,The following statement contains a magic number: var interval = new Interval(Instants[3]' Instants[5]);
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions_Degenerate,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 1' 0' "a" }'                  { Instants[4]' 1' 0' "a" }'                  { Instants[5]' 1' 0' "a" }'                  { Instants[6]' 0 }              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions_Degenerate,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 1' 0' "a" }'                  { Instants[4]' 1' 0' "a" }'                  { Instants[5]' 1' 0' "a" }'                  { Instants[6]' 0 }              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions_Degenerate,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 1' 0' "a" }'                  { Instants[4]' 1' 0' "a" }'                  { Instants[5]' 1' 0' "a" }'                  { Instants[6]' 0 }              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions_Degenerate,The following statement contains a magic number: var zone1 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 1' 0' "a" }'                  { Instants[4]' 1' 0' "a" }'                  { Instants[5]' 1' 0' "a" }'                  { Instants[6]' 0 }              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions_Degenerate,The following statement contains a magic number: var zone2 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 1' 0' "a" }'                  { Instants[6]' 0 }              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ElidedTransitions_Degenerate,The following statement contains a magic number: var zone2 = new MultiTransitionDateTimeZone.Builder              {                  { Instants[3]' 1' 0' "a" }'                  { Instants[6]' 0 }              }.Build();
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,ReferenceComparison,The following statement contains a magic number: var comparer = ZoneEqualityComparer.ForInterval(new Interval(Instants[0]' Instants[2]));
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,NullComparison,The following statement contains a magic number: var comparer = ZoneEqualityComparer.ForInterval(new Interval(Instants[0]' Instants[2]));
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,InvalidOptions,The following statement contains a magic number: var comparer = ZoneEqualityComparer.ForInterval(new Interval(Instants[0]' Instants[2]));
Magic Number,NodaTime.Test.TimeZones,ZoneEqualityComparerTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneEqualityComparerTest.cs,InvalidOptions,The following statement contains a magic number: Assert.Throws<ArgumentOutOfRangeException>(() => comparer.WithOptions((ZoneEqualityComparer.Options) 9999));
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,PassthroughProperties,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(8)' SampleInterval.StandardOffset);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,PassthroughProperties,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(9)' SampleInterval.WallOffset);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,ComputedProperties,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 6' 3' 19' 15);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,ComputedProperties,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 6' 3' 19' 15);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,ComputedProperties,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 6' 3' 19' 15);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,ComputedProperties,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 6' 3' 19' 15);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,ComputedProperties,The following statement contains a magic number: LocalDateTime start = new LocalDateTime(2011' 6' 3' 19' 15);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,ComputedProperties,The following statement contains a magic number: LocalDateTime end = new LocalDateTime(2011' 8' 2' 22' 45);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,ComputedProperties,The following statement contains a magic number: LocalDateTime end = new LocalDateTime(2011' 8' 2' 22' 45);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,ComputedProperties,The following statement contains a magic number: LocalDateTime end = new LocalDateTime(2011' 8' 2' 22' 45);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,ComputedProperties,The following statement contains a magic number: LocalDateTime end = new LocalDateTime(2011' 8' 2' 22' 45);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,ComputedProperties,The following statement contains a magic number: LocalDateTime end = new LocalDateTime(2011' 8' 2' 22' 45);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Contains_Instant_WholeOfTime_ViaNullity,The following statement contains a magic number: ZoneInterval interval = new ZoneInterval("All Time"' null' null'                  Offset.FromHours(9)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Contains_Instant_WholeOfTime_ViaSpecialInstants,The following statement contains a magic number: ZoneInterval interval = new ZoneInterval("All Time"' Instant.BeforeMinValue' Instant.AfterMaxValue'                  Offset.FromHours(9)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Contains_LocalInstant_WholeOfTime,The following statement contains a magic number: ZoneInterval interval = new ZoneInterval("All Time"' Instant.BeforeMinValue' Instant.AfterMaxValue'                  Offset.FromHours(9)' Offset.FromHours(1));
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Contains_OutsideLocalInstantange,The following statement contains a magic number: ZoneInterval veryEarly = new ZoneInterval("Very early"' Instant.BeforeMinValue' Instant.MinValue + Duration.FromHours(8)' Offset.FromHours(-9)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Contains_OutsideLocalInstantange,The following statement contains a magic number: ZoneInterval veryEarly = new ZoneInterval("Very early"' Instant.BeforeMinValue' Instant.MinValue + Duration.FromHours(8)' Offset.FromHours(-9)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Contains_OutsideLocalInstantange,The following statement contains a magic number: ZoneInterval veryLate = new ZoneInterval("Very late"' Instant.MaxValue - Duration.FromHours(8)' Instant.AfterMaxValue' Offset.FromHours(9)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Contains_OutsideLocalInstantange,The following statement contains a magic number: ZoneInterval veryLate = new ZoneInterval("Very late"' Instant.MaxValue - Duration.FromHours(8)' Instant.AfterMaxValue' Offset.FromHours(9)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Contains_OutsideLocalInstantange,The following statement contains a magic number: Assert.IsTrue(veryEarly.Contains(Instant.MinValue + Duration.FromHours(4)));
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Contains_OutsideLocalInstantange,The following statement contains a magic number: Assert.IsTrue(veryLate.Contains(Instant.MaxValue - Duration.FromHours(4)));
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,IsoLocalStartAndEnd_OutOfRange,The following statement contains a magic number: interval = new ZoneInterval("All time"' null' Instant.MaxValue' Offset.FromHours(11)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsClass(                  // Equal values                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  // Unequal values                  new ZoneInterval("name2"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart.PlusNanoseconds(1)' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd.PlusNanoseconds(1)' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(2)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(3)));
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsClass(                  // Equal values                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  // Unequal values                  new ZoneInterval("name2"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart.PlusNanoseconds(1)' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd.PlusNanoseconds(1)' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(2)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(3)));
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsClass(                  // Equal values                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  // Unequal values                  new ZoneInterval("name2"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart.PlusNanoseconds(1)' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd.PlusNanoseconds(1)' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(2)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(3)));
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsClass(                  // Equal values                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  // Unequal values                  new ZoneInterval("name2"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart.PlusNanoseconds(1)' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd.PlusNanoseconds(1)' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(2)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(3)));
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsClass(                  // Equal values                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  // Unequal values                  new ZoneInterval("name2"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart.PlusNanoseconds(1)' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd.PlusNanoseconds(1)' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(2)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(3)));
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsClass(                  // Equal values                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  // Unequal values                  new ZoneInterval("name2"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart.PlusNanoseconds(1)' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd.PlusNanoseconds(1)' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(2)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(3)));
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsClass(                  // Equal values                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  // Unequal values                  new ZoneInterval("name2"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart.PlusNanoseconds(1)' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd.PlusNanoseconds(1)' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(2)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(3)));
Magic Number,NodaTime.Test.TimeZones,ZoneIntervalTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneIntervalTest.cs,Equality,The following statement contains a magic number: TestHelper.TestEqualsClass(                  // Equal values                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  // Unequal values                  new ZoneInterval("name2"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart.PlusNanoseconds(1)' SampleEnd' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd.PlusNanoseconds(1)' Offset.FromHours(1)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(2)' Offset.FromHours(2))'                  new ZoneInterval("name"' SampleStart' SampleEnd' Offset.FromHours(1)' Offset.FromHours(3)));
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Constructor_nullName_exception,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Constructor_nullName_exception,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Constructor_nullName_exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () => new ZoneRecurrence(null!' Offset.Zero' yearOffset' 1971' 2009)' "Null name");
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Constructor_nullName_exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () => new ZoneRecurrence(null!' Offset.Zero' yearOffset' 1971' 2009)' "Null name");
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Constructor_nullYearOffset_exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () => new ZoneRecurrence("bob"' Offset.Zero' null!' 1971' 2009)' "Null yearOffset");
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Constructor_nullYearOffset_exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentNullException)' () => new ZoneRecurrence("bob"' Offset.Zero' null!' 1971' 2009)' "Null yearOffset");
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_BeforeFirstYear,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_BeforeFirstYear,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_FirstYear,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_FirstYear,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_FirstYear,The following statement contains a magic number: Transition? expected = new Transition(Instant.FromUtc(1971' 1' 1' 0' 0)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,NextTwice_FirstYear,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,NextTwice_FirstYear,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,NextTwice_FirstYear,The following statement contains a magic number: Transition? expected = new Transition(Instant.FromUtc(1972' 1' 1' 0' 0)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_BeyondLastYear_null,The following statement contains a magic number: var afterRecurrenceEnd = Instant.FromUtc(1980' 1' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_BeyondLastYear_null,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_BeyondLastYear_null,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_AfterLastYear,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_AfterLastYear,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_AfterLastYear,The following statement contains a magic number: Transition? expected = new Transition(Instant.FromUtc(1972' 1' 1' 0' 0)' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_LastYear,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_LastYear,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_LastYear,The following statement contains a magic number: Transition? actual = recurrence.PreviousOrSame(Instant.FromUtc(1971' 1' 1' 0' 0) - Duration.Epsilon' Offset.Zero' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSameTwice_LastYear,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1973);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSameTwice_LastYear,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1973);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSameTwice_LastYear,The following statement contains a magic number: Transition? actual = recurrence.PreviousOrSame(Instant.FromUtc(1972' 1' 1' 0' 0) - Duration.Epsilon' Offset.Zero' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_OnFirstYear_null,The following statement contains a magic number: var januaryFirstMidnight = new ZoneYearOffset(TransitionMode.Utc' 1' 2' 0' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_OnFirstYear_null,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_OnFirstYear_null,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_BeforeFirstYear_null,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_BeforeFirstYear_null,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_ExcludesGivenInstant,The following statement contains a magic number: var january10thMidnight = new ZoneYearOffset(TransitionMode.Utc' 1' 10' 0' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_ExcludesGivenInstant,The following statement contains a magic number: var recurrence = new ZoneRecurrence("x"' Offset.Zero' january10thMidnight' 2000' 3000);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_ExcludesGivenInstant,The following statement contains a magic number: var recurrence = new ZoneRecurrence("x"' Offset.Zero' january10thMidnight' 2000' 3000);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_ExcludesGivenInstant,The following statement contains a magic number: var transition = Instant.FromUtc(2500' 1' 10' 0' 0);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_ExcludesGivenInstant,The following statement contains a magic number: var transition = Instant.FromUtc(2500' 1' 10' 0' 0);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Next_ExcludesGivenInstant,The following statement contains a magic number: Assert.AreEqual(2501' next!.Value.Instant.InUtc().Year);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_IncludesGivenInstant,The following statement contains a magic number: var january10thMidnight = new ZoneYearOffset(TransitionMode.Utc' 1' 10' 0' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_IncludesGivenInstant,The following statement contains a magic number: var recurrence = new ZoneRecurrence("x"' Offset.Zero' january10thMidnight' 2000' 3000);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_IncludesGivenInstant,The following statement contains a magic number: var recurrence = new ZoneRecurrence("x"' Offset.Zero' january10thMidnight' 2000' 3000);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_IncludesGivenInstant,The following statement contains a magic number: var transition = Instant.FromUtc(2500' 1' 10' 0' 0);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSame_IncludesGivenInstant,The following statement contains a magic number: var transition = Instant.FromUtc(2500' 1' 10' 0' 0);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,NextOrFail_Fail,The following statement contains a magic number: var afterRecurrenceEnd = Instant.FromUtc(1980' 1' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,NextOrFail_Fail,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,NextOrFail_Fail,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSameOrFail_Fail,The following statement contains a magic number: var beforeRecurrenceStart = Instant.FromUtc(1960' 1' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSameOrFail_Fail,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,PreviousOrSameOrFail_Fail,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' januaryFirstMidnight' 1970' 1972);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Serialization,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Serialization,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Serialization,The following statement contains a magic number: var expected = new ZoneRecurrence("bob"' Offset.Zero' yearOffset' 1971' 2009);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Serialization,The following statement contains a magic number: var expected = new ZoneRecurrence("bob"' Offset.Zero' yearOffset' 1971' 2009);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Serialization_Infinite,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,Serialization_Infinite,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,IEquatable_Tests,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,IEquatable_Tests,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,IEquatable_Tests,The following statement contains a magic number: var value = new ZoneRecurrence("bob"' Offset.Zero' yearOffset' 1971' 2009);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,IEquatable_Tests,The following statement contains a magic number: var value = new ZoneRecurrence("bob"' Offset.Zero' yearOffset' 1971' 2009);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,IEquatable_Tests,The following statement contains a magic number: var equalValue = new ZoneRecurrence("bob"' Offset.Zero' yearOffset' 1971' 2009);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,IEquatable_Tests,The following statement contains a magic number: var equalValue = new ZoneRecurrence("bob"' Offset.Zero' yearOffset' 1971' 2009);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,IEquatable_Tests,The following statement contains a magic number: var unequalValue = new ZoneRecurrence("foo"' Offset.Zero' yearOffset' 1971' 2009);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,IEquatable_Tests,The following statement contains a magic number: var unequalValue = new ZoneRecurrence("foo"' Offset.Zero' yearOffset' 1971' 2009);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,December31st2400_MaxYear_UtcTransition,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 12' 31' 0' true' LocalTime.Midnight' true);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,December31st2400_MaxYear_UtcTransition,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 12' 31' 0' true' LocalTime.Midnight' true);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,December31st2400_MaxYear_UtcTransition,The following statement contains a magic number: var next = recurrence.Next(Instant.FromUtc(9999' 6' 1' 0' 0)' Offset.Zero' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,December31st2400_MaxYear_UtcTransition,The following statement contains a magic number: var next = recurrence.Next(Instant.FromUtc(9999' 6' 1' 0' 0)' Offset.Zero' Offset.Zero);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,December31st2400_AskAtNanoBeforeLastTransition,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 12' 31' 0' true' LocalTime.Midnight' true);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,December31st2400_AskAtNanoBeforeLastTransition,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 12' 31' 0' true' LocalTime.Midnight' true);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,December31st2400_AskAtNanoBeforeLastTransition,The following statement contains a magic number: var recurrence = new ZoneRecurrence("awkward"' Offset.FromHours(1)' yearOffset' 1' 5000);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,December31st2400_AskAtNanoBeforeLastTransition,The following statement contains a magic number: var finalTransition = Instant.FromUtc(5001' 1' 1' 0' 0);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,WithName,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,WithName,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,WithName,The following statement contains a magic number: var original = new ZoneRecurrence("original"' Offset.FromHours(1)' yearOffset' 1900' 2000);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,WithName,The following statement contains a magic number: var original = new ZoneRecurrence("original"' Offset.FromHours(1)' yearOffset' 1900' 2000);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,ForSingleYear,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,ForSingleYear,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,ForSingleYear,The following statement contains a magic number: var original = new ZoneRecurrence("original"' Offset.FromHours(1)' yearOffset' 1900' 2000);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,ForSingleYear,The following statement contains a magic number: var original = new ZoneRecurrence("original"' Offset.FromHours(1)' yearOffset' 1900' 2000);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,ForSingleYear,The following statement contains a magic number: var singleYear = original.ForSingleYear(2017);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,ForSingleYear,The following statement contains a magic number: Assert.AreEqual(2017' singleYear.FromYear);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,ForSingleYear,The following statement contains a magic number: Assert.AreEqual(2017' singleYear.ToYear);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,ZoneRecurrenceToString,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,ZoneRecurrenceToString,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,ZoneRecurrenceToString,The following statement contains a magic number: var recurrence = new ZoneRecurrence("name"' Offset.FromHours(1)' yearOffset' 1900' 2000);
Magic Number,NodaTime.Test.TimeZones,ZoneRecurrenceTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneRecurrenceTest.cs,ZoneRecurrenceToString,The following statement contains a magic number: var recurrence = new ZoneRecurrence("name"' Offset.FromHours(1)' yearOffset' 1900' 2000);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidMonth_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 34' 1' 1' true' LocalTime.Midnight)' "Month 34");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidMonth_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' -3' 1' 1' true' LocalTime.Midnight)' "Month -3");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfMonth_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 0' 1' true' LocalTime.Midnight)' "Day of Month 0");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfMonth_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 32' 1' true' LocalTime.Midnight)' "Day of Month 32");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfMonth_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 32' 1' true' LocalTime.Midnight)' "Day of Month 32");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfMonth_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 475' 1' true' LocalTime.Midnight)'                            "Day of Month 475");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfMonth_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 475' 1' true' LocalTime.Midnight)'                            "Day of Month 475");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfMonth_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' -32' 1' true' LocalTime.Midnight)'                            "Day of Month -32");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfMonth_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' -32' 1' true' LocalTime.Midnight)'                            "Day of Month -32");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' -1' true' LocalTime.Midnight)' "Day of Week -1");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' -1' true' LocalTime.Midnight)' "Day of Week -1");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' 8' true' LocalTime.Midnight)' "Day of Week 8");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' 8' true' LocalTime.Midnight)' "Day of Week 8");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' 8' true' LocalTime.Midnight)' "Day of Week 8");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' 5756' true' LocalTime.Midnight)'                            "Day of Week 5856");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' 5756' true' LocalTime.Midnight)'                            "Day of Week 5856");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' 5756' true' LocalTime.Midnight)'                            "Day of Week 5856");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' -347' true' LocalTime.Midnight)'                            "Day of Week -347");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' -347' true' LocalTime.Midnight)'                            "Day of Week -347");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_InvalidDayOfWeek_Exception,The following statement contains a magic number: Assert.Throws(typeof(ArgumentOutOfRangeException)' () => new ZoneYearOffset(TransitionMode.Standard' 2' 3' -347' true' LocalTime.Midnight)'                            "Day of Week -347");
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_ValidMonths,The following statement contains a magic number: month <= 12
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_ValidDays,The following statement contains a magic number: day <= 31
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_ValidDays,The following statement contains a magic number: day >= -31
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Construct_ValidDaysOfWeek,The following statement contains a magic number: dayOfWeek <= 7
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_Defaults_Epoch,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(1970);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_Defaults_Epoch,The following statement contains a magic number: var expected = new LocalDateTime(1970' 1' 1' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_Year_1971,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(1971);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_Year_1971,The following statement contains a magic number: var expected = new LocalDateTime(1971' 1' 1' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_Milliseconds,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(1970);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_Milliseconds,The following statement contains a magic number: var expected = new LocalDateTime(1970' 1' 1' 0' 0' 0' 1).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WednesdayForward,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(1970);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WednesdayForward,The following statement contains a magic number: var expected = new LocalDateTime(1970' 1' 7' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WednesdayForward,The following statement contains a magic number: var expected = new LocalDateTime(1970' 1' 7' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WednesdayBackward,The following statement contains a magic number: var offset = new ZoneYearOffset(TransitionMode.Utc' 1' 15' (int)DayOfWeek.Wednesday' false' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WednesdayBackward,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(1970);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WednesdayBackward,The following statement contains a magic number: var expected = new LocalDateTime(1970' 1' 14' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WednesdayBackward,The following statement contains a magic number: var expected = new LocalDateTime(1970' 1' 14' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_JanMinusTwo,The following statement contains a magic number: var offset = new ZoneYearOffset(TransitionMode.Utc' 1' -2' 0' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_JanMinusTwo,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(1970);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_JanMinusTwo,The following statement contains a magic number: var expected = new LocalDateTime(1970' 1' 30' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_JanMinusTwo,The following statement contains a magic number: var expected = new LocalDateTime(1970' 1' 30' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_JanFive,The following statement contains a magic number: var offset = new ZoneYearOffset(TransitionMode.Utc' 1' 5' 0' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_JanFive,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(1970);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_JanFive,The following statement contains a magic number: var expected = new LocalDateTime(1970' 1' 5' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_JanFive,The following statement contains a magic number: var expected = new LocalDateTime(1970' 1' 5' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_Feb,The following statement contains a magic number: var offset = new ZoneYearOffset(TransitionMode.Utc' 2' 1' 0' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_Feb,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(1970);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_Feb,The following statement contains a magic number: var expected = new LocalDateTime(1970' 2' 1' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_Feb,The following statement contains a magic number: var expected = new LocalDateTime(1970' 2' 1' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_LastSundayInOctober,The following statement contains a magic number: ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 10' -1' (int)IsoDayOfWeek.Sunday' false' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_LastSundayInOctober,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(1996);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_LastSundayInOctober,The following statement contains a magic number: var expected = new LocalDateTime(1996' 10' 27' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_LastSundayInOctober,The following statement contains a magic number: var expected = new LocalDateTime(1996' 10' 27' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_LastSundayInOctober,The following statement contains a magic number: var expected = new LocalDateTime(1996' 10' 27' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_ExactlyFeb29th_LeapYear,The following statement contains a magic number: ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' 0' false' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_ExactlyFeb29th_LeapYear,The following statement contains a magic number: ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' 0' false' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_ExactlyFeb29th_LeapYear,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(2012);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_ExactlyFeb29th_LeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2012' 2' 29' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_ExactlyFeb29th_LeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2012' 2' 29' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_ExactlyFeb29th_LeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2012' 2' 29' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_ExactlyFeb29th_NotLeapYear,The following statement contains a magic number: ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' 0' false' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_ExactlyFeb29th_NotLeapYear,The following statement contains a magic number: ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' 0' false' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_ExactlyFeb29th_NotLeapYear,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(2013);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_ExactlyFeb29th_NotLeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2013' 2' 28' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_ExactlyFeb29th_NotLeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2013' 2' 28' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_ExactlyFeb29th_NotLeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2013' 2' 28' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_LeapYear,The following statement contains a magic number: ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' (int) IsoDayOfWeek.Sunday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_LeapYear,The following statement contains a magic number: ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' (int) IsoDayOfWeek.Sunday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_LeapYear,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(2012);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_LeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2012' 3' 4' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_LeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2012' 3' 4' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_LeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2012' 3' 4' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_NotLeapYear,The following statement contains a magic number: ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' (int) IsoDayOfWeek.Sunday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_NotLeapYear,The following statement contains a magic number: ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' (int) IsoDayOfWeek.Sunday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_NotLeapYear,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(2013);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_NotLeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2013' 3' 3' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_NotLeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2013' 3' 3' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtLeastFeb29th_NotLeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2013' 3' 3' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_LeapYear,The following statement contains a magic number: ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' (int) IsoDayOfWeek.Sunday' false' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_LeapYear,The following statement contains a magic number: ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' (int) IsoDayOfWeek.Sunday' false' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_LeapYear,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(2012);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_LeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2012' 2' 26' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_LeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2012' 2' 26' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_LeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2012' 2' 26' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_NotLeapYear,The following statement contains a magic number: ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' (int) IsoDayOfWeek.Sunday' false' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_NotLeapYear,The following statement contains a magic number: ZoneYearOffset offset = new ZoneYearOffset(TransitionMode.Utc' 2' 29' (int) IsoDayOfWeek.Sunday' false' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_NotLeapYear,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(2013);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_NotLeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2013' 2' 24' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_NotLeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2013' 2' 24' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_AtMostFeb29th_NotLeapYear,The following statement contains a magic number: var expected = new LocalDateTime(2013' 2' 24' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WithAddDay,The following statement contains a magic number: var offset = new ZoneYearOffset(TransitionMode.Utc' 10' -1' (int) IsoDayOfWeek.Thursday' false' LocalTime.Midnight' true);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WithAddDay,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(2013);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WithAddDay,The following statement contains a magic number: var expected = new LocalDateTime(2013' 11' 1' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WithAddDay,The following statement contains a magic number: var expected = new LocalDateTime(2013' 11' 1' 0' 0).ToLocalInstant();
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WithAddDay_December31st9999,The following statement contains a magic number: var offset = new ZoneYearOffset(TransitionMode.Utc' 12' 31' 0' false' LocalTime.Midnight' true);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WithAddDay_December31st9999,The following statement contains a magic number: var offset = new ZoneYearOffset(TransitionMode.Utc' 12' 31' 0' false' LocalTime.Midnight' true);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,GetOccurrenceForYear_WithAddDay_December31st9999,The following statement contains a magic number: var actual = offset.GetOccurrenceForYear(9999);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Serialization,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true'                  new LocalTime(12' 34' 45' 678));
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Serialization,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true'                  new LocalTime(12' 34' 45' 678));
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Serialization,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true'                  new LocalTime(12' 34' 45' 678));
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Serialization,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true'                  new LocalTime(12' 34' 45' 678));
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Serialization,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true'                  new LocalTime(12' 34' 45' 678));
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Serialization,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true'                  new LocalTime(12' 34' 45' 678));
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Serialization,The following statement contains a magic number: expected = new ZoneYearOffset(TransitionMode.Utc' 10' -31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,Serialization,The following statement contains a magic number: expected = new ZoneYearOffset(TransitionMode.Utc' 10' -31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,IEquatable_Tests,The following statement contains a magic number: var value = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,IEquatable_Tests,The following statement contains a magic number: var value = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,IEquatable_Tests,The following statement contains a magic number: var equalValue = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,IEquatable_Tests,The following statement contains a magic number: var equalValue = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,IEquatable_Tests,The following statement contains a magic number: var unequalValue = new ZoneYearOffset(TransitionMode.Utc' 9' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones,ZoneYearOffsetTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\ZoneYearOffsetTest.cs,IEquatable_Tests,The following statement contains a magic number: var unequalValue = new ZoneYearOffset(TransitionMode.Utc' 9' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.Test.TimeZones.IO,DateTimeZoneReaderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\DateTimeZoneReaderTest.cs,HasMoreData_Buffers,The following statement contains a magic number: var stream = new MemoryStream(new byte[] { 1' 2 });
Magic Number,NodaTime.Test.TimeZones.IO,DateTimeZoneReaderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\DateTimeZoneReaderTest.cs,HasMoreData_Buffers,The following statement contains a magic number: Assert.AreEqual(2' stream.Position);
Magic Number,NodaTime.Test.TimeZones.IO,DateTimeZoneReaderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\DateTimeZoneReaderTest.cs,HasMoreData_Buffers,The following statement contains a magic number: Assert.AreEqual(2' stream.Position);
Magic Number,NodaTime.Test.TimeZones.IO,DateTimeZoneReaderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\DateTimeZoneReaderTest.cs,HasMoreData_Buffers,The following statement contains a magic number: Assert.AreEqual((byte)2' reader.ReadByte());
Magic Number,NodaTime.Test.TimeZones.IO,DateTimeZoneReaderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\DateTimeZoneReaderTest.cs,HasMoreData_Buffers,The following statement contains a magic number: Assert.AreEqual(2' stream.Position);
Magic Number,NodaTime.Test.TimeZones.IO,DateTimeZoneReaderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\DateTimeZoneReaderTest.cs,ReadZoneIntervalTransition_InvalidMarkerValue,The following statement contains a magic number: byte[] data = new byte[] { 4' 0' 0' 0' 0' 0 };
Magic Number,NodaTime.Test.TimeZones.IO,DateTimeZoneReaderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\DateTimeZoneReaderTest.cs,ReadByte_NotEnoughData,The following statement contains a magic number: Assert.AreEqual((byte) 5' reader.ReadByte());
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Count,The following statement contains a magic number: i < 16
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Count,The following statement contains a magic number: dio.TestCount(127' new byte[] { 0x7f });
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Count,The following statement contains a magic number: dio.TestCount(128' new byte[] { 0x80' 0x01 });
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Count,The following statement contains a magic number: dio.TestCount(300' new byte[] { 0xac' 0x02 });
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,SignedCount,The following statement contains a magic number: i < 16
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,SignedCount,The following statement contains a magic number: dio.TestSignedCount(-2' new byte[] { 0x03 });
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,SignedCount,The following statement contains a magic number: dio.TestSignedCount(64' new byte[] { 0x80' 0x01 });
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,SignedCount,The following statement contains a magic number: dio.TestSignedCount(-65' new byte[] { 0x81' 0x01 });
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,SignedCount,The following statement contains a magic number: dio.TestSignedCount(128' new byte[] { 0x80' 0x02 });
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: Instant previous = Instant.FromUtc(1990' 1' 1' 11' 30);
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: Instant previous = Instant.FromUtc(1990' 1' 1' 11' 30);
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: Instant previous = Instant.FromUtc(1990' 1' 1' 11' 30);
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: dio.TestZoneIntervalTransition(null' Instant.FromUtc(1927' 11' 5' 14' 30));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: dio.TestZoneIntervalTransition(null' Instant.FromUtc(1927' 11' 5' 14' 30));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: dio.TestZoneIntervalTransition(null' Instant.FromUtc(1927' 11' 5' 14' 30));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: dio.TestZoneIntervalTransition(null' Instant.FromUtc(1927' 11' 5' 14' 30));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: dio.TestZoneIntervalTransition(null' Instant.FromUtc(1927' 11' 5' 14' 30));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: dio.TestZoneIntervalTransition(null' Instant.FromUtc(1927' 11' 5' 14' 30' 5));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: dio.TestZoneIntervalTransition(null' Instant.FromUtc(1927' 11' 5' 14' 30' 5));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: dio.TestZoneIntervalTransition(null' Instant.FromUtc(1927' 11' 5' 14' 30' 5));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: dio.TestZoneIntervalTransition(null' Instant.FromUtc(1927' 11' 5' 14' 30' 5));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: dio.TestZoneIntervalTransition(null' Instant.FromUtc(1927' 11' 5' 14' 30' 5));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_ZoneIntervalTransition,The following statement contains a magic number: dio.TestZoneIntervalTransition(null' Instant.FromUtc(1927' 11' 5' 14' 30' 5));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHours(5));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHours(-5));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHoursAndMinutes(5' 15));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHoursAndMinutes(5' 15));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHoursAndMinutes(5' 30));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHoursAndMinutes(5' 30));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHoursAndMinutes(5' 45));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHoursAndMinutes(5' 45));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHoursAndMinutes(-5' -15));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHoursAndMinutes(-5' -15));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHoursAndMinutes(-5' -30));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHoursAndMinutes(-5' -30));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHoursAndMinutes(-5' -45));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromHoursAndMinutes(-5' -45));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromSeconds(1000));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,Test_Offset,The following statement contains a magic number: dio.TestOffset(Offset.FromSeconds(-1000));
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,ReadByte_AfterHasMoreData,The following statement contains a magic number: dio.Writer.WriteByte(5);
Magic Number,NodaTime.Test.TimeZones.IO,ReadWriteTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\ReadWriteTest.cs,ReadByte_AfterHasMoreData,The following statement contains a magic number: Assert.AreEqual((byte) 5' dio.Reader.ReadByte());
Magic Number,NodaTime.Test.TimeZones.IO,TzdbStreamFieldTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\TimeZones\IO\TzdbStreamFieldTest.cs,InsufficientData,The following statement contains a magic number: writer.WriteCount(10);
Magic Number,NodaTime.Test.Utility,CacheTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\CacheTest.cs,CreateCache,The following statement contains a magic number: return new Cache<string' int>(3' text => { factoryCallCount++; return text.Length; }'                                             StringComparer.OrdinalIgnoreCase);
Magic Number,NodaTime.Test.Utility,CacheTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\CacheTest.cs,GetOrAdd_ReplacementEntry,The following statement contains a magic number: Assert.AreEqual(2' cache.GetOrAdd("BB"));
Magic Number,NodaTime.Test.Utility,CacheTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\CacheTest.cs,GetOrAdd_ReplacementEntry,The following statement contains a magic number: Assert.AreEqual(3' cache.GetOrAdd("CCC"));
Magic Number,NodaTime.Test.Utility,CacheTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\CacheTest.cs,GetOrAdd_ReplacementEntry,The following statement contains a magic number: Assert.AreEqual(4' cache.GetOrAdd("DDDD"));
Magic Number,NodaTime.Test.Utility,CacheTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\CacheTest.cs,GetOrAdd_ReplacementEntry,The following statement contains a magic number: Assert.AreEqual(3' cache.Count);
Magic Number,NodaTime.Test.Utility,CacheTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\CacheTest.cs,GetOrAdd_ReplacementEntry,The following statement contains a magic number: Assert.AreEqual(4' factoryCallCount);
Magic Number,NodaTime.Test.Utility,PreconditionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\PreconditionsTest.cs,CheckArgument2_Success,The following statement contains a magic number: Preconditions.CheckArgument(true' "param"' "{0} is {1}"' 1' 10);
Magic Number,NodaTime.Test.Utility,PreconditionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\PreconditionsTest.cs,CheckArgument2_Failure,The following statement contains a magic number: var exception = Assert.Throws<ArgumentException>(() => Preconditions.CheckArgument(false' "param"' "{0} is {1}"' 1' 10));
Magic Number,NodaTime.Test.Utility,PreconditionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\PreconditionsTest.cs,DebugCheckArgumentRange_Debug,The following statement contains a magic number: Preconditions.DebugCheckArgumentRange("ignore"' 5' 0' 10);
Magic Number,NodaTime.Test.Utility,PreconditionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\PreconditionsTest.cs,DebugCheckArgumentRange_Debug,The following statement contains a magic number: Preconditions.DebugCheckArgumentRange("ignore"' 5' 0' 10);
Magic Number,NodaTime.Test.Utility,PreconditionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\PreconditionsTest.cs,DebugCheckArgumentRange_Debug,The following statement contains a magic number: Preconditions.DebugCheckArgumentRange("ignore"' 5L' 0L' 10L);
Magic Number,NodaTime.Test.Utility,PreconditionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\PreconditionsTest.cs,DebugCheckArgumentRange_Debug,The following statement contains a magic number: Preconditions.DebugCheckArgumentRange("ignore"' 5L' 0L' 10L);
Magic Number,NodaTime.Test.Utility,PreconditionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\PreconditionsTest.cs,DebugCheckArgumentRange_Debug,The following statement contains a magic number: Assert.Throws<DebugPreconditionException>(() => Preconditions.DebugCheckArgumentRange("ignore"' 10' 0' 5));
Magic Number,NodaTime.Test.Utility,PreconditionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\PreconditionsTest.cs,DebugCheckArgumentRange_Debug,The following statement contains a magic number: Assert.Throws<DebugPreconditionException>(() => Preconditions.DebugCheckArgumentRange("ignore"' 10' 0' 5));
Magic Number,NodaTime.Test.Utility,PreconditionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\PreconditionsTest.cs,DebugCheckArgumentRange_Debug,The following statement contains a magic number: Assert.Throws<DebugPreconditionException>(() => Preconditions.DebugCheckArgumentRange("ignore"' 10L' 0L' 5L));
Magic Number,NodaTime.Test.Utility,PreconditionsTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.Test\Utility\PreconditionsTest.cs,DebugCheckArgumentRange_Debug,The following statement contains a magic number: Assert.Throws<DebugPreconditionException>(() => Preconditions.DebugCheckArgumentRange("ignore"' 10L' 0L' 5L));
