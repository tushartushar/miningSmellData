Implementation smell,Namespace,Class,File,Method,Description
Long Statement,NodaTime.TzdbCompiler.Test.Tzdb,NameIdMappingSupportTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\NameIdMappingSupportTest.cs,AllDetectedNamesAreMappedCorrectly,The length of the statement  "                .Select(key => "Expected " + key + " => " + DetectedMapping[key] + "; was " + NameIdMappingSupport.StandardNameToIdMap[key]) " is 124.
Long Statement,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYear,The length of the statement  "            var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 1' 1' 0' false' LocalTime.Midnight)); " is 145.
Long Statement,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDay,The length of the statement  "            var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' LocalTime.Midnight)); " is 146.
Long Statement,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTime,The length of the statement  "            var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' new LocalTime(14' 53' 27' 856))); " is 158.
Long Statement,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTimeZone,The length of the statement  "            var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Standard' 3' 23' 0' false' new LocalTime(14' 53' 27' 856))); " is 162.
Long Statement,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withDayOfWeek,The length of the statement  "            var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' -1' (int) IsoDayOfWeek.Sunday' false' LocalTime.Midnight)); " is 170.
Long Statement,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_Last,The length of the statement  "            var expected = new ZoneYearOffset(TransitionMode.Wall' 3' -1' (int)IsoDayOfWeek.Sunday' false' LocalTime.Midnight' true); " is 121.
Long Statement,NodaTime.TzdbCompiler.Test.Tzdb,ZoneTransitionTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\ZoneTransitionTest.cs,Construct_NullName_Exception,The length of the statement  "            Assert.Throws(typeof(ArgumentNullException)' () => new ZoneTransition(NodaConstants.UnixEpoch' null!' Offset.Zero' Offset.Zero)); " is 129.
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,CldrWindowsZonesParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\CldrWindowsZonesParserTest.cs,MapZones,The following statement contains a magic number: Assert.AreEqual(3' mapZones.Count);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,CldrWindowsZonesParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\CldrWindowsZonesParserTest.cs,MapZones,The following statement contains a magic number: Assert.AreEqual(new MapZone("X"' "t2"' new[] { "B"' "C" })' mapZones[2]);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,DateTimeZoneBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\DateTimeZoneBuilderTest.cs,FixedZone_Western,The following statement contains a magic number: var offset = Offset.FromHours(-5);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,DateTimeZoneBuilderTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\DateTimeZoneBuilderTest.cs,FixedZone_Eastern,The following statement contains a magic number: var offset = Offset.FromHours(5);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,RuleLineTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\RuleLineTest.cs,WriteRead,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,RuleLineTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\RuleLineTest.cs,WriteRead,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,RuleLineTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\RuleLineTest.cs,WriteRead,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' yearOffset' 1971' 2009);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,RuleLineTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\RuleLineTest.cs,WriteRead,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' yearOffset' 1971' 2009);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TokensTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TokensTest.cs,ParseOffset_ZeroHoursWithMinutesAndSeconds,The following statement contains a magic number: Duration duration = Duration.FromMinutes(9) + Duration.FromSeconds(21);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TokensTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TokensTest.cs,ParseOffset_ZeroHoursWithMinutesAndSeconds,The following statement contains a magic number: Duration duration = Duration.FromMinutes(9) + Duration.FromSeconds(21);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TokensTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TokensTest.cs,ParseOffset_NegativeZeroHoursWithMinutesAndSeconds,The following statement contains a magic number: Duration duration = Duration.FromMinutes(6) + Duration.FromSeconds(4);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TokensTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TokensTest.cs,ParseOffset_NegativeZeroHoursWithMinutesAndSeconds,The following statement contains a magic number: Duration duration = Duration.FromMinutes(6) + Duration.FromSeconds(4);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseDateTimeOfYear_missingAt_validForZone,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Wall' 3' -1' (int) IsoDayOfWeek.Sunday' false' LocalTime.Midnight);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseDateTimeOfYear_missingOn_validForZone,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Wall' 3' 1' 0' false' LocalTime.Midnight);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseDateTimeOfYear_onAfter,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Wall' 3' 14' (int)IsoDayOfWeek.Tuesday' true' new LocalTime(2' 0));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseDateTimeOfYear_onAfter,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Wall' 3' 14' (int)IsoDayOfWeek.Tuesday' true' new LocalTime(2' 0));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseDateTimeOfYear_onAfter,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Wall' 3' 14' (int)IsoDayOfWeek.Tuesday' true' new LocalTime(2' 0));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseDateTimeOfYear_onBefore,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Wall' 3' 14' (int)IsoDayOfWeek.Tuesday' false' new LocalTime(2' 0));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseDateTimeOfYear_onBefore,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Wall' 3' 14' (int)IsoDayOfWeek.Tuesday' false' new LocalTime(2' 0));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseDateTimeOfYear_onBefore,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Wall' 3' 14' (int)IsoDayOfWeek.Tuesday' false' new LocalTime(2' 0));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseDateTimeOfYear_onLast,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Wall' 3' -1' (int)IsoDayOfWeek.Tuesday' false' new LocalTime(2' 0));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseDateTimeOfYear_onLast,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Wall' 3' -1' (int)IsoDayOfWeek.Tuesday' false' new LocalTime(2' 0));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseLine_zonePlus,The following statement contains a magic number: Assert.AreEqual(2' database.Zones["PST"].Count);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseMonth_shortMonthNames,The following statement contains a magic number: var month = new DateTime(2000' i' 1).ToString("MMM"' CultureInfo.InvariantCulture);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseMonth_shortMonthNames,The following statement contains a magic number: i < 12
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseMonth_longMonthNames,The following statement contains a magic number: var month = new DateTime(2000' i' 1).ToString("MMMM"' CultureInfo.InvariantCulture);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseMonth_longMonthNames,The following statement contains a magic number: i < 12
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_optionalRule,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' null' "P%sT"' int.MaxValue' TzdbZoneInfoParser.StartOfYearZoneOffset);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_simple,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' int.MaxValue' TzdbZoneInfoParser.StartOfYearZoneOffset);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYear,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 1' 1' 0' false' LocalTime.Midnight));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYear,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 1' 1' 0' false' LocalTime.Midnight));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDay,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' LocalTime.Midnight));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDay,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' LocalTime.Midnight));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDay,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' LocalTime.Midnight));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDay,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' LocalTime.Midnight));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTime,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTime,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTime,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTime,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTime,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTime,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTime,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTime,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTimeZone,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Standard' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTimeZone,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Standard' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTimeZone,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Standard' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTimeZone,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Standard' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTimeZone,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Standard' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTimeZone,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Standard' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTimeZone,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Standard' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withYearMonthDayTimeZone,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Standard' 3' 23' 0' false' new LocalTime(14' 53' 27' 856)));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withDayOfWeek,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' -1' (int) IsoDayOfWeek.Sunday' false' LocalTime.Midnight));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withDayOfWeek,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' -1' (int) IsoDayOfWeek.Sunday' false' LocalTime.Midnight));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,ParseZone_withDayOfWeek,The following statement contains a magic number: var expected = new ZoneLine(""' ToOffset(2' 0)' "US"' "P%sT"' 1969' new ZoneYearOffset(TransitionMode.Wall' 3' -1' (int) IsoDayOfWeek.Sunday' false' LocalTime.Midnight));
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_threeLines,The following statement contains a magic number: Assert.AreEqual(2' database.Zones.Values.Single().Count);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_threeLinesWithComment,The following statement contains a magic number: Assert.AreEqual(2' database.Zones.Values.Single().Count);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_twoLinks,The following statement contains a magic number: ValidateCounts(database' 0' 0' 2);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_twoZones,The following statement contains a magic number: ValidateCounts(database' 0' 2' 0);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_twoZones,The following statement contains a magic number: Assert.AreEqual(3' database.Zones["PST"].Count);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_twoZones,The following statement contains a magic number: Assert.AreEqual(2' database.Zones["EST"].Count);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_twoZonesTwoRule,The following statement contains a magic number: ValidateCounts(database' 1' 2' 0);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_twoZonesTwoRule,The following statement contains a magic number: Assert.AreEqual(3' database.Zones["PST"].Count);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_twoZonesTwoRule,The following statement contains a magic number: Assert.AreEqual(2' database.Zones["EST"].Count);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2500_FromDay_AtLeast_Sunday,The following statement contains a magic number: var actual = rule.GetOccurrenceForYear(2012);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2500_FromDay_AtLeast_Sunday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 2' 1' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2500_FromDay_AtLeast_Sunday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 2' 1' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2500_FromDay_AtLeast_Sunday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 2' 1' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtLeast_Sunday,The following statement contains a magic number: var actual = rule.GetOccurrenceForYear(2012);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtLeast_Sunday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 2' 0' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtLeast_Sunday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 2' 0' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtLeast_Sunday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 2' 0' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtMost_Sunday,The following statement contains a magic number: var actual = rule.GetOccurrenceForYear(2012);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtMost_Sunday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 2' 0' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtMost_Sunday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 2' 0' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtMost_Sunday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 2' 0' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtLeast_Wednesday,The following statement contains a magic number: var actual = rule.GetOccurrenceForYear(2012);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtLeast_Wednesday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 5' 0' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtLeast_Wednesday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 5' 0' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtLeast_Wednesday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 5' 0' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtMost_Wednesday,The following statement contains a magic number: var actual = rule.GetOccurrenceForYear(2012);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtMost_Wednesday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 12' 0' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtMost_Wednesday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 12' 0' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay_AtMost_Wednesday,The following statement contains a magic number: var expected = new LocalDateTime(2012' 4' 12' 0' 0).ToLocalInstant();
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_FromDay,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Wall' 4' 1' (int)IsoDayOfWeek.Sunday' true' LocalTime.Midnight' true);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_2400_Last,The following statement contains a magic number: var expected = new ZoneYearOffset(TransitionMode.Wall' 3' -1' (int)IsoDayOfWeek.Sunday' false' LocalTime.Midnight' true);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_Fixed_Eastern,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(9)' zone.StandardOffset);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneInfoParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneInfoParserTest.cs,Parse_Fixed_Western,The following statement contains a magic number: Assert.AreEqual(Offset.FromHours(-9)' zone.StandardOffset);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneLocationParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneLocationParserTest.cs,ParseLocation_Valid_NoComment,The following statement contains a magic number: Assert.AreEqual(40' location.Latitude);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneLocationParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneLocationParserTest.cs,ParseLocation_Valid_NoComment,The following statement contains a magic number: Assert.AreEqual(30' location.Longitude);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneLocationParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneLocationParserTest.cs,ParseEnhancedLocation_Valid,The following statement contains a magic number: Assert.AreEqual(40' location.Latitude);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneLocationParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneLocationParserTest.cs,ParseEnhancedLocation_Valid,The following statement contains a magic number: Assert.AreEqual(30' location.Longitude);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneLocationParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneLocationParserTest.cs,ParseLocation_Valid_WithComment,The following statement contains a magic number: Assert.AreEqual(40' location.Latitude);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,TzdbZoneLocationParserTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\TzdbZoneLocationParserTest.cs,ParseLocation_Valid_WithComment,The following statement contains a magic number: Assert.AreEqual(30' location.Longitude);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,ZoneRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\ZoneLineTest.cs,Equality,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,ZoneRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\ZoneLineTest.cs,Equality,The following statement contains a magic number: var yearOffset = new ZoneYearOffset(TransitionMode.Utc' 10' 31' (int)IsoDayOfWeek.Wednesday' true' LocalTime.Midnight);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,ZoneRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\ZoneLineTest.cs,Equality,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' yearOffset' 1971' 2009);
Magic Number,NodaTime.TzdbCompiler.Test.Tzdb,ZoneRuleTest,C:\research\architectureSmells\repos\nodatime_nodatime\src\NodaTime.TzdbCompiler.Test\Tzdb\ZoneLineTest.cs,Equality,The following statement contains a magic number: var recurrence = new ZoneRecurrence("bob"' Offset.Zero' yearOffset' 1971' 2009);
