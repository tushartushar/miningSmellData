Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Mosa.VBEWorld.x86,MosaLogo,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\MosaLogo.cs,Draw,The length of the statement  "						frameBuffer.FillRectangle(colors[tx / 6]' (uint)(positionX + (tileSize * tx))' (uint)(positionY + (tileSize * ty))' tileSize' tileSize); //Each pixel is aprox 5 tiles in width " is 175.
Magic Number,Mosa.VBEWorld.x86,Boot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\Boot.cs,DoGraphics,The following statement contains a magic number: MosaLogo.Draw(VBEDisplay.Framebuffer' 10);
Magic Number,Mosa.VBEWorld.x86,MosaLogo,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\MosaLogo.cs,Draw,The following statement contains a magic number: uint positionX = (frameBuffer.Width / 2) - ((_width * tileSize) / 2);
Magic Number,Mosa.VBEWorld.x86,MosaLogo,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\MosaLogo.cs,Draw,The following statement contains a magic number: uint positionX = (frameBuffer.Width / 2) - ((_width * tileSize) / 2);
Magic Number,Mosa.VBEWorld.x86,MosaLogo,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\MosaLogo.cs,Draw,The following statement contains a magic number: uint positionY = (frameBuffer.Height / 2) - ((_height * tileSize) / 2);
Magic Number,Mosa.VBEWorld.x86,MosaLogo,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\MosaLogo.cs,Draw,The following statement contains a magic number: uint positionY = (frameBuffer.Height / 2) - ((_height * tileSize) / 2);
Magic Number,Mosa.VBEWorld.x86,MosaLogo,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\MosaLogo.cs,Draw,The following statement contains a magic number: frameBuffer.FillRectangle(colors[tx / 6]' (uint)(positionX + (tileSize * tx))' (uint)(positionY + (tileSize * ty))' tileSize' tileSize);
Magic Number,Mosa.VBEWorld.x86,VBEDisplay,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\VBEDisplay.cs,InitVBE,The following statement contains a magic number: uint memorySize = (uint)(VBE.ScreenWidth * VBE.ScreenHeight * (VBE.BitsPerPixel / 8));
Magic Number,Mosa.VBEWorld.x86,VBEDisplay,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\VBEDisplay.cs,InitVBE,The following statement contains a magic number: switch (VBE.BitsPerPixel)  			{  				case 8: Framebuffer = new FrameBuffer8bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;  				case 16: Framebuffer = new FrameBuffer16bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;  				case 24: Framebuffer = new FrameBuffer24bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;  				case 32: Framebuffer = new FrameBuffer32bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;    				default:  					return false;  			}
Magic Number,Mosa.VBEWorld.x86,VBEDisplay,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\VBEDisplay.cs,InitVBE,The following statement contains a magic number: switch (VBE.BitsPerPixel)  			{  				case 8: Framebuffer = new FrameBuffer8bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;  				case 16: Framebuffer = new FrameBuffer16bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;  				case 24: Framebuffer = new FrameBuffer24bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;  				case 32: Framebuffer = new FrameBuffer32bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;    				default:  					return false;  			}
Magic Number,Mosa.VBEWorld.x86,VBEDisplay,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\VBEDisplay.cs,InitVBE,The following statement contains a magic number: switch (VBE.BitsPerPixel)  			{  				case 8: Framebuffer = new FrameBuffer8bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;  				case 16: Framebuffer = new FrameBuffer16bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;  				case 24: Framebuffer = new FrameBuffer24bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;  				case 32: Framebuffer = new FrameBuffer32bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;    				default:  					return false;  			}
Magic Number,Mosa.VBEWorld.x86,VBEDisplay,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\VBEDisplay.cs,InitVBE,The following statement contains a magic number: switch (VBE.BitsPerPixel)  			{  				case 8: Framebuffer = new FrameBuffer8bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;  				case 16: Framebuffer = new FrameBuffer16bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;  				case 24: Framebuffer = new FrameBuffer24bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;  				case 32: Framebuffer = new FrameBuffer32bpp(_lfb' VBE.ScreenWidth' VBE.ScreenHeight' 0' VBE.Pitch); break;    				default:  					return false;  			}
