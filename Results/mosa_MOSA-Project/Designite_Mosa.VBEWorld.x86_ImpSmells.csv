Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Mosa.VBEWorld.x86,MosaLogo,C:\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\MosaLogo.cs,Draw,The length of the statement  "						frameBuffer.FillRectangle(colors[tx / 6]' (uint)(positionX + (tileSize * tx))' (uint)(positionY + (tileSize * ty))' tileSize' tileSize); //Each pixel is aprox 5 tiles in width " is 175.
Magic Number,Mosa.VBEWorld.x86,Boot,C:\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\Boot.cs,DoGraphics,The following statement contains a magic number: MosaLogo.Draw(VBE.Framebuffer' 10);
Magic Number,Mosa.VBEWorld.x86,MosaLogo,C:\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\MosaLogo.cs,Draw,The following statement contains a magic number: uint positionX = (frameBuffer.Width / 2) - ((_width * tileSize) / 2);
Magic Number,Mosa.VBEWorld.x86,MosaLogo,C:\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\MosaLogo.cs,Draw,The following statement contains a magic number: uint positionX = (frameBuffer.Width / 2) - ((_width * tileSize) / 2);
Magic Number,Mosa.VBEWorld.x86,MosaLogo,C:\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\MosaLogo.cs,Draw,The following statement contains a magic number: uint positionY = (frameBuffer.Height / 2) - ((_height * tileSize) / 2);
Magic Number,Mosa.VBEWorld.x86,MosaLogo,C:\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\MosaLogo.cs,Draw,The following statement contains a magic number: uint positionY = (frameBuffer.Height / 2) - ((_height * tileSize) / 2);
Magic Number,Mosa.VBEWorld.x86,MosaLogo,C:\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\MosaLogo.cs,Draw,The following statement contains a magic number: for (int ty = 0; ty < _height; ty++)  			{  				uint data = logo[ty];    				for (int tx = 0; tx < _width; tx++)  				{  					int mask = 1 << tx;    					if ((data & mask) == mask)  					{  						frameBuffer.FillRectangle(colors[tx / 6]' (uint)(positionX + (tileSize * tx))' (uint)(positionY + (tileSize * ty))' tileSize' tileSize); //Each pixel is aprox 5 tiles in width  					}  				}  			}
Magic Number,Mosa.VBEWorld.x86,VBE,C:\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\VBE.cs,InitVBE,The following statement contains a magic number: uint memorySize = (uint)(vbeInfo.ScreenWidth * vbeInfo.ScreenHeight * (vbeInfo.BitsPerPixel / 8));
Magic Number,Mosa.VBEWorld.x86,VBE,C:\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\VBE.cs,InitVBE,The following statement contains a magic number: switch (vbeInfo.BitsPerPixel)  			{  				case 8: Framebuffer = new FrameBuffer8bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;  				case 16: Framebuffer = new FrameBuffer16bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;  				case 24: Framebuffer = new FrameBuffer24bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;  				case 32: Framebuffer = new FrameBuffer32bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;    				default:  					return false;  			}
Magic Number,Mosa.VBEWorld.x86,VBE,C:\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\VBE.cs,InitVBE,The following statement contains a magic number: switch (vbeInfo.BitsPerPixel)  			{  				case 8: Framebuffer = new FrameBuffer8bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;  				case 16: Framebuffer = new FrameBuffer16bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;  				case 24: Framebuffer = new FrameBuffer24bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;  				case 32: Framebuffer = new FrameBuffer32bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;    				default:  					return false;  			}
Magic Number,Mosa.VBEWorld.x86,VBE,C:\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\VBE.cs,InitVBE,The following statement contains a magic number: switch (vbeInfo.BitsPerPixel)  			{  				case 8: Framebuffer = new FrameBuffer8bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;  				case 16: Framebuffer = new FrameBuffer16bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;  				case 24: Framebuffer = new FrameBuffer24bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;  				case 32: Framebuffer = new FrameBuffer32bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;    				default:  					return false;  			}
Magic Number,Mosa.VBEWorld.x86,VBE,C:\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\VBE.cs,InitVBE,The following statement contains a magic number: switch (vbeInfo.BitsPerPixel)  			{  				case 8: Framebuffer = new FrameBuffer8bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;  				case 16: Framebuffer = new FrameBuffer16bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;  				case 24: Framebuffer = new FrameBuffer24bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;  				case 32: Framebuffer = new FrameBuffer32bpp(_lfb' vbeInfo.ScreenWidth' vbeInfo.ScreenHeight' 0' vbeInfo.Pitch); break;    				default:  					return false;  			}
Magic Number,Mosa.VBEWorld.x86.HAL,Hardware,C:\repos\mosa_MOSA-Project\Source\Mosa.VBEWorld.x86\HAL\Hardware.cs,RequestPhysicalMemory,The following statement contains a magic number: for (uint at = address; at < address + size; at += 4096)  			{  				PageTable.MapVirtualAddressToPhysical(at' at);  			}
