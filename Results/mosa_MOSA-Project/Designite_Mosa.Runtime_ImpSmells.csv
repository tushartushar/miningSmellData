Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mosa.Runtime.Math,Division,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Math\Division.cs,DivMod,Cyclomatic complexity of the method is 16
Long Statement,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,GetProtectedRegionEntryByAddress,The length of the statement  "					// If the handler is a exception clause' accept if the exception type is in the is within the inheritance chain of the exception object " is 135.
Complex Conditional,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,GetProtectedRegionEntryByAddress,The conditional expression  "(offset >= start) && (offset < end) && (start >= currentStart) && (end < currentEnd)"  is complex.
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,AllocateObject,The following statement contains a magic number: var memory = GC.AllocateObject((2 * (uint)(Pointer.Size)) + classSize);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,AllocateObject,The following statement contains a magic number: Pointer.Size == 4
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,AllocateArray,The following statement contains a magic number: uint allocationSize = ((uint)(Pointer.Size) * 3) + (elements * elementSize);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,AllocateArray,The following statement contains a magic number: allocationSize = (allocationSize + 3) & ~3u;
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,AllocateArray,The following statement contains a magic number: allocationSize = (allocationSize + 3) & ~3u;
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,AllocateArray,The following statement contains a magic number: memory.Store32(Pointer.Size * 2' elements);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,AllocateArray,The following statement contains a magic number: Pointer.Size == 4
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,Box8,The following statement contains a magic number: memory.Store8(Pointer.Size * 2' value);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,Box16,The following statement contains a magic number: memory.Store16(Pointer.Size * 2' value);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,Box32,The following statement contains a magic number: memory.Store32(Pointer.Size * 2' value);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,Box64,The following statement contains a magic number: var memory = AllocateObject(handle' Pointer.Size * 2);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,Box64,The following statement contains a magic number: memory.Store64(Pointer.Size * 2' value);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,BoxR4,The following statement contains a magic number: memory.StoreR4(Pointer.Size * 2' value);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,BoxR8,The following statement contains a magic number: var memory = AllocateObject(handle' Pointer.Size * 2);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,BoxR8,The following statement contains a magic number: memory.StoreR8(Pointer.Size * 2' value);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,Box,The following statement contains a magic number: MemoryCopy(memory + (Pointer.Size * 2)' value' size);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,Unbox8,The following statement contains a magic number: return box + (Pointer.Size * 2);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,Unbox16,The following statement contains a magic number: return box + (Pointer.Size * 2);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,Unbox32,The following statement contains a magic number: return box + (Pointer.Size * 2);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,Unbox64,The following statement contains a magic number: return box + (Pointer.Size * 2);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,Unbox,The following statement contains a magic number: MemoryCopy(vt' box + (Pointer.Size * 2)' size);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,IsInstanceOfInterfaceType,The following statement contains a magic number: int index = interfaceSlot / 32;
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,IsInstanceOfInterfaceType,The following statement contains a magic number: int bit = interfaceSlot % 32;
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,IsInstanceOfInterfaceType,The following statement contains a magic number: uint value = bitmap.Load32(index * 4);
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,GetMethodDefinition,The following statement contains a magic number: return new MethodDefinition(table.LoadPointer(Pointer.Size * 2));
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,GetMethodDefinition,The following statement contains a magic number: table += Pointer.Size * 3;
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,GetMethodDefinitionViaMethodExceptionLookup,The following statement contains a magic number: return new MethodDefinition(table.LoadPointer(Pointer.Size * 2));
Magic Number,Mosa.Runtime,Internal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Internal.cs,GetMethodDefinitionViaMethodExceptionLookup,The following statement contains a magic number: table += Pointer.Size * 3;
Magic Number,Mosa.Runtime,Pointer,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Pointer.cs,Load24,The following statement contains a magic number: return Intrinsic.Load16(this' offset) | (uint)(Intrinsic.Load8(this' offset + 2) << 16);
Magic Number,Mosa.Runtime,Pointer,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Pointer.cs,Load24,The following statement contains a magic number: return Intrinsic.Load16(this' offset) | (uint)(Intrinsic.Load8(this' offset + 2) << 16);
Magic Number,Mosa.Runtime,Pointer,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Pointer.cs,Store24,The following statement contains a magic number: Intrinsic.Store8(this' offset + 2' (byte)((value >> 16) & 0xFF));
Magic Number,Mosa.Runtime,Pointer,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Pointer.cs,Store24,The following statement contains a magic number: Intrinsic.Store8(this' offset + 2' (byte)((value >> 16) & 0xFF));
Magic Number,Mosa.Runtime.Math,Division,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Math\Division.cs,sdiv32,The following statement contains a magic number: int s_a = a >> 31;
Magic Number,Mosa.Runtime.Math,Division,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Math\Division.cs,sdiv32,The following statement contains a magic number: int s_b = b >> 31;
Magic Number,Mosa.Runtime.Math,Division,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Math\Division.cs,DivUMod,The following statement contains a magic number: (d < n && bit != 0) && ((d & (1L << 31)) == 0)
Magic Number,Mosa.Runtime.Math,Division,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Math\Division.cs,DivUMod,The following statement contains a magic number: i < 65
Magic Number,Mosa.Runtime.Math,Division,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Math\Division.cs,DivMod,The following statement contains a magic number: dividend == -9223372036854775808
Magic Number,Mosa.Runtime.Math,Division,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Math\Division.cs,DivMod,The following statement contains a magic number: divisor == -9223372036854775808
Magic Number,Mosa.Runtime.Math,Division,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Math\Division.cs,DivMod,The following statement contains a magic number: i < 65
Magic Number,Mosa.Runtime.Metadata,AssemblyDefinition,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Metadata\AssemblyDefinition.cs,GetTypeDefinition,The following statement contains a magic number: return new TypeDefinition(Ptr.LoadPointer((Pointer.Size * 4) + (Pointer.Size * (int)slot)));
Magic Number,Mosa.Runtime.Metadata,CustomAttribute,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Metadata\CustomAttribute.cs,GetCustomAttributeArgument,The following statement contains a magic number: return new CustomAttributeArgument(Ptr.LoadPointer((Pointer.Size * 3) + (Pointer.Size * (int)slot)));
Magic Number,Mosa.Runtime.Metadata,CustomAttributeArgument,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Metadata\CustomAttributeArgument.cs,GetArgumentValue,The following statement contains a magic number: return Ptr.LoadPointer(Pointer.Size * 4);
Magic Number,Mosa.Runtime.Metadata,TypeDefinition,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Runtime\Metadata\TypeDefinition.cs,GetMethodDefinition,The following statement contains a magic number: return new MethodDefinition(Ptr.LoadPointer((Pointer.Size * 14) + (Pointer.Size * (int)slot)));
