Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,Setup,Cyclomatic complexity of the method is 10
Complex Method,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,ReservePages,Cyclomatic complexity of the method is 8
Complex Method,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,Cyclomatic complexity of the method is 10
Complex Method,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,Normal,Cyclomatic complexity of the method is 9
Complex Method,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,Escape,Cyclomatic complexity of the method is 8
Complex Method,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,Evaluate,Cyclomatic complexity of the method is 25
Complex Method,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,ConvertBufferToParameter,Cyclomatic complexity of the method is 8
Long Parameter List,Mosa.Kernel.BareMetal.x86,GDTTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\GDTTable.cs,Set,The method has 5 parameters. Parameters: index' address' limit' access' granularity
Long Statement,Mosa.Kernel.BareMetal.x86,PageTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\PageTable.cs,MapVirtualAddressToPhysical,The length of the statement  "			PageTables.Store32((virtualAddress & 0xFFFFF000u) >> 10' physicalAddress & 0xFFFFF000u | 0x04u | 0x02u | (present ? 0x1u : 0x0u)); " is 130.
Long Statement,Mosa.Kernel.BareMetal.x86,VGAText,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAText.cs,CheckForScroll,The length of the statement  "				Runtime.Internal.MemorySet(new IntPtr(Address + (Columns * (Rows - 1)))' (byte)((BackgroundColor & 0x0F) << 4)' (int)(Columns * 2)); " is 132.
Long Statement,Mosa.Kernel.BareMetal.BootMemory,BootMemoryMap,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\BootMemory\BootMemoryMap.cs,ImportMultibootV1MemoryMap,The length of the statement  "				BootMemoryMap.SetMemoryMap(entry.BaseAddr' entry.Length' entry.Type == 1 ? BootMemoryMapType.Available : BootMemoryMapType.Reserved); " is 133.
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: mem_upper = mem_upper - (1024 * 1024);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: mem_upper = mem_upper - (1024 * 1024);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 4' 640);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 4' 640);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 8' mem_upper / 1024);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 8' mem_upper / 1024);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 12' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 16' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 20' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 24' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 28' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 44' 6 * 24);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 44' 6 * 24);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 44' 6 * 24);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 48' multiboot + 96);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 48' multiboot + 96);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 52' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 56' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 60' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 64' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 68' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 72' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 76' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 80' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 84' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 88' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: CPU.Write32(multiboot + 92' 0x0);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: multiboot += 96;
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: multiboot = SetMemoryRegion(multiboot' 0x0009FC00' 0x0000400' 2);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: multiboot = SetMemoryRegion(multiboot' 0x000F0000' 0x0010000' 2);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: multiboot = SetMemoryRegion(multiboot' 0x07FE0000' 0x0020000' 2);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,Setup,The following statement contains a magic number: multiboot = SetMemoryRegion(multiboot' 0xFFFC0000' 0x0020000' 2);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,SetMemoryRegion,The following statement contains a magic number: CPU.Write32(at + 0' 20);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,SetMemoryRegion,The following statement contains a magic number: CPU.Write32(at + 4' address);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,SetMemoryRegion,The following statement contains a magic number: CPU.Write32(at + 8' 0x00);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,SetMemoryRegion,The following statement contains a magic number: CPU.Write32(at + 12' size);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,SetMemoryRegion,The following statement contains a magic number: CPU.Write32(at + 16' 0x00);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,SetMemoryRegion,The following statement contains a magic number: CPU.Write32(at + 20' type);
Magic Number,Mosa.Workspace.Kernel.Emulate,Multiboot,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Emulate\Multiboot.cs,SetMemoryRegion,The following statement contains a magic number: return at + 24;
Magic Number,Mosa.Workspace.Kernel.Internal,CPU,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\CPU.cs,TranslateToPhysical,The following statement contains a magic number: uint pd = Memory.Read32(IntelCR3Register + ((address >> 22) * 4));
Magic Number,Mosa.Workspace.Kernel.Internal,CPU,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\CPU.cs,TranslateToPhysical,The following statement contains a magic number: uint pd = Memory.Read32(IntelCR3Register + ((address >> 22) * 4));
Magic Number,Mosa.Workspace.Kernel.Internal,CPU,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\CPU.cs,TranslateToPhysical,The following statement contains a magic number: uint pt = Memory.Read32((pd & 0xFFFFF000) + (((address >> 12) & 0x03FF) * 4));
Magic Number,Mosa.Workspace.Kernel.Internal,CPU,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\CPU.cs,TranslateToPhysical,The following statement contains a magic number: uint pt = Memory.Read32((pd & 0xFFFFF000) + (((address >> 12) & 0x03FF) * 4));
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalRead16,The following statement contains a magic number: var offset = address % 4;
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalRead16,The following statement contains a magic number: return (ushort)((a & 0xFFFF0000) >> 16);
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalRead32,The following statement contains a magic number: var offset = address % 4;
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalRead32Ex,The following statement contains a magic number: System.Diagnostics.Debug.Assert(address % 4 == 0);
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalRead32Ex,The following statement contains a magic number: ulong index = address / (BlockSize * 4);
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalRead32Ex,The following statement contains a magic number: uint offset = (uint)((address / 4) % BlockSize);
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalRead8,The following statement contains a magic number: uint offset = (uint)(address % 4);
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalRead8,The following statement contains a magic number: int shift = (3 - (int)offset) * 8;
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalRead8,The following statement contains a magic number: int shift = (3 - (int)offset) * 8;
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalWrite16,The following statement contains a magic number: uint offset = (uint)(address % 4);
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalWrite16,The following statement contains a magic number: InternalWrite32Ex(address' ((uint)value) << 16' 0xFFFF0000);
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalWrite32,The following statement contains a magic number: uint offset = (uint)(address % 4);
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalWrite32Ex,The following statement contains a magic number: System.Diagnostics.Debug.Assert(address % 4 == 0);
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalWrite32Ex,The following statement contains a magic number: ulong index = address / (BlockSize * 4);
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,InternalWrite32Ex,The following statement contains a magic number: uint offset = (uint)((address / 4) % BlockSize);
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,Read64,The following statement contains a magic number: ulong val = high | ((ulong)low << 32);
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,Write8,The following statement contains a magic number: uint offset = (uint)(address % 4);
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,Write8,The following statement contains a magic number: int shift = (3 - (int)offset) * 8;
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,Write8,The following statement contains a magic number: int shift = (3 - (int)offset) * 8;
Magic Number,Mosa.Workspace.Kernel.Internal,Memory,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Internal\Memory.cs,Write64,The following statement contains a magic number: uint low = (uint)(value >> 32);
Magic Number,Mosa.Kernel.BareMetal,Platform,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mod\Mosa.Kernel.BareMetal\Mod.Platform.cs,GetPageShift,The following statement contains a magic number: return 12;
Magic Number,Mosa.Kernel.BareMetal,Console,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\Console.cs,SetForground,The following statement contains a magic number: Write((byte)((byte)'0' + (byte)(color) % 10));
Magic Number,Mosa.Kernel.BareMetal,Console,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\Console.cs,SetBackground,The following statement contains a magic number: Write((byte)((byte)'0' + (byte)(color) % 10));
Magic Number,Mosa.Kernel.BareMetal,Page,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\Page.cs,ClearPage,The following statement contains a magic number: uint writes = Size / 8;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,Setup,The following statement contains a magic number: var bitMapCount = TotalPages / (Page.Size * 8);
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: var indexShift = (IntPtr.Size == 4) ? 10 : 9;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: var indexShift = (IntPtr.Size == 4) ? 10 : 9;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: var indexShift = (IntPtr.Size == 4) ? 10 : 9;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: var offset = (uint)((index & maskOffIndex) >> 6);
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: at += 64;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: count -= 64;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: at % 64 == 0 && count >= 64
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: at % 64 == 0 && count >= 64
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: var indexShift = (IntPtr.Size == 4) ? 10 : 9;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: var indexShift = (IntPtr.Size == 4) ? 10 : 9;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: var indexShift = (IntPtr.Size == 4) ? 10 : 9;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: var offset = (uint)((index & maskOffIndex) >> 6);
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: restartAt = at + 64;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: at += 64;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: count -= 64;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: at % 64 == 0 && count >= 64
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: at % 64 == 0 && count >= 64
Magic Number,Mosa.Kernel.BareMetal.x86,GDTTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\GDTTable.cs,Setup,The following statement contains a magic number: Entry.Store16(0' (GDTEntryOffset.TotalSize * 3) - 1);
Magic Number,Mosa.Kernel.BareMetal.x86,GDTTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\GDTTable.cs,Setup,The following statement contains a magic number: Entry.StorePointer(2' Entry + 6);
Magic Number,Mosa.Kernel.BareMetal.x86,GDTTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\GDTTable.cs,Setup,The following statement contains a magic number: Entry.StorePointer(2' Entry + 6);
Magic Number,Mosa.Kernel.BareMetal.x86,GDTTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\GDTTable.cs,Setup,The following statement contains a magic number: Set(2' 0' 0xFFFFFFFF' 0x92' 0xCF);
Magic Number,Mosa.Kernel.BareMetal.x86,GDTTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\GDTTable.cs,Set,The following statement contains a magic number: var entry = Entry + (int)(6 + (index * GDTEntryOffset.TotalSize));
Magic Number,Mosa.Kernel.BareMetal.x86,GDTTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\GDTTable.cs,Set,The following statement contains a magic number: entry.Store8(GDTEntryOffset.BaseMiddle' (byte)((address >> 16) & 0xFF));
Magic Number,Mosa.Kernel.BareMetal.x86,GDTTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\GDTTable.cs,Set,The following statement contains a magic number: entry.Store8(GDTEntryOffset.BaseHigh' (byte)((address >> 24) & 0xFF));
Magic Number,Mosa.Kernel.BareMetal.x86,GDTTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\GDTTable.cs,Set,The following statement contains a magic number: entry.Store8(GDTEntryOffset.Granularity' (byte)(((byte)(limit >> 16) & 0x0F) | (granularity & 0xF0)));
Magic Number,Mosa.Kernel.BareMetal.x86,PageTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\PageTable.cs,Setup,The following statement contains a magic number: PageTables = PhysicalPageAllocator.ReservePages(Page.Size * 1024);
Magic Number,Mosa.Kernel.BareMetal.x86,PageTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\PageTable.cs,Initialize,The following statement contains a magic number: PageDirectory.Store32(index << 2' (uint)(PageTables.ToInt32() + (index * 4096) | 0x04 | 0x02 | 0x01));
Magic Number,Mosa.Kernel.BareMetal.x86,PageTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\PageTable.cs,Initialize,The following statement contains a magic number: PageDirectory.Store32(index << 2' (uint)(PageTables.ToInt32() + (index * 4096) | 0x04 | 0x02 | 0x01));
Magic Number,Mosa.Kernel.BareMetal.x86,PageTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\PageTable.cs,Initialize,The following statement contains a magic number: index < 1024
Magic Number,Mosa.Kernel.BareMetal.x86,PageTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\PageTable.cs,Initialize,The following statement contains a magic number: index < 1024
Magic Number,Mosa.Kernel.BareMetal.x86,PageTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\PageTable.cs,MapVirtualAddressToPhysical,The following statement contains a magic number: PageTables.Store32((virtualAddress & 0xFFFFF000u) >> 10' physicalAddress & 0xFFFFF000u | 0x04u | 0x02u | (present ? 0x1u : 0x0u));
Magic Number,Mosa.Kernel.BareMetal.x86,PageTable,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\PageTable.cs,GetPhysicalAddressFromVirtual,The following statement contains a magic number: var offset = ((address & 0xFFFFF000u) >> 10) + (address & 0xFFFu);
Magic Number,Mosa.Kernel.BareMetal.x86,PIC,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\PIC.cs,Setup,The following statement contains a magic number: Native.Out8(PICConstants.PIC1_Data' 4);
Magic Number,Mosa.Kernel.BareMetal.x86,PIC,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\PIC.cs,Setup,The following statement contains a magic number: Native.Out8(PICConstants.PIC2_Data' 2);
Magic Number,Mosa.Kernel.BareMetal.x86,PIC,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\PIC.cs,SendEndOfInterrupt,The following statement contains a magic number: irq >= 40
Magic Number,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,Normal,The following statement contains a magic number: (b >= 33 && b <= 126)
Magic Number,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,Normal,The following statement contains a magic number: (b >= 33 && b <= 126)
Magic Number,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,ConvertBufferToParameter,The following statement contains a magic number: value = (value * 10) + (b - (byte)'0');
Magic Number,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,GetParameter,The following statement contains a magic number: switch (index)  			{  				case 1: return Parameter1;  				case 2: return Parameter2;  				case 3: return Parameter3;  				case 4: return Parameter4;  				case 5: return Parameter5;  				case 6: return Parameter6;  				default: return 0;  			}
Magic Number,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,GetParameter,The following statement contains a magic number: switch (index)  			{  				case 1: return Parameter1;  				case 2: return Parameter2;  				case 3: return Parameter3;  				case 4: return Parameter4;  				case 5: return Parameter5;  				case 6: return Parameter6;  				default: return 0;  			}
Magic Number,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,GetParameter,The following statement contains a magic number: switch (index)  			{  				case 1: return Parameter1;  				case 2: return Parameter2;  				case 3: return Parameter3;  				case 4: return Parameter4;  				case 5: return Parameter5;  				case 6: return Parameter6;  				default: return 0;  			}
Magic Number,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,GetParameter,The following statement contains a magic number: switch (index)  			{  				case 1: return Parameter1;  				case 2: return Parameter2;  				case 3: return Parameter3;  				case 4: return Parameter4;  				case 5: return Parameter5;  				case 6: return Parameter6;  				default: return 0;  			}
Magic Number,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,GetParameter,The following statement contains a magic number: switch (index)  			{  				case 1: return Parameter1;  				case 2: return Parameter2;  				case 3: return Parameter3;  				case 4: return Parameter4;  				case 5: return Parameter5;  				case 6: return Parameter6;  				default: return 0;  			}
Magic Number,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,AppendBuffer,The following statement contains a magic number: BufferData = (BufferData << 8) | c;
Magic Number,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,GetBuffer,The following statement contains a magic number: return (byte)(BufferData >> ((BufferLength - index - 1) * 8));
Magic Number,Mosa.Kernel.BareMetal.x86,VGAText,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAText.cs,Clear,The following statement contains a magic number: ushort value = (ushort)(Color << 8 | (BackgroundColor & 0x0F) << 12);
Magic Number,Mosa.Kernel.BareMetal.x86,VGAText,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAText.cs,Clear,The following statement contains a magic number: ushort value = (ushort)(Color << 8 | (BackgroundColor & 0x0F) << 12);
Magic Number,Mosa.Kernel.BareMetal.x86,VGAText,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAText.cs,Clear,The following statement contains a magic number: Runtime.Internal.MemorySet(new IntPtr(Address)' value' (int)(Rows * Columns * 2));
Magic Number,Mosa.Kernel.BareMetal.x86,VGAText,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAText.cs,Write,The following statement contains a magic number: var address = new IntPtr(Address + (Offset * 2));
Magic Number,Mosa.Kernel.BareMetal.x86,VGAText,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAText.cs,Write,The following statement contains a magic number: address.Store8(1' (byte)(Color | ((BackgroundColor & 0x0F) << 4)));
Magic Number,Mosa.Kernel.BareMetal.x86,VGAText,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAText.cs,CheckForScroll,The following statement contains a magic number: Runtime.Internal.MemoryCopy(new IntPtr(Address)' new IntPtr(Address + (Columns * 2))' Columns * 2);
Magic Number,Mosa.Kernel.BareMetal.x86,VGAText,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAText.cs,CheckForScroll,The following statement contains a magic number: Runtime.Internal.MemoryCopy(new IntPtr(Address)' new IntPtr(Address + (Columns * 2))' Columns * 2);
Magic Number,Mosa.Kernel.BareMetal.x86,VGAText,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAText.cs,CheckForScroll,The following statement contains a magic number: Runtime.Internal.MemorySet(new IntPtr(Address + (Columns * (Rows - 1)))' (byte)((BackgroundColor & 0x0F) << 4)' (int)(Columns * 2));
Magic Number,Mosa.Kernel.BareMetal.x86,VGAText,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAText.cs,CheckForScroll,The following statement contains a magic number: Runtime.Internal.MemorySet(new IntPtr(Address + (Columns * (Rows - 1)))' (byte)((BackgroundColor & 0x0F) << 4)' (int)(Columns * 2));
Magic Number,Mosa.Kernel.BareMetal.x86,VGAText,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAText.cs,UpdateCursor,The following statement contains a magic number: Native.Out8(0x3D5' (byte)((location >> 8) & 0xFF));
Magic Number,Mosa.Kernel.BareMetal.Extension,IntPtrExtension,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\Extension\IntPtrExtension.cs,Load24,The following statement contains a magic number: return Intrinsic.Load16(address' offset) | (uint)(Intrinsic.Load8(address' offset + 2) << 16);
Magic Number,Mosa.Kernel.BareMetal.Extension,IntPtrExtension,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\Extension\IntPtrExtension.cs,Load24,The following statement contains a magic number: return Intrinsic.Load16(address' offset) | (uint)(Intrinsic.Load8(address' offset + 2) << 16);
Magic Number,Mosa.Kernel.BareMetal.Extension,IntPtrExtension,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\Extension\IntPtrExtension.cs,Store24,The following statement contains a magic number: Intrinsic.Store8(address' offset + 2' (byte)((value >> 16) & 0xFF));
Magic Number,Mosa.Kernel.BareMetal.Extension,IntPtrExtension,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal\Extension\IntPtrExtension.cs,Store24,The following statement contains a magic number: Intrinsic.Store8(address' offset + 2' (byte)((value >> 16) & 0xFF));
Magic Number,Mosa.Workspace.Kernel,Program,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Program.cs,Main,The following statement contains a magic number: Emulate.Multiboot.Setup(128 * 1024 * 1024);
Magic Number,Mosa.Workspace.Kernel,Program,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Program.cs,Main,The following statement contains a magic number: Emulate.Multiboot.Setup(128 * 1024 * 1024);
Magic Number,Mosa.Workspace.Kernel,Program,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Program.cs,Main,The following statement contains a magic number: Emulate.Multiboot.Setup(128 * 1024 * 1024);
Magic Number,Mosa.Workspace.Kernel,Program,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Program.cs,Main,The following statement contains a magic number: var page2 = PhysicalPageAllocator.ReservePages(65' 0);
Missing Default,Mosa.Kernel.BareMetal.x86,VGAConsole,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Workspace.Kernel.Debug\Mosa.Kernel.BareMetal.x86\VGAConsole.cs,Write,The following switch statement is missing a default case: switch (State)  			{  				case ControlState.Normal: { Normal(b); return; }  				case ControlState.Escape: { Escape(b); return; }  				case ControlState.Color: { VGAText.SetColor(b); State = ControlState.Normal; return; }  				case ControlState.Background: { VGAText.SetBackground(b); State = ControlState.Normal; ; return; }  			}
