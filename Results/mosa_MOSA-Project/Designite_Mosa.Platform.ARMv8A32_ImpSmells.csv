Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mosa.Platform.ARMv8A32,ARMv8A32Instruction,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\ARMv8A32Instruction.cs,GetConditionCode,Cyclomatic complexity of the method is 19
Complex Method,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,ConvertFloatToImm,Cyclomatic complexity of the method is 18
Long Parameter List,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,TransformLoadInstruction,The method has 7 parameters. Parameters: context' loadUp' loadUpImm' loadDownImm' result' operand1' operand2
Long Parameter List,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,TransformStoreInstruction,The method has 7 parameters. Parameters: context' storeUp' storeUpImm' loadDownImm' operand1' operand2' operand3
Long Parameter List,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,TransformInstruction,The method has 6 parameters. Parameters: context' virtualInstruction' immediateInstruction' result' statusRegister' operand1
Long Parameter List,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,TransformInstruction,The method has 7 parameters. Parameters: context' virtualInstruction' immediateInstruction' result' statusRegister' operand1' operand2
Long Parameter List,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,TransformInstructionXXX,The method has 7 parameters. Parameters: context' virtualInstruction' immediateInstruction' result' statusRegister' operand1' operand2
Long Statement,Mosa.Platform.ARMv8A32.Instructions,AdcImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AdcImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,AdcRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AdcRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,AddImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AddImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,AddRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AddRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,AndImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AndImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,AndRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AndRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,BicImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\BicImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,BicRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\BicRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,CmnImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmnImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,CmnRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmnRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,CmpImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmpImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,CmpRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmpRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,EorImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\EorImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,EorRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\EorRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,MovImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MovImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,MvnImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MvnImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,MvnRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MvnRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,OrrImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\OrrImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,OrrRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\OrrRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,RsbImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RsbImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,RsbRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RsbRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,RscImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RscImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,RscRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RscRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,SbcImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SbcImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,SbcRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SbcRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,SubImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SubImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,SubRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SubRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,TeqImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TeqImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,TeqRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TeqRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,TstImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TstImmShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant) " is 124.
Long Statement,Mosa.Platform.ARMv8A32.Instructions,TstRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TstRegShift.cs,Emit,The length of the statement  "			if (node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant) " is 127.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,Add32,The length of the statement  "			TransformInstruction(context' ARMv8A32.Add' ARMv8A32.AddImm' context.Result' StatusRegister.NotSet' context.Operand1' context.Operand2); " is 136.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,AddCarryOut32,The length of the statement  "			TransformInstruction(context' ARMv8A32.Add' ARMv8A32.AddImm' context.Result' StatusRegister.Update' context.Operand1' context.Operand2); " is 136.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,AddCarryIn32,The length of the statement  "			TransformInstruction(context' ARMv8A32.Add' ARMv8A32.AddImm' context.Result' StatusRegister.NotSet' context.Operand1' context.Operand2); " is 136.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,ArithShiftRight32,The length of the statement  "			TransformInstruction(context' ARMv8A32.Asr' ARMv8A32.AsrImm' context.Result' StatusRegister.NotSet' context.Operand1' context.Operand2); " is 136.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,LoadInt32,The length of the statement  "			TransformLoadInstruction(context' ARMv8A32.LdrUp32' ARMv8A32.LdrUpImm32' ARMv8A32.LdrDownImm32' context.Result' context.Operand1' context.Operand2); " is 148.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,LoadParamInt32,The length of the statement  "			TransformLoadInstruction(context' ARMv8A32.LdrUp32' ARMv8A32.LdrUpImm32' ARMv8A32.LdrDownImm32' context.Result' StackFrame' context.Operand1); " is 142.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,LoadParamSignExtend16x32,The length of the statement  "			TransformLoadInstruction(context' ARMv8A32.LdrUpS16' ARMv8A32.LdrUpImmS16' ARMv8A32.LdrDownImmS16' context.Result' StackFrame' context.Operand1); " is 145.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,LoadParamSignExtend8x32,The length of the statement  "			TransformLoadInstruction(context' ARMv8A32.LdrUpS8' ARMv8A32.LdrUpImmS8' ARMv8A32.LdrDownImmS8' context.Result' StackFrame' context.Operand1); " is 142.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,LoadParamZeroExtend16x32,The length of the statement  "			TransformLoadInstruction(context' ARMv8A32.LdrUp16' ARMv8A32.LdrUpImm16' ARMv8A32.LdrDownImm16' context.Result' StackFrame' context.Operand1); " is 142.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,LoadParamZeroExtend8x32,The length of the statement  "			TransformLoadInstruction(context' ARMv8A32.LdrUp8' ARMv8A32.LdrUpImm8' ARMv8A32.LdrDownImm8' context.Result' StackFrame' context.Operand1); " is 139.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,LoadSignExtend16x32,The length of the statement  "			TransformLoadInstruction(context' ARMv8A32.LdrUpS16' ARMv8A32.LdrUpImmS16' ARMv8A32.LdrDownImmS16' context.Result' StackFrame' context.Operand1); " is 145.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,LoadSignExtend8x32,The length of the statement  "			TransformLoadInstruction(context' ARMv8A32.LdrUpS8' ARMv8A32.LdrUpImmS8' ARMv8A32.LdrDownImmS8' context.Result' StackFrame' context.Operand1); " is 142.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,LoadZeroExtend16x32,The length of the statement  "			TransformLoadInstruction(context' ARMv8A32.LdrUp16' ARMv8A32.LdrUpImm16' ARMv8A32.LdrDownImm16' context.Result' StackFrame' context.Operand1); " is 142.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,LoadZeroExtend8x32,The length of the statement  "			TransformLoadInstruction(context' ARMv8A32.LdrUp8' ARMv8A32.LdrUpImm8' ARMv8A32.LdrDownImm8' context.Result' StackFrame' context.Operand1); " is 139.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,And32,The length of the statement  "			TransformInstruction(context' ARMv8A32.And' ARMv8A32.AndImm' context.Result' StatusRegister.NotSet' context.Operand1' context.Operand2); " is 136.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,Or32,The length of the statement  "			TransformInstruction(context' ARMv8A32.Orr' ARMv8A32.OrrImm' context.Result' StatusRegister.NotSet' context.Operand1' context.Operand2); " is 136.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,Xor32,The length of the statement  "			TransformInstruction(context' ARMv8A32.Eor' ARMv8A32.EorImm' context.Result' StatusRegister.NotSet' context.Operand1' context.Operand2); " is 136.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,ShiftLeft32,The length of the statement  "			TransformInstruction(context' ARMv8A32.Lsl' ARMv8A32.LslImm' context.Result' StatusRegister.NotSet' context.Operand1' context.Operand2); " is 136.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,ShiftRight32,The length of the statement  "			TransformInstruction(context' ARMv8A32.Lsr' ARMv8A32.LsrImm' context.Result' StatusRegister.NotSet' context.Operand1' context.Operand2); " is 136.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,StoreInt16,The length of the statement  "			TransformStoreInstruction(context' ARMv8A32.StrUp16' ARMv8A32.StrUpImm16' ARMv8A32.StrDownImm16' context.Operand1' context.Operand2' context.Operand3); " is 151.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,StoreInt32,The length of the statement  "			TransformStoreInstruction(context' ARMv8A32.StrUp32' ARMv8A32.StrUpImm32' ARMv8A32.StrDownImm32' context.Operand1' context.Operand2' context.Operand3); " is 151.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,StoreInt8,The length of the statement  "			TransformStoreInstruction(context' ARMv8A32.StrUp8' ARMv8A32.StrUpImm8' ARMv8A32.StrDownImm8' context.Operand1' context.Operand2' context.Operand3); " is 148.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,StoreParamInt16,The length of the statement  "			TransformStoreInstruction(context' ARMv8A32.StrUp16' ARMv8A32.StrUpImm16' ARMv8A32.StrDownImm16' StackFrame' context.Operand1' context.Operand2); " is 145.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,StoreParamInt32,The length of the statement  "			TransformStoreInstruction(context' ARMv8A32.StrUp32' ARMv8A32.StrUpImm32' ARMv8A32.StrDownImm32' StackFrame' context.Operand1' context.Operand2); " is 145.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,StoreParamInt8,The length of the statement  "			TransformStoreInstruction(context' ARMv8A32.StrUp8' ARMv8A32.StrUpImm8' ARMv8A32.StrDownImm8' StackFrame' context.Operand1' context.Operand2); " is 142.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,Sub32,The length of the statement  "			TransformInstruction(context' ARMv8A32.Sub' ARMv8A32.SubImm' context.Result' StatusRegister.NotSet' context.Operand1' context.Operand2); " is 136.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,SubCarryOut32,The length of the statement  "			TransformInstruction(context' ARMv8A32.Sub' ARMv8A32.SubImm' context.Result' StatusRegister.Update' context.Operand1' context.Operand2); " is 136.
Long Statement,Mosa.Platform.ARMv8A32.Stages,IRTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\IRTransformationStage.cs,SubCarryIn32,The length of the statement  "			TransformInstruction(context' ARMv8A32.Sub' ARMv8A32.SubImm' context.Result' StatusRegister.NotSet' context.Operand1' context.Operand2); " is 136.
Long Statement,Mosa.Platform.ARMv8A32.Stages,LongOperandStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\LongOperandStage.cs,Add64,The length of the statement  "			TransformInstruction(context.InsertAfter()' ARMv8A32.Adc' ARMv8A32.AdcImm' resultLow' StatusRegister.NotSet' op1H' op2H); " is 121.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,AdcImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AdcImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,AdcRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AdcRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,AddImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AddImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,AddRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AddRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,AndImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AndImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,AndRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AndRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,BicImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\BicImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,BicRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\BicRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,CmnImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmnImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,CmnRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmnRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,CmpImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmpImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,CmpRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmpRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,EorImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\EorImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,EorRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\EorRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,MovImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MovImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,MvnImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MvnImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,MvnRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MvnRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,OrrImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\OrrImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,OrrRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\OrrRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,RsbImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RsbImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,RsbRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RsbRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,RscImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RscImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,RscRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RscRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,SbcImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SbcImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,SbcRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SbcRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,SubImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SubImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,SubRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SubRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,TeqImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TeqImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,TeqRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TeqRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,TstImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TstImmShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant"  is complex.
Complex Conditional,Mosa.Platform.ARMv8A32.Instructions,TstRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TstRegShift.cs,Emit,The conditional expression  "node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant"  is complex.
Magic Number,Mosa.Platform.ARMv8A32,ARMHelper,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\ARMHelper.cs,CalculateRotatedImmediateValue,The following statement contains a magic number: shift = 16;
Magic Number,Mosa.Platform.ARMv8A32,ARMHelper,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\ARMHelper.cs,CalculateRotatedImmediateValue,The following statement contains a magic number: value >>= 16;
Magic Number,Mosa.Platform.ARMv8A32,ARMHelper,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\ARMHelper.cs,CalculateRotatedImmediateValue,The following statement contains a magic number: var r = (value & 0b1) << 31;
Magic Number,Mosa.Platform.ARMv8A32,ARMHelper,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\ARMHelper.cs,CalculateRotatedImmediateValue,The following statement contains a magic number: rotation4 = (byte)(shift / 2);
Magic Number,Mosa.Platform.ARMv8A32,ARMHelper,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\ARMHelper.cs,CalculateRotatedImmediateValue,The following statement contains a magic number: immediate = value | (uint)(rotation4 << 8);
Magic Number,Mosa.Platform.ARMv8A32,ARMHelper,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\ARMHelper.cs,CalculateRotatedImmediateValue,The following statement contains a magic number: ((value & 0xFF) == value) && (shift % 2 == 0)
Magic Number,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,TransformLoadInstruction,The following statement contains a magic number: operand2.ConstantUnsigned64 >= 0 && operand2.ConstantSigned32 <= (1 << 13)
Magic Number,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,TransformStoreInstruction,The following statement contains a magic number: operand2.ConstantUnsigned64 >= 0 && operand2.ConstantSigned32 <= (1 << 13)
Magic Number,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,MoveConstantToRegister,The following statement contains a magic number: before.AppendInstruction(ARMv8A32.MovtImm' v1' CreateConstant(operand.ConstantUnsigned32 >> 16));
Magic Number,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,ConvertFloatToImm,The following statement contains a magic number: switch (value)  				{  					case 0.0f: return CreateConstant(0b1000);  					case 1.0f: return CreateConstant(0b1001);  					case 2.0f: return CreateConstant(0b1010);  					case 3.0f: return CreateConstant(0b1011);  					case 4.0f: return CreateConstant(0b1100);  					case 5.0f: return CreateConstant(0b1101);  					case 0.5f: return CreateConstant(0b1110);  					case 10.0f: return CreateConstant(0b1111);  				}
Magic Number,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,ConvertFloatToImm,The following statement contains a magic number: switch (value)  				{  					case 0.0f: return CreateConstant(0b1000);  					case 1.0f: return CreateConstant(0b1001);  					case 2.0f: return CreateConstant(0b1010);  					case 3.0f: return CreateConstant(0b1011);  					case 4.0f: return CreateConstant(0b1100);  					case 5.0f: return CreateConstant(0b1101);  					case 0.5f: return CreateConstant(0b1110);  					case 10.0f: return CreateConstant(0b1111);  				}
Magic Number,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,ConvertFloatToImm,The following statement contains a magic number: switch (value)  				{  					case 0.0f: return CreateConstant(0b1000);  					case 1.0f: return CreateConstant(0b1001);  					case 2.0f: return CreateConstant(0b1010);  					case 3.0f: return CreateConstant(0b1011);  					case 4.0f: return CreateConstant(0b1100);  					case 5.0f: return CreateConstant(0b1101);  					case 0.5f: return CreateConstant(0b1110);  					case 10.0f: return CreateConstant(0b1111);  				}
Magic Number,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,ConvertFloatToImm,The following statement contains a magic number: switch (value)  				{  					case 0.0f: return CreateConstant(0b1000);  					case 1.0f: return CreateConstant(0b1001);  					case 2.0f: return CreateConstant(0b1010);  					case 3.0f: return CreateConstant(0b1011);  					case 4.0f: return CreateConstant(0b1100);  					case 5.0f: return CreateConstant(0b1101);  					case 0.5f: return CreateConstant(0b1110);  					case 10.0f: return CreateConstant(0b1111);  				}
Magic Number,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,ConvertFloatToImm,The following statement contains a magic number: switch (value)  				{  					case 0.0f: return CreateConstant(0b1000);  					case 1.0f: return CreateConstant(0b1001);  					case 2.0f: return CreateConstant(0b1010);  					case 3.0f: return CreateConstant(0b1011);  					case 4.0f: return CreateConstant(0b1100);  					case 5.0f: return CreateConstant(0b1101);  					case 0.5f: return CreateConstant(0b1110);  					case 10.0f: return CreateConstant(0b1111);  				}
Magic Number,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,ConvertFloatToImm,The following statement contains a magic number: switch (value)  				{  					case 0.0f: return CreateConstant(0b1000);  					case 1.0f: return CreateConstant(0b1001);  					case 2.0f: return CreateConstant(0b1010);  					case 3.0f: return CreateConstant(0b1011);  					case 4.0f: return CreateConstant(0b1100);  					case 5.0f: return CreateConstant(0b1101);  					case 0.5f: return CreateConstant(0b1110);  					case 10.0f: return CreateConstant(0b1111);  				}
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Adc,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Adc.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AdcImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AdcImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AdcImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AdcImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AdcImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AdcImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AdcImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AdcImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AdcRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AdcRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AdcRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AdcRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AdcRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AdcRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Add,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Add.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AddImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AddImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AddImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AddImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AddImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AddImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AddImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AddImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AddRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AddRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AddRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AddRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AddRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AddRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Adf,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Adf.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AdfImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AdfImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,And,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\And.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AndImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AndImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AndImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AndImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AndImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AndImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AndImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AndImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AndRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AndRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AndRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AndRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AndRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AndRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Asr,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Asr.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,AsrImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\AsrImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Bic,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Bic.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,BicImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\BicImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,BicImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\BicImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,BicImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\BicImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,BicImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\BicImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,BicRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\BicRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,BicRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\BicRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,BicRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\BicRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Bkpt,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Bkpt.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Cmn,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Cmn.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmnImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmnImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmnImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmnImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmnImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmnImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmnImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmnImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmnRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmnRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmnRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmnRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmnRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmnRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Cmp,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Cmp.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmpImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmpImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmpImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmpImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmpImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmpImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmpImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmpImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmpRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmpRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmpRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmpRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,CmpRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\CmpRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Dmb,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Dmb.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Dsb,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Dsb.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Dvf,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Dvf.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,DvfImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\DvfImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Dvr,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Dvr.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,DvrImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\DvrImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Eor,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Eor.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,EorImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\EorImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,EorImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\EorImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,EorImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\EorImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,EorImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\EorImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,EorRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\EorRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,EorRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\EorRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,EorRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\EorRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Fdv,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Fdv.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,FdvImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\FdvImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Fml,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Fml.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,FmlImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\FmlImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Frd,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Frd.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,FrdImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\FrdImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Isb,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Isb.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdfDownOffset,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdfDownOffset.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdfUpOffset,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdfUpOffset.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Ldm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Ldm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Ldmfd,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Ldmfd.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Ldmia,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Ldmia.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrDown16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrDown16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrDown32,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrDown32.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrDown8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrDown8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrDownImm16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrDownImm16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrDownImm32,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrDownImm32.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrDownImm8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrDownImm8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrDownImmS16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrDownImmS16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrDownImmS8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrDownImmS8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrDownS16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrDownS16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrDownS8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrDownS8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrUp16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrUp16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrUp32,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrUp32.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrUp8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrUp8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrUpImm16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrUpImm16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrUpImm32,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrUpImm32.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrUpImm8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrUpImm8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrUpImmS16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrUpImmS16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrUpImmS8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrUpImmS8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrUpS16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrUpS16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LdrUpS8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LdrUpS8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Lsl,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Lsl.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LslImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LslImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Lsr,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Lsr.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,LsrImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\LsrImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Mla,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Mla.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Mlal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Mlal.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.ResultCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Mlal,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Mlal.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Mov,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Mov.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MovImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MovImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MovImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MovImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MovImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MovImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MovkImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MovkImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MovRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MovRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MovtImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MovtImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Mrs,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Mrs.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Msr,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Msr.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Muf,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Muf.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MufImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MufImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Mul,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Mul.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Mull,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Mull.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.ResultCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Mull,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Mull.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Mvf,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Mvf.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MvfImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MvfImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Mvn,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Mvn.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MvnImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MvnImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MvnImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MvnImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MvnImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MvnImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MvnImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MvnImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MvnRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MvnRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MvnRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MvnRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,MvnRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\MvnRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Orr,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Orr.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,OrrImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\OrrImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,OrrImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\OrrImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,OrrImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\OrrImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,OrrImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\OrrImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,OrrRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\OrrRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,OrrRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\OrrRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,OrrRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\OrrRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Pop,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Pop.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Push,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Push.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Rev,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Rev.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Rev16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Rev16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Revsh,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Revsh.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Rmf,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Rmf.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RmfImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RmfImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Ror,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Ror.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RorImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RorImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Rsb,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Rsb.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RsbImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RsbImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RsbImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RsbImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RsbImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RsbImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RsbImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RsbImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RsbRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RsbRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RsbRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RsbRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RsbRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RsbRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Rsc,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Rsc.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RscImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RscImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RscImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RscImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RscImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RscImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RscImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RscImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RscRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RscRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RscRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RscRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RscRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RscRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Rsf,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Rsf.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,RsfImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\RsfImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Sbc,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Sbc.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SbcImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SbcImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SbcImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SbcImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SbcImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SbcImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SbcImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SbcImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SbcRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SbcRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SbcRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SbcRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SbcRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SbcRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Sev,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Sev.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StfDown,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StfDown.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StfDownOffset,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StfDownOffset.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StfUp,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StfUp.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StfUpOffset,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StfUpOffset.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Stm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Stm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Stmea,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Stmea.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Stmia,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Stmia.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrDown16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrDown16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrDown32,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrDown32.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrDown8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrDown8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrDownImm16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrDownImm16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrDownImm32,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrDownImm32.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrDownImm32,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrDownImm32.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append4Bits(node.GetOperand(3).Register.RegisterCode);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrDownImm8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrDownImm8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrDownImmS16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrDownImmS16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrDownImmS8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrDownImmS8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrDownS16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrDownS16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrDownS8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrDownS8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrUp16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrUp16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrUp32,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrUp32.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrUp8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrUp8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrUpImm16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrUpImm16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrUpImm32,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrUpImm32.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrUpImm32,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrUpImm32.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append4Bits(node.GetOperand(3).Register.RegisterCode);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrUpImm8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrUpImm8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrUpImmS16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrUpImmS16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrUpImmS8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrUpImmS8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrUpS16,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrUpS16.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,StrUpS8,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\StrUpS8.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Sub,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Sub.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SubImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SubImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SubImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SubImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SubImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SubImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SubImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SubImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SubRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SubRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SubRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SubRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SubRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SubRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Suf,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Suf.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,SufImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\SufImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Svc,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Svc.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Swi,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Swi.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Teq,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Teq.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TeqImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TeqImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TeqImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TeqImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TeqImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TeqImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TeqImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TeqImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TeqRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TeqRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TeqRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TeqRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TeqRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TeqRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Tst,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Tst.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TstImm,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TstImm.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 2);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TstImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TstImmShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TstImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TstImmShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TstImmShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TstImmShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsConstant && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TstRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TstRegShift.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 4);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TstRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TstRegShift.cs,Emit,The following statement contains a magic number: emitter.OpcodeEncoder.Append2BitImmediate(node.GetOperand(3));
Magic Number,Mosa.Platform.ARMv8A32.Instructions,TstRegShift,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\TstRegShift.cs,Emit,The following statement contains a magic number: node.Operand1.IsCPURegister && node.Operand2.IsCPURegister && node.Operand3.IsCPURegister && node.GetOperand(3).IsConstant
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Wfe,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Wfe.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Wfi,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Wfi.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Instructions,Yield,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Instructions\Yield.cs,Emit,The following statement contains a magic number: System.Diagnostics.Debug.Assert(node.OperandCount == 3);
Magic Number,Mosa.Platform.ARMv8A32.Stages,LongOperandStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\Stages\LongOperandStage.cs,Setup,The following statement contains a magic number: Constant4 = CreateConstant(4);
Missing Default,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,ConvertFloatToImm,The following switch statement is missing a default case: switch (value)  				{  					case 0.0f: return CreateConstant(0b1000);  					case 1.0f: return CreateConstant(0b1001);  					case 2.0f: return CreateConstant(0b1010);  					case 3.0f: return CreateConstant(0b1011);  					case 4.0f: return CreateConstant(0b1100);  					case 5.0f: return CreateConstant(0b1101);  					case 0.5f: return CreateConstant(0b1110);  					case 10.0f: return CreateConstant(0b1111);  				}
Missing Default,Mosa.Platform.ARMv8A32,BaseTransformationStage,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Platform.ARMv8A32\BaseTransformationStage.cs,ConvertFloatToImm,The following switch statement is missing a default case: switch (value)  				{  					case 0.0d: return CreateConstant(0b1000);  					case 1.0d: return CreateConstant(0b1001);  					case 2.0d: return CreateConstant(0b1010);  					case 3.0d: return CreateConstant(0b1011);  					case 4.0d: return CreateConstant(0b1100);  					case 5.0d: return CreateConstant(0b1101);  					case 0.5d: return CreateConstant(0b1110);  					case 10.0d: return CreateConstant(0b1111);  				}
