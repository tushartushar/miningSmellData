Implementation smell,Namespace,Class,File,Method,Description
Complex Method,System,Double,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Double.cs,CompareTo,Cyclomatic complexity of the method is 8
Complex Method,System,Single,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Single.cs,CompareTo,Cyclomatic complexity of the method is 8
Complex Method,System,String,C:\repos\mosa_MOSA-Project\Source\Korlib\System\String.cs,TrimHelper,Cyclomatic complexity of the method is 11
Long Parameter List,System.Collections.Generic,List<T>,C:\repos\mosa_MOSA-Project\Source\Korlib\System.Collections.Generic\List.cs,Copy,The method has 5 parameters. Parameters: source' sourceIndex' destination' destinationIndex' size
Long Parameter List,System.Collections.Generic,List<T>,C:\repos\mosa_MOSA-Project\Source\Korlib\System.Collections.Generic\List.cs,Copy,The method has 5 parameters. Parameters: source' sourceIndex' destination' destinationIndex' size
Long Parameter List,System.IO,MemoryStream,C:\repos\mosa_MOSA-Project\Source\Korlib\System.IO\MemoryStream.cs,MemoryStream,The method has 5 parameters. Parameters: buffer' index' count' writable' publiclyVisible
Long Parameter List,System.IO,Stream,C:\repos\mosa_MOSA-Project\Source\Korlib\System.IO\Stream.cs,BeginRead,The method has 5 parameters. Parameters: buffer' offset' count' cback' state
Long Parameter List,System.IO,Stream,C:\repos\mosa_MOSA-Project\Source\Korlib\System.IO\Stream.cs,BeginWrite,The method has 5 parameters. Parameters: buffer' offset' count' cback' state
Long Parameter List,System,Array,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Array.cs,Copy,The method has 6 parameters. Parameters: sourceArray' sourceIndex' destinationArray' destinationIndex' length' reliable
Long Parameter List,System,Array,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Array.cs,Copy,The method has 5 parameters. Parameters: sourceArray' sourceIndex' destinationArray' destinationIndex' length
Long Statement,System,Array,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Array.cs,SetValue,The length of the statement  "				throw new ArgumentException("The number of dimensions in the current Array is not equal to the number of elements in indices."' nameof(indices)); " is 145.
Long Statement,System,Array,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Array.cs,GetValue,The length of the statement  "				throw new ArgumentException("The number of dimensions in the current Array is not equal to the number of elements in indices."' nameof(indices)); " is 145.
Complex Conditional,System,SZGenericArrayEnumerator<T>,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Array.cs,SZGenericArrayEnumerator,The conditional expression  "!((array == null && length == -1) || (array.Rank == 1 || array.GetLowerBound(0) == 0))"  is complex.
Complex Conditional,System,Char,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Char.cs,IsWhiteSpaceLatin1,The conditional expression  "(c == ' ') || (c >= '\x0009' && c <= '\x000d') || c == '\x00a0' || c == '\x0085'"  is complex.
Complex Conditional,System,String,C:\repos\mosa_MOSA-Project\Source\Korlib\System\String.cs,IndexOf,The conditional expression  "(startIndex == 0 && length == 0) || (startIndex == length) || (count == 0)"  is complex.
Magic Number,System.Collections.Generic,List<T>,C:\repos\mosa_MOSA-Project\Source\Korlib\System.Collections.Generic\List.cs,EnsureCapacity,The following statement contains a magic number: if (_items.Length < size)  			{  				var newCapacity = _items.Length == 0 ? _defaultCapacity : _items.Length * 2;  				if (newCapacity < size) newCapacity = size;  				Capacity = newCapacity;  			}
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,Random,The following statement contains a magic number: y = 987654321;
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,Random,The following statement contains a magic number: z = 43219876;
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,Random,The following statement contains a magic number: c = 6543217;
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,JKiss,The following statement contains a magic number: x = 314527869 * x + 1234567;
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,JKiss,The following statement contains a magic number: x = 314527869 * x + 1234567;
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,JKiss,The following statement contains a magic number: y ^= y << 5;
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,JKiss,The following statement contains a magic number: y ^= y >> 7;
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,JKiss,The following statement contains a magic number: y ^= y << 22;
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,JKiss,The following statement contains a magic number: ulong t = ((ulong)4294584393 * z + c);
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,JKiss,The following statement contains a magic number: c = (uint)(t >> 32);
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,Next,The following statement contains a magic number: int mask = random >> 31;
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,NextBytes,The following statement contains a magic number: for (int i = 0; i < (buffer.Length >> 2); i++)  			{  				random = JKiss();  				buffer[p++] = (byte)(random >> 24);  				buffer[p++] = (byte)(random >> 16);  				buffer[p++] = (byte)(random >> 8);  				buffer[p++] = (byte)random;  			}
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,NextBytes,The following statement contains a magic number: for (int i = 0; i < (buffer.Length >> 2); i++)  			{  				random = JKiss();  				buffer[p++] = (byte)(random >> 24);  				buffer[p++] = (byte)(random >> 16);  				buffer[p++] = (byte)(random >> 8);  				buffer[p++] = (byte)random;  			}
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,NextBytes,The following statement contains a magic number: for (int i = 0; i < (buffer.Length >> 2); i++)  			{  				random = JKiss();  				buffer[p++] = (byte)(random >> 24);  				buffer[p++] = (byte)(random >> 16);  				buffer[p++] = (byte)(random >> 8);  				buffer[p++] = (byte)random;  			}
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,NextBytes,The following statement contains a magic number: for (int i = 0; i < (buffer.Length >> 2); i++)  			{  				random = JKiss();  				buffer[p++] = (byte)(random >> 24);  				buffer[p++] = (byte)(random >> 16);  				buffer[p++] = (byte)(random >> 8);  				buffer[p++] = (byte)random;  			}
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,NextBytes,The following statement contains a magic number: while (p < buffer.Length)  			{  				buffer[p++] = (byte)random;  				random >>= 8;  			}
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,Sample,The following statement contains a magic number: uint a = JKiss() >> 6;
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,Sample,The following statement contains a magic number: uint b = JKiss() >> 5;
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,Sample,The following statement contains a magic number: return (a * 134217728.0 + b) / 9007199254740992.0;
Magic Number,System,Random,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Random.cs,Sample,The following statement contains a magic number: return (a * 134217728.0 + b) / 9007199254740992.0;
Magic Number,System,Char,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Char.cs,IsUpper,The following statement contains a magic number: unsafe  			{  				var value = (ushort)c;  				return value >= 65 && value <= 90;  			}
Magic Number,System,Char,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Char.cs,IsUpper,The following statement contains a magic number: unsafe  			{  				var value = (ushort)c;  				return value >= 65 && value <= 90;  			}
Magic Number,System,Char,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Char.cs,IsLower,The following statement contains a magic number: unsafe  			{  				var value = (ushort)c;  				return value >= 97 && value <= 122;  			}
Magic Number,System,Char,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Char.cs,IsLower,The following statement contains a magic number: unsafe  			{  				var value = (ushort)c;  				return value >= 97 && value <= 122;  			}
Magic Number,System,Char,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Char.cs,IsLetter,The following statement contains a magic number: unsafe  			{  				var value = (ushort)c;  				return ((value >= 65 && value <= 90) || (value >= 97 && value <= 122));  			}
Magic Number,System,Char,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Char.cs,IsLetter,The following statement contains a magic number: unsafe  			{  				var value = (ushort)c;  				return ((value >= 65 && value <= 90) || (value >= 97 && value <= 122));  			}
Magic Number,System,Char,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Char.cs,IsLetter,The following statement contains a magic number: unsafe  			{  				var value = (ushort)c;  				return ((value >= 65 && value <= 90) || (value >= 97 && value <= 122));  			}
Magic Number,System,Char,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Char.cs,IsLetter,The following statement contains a magic number: unsafe  			{  				var value = (ushort)c;  				return ((value >= 65 && value <= 90) || (value >= 97 && value <= 122));  			}
Magic Number,System,Char,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Char.cs,IsDigit,The following statement contains a magic number: unsafe  			{  				var value = (ushort)c;  				return (value >= 48 && value <= 57);  			}
Magic Number,System,Char,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Char.cs,IsDigit,The following statement contains a magic number: unsafe  			{  				var value = (ushort)c;  				return (value >= 48 && value <= 57);  			}
Magic Number,System,Char,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Char.cs,ToUpper,The following statement contains a magic number: return (char)(c - 32);
Magic Number,System,Char,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Char.cs,ToLower,The following statement contains a magic number: return (char)(c + 32);
Magic Number,System,Int32,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Int32.cs,CreateString,The following statement contains a magic number: ushort divisor = hex ? (ushort)16 : (ushort)10;
Magic Number,System,Int32,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Int32.cs,CreateString,The following statement contains a magic number: ushort divisor = hex ? (ushort)16 : (ushort)10;
Magic Number,System,Int32,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Int32.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < count; i++)  			{  				uint remainder = uvalue % divisor;    				if (remainder < 10)  					*(chars + offset + count - 1 - i) = (char)('0' + remainder);  				else  					*(chars + offset + count - 1 - i) = (char)('A' + remainder - 10);    				uvalue /= divisor;  			}
Magic Number,System,Int32,C:\repos\mosa_MOSA-Project\Source\Korlib\System\Int32.cs,CreateString,The following statement contains a magic number: for (int i = 0; i < count; i++)  			{  				uint remainder = uvalue % divisor;    				if (remainder < 10)  					*(chars + offset + count - 1 - i) = (char)('0' + remainder);  				else  					*(chars + offset + count - 1 - i) = (char)('A' + remainder - 10);    				uvalue /= divisor;  			}
Magic Number,System,String,C:\repos\mosa_MOSA-Project\Source\Korlib\System\String.cs,ToUpper,The following statement contains a magic number: for (int i = 0; i < length; i++)  			{  				if (self[i] >= 97 && self[i] <= 122)  					*chars = (char)(self[i] - 32);  				else  					*chars = self[i];  				chars++;  			}
Magic Number,System,String,C:\repos\mosa_MOSA-Project\Source\Korlib\System\String.cs,ToUpper,The following statement contains a magic number: for (int i = 0; i < length; i++)  			{  				if (self[i] >= 97 && self[i] <= 122)  					*chars = (char)(self[i] - 32);  				else  					*chars = self[i];  				chars++;  			}
Magic Number,System,String,C:\repos\mosa_MOSA-Project\Source\Korlib\System\String.cs,ToUpper,The following statement contains a magic number: for (int i = 0; i < length; i++)  			{  				if (self[i] >= 97 && self[i] <= 122)  					*chars = (char)(self[i] - 32);  				else  					*chars = self[i];  				chars++;  			}
Magic Number,System,String,C:\repos\mosa_MOSA-Project\Source\Korlib\System\String.cs,ToLower,The following statement contains a magic number: for (int i = 0; i < length; i++)  			{  				if (self[i] >= 65 && self[i] <= 90)  					*chars = (char)(self[i] + 32);  				else  					*chars = self[i];  				chars++;  			}
Magic Number,System,String,C:\repos\mosa_MOSA-Project\Source\Korlib\System\String.cs,ToLower,The following statement contains a magic number: for (int i = 0; i < length; i++)  			{  				if (self[i] >= 65 && self[i] <= 90)  					*chars = (char)(self[i] + 32);  				else  					*chars = self[i];  				chars++;  			}
Magic Number,System,String,C:\repos\mosa_MOSA-Project\Source\Korlib\System\String.cs,ToLower,The following statement contains a magic number: for (int i = 0; i < length; i++)  			{  				if (self[i] >= 65 && self[i] <= 90)  					*chars = (char)(self[i] + 32);  				else  					*chars = self[i];  				chars++;  			}
