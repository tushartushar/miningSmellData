Implementation smell,Namespace,Class,File,Method,Description
Long Method,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The method has 106 lines of code.
Long Method,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The method has 121 lines of code.
Long Method,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The method has 133 lines of code.
Long Method,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The method has 121 lines of code.
Long Method,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The method has 137 lines of code.
Long Method,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The method has 111 lines of code.
Long Method,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The method has 127 lines of code.
Long Method,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The method has 161 lines of code.
Long Method,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The method has 167 lines of code.
Long Method,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The method has 110 lines of code.
Long Method,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The method has 125 lines of code.
Long Parameter List,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,PutChar,The method has 5 parameters. Parameters: x' y' c' colorindex' backgroundindex
Long Statement,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The length of the statement  "            this.tbImage.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 140.
Long Statement,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The length of the statement  "            this.tbQEMU.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 139.
Long Statement,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The length of the statement  "            this.tbBIOSDirectory.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 148.
Long Statement,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,Connect,The length of the statement  "				MessageBox.Show($"Could not connect to '{GDBConnector.ConnectionHost}' on port {GDBConnector.ConnectionPort.ToString()}."); " is 123.
Long Statement,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(MainForm)); " is 128.
Long Statement,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The length of the statement  "            this.dockPanel.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 145.
Long Statement,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The length of the statement  "            this.dockPanel.Font = new System.Drawing.Font("Tahoma"' 11F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.World' ((byte)(0))); " is 143.
Long Statement,Mosa.Tool.GDBDebugger,DebugDockContent,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugDockContent.cs,InitializeComponent,The length of the statement  "			this.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 149.
Long Statement,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Copy to &Clipboard"' new EventHandler(MainForm.OnCopyToClipboard)) { Tag = clickedEntry.Name }); " is 126.
Long Statement,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("&Delete breakpoint"' new EventHandler(MainForm.OnRemoveBreakPoint)) { Tag = clickedEntry.BreakPoint }); " is 133.
Long Statement,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.CellMouseClick += new System.Windows.Forms.DataGridViewCellMouseEventHandler(this.dataGridView1_CellMouseClick); " is 131.
Long Statement,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,treeView1_MouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Copy to &Clipboard"' new EventHandler(MainForm.OnCopyToClipboard)) { Tag = clickedEntry.HexAddress }); " is 132.
Long Statement,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,treeView1_MouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Set &Breakpoint"' new EventHandler(MainForm.OnAddBreakPoint)) { Tag = new AddBreakPointArgs(null' clickedEntry.Address) }); " is 153.
Long Statement,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,InitializeComponent,The length of the statement  "			this.treeView1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 145.
Long Statement,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,PutChar,The length of the statement  "			var background = new SolidBrush(Color.FromArgb(palette[backgroundindex' 1]' palette[backgroundindex' 2]' palette[backgroundindex' 3])); " is 135.
Long Statement,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Copy to &Clipboard"' new EventHandler(MainForm.OnCopyToClipboard)) { Tag = clickedEntry.Address }); " is 129.
Long Statement,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Set &Breakpoint"' new EventHandler(MainForm.OnAddBreakPoint)) { Tag = new AddBreakPointArgs(null' clickedEntry.IP) }); " is 148.
Long Statement,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.CellMouseClick += new System.Windows.Forms.DataGridViewCellMouseEventHandler(this.dataGridView1_CellMouseClick); " is 131.
Long Statement,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Copy to &Clipboard"' new EventHandler(MainForm.OnCopyToClipboard)) { Tag = clickedEntry.Address }); " is 129.
Long Statement,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Set &Breakpoint"' new EventHandler(MainForm.OnAddBreakPoint)) { Tag = new AddBreakPointArgs(null' clickedEntry.IP' clickedEntry.Instruction) }); " is 174.
Long Statement,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.CellMouseClick += new System.Windows.Forms.DataGridViewCellMouseEventHandler(this.dataGridView1_CellMouseClick); " is 131.
Long Statement,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Copy to &Clipboard"' new EventHandler(MainForm.OnCopyToClipboard)) { Tag = clickedEntry.HexValue }); " is 130.
Long Statement,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Add to &Watch List"' new EventHandler(MainForm.OnAddWatch)) { Tag = new AddWatchArgs(null' clickedEntry.Value' 4) }); " is 147.
Long Statement,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Set &Breakpoint"' new EventHandler(MainForm.OnAddBreakPoint)) { Tag = new AddBreakPointArgs(null' clickedEntry.Value) }); " is 151.
Long Statement,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.CellMouseClick += new System.Windows.Forms.DataGridViewCellMouseEventHandler(this.dataGridView1_CellMouseClick); " is 131.
Long Statement,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Copy to &Clipboard"' new EventHandler(MainForm.OnCopyToClipboard)) { Tag = clickedEntry.Address }); " is 129.
Long Statement,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Add to &Watch List"' new EventHandler(MainForm.OnAddWatch)) { Tag = new AddWatchArgs(clickedEntry.Name' clickedEntry.Symbol.Address' clickedEntry.Length) }); " is 187.
Long Statement,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Set &Breakpoint"' new EventHandler(MainForm.OnAddBreakPoint)) { Tag = new AddBreakPointArgs(clickedEntry.Name' clickedEntry.Symbol.Address) }); " is 173.
Long Statement,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.CellMouseClick += new System.Windows.Forms.DataGridViewCellMouseEventHandler(this.dataGridView1_CellMouseClick); " is 131.
Long Statement,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Copy to &Clipboard"' new EventHandler(MainForm.OnCopyToClipboard)) { Tag = clickedEntry.Address }); " is 129.
Long Statement,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The length of the statement  "            dataGridViewCellStyle7.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.CellMouseClick += new System.Windows.Forms.DataGridViewCellMouseEventHandler(this.dataGridView1_CellMouseClick); " is 131.
Long Statement,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ControlView)); " is 131.
Long Statement,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The length of the statement  "			this.DockAreas = ((WeifenLuo.WinFormsUI.Docking.DockAreas)(((((WeifenLuo.WinFormsUI.Docking.DockAreas.Float | WeifenLuo.WinFormsUI.Docking.DockAreas.DockLeft) " is 158.
Long Statement,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The length of the statement  "            this.lbMemory.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 144.
Long Statement,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The length of the statement  "            this.lbMemory.Font = new System.Drawing.Font("Courier New"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 146.
Long Statement,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The length of the statement  "			System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(OutputView)); " is 130.
Long Statement,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The length of the statement  "			this.richTextBox1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 148.
Long Statement,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The length of the statement  "			dataGridViewCellStyle3.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 167.
Long Statement,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The length of the statement  "			this.dataGridView1.RowTemplate.DefaultCellStyle.Font = new System.Drawing.Font("Consolas"' 9F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 177.
Long Statement,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The length of the statement  "			this.Font = new System.Drawing.Font("Microsoft Sans Serif"' 8.25F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 149.
Long Statement,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Copy to &Clipboard"' new EventHandler(MainForm.OnCopyToClipboard)) { Tag = clickedEntry.HexValue }); " is 130.
Long Statement,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Add to &Watch List"' new EventHandler(MainForm.OnAddWatch)) { Tag = new AddWatchArgs(null' clickedEntry.Value' clickedEntry.Size) }); " is 163.
Long Statement,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,dataGridView1_CellMouseClick,The length of the statement  "			m.MenuItems.Add(new MenuItem("Set &Breakpoint"' new EventHandler(MainForm.OnAddBreakPoint)) { Tag = new AddBreakPointArgs(null' clickedEntry.Value) }); " is 151.
Long Statement,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom)  " is 149.
Long Statement,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,InitializeComponent,The length of the statement  "            this.dataGridView1.CellMouseClick += new System.Windows.Forms.DataGridViewCellMouseEventHandler(this.dataGridView1_CellMouseClick); " is 131.
Long Statement,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The length of the statement  "            this.tbInstruction.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 146.
Long Statement,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The length of the statement  "            this.tbMethod.Anchor = ((System.Windows.Forms.AnchorStyles)(((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Left)  " is 141.
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(40' 16);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.label1.Location = new System.Drawing.Point(40' 16);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(70' 13);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.label1.Size = new System.Drawing.Size(70' 13);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbHost.Location = new System.Drawing.Point(111' 12);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbHost.Location = new System.Drawing.Point(111' 12);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbHost.Size = new System.Drawing.Size(137' 20);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbHost.Size = new System.Drawing.Size(137' 20);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(42' 43);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.label2.Location = new System.Drawing.Point(42' 43);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(68' 13);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.label2.Size = new System.Drawing.Size(68' 13);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.label2.TabIndex = 2;
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.numPort.Location = new System.Drawing.Point(111' 39);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.numPort.Location = new System.Drawing.Point(111' 39);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.numPort.Maximum = new decimal(new int[] {              65536'              0'              0'              0});
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.numPort.Size = new System.Drawing.Size(137' 20);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.numPort.Size = new System.Drawing.Size(137' 20);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.numPort.TabIndex = 3;
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.numPort.Value = new decimal(new int[] {              1234'              0'              0'              0});
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnConnect.Location = new System.Drawing.Point(147' 82);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnConnect.Location = new System.Drawing.Point(147' 82);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnConnect.Size = new System.Drawing.Size(101' 26);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnConnect.Size = new System.Drawing.Size(101' 26);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnConnect.TabIndex = 4;
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(40' 82);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(40' 82);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(101' 26);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(101' 26);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.TabIndex = 5;
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(295' 131);
Magic Number,Mosa.Tool.GDBDebugger,ConnectWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\ConnectWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(295' 131);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbImage.Location = new System.Drawing.Point(101' 64);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbImage.Location = new System.Drawing.Point(101' 64);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbImage.Size = new System.Drawing.Size(282' 20);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbImage.Size = new System.Drawing.Size(282' 20);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnImageBrowse.Location = new System.Drawing.Point(20' 62);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnImageBrowse.Location = new System.Drawing.Point(20' 62);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnImageBrowse.Size = new System.Drawing.Size(75' 23);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnImageBrowse.Size = new System.Drawing.Size(75' 23);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnImageBrowse.TabIndex = 2;
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(105' 104);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Location = new System.Drawing.Point(105' 104);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(101' 26);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.Size = new System.Drawing.Size(101' 26);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnCancel.TabIndex = 7;
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnDebug.Location = new System.Drawing.Point(212' 104);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnDebug.Location = new System.Drawing.Point(212' 104);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnDebug.Size = new System.Drawing.Size(101' 26);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnDebug.Size = new System.Drawing.Size(101' 26);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnDebug.TabIndex = 6;
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnQEMU.Location = new System.Drawing.Point(20' 10);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnQEMU.Location = new System.Drawing.Point(20' 10);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnQEMU.Size = new System.Drawing.Size(75' 23);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnQEMU.Size = new System.Drawing.Size(75' 23);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnQEMU.TabIndex = 9;
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbQEMU.Location = new System.Drawing.Point(101' 12);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbQEMU.Location = new System.Drawing.Point(101' 12);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbQEMU.Size = new System.Drawing.Size(282' 20);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbQEMU.Size = new System.Drawing.Size(282' 20);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbQEMU.TabIndex = 8;
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnBIOSDirectory.Location = new System.Drawing.Point(20' 36);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnBIOSDirectory.Location = new System.Drawing.Point(20' 36);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnBIOSDirectory.Size = new System.Drawing.Size(75' 23);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnBIOSDirectory.Size = new System.Drawing.Size(75' 23);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.btnBIOSDirectory.TabIndex = 11;
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbBIOSDirectory.Location = new System.Drawing.Point(101' 38);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbBIOSDirectory.Location = new System.Drawing.Point(101' 38);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbBIOSDirectory.Size = new System.Drawing.Size(282' 20);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbBIOSDirectory.Size = new System.Drawing.Size(282' 20);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.tbBIOSDirectory.TabIndex = 10;
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(403' 140);
Magic Number,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(403' 140);
Magic Number,Mosa.Tool.GDBDebugger,Options,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\Options.cs,Options,The following statement contains a magic number: EmulatorMemoryInMB = 256;
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,MainForm_Load,The following statement contains a magic number: dockPanel.DockTopPortion = 75;
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,MainForm_Load,The following statement contains a magic number: statusView.Show(controlView.PanelPane' DockAlignment.Right' 0.50);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,MainForm_Load,The following statement contains a magic number: watchView.Show(breakPointView.PanelPane' DockAlignment.Right' 0.50);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,MainForm_Load,The following statement contains a magic number: instructionView.Show(symbolView.PanelPane' DockAlignment.Right' 0.35);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,MainForm_Load,The following statement contains a magic number: callStackView.Show(instructionView.PanelPane' DockAlignment.Bottom' 0.25);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,ParseMemoryAddress,The following statement contains a magic number: int digits = 10;
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,ParseMemoryAddress,The following statement contains a magic number: if (where >= 0)  			{  				digits = 16;  				nbr = nbr.Substring(where + 1);  			}
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.dockPanel.Location = new System.Drawing.Point(0' 28);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.dockPanel.Size = new System.Drawing.Size(799' 150);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.dockPanel.Size = new System.Drawing.Size(799' 150);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(799' 25);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(799' 25);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.TabIndex = 28;
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnConnect.Size = new System.Drawing.Size(72' 22);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnConnect.Size = new System.Drawing.Size(72' 22);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnDebugQEMU.Size = new System.Drawing.Size(99' 22);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnDebugQEMU.Size = new System.Drawing.Size(99' 22);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnViewMemory.Size = new System.Drawing.Size(100' 22);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.btnViewMemory.Size = new System.Drawing.Size(100' 22);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Location = new System.Drawing.Point(0' 180);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Size = new System.Drawing.Size(799' 23);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.Size = new System.Drawing.Size(799' 23);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.statusStrip1.TabIndex = 29;
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabel1.Size = new System.Drawing.Size(42' 18);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripStatusLabel1.Size = new System.Drawing.Size(42' 18);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(6' 23);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(6' 23);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(799' 203);
Magic Number,Mosa.Tool.GDBDebugger,MainForm,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\MainForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(799' 203);
Magic Number,Mosa.Tool.GDBDebugger,DebugDockContent,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugDockContent.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(296' 265);
Magic Number,Mosa.Tool.GDBDebugger,DebugDockContent,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugDockContent.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(296' 265);
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.DebugData,LoadDebugData,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugData\LoadDebugData.cs,LoadDebugInfo,The following statement contains a magic number: foreach (var line in lines)  			{  				if (string.IsNullOrWhiteSpace(line))  					continue;    				if (line.StartsWith("["))  				{  					fileSection = line.Trim();  					continue;  				}    				var parts = line.Split('\t');    				switch (fileSection)  				{  					case "[Sections]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var section = new SectionInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Size = parts[2].ToInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(section);  							continue;  						}    					case "[Symbols]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var symbol = new SymbolInfo()  							{  								Address = parts[0].ParseHex()'  								Offset = parts[1].ToUInt32()'  								Length = parts[2].ToUInt32()'  								Kind = parts[3]'  								Name = parts[4]'  							};    							debugSource.Add(symbol);  							continue;  						}    					case "[Types]":  						{  							if (parts[0].StartsWith("TypeDef"))  								continue;    							var type = new TypeInfo()  							{  								DefAddress = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								FullName = parts[2]'  								BaseType = parts[3]'  								DeclaringType = parts[4]'  								ElementType = parts[5]'  							};    							debugSource.Add(type);  							continue;  						}    					case "[Methods]":  						{  							if (parts[0].StartsWith("Address"))  								continue;    							var method = new MethodInfo()  							{  								Address = parts[0].ParseHex()'  								Size = parts[1].ToUInt32()'  								DefAddress = parts[2].ParseHex()'  								FullName = parts[3]'  								ReturnType = parts[4]'  								StackSize = parts[5].ToUInt32()'  								ParameterStackSize = parts[6].ToUInt32()'  								Attributes = parts[7].ToUInt32()'  								Type = parts[8]'  							};    							debugSource.Add(method);  							continue;  						}    					case "[Parameters]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var parameter = new ParameterInfo()  							{  								Index = parts[0].ToUInt32()'  								Offset = parts[1].ToUInt32()'  								FullName = parts[2]'  								Name = parts[3]'  								Type = parts[4]'  								Attributes = parts[5].ToUInt32()'  								Method = parts[6]'  							};    							debugSource.Add(parameter);  							continue;  						}    					case "[Fields]":  						{  							if (parts[0].StartsWith("Index"))  								continue;    							var field = new FieldInfo()  							{  								Index = parts[0].ToUInt32()'  								FullName = parts[1]'  								Name = parts[2]'  								FieldType = parts[3]'  								Address = parts[4].ParseHex()'  								Attributes = parts[5].ToUInt32()'  								Offset = parts[6].ToUInt32()'  								DataLength = parts[7].ToUInt32()'  								DataAddress = parts[8].ParseHex()'  								Type = parts[9]'  							};    							debugSource.Add(field);  							continue;  						}    					default: continue;  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.GDB,BasePlatform,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\GDB\BasePlatform.cs,ToHex,The following statement contains a magic number: switch (size)  			{  				case 1: return "0x" + ((uint)value).ToString("X2");  				case 2: return "0x" + ((uint)value).ToString("X4");  				case 4: return "0x" + ((uint)value).ToString("X8");  				case 8: return "0x" + value.ToString("X16");  				default: return "N/A";  			}
Magic Number,Mosa.Tool.GDBDebugger.GDB,BasePlatform,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\GDB\BasePlatform.cs,ToHex,The following statement contains a magic number: switch (size)  			{  				case 1: return "0x" + ((uint)value).ToString("X2");  				case 2: return "0x" + ((uint)value).ToString("X4");  				case 4: return "0x" + ((uint)value).ToString("X8");  				case 8: return "0x" + value.ToString("X16");  				default: return "N/A";  			}
Magic Number,Mosa.Tool.GDBDebugger.GDB,BasePlatform,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\GDB\BasePlatform.cs,ToHex,The following statement contains a magic number: switch (size)  			{  				case 1: return "0x" + ((uint)value).ToString("X2");  				case 2: return "0x" + ((uint)value).ToString("X4");  				case 4: return "0x" + ((uint)value).ToString("X8");  				case 8: return "0x" + value.ToString("X16");  				default: return "N/A";  			}
Magic Number,Mosa.Tool.GDBDebugger.GDB,Connector,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\GDB\Connector.cs,AddBreakPoint,The following statement contains a magic number: var command = new SetBreakPoint(address' 4' 0);
Magic Number,Mosa.Tool.GDBDebugger.GDB,Connector,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\GDB\Connector.cs,ClearBreakPoint,The following statement contains a magic number: var command = new ClearBreakPoint(address' 4' 0);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,BreakPointView,The following statement contains a magic number: dataGridView1.Columns[1].Width = 400;
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(570' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(570' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.TabIndex = 5;
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(52' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(52' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.tbAddress.MaxLength = 20;
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.tbAddress.Size = new System.Drawing.Size(100' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.tbAddress.Size = new System.Drawing.Size(100' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.btnDeleteAll.Size = new System.Drawing.Size(61' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.btnDeleteAll.Size = new System.Drawing.Size(61' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point(0' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.RowTemplate.Height = 18;
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(570' 187);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(570' 187);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.TabIndex = 6;
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.btnAdd.Size = new System.Drawing.Size(33' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.btnAdd.Size = new System.Drawing.Size(33' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(570' 212);
Magic Number,Mosa.Tool.GDBDebugger.View,BreakPointView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\BreakPointView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(570' 212);
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,OnPause,The following statement contains a magic number: if (ebp != 0)  			{  				MemoryCache.ReadMemory(ebp' 8' OnMemoryRead);  			}
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,ToLong,The following statement contains a magic number: for (int i = 0; i < size; i++)  			{  				ulong shifted = (ulong)(bytes[start + i] << (i * 8));  				value |= shifted;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,UpdateDisplay,The following statement contains a magic number: if (memory.Length < 8)  				return;
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,UpdateDisplay,The following statement contains a magic number: ulong ebp = ToLong(memory' 0' 4);
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,UpdateDisplay,The following statement contains a magic number: ulong ip = ToLong(memory' 4' 4);
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,UpdateDisplay,The following statement contains a magic number: ulong ip = ToLong(memory' 4' 4);
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,UpdateDisplay,The following statement contains a magic number: if (ebp != 0)  			{  				if (treeView1.Nodes.Count > 20)  					return;    				MemoryCache.ReadMemory(ebp' 8' OnMemoryRead);  			}
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,UpdateDisplay,The following statement contains a magic number: if (ebp != 0)  			{  				if (treeView1.Nodes.Count > 20)  					return;    				MemoryCache.ReadMemory(ebp' 8' OnMemoryRead);  			}
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,InitializeComponent,The following statement contains a magic number: this.treeView1.Size = new System.Drawing.Size(221' 160);
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,InitializeComponent,The following statement contains a magic number: this.treeView1.Size = new System.Drawing.Size(221' 160);
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(224' 161);
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(224' 161);
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(10' 10);
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(10' 10);
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,CallStackView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\CallStackView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,DisplayView,The following statement contains a magic number: width = 80;
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,DisplayView,The following statement contains a magic number: height = 25;
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,DisplayView,The following statement contains a magic number: font = new Font("Lucida Console"' 9' FontStyle.Bold);
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,DisplayView,The following statement contains a magic number: fontHeight = (int)font.SizeInPoints + 5;
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,OnPause,The following statement contains a magic number: MemoryCache.ReadMemory(StandardAddressBase' (uint)(width * height * 2)' OnMemoryRead);
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,UpdateDisplay,The following statement contains a magic number: lock (bitmap)  			{  				for (int index = 0; index < memory.Length; index = index + 2)  				{  					int text = memory[index];  					int color = memory[index + 1];    					ushort y = (ushort)((index + offset) / ((uint)width * 2));  					ushort x2 = (ushort)((index + offset) - (y * (uint)width * 2));  					ushort x = (ushort)(x2 >> 1);    					PutChar(x' y' (char)text' (byte)(color & 0x0F)' (byte)(color >> 4));  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,UpdateDisplay,The following statement contains a magic number: lock (bitmap)  			{  				for (int index = 0; index < memory.Length; index = index + 2)  				{  					int text = memory[index];  					int color = memory[index + 1];    					ushort y = (ushort)((index + offset) / ((uint)width * 2));  					ushort x2 = (ushort)((index + offset) - (y * (uint)width * 2));  					ushort x = (ushort)(x2 >> 1);    					PutChar(x' y' (char)text' (byte)(color & 0x0F)' (byte)(color >> 4));  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,UpdateDisplay,The following statement contains a magic number: lock (bitmap)  			{  				for (int index = 0; index < memory.Length; index = index + 2)  				{  					int text = memory[index];  					int color = memory[index + 1];    					ushort y = (ushort)((index + offset) / ((uint)width * 2));  					ushort x2 = (ushort)((index + offset) - (y * (uint)width * 2));  					ushort x = (ushort)(x2 >> 1);    					PutChar(x' y' (char)text' (byte)(color & 0x0F)' (byte)(color >> 4));  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,UpdateDisplay,The following statement contains a magic number: lock (bitmap)  			{  				for (int index = 0; index < memory.Length; index = index + 2)  				{  					int text = memory[index];  					int color = memory[index + 1];    					ushort y = (ushort)((index + offset) / ((uint)width * 2));  					ushort x2 = (ushort)((index + offset) - (y * (uint)width * 2));  					ushort x = (ushort)(x2 >> 1);    					PutChar(x' y' (char)text' (byte)(color & 0x0F)' (byte)(color >> 4));  				}  			}
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,PutChar,The following statement contains a magic number: var color = new SolidBrush(Color.FromArgb(palette[colorindex' 1]' palette[colorindex' 2]' palette[colorindex' 3]));
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,PutChar,The following statement contains a magic number: var color = new SolidBrush(Color.FromArgb(palette[colorindex' 1]' palette[colorindex' 2]' palette[colorindex' 3]));
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,PutChar,The following statement contains a magic number: var background = new SolidBrush(Color.FromArgb(palette[backgroundindex' 1]' palette[backgroundindex' 2]' palette[backgroundindex' 3]));
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,PutChar,The following statement contains a magic number: var background = new SolidBrush(Color.FromArgb(palette[backgroundindex' 1]' palette[backgroundindex' 2]' palette[backgroundindex' 3]));
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,DisplayForm_Paint,The following statement contains a magic number: lock (bitmap)  			{  				e.Graphics.DrawImage(bitmap' 0' 28' bitmap.Width' bitmap.Height);  			}
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(640' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(640' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton1.Size = new System.Drawing.Size(50' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton1.Size = new System.Drawing.Size(50' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(640' 460);
Magic Number,Mosa.Tool.GDBDebugger.View,DisplayView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\DisplayView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(640' 460);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,MethodView,The following statement contains a magic number: dataGridView1.Columns[0].Width = 65;
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,MethodView,The following statement contains a magic number: dataGridView1.Columns[1].Width = 250;
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,Query,The following statement contains a magic number: int MaxMemoryQuery = 1024;
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,MethodView_Resize,The following statement contains a magic number: int width = this.Width - 80;
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,MethodView_Resize,The following statement contains a magic number: if (width < 0)  				width = 50;
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Location = new System.Drawing.Point(0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(804' 28);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(804' 28);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.TabIndex = 4;
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(52' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(52' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point(0' 30);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.RowTemplate.Height = 18;
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(804' 186);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(804' 186);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.TabIndex = 5;
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.tbMethod.Margin = new System.Windows.Forms.Padding(1' 3' 1' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.tbMethod.Margin = new System.Windows.Forms.Padding(1' 3' 1' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.tbMethod.Size = new System.Drawing.Size(200' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.tbMethod.Size = new System.Drawing.Size(200' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(804' 218);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(804' 218);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(235' 200);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(235' 200);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,MethodView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MethodView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InstructionView,The following statement contains a magic number: dataGridView1.Columns[0].Width = 65;
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InstructionView,The following statement contains a magic number: dataGridView1.Columns[1].Width = 250;
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,Query,The following statement contains a magic number: uint bytes = 512;
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Location = new System.Drawing.Point(0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(456' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(456' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.TabIndex = 4;
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(20' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(20' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.tbAddress.MaxLength = 20;
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.tbAddress.Size = new System.Drawing.Size(100' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.tbAddress.Size = new System.Drawing.Size(100' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton1.Size = new System.Drawing.Size(50' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton1.Size = new System.Drawing.Size(50' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point(0' 27);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.RowTemplate.Height = 18;
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(456' 193);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(456' 193);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.TabIndex = 5;
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(456' 222);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(456' 222);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(235' 200);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(235' 200);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,InstructionView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\InstructionView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,StackFrameView,The following statement contains a magic number: dataGridView1.Columns[0].Width = 75;
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,StackFrameView,The following statement contains a magic number: dataGridView1.Columns[1].Width = 75;
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,StackFrameView,The following statement contains a magic number: dataGridView1.Columns[2].Width = 75;
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,StackFrameView,The following statement contains a magic number: dataGridView1.Columns[2].Width = 75;
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,OnPause,The following statement contains a magic number: if (span <= 0)  				span = 4;  			else if (span > 512)  				span = 512;
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,OnPause,The following statement contains a magic number: if (span <= 0)  				span = 4;  			else if (span > 512)  				span = 512;
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,OnPause,The following statement contains a magic number: if (span <= 0)  				span = 4;  			else if (span > 512)  				span = 512;
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,OnPause,The following statement contains a magic number: if (span % 4 != 0)  				span = span + (span % 4);
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,OnPause,The following statement contains a magic number: if (span % 4 != 0)  				span = span + (span % 4);
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,OnPause,The following statement contains a magic number: MemoryCache.ReadMemory(Platform.StackFrame.Value - span' (uint)span + 4' OnMemoryRead);
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,UpdateDisplay,The following statement contains a magic number: uint size = 4;
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,UpdateDisplay,The following statement contains a magic number: for (int i = memory.Length - 4; i > 0; i = i - (int)size)  			{  				ulong value = (ulong)(memory[i] | (memory[i + 1] << 8) | (memory[i + 2] << 16) | (memory[i + 3] << 24));    				var at = address + (ulong)i;    				var entry = new StackEntry()  				{  					Address = BasePlatform.ToHex(at' size)'  					HexValue = BasePlatform.ToHex(value' size)'  					Value = value'  					Offset = Platform.StackFrame.Name.ToUpper() + "-" + (Platform.StackFrame.Value - at).ToString().PadLeft(2' '0')'  					Index = stackentries.Count'  				};    				stackentries.Add(entry);  			}
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,UpdateDisplay,The following statement contains a magic number: for (int i = memory.Length - 4; i > 0; i = i - (int)size)  			{  				ulong value = (ulong)(memory[i] | (memory[i + 1] << 8) | (memory[i + 2] << 16) | (memory[i + 3] << 24));    				var at = address + (ulong)i;    				var entry = new StackEntry()  				{  					Address = BasePlatform.ToHex(at' size)'  					HexValue = BasePlatform.ToHex(value' size)'  					Value = value'  					Offset = Platform.StackFrame.Name.ToUpper() + "-" + (Platform.StackFrame.Value - at).ToString().PadLeft(2' '0')'  					Index = stackentries.Count'  				};    				stackentries.Add(entry);  			}
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,UpdateDisplay,The following statement contains a magic number: for (int i = memory.Length - 4; i > 0; i = i - (int)size)  			{  				ulong value = (ulong)(memory[i] | (memory[i + 1] << 8) | (memory[i + 2] << 16) | (memory[i + 3] << 24));    				var at = address + (ulong)i;    				var entry = new StackEntry()  				{  					Address = BasePlatform.ToHex(at' size)'  					HexValue = BasePlatform.ToHex(value' size)'  					Value = value'  					Offset = Platform.StackFrame.Name.ToUpper() + "-" + (Platform.StackFrame.Value - at).ToString().PadLeft(2' '0')'  					Index = stackentries.Count'  				};    				stackentries.Add(entry);  			}
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,UpdateDisplay,The following statement contains a magic number: for (int i = memory.Length - 4; i > 0; i = i - (int)size)  			{  				ulong value = (ulong)(memory[i] | (memory[i + 1] << 8) | (memory[i + 2] << 16) | (memory[i + 3] << 24));    				var at = address + (ulong)i;    				var entry = new StackEntry()  				{  					Address = BasePlatform.ToHex(at' size)'  					HexValue = BasePlatform.ToHex(value' size)'  					Value = value'  					Offset = Platform.StackFrame.Name.ToUpper() + "-" + (Platform.StackFrame.Value - at).ToString().PadLeft(2' '0')'  					Index = stackentries.Count'  				};    				stackentries.Add(entry);  			}
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,UpdateDisplay,The following statement contains a magic number: for (int i = memory.Length - 4; i > 0; i = i - (int)size)  			{  				ulong value = (ulong)(memory[i] | (memory[i + 1] << 8) | (memory[i + 2] << 16) | (memory[i + 3] << 24));    				var at = address + (ulong)i;    				var entry = new StackEntry()  				{  					Address = BasePlatform.ToHex(at' size)'  					HexValue = BasePlatform.ToHex(value' size)'  					Value = value'  					Offset = Platform.StackFrame.Name.ToUpper() + "-" + (Platform.StackFrame.Value - at).ToString().PadLeft(2' '0')'  					Index = stackentries.Count'  				};    				stackentries.Add(entry);  			}
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,UpdateDisplay,The following statement contains a magic number: for (int i = memory.Length - 4; i > 0; i = i - (int)size)  			{  				ulong value = (ulong)(memory[i] | (memory[i + 1] << 8) | (memory[i + 2] << 16) | (memory[i + 3] << 24));    				var at = address + (ulong)i;    				var entry = new StackEntry()  				{  					Address = BasePlatform.ToHex(at' size)'  					HexValue = BasePlatform.ToHex(value' size)'  					Value = value'  					Offset = Platform.StackFrame.Name.ToUpper() + "-" + (Platform.StackFrame.Value - at).ToString().PadLeft(2' '0')'  					Index = stackentries.Count'  				};    				stackentries.Add(entry);  			}
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,UpdateDisplay,The following statement contains a magic number: for (int i = memory.Length - 4; i > 0; i = i - (int)size)  			{  				ulong value = (ulong)(memory[i] | (memory[i + 1] << 8) | (memory[i + 2] << 16) | (memory[i + 3] << 24));    				var at = address + (ulong)i;    				var entry = new StackEntry()  				{  					Address = BasePlatform.ToHex(at' size)'  					HexValue = BasePlatform.ToHex(value' size)'  					Value = value'  					Offset = Platform.StackFrame.Name.ToUpper() + "-" + (Platform.StackFrame.Value - at).ToString().PadLeft(2' '0')'  					Index = stackentries.Count'  				};    				stackentries.Add(entry);  			}
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,dataGridView1_CellMouseClick,The following statement contains a magic number: m.MenuItems.Add(new MenuItem("Add to &Watch List"' new EventHandler(MainForm.OnAddWatch)) { Tag = new AddWatchArgs(null' clickedEntry.Value' 4) });
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point(0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.RowTemplate.Height = 18;
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(219' 157);
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(219' 157);
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.TabIndex = 3;
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(219' 161);
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(219' 161);
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(235' 200);
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(235' 200);
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,StackFrameView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StackFrameView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,SymbolView,The following statement contains a magic number: dataGridView1.Columns[0].Width = 65;
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,SymbolView,The following statement contains a magic number: dataGridView1.Columns[1].Width = 450;
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,CreateEntries,The following statement contains a magic number: if (filter.Length < 3)  				return;
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,CreateEntries,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 1: start = 1; end = 1; break;  				case 2: start = 2; end = 2; break;  				case 3: start = 4; end = 4; break;  				case 4: start = 8; end = 8; break;  				default: break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,CreateEntries,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 1: start = 1; end = 1; break;  				case 2: start = 2; end = 2; break;  				case 3: start = 4; end = 4; break;  				case 4: start = 8; end = 8; break;  				default: break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,CreateEntries,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 1: start = 1; end = 1; break;  				case 2: start = 2; end = 2; break;  				case 3: start = 4; end = 4; break;  				case 4: start = 8; end = 8; break;  				default: break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,CreateEntries,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 1: start = 1; end = 1; break;  				case 2: start = 2; end = 2; break;  				case 3: start = 4; end = 4; break;  				case 4: start = 8; end = 8; break;  				default: break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,CreateEntries,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 1: start = 1; end = 1; break;  				case 2: start = 2; end = 2; break;  				case 3: start = 4; end = 4; break;  				case 4: start = 8; end = 8; break;  				default: break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,CreateEntries,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 1: start = 1; end = 1; break;  				case 2: start = 2; end = 2; break;  				case 3: start = 4; end = 4; break;  				case 4: start = 8; end = 8; break;  				default: break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,CreateEntries,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 1: start = 1; end = 1; break;  				case 2: start = 2; end = 2; break;  				case 3: start = 4; end = 4; break;  				case 4: start = 8; end = 8; break;  				default: break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,CreateEntries,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 1: start = 1; end = 1; break;  				case 2: start = 2; end = 2; break;  				case 3: start = 4; end = 4; break;  				case 4: start = 8; end = 8; break;  				default: break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,CreateEntries,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 1: start = 1; end = 1; break;  				case 2: start = 2; end = 2; break;  				case 3: start = 4; end = 4; break;  				case 4: start = 8; end = 8; break;  				default: break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point(0' 28);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.RowTemplate.Height = 18;
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(890' 232);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(890' 232);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.TabIndex = 2;
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(890' 28);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(890' 28);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.TabIndex = 5;
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(36' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(36' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 28);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 28);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel2.Size = new System.Drawing.Size(90' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel2.Size = new System.Drawing.Size(90' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripTextBox1.Margin = new System.Windows.Forms.Padding(1' 3' 1' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripTextBox1.Margin = new System.Windows.Forms.Padding(1' 3' 1' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripTextBox1.Size = new System.Drawing.Size(200' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripTextBox1.Size = new System.Drawing.Size(200' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel4.Size = new System.Drawing.Size(47' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel4.Size = new System.Drawing.Size(47' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.cbLength.Size = new System.Drawing.Size(75' 28);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.cbLength.Size = new System.Drawing.Size(75' 28);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel3.Size = new System.Drawing.Size(76' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel3.Size = new System.Drawing.Size(76' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.cbKind.Size = new System.Drawing.Size(75' 28);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.cbKind.Size = new System.Drawing.Size(75' 28);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(890' 260);
Magic Number,Mosa.Tool.GDBDebugger.View,SymbolView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\SymbolView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(890' 260);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,WatchView,The following statement contains a magic number: dataGridView1.Columns[0].Width = 65;
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,WatchView,The following statement contains a magic number: dataGridView1.Columns[1].Width = 250;
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,WatchView,The following statement contains a magic number: cbLength.SelectedIndex = 2;
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,ToLong,The following statement contains a magic number: for (int i = 0; i < bytes.Length; i++)  			{  				ulong shifted = (ulong)(bytes[i] << (i * 8));  				value |= shifted;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,btnAdd_Click,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 0: size = 1; break;  				case 1: size = 2; break;  				case 2: size = 4; break;  				case 3: size = 8; break;  				default: size = 4; break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,btnAdd_Click,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 0: size = 1; break;  				case 1: size = 2; break;  				case 2: size = 4; break;  				case 3: size = 8; break;  				default: size = 4; break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,btnAdd_Click,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 0: size = 1; break;  				case 1: size = 2; break;  				case 2: size = 4; break;  				case 3: size = 8; break;  				default: size = 4; break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,btnAdd_Click,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 0: size = 1; break;  				case 1: size = 2; break;  				case 2: size = 4; break;  				case 3: size = 8; break;  				default: size = 4; break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,btnAdd_Click,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 0: size = 1; break;  				case 1: size = 2; break;  				case 2: size = 4; break;  				case 3: size = 8; break;  				default: size = 4; break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,btnAdd_Click,The following statement contains a magic number: switch (cbLength.SelectedIndex)  			{  				case 0: size = 1; break;  				case 1: size = 2; break;  				case 2: size = 4; break;  				case 3: size = 8; break;  				default: size = 4; break;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Location = new System.Drawing.Point(0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(624' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(624' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.TabIndex = 6;
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(52' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(52' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.tbAddress.MaxLength = 20;
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.tbAddress.Size = new System.Drawing.Size(100' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.tbAddress.Size = new System.Drawing.Size(100' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel4.Size = new System.Drawing.Size(30' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel4.Size = new System.Drawing.Size(30' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.cbLength.Size = new System.Drawing.Size(75' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.cbLength.Size = new System.Drawing.Size(75' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.btnAdd.Size = new System.Drawing.Size(33' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.btnAdd.Size = new System.Drawing.Size(33' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator2.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.btnDeleteAll.Size = new System.Drawing.Size(61' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.btnDeleteAll.Size = new System.Drawing.Size(61' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point(0' 27);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.RowTemplate.Height = 18;
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(624' 176);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(624' 176);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.TabIndex = 7;
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(624' 205);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(624' 205);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(100' 20);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(100' 20);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,WatchView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\WatchView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnPause.Location = new System.Drawing.Point(167' 5);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnPause.Location = new System.Drawing.Point(167' 5);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnPause.Size = new System.Drawing.Size(80' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnPause.Size = new System.Drawing.Size(80' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnPause.TabIndex = 25;
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStart.Location = new System.Drawing.Point(86' 5);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStart.Location = new System.Drawing.Point(86' 5);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStart.Size = new System.Drawing.Size(80' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStart.Size = new System.Drawing.Size(80' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStart.TabIndex = 24;
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnRestart.Location = new System.Drawing.Point(5' 5);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnRestart.Location = new System.Drawing.Point(5' 5);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnRestart.Size = new System.Drawing.Size(80' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnRestart.Size = new System.Drawing.Size(80' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnRestart.TabIndex = 23;
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStepN.Location = new System.Drawing.Point(329' 5);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStepN.Location = new System.Drawing.Point(329' 5);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStepN.Size = new System.Drawing.Size(80' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStepN.Size = new System.Drawing.Size(80' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStepN.TabIndex = 22;
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.tbSteps.Location = new System.Drawing.Point(415' 7);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.tbSteps.Location = new System.Drawing.Point(415' 7);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.tbSteps.Size = new System.Drawing.Size(55' 20);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.tbSteps.Size = new System.Drawing.Size(55' 20);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.tbSteps.TabIndex = 20;
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStep.Location = new System.Drawing.Point(248' 5);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStep.Location = new System.Drawing.Point(248' 5);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStep.Size = new System.Drawing.Size(80' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.btnStep.Size = new System.Drawing.Size(80' 23);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(477' 36);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(477' 36);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(0' 75);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,ControlView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\ControlView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,Query,The following statement contains a magic number: Columns = (lbMemory.Width - 100) / ((int)lbMemory.Font.Size * 3);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,Query,The following statement contains a magic number: Columns = (lbMemory.Width - 100) / ((int)lbMemory.Font.Size * 3);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,Query,The following statement contains a magic number: Rows = lbMemory.Height / (lbMemory.Font.Height + 2);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,UpdateDisplay,The following statement contains a magic number: for (int line = 0; line < Rows; line++)  			{  				string l = at.ToString("X").PadLeft(8' '0') + ':';  				string d = string.Empty;    				for (int x = 0; x < Columns; x++)  				{  					int index = (line * Columns) + x;    					if (index >= memory.Length)  						break;    					byte mem = memory[index];    					if (x % 4 == 0)  						l += ' ';    					l += mem.ToString("X").PadLeft(2' '0');    					var b = (char)mem;    					d += (char.IsLetterOrDigit(b) ? b : '.');    					at++;  				}    				newlines[line] = l + ' ' + d;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,UpdateDisplay,The following statement contains a magic number: for (int line = 0; line < Rows; line++)  			{  				string l = at.ToString("X").PadLeft(8' '0') + ':';  				string d = string.Empty;    				for (int x = 0; x < Columns; x++)  				{  					int index = (line * Columns) + x;    					if (index >= memory.Length)  						break;    					byte mem = memory[index];    					if (x % 4 == 0)  						l += ' ';    					l += mem.ToString("X").PadLeft(2' '0');    					var b = (char)mem;    					d += (char.IsLetterOrDigit(b) ? b : '.');    					at++;  				}    				newlines[line] = l + ' ' + d;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,UpdateDisplay,The following statement contains a magic number: for (int line = 0; line < Rows; line++)  			{  				string l = at.ToString("X").PadLeft(8' '0') + ':';  				string d = string.Empty;    				for (int x = 0; x < Columns; x++)  				{  					int index = (line * Columns) + x;    					if (index >= memory.Length)  						break;    					byte mem = memory[index];    					if (x % 4 == 0)  						l += ' ';    					l += mem.ToString("X").PadLeft(2' '0');    					var b = (char)mem;    					d += (char.IsLetterOrDigit(b) ? b : '.');    					at++;  				}    				newlines[line] = l + ' ' + d;  			}
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.ImageScalingSize = new System.Drawing.Size(24' 24);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(524' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(524' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(52' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripLabel1.Size = new System.Drawing.Size(52' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.tbAddress.MaxLength = 20;
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.tbAddress.Size = new System.Drawing.Size(100' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.tbAddress.Size = new System.Drawing.Size(100' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripSeparator1.Size = new System.Drawing.Size(6' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton1.Size = new System.Drawing.Size(50' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton1.Size = new System.Drawing.Size(50' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.lbMemory.Location = new System.Drawing.Point(0' 28);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.lbMemory.Size = new System.Drawing.Size(524' 366);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.lbMemory.Size = new System.Drawing.Size(524' 366);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(524' 395);
Magic Number,Mosa.Tool.GDBDebugger.View,MemoryView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\MemoryView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(524' 395);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.richTextBox1.Location = new System.Drawing.Point(0' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.richTextBox1.Size = new System.Drawing.Size(890' 235);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.richTextBox1.Size = new System.Drawing.Size(890' 235);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.richTextBox1.TabIndex = 6;
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Location = new System.Drawing.Point(0' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.RowTemplate.Height = 18;
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(890' 235);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(890' 235);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.TabIndex = 2;
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(890' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.Size = new System.Drawing.Size(890' 25);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.toolStrip1.TabIndex = 5;
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton1.Size = new System.Drawing.Size(54' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton1.Size = new System.Drawing.Size(54' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton2.Size = new System.Drawing.Size(51' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.toolStripButton2.Size = new System.Drawing.Size(51' 22);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(890' 260);
Magic Number,Mosa.Tool.GDBDebugger.View,OutputView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\OutputView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(890' 260);
Magic Number,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,RegisterView,The following statement contains a magic number: dataGridView1.Columns[0].Width = 75;
Magic Number,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,RegisterView,The following statement contains a magic number: dataGridView1.Columns[1].Width = 75;
Magic Number,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,RegisterView,The following statement contains a magic number: dataGridView1.Columns[2].Width = 75;
Magic Number,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,RegisterView,The following statement contains a magic number: dataGridView1.Columns[2].Width = 75;
Magic Number,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.RowTemplate.Height = 18;
Magic Number,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(219' 159);
Magic Number,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,InitializeComponent,The following statement contains a magic number: this.dataGridView1.Size = new System.Drawing.Size(219' 159);
Magic Number,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(219' 161);
Magic Number,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(219' 161);
Magic Number,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(235' 200);
Magic Number,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(235' 200);
Magic Number,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,RegisterView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\RegisterView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,OnPause,The following statement contains a magic number: MemoryCache.ReadMemory(Platform.InstructionPointer.Value' 16' OnMemoryRead);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbInstruction.Location = new System.Drawing.Point(118' 8);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbInstruction.Location = new System.Drawing.Point(118' 8);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbInstruction.Size = new System.Drawing.Size(280' 20);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbInstruction.Size = new System.Drawing.Size(280' 20);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbInstruction.TabIndex = 27;
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point(3' 35);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.label8.Location = new System.Drawing.Point(3' 35);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size(46' 13);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.label8.Size = new System.Drawing.Size(46' 13);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.label8.TabIndex = 26;
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbIP.Location = new System.Drawing.Point(25' 8);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbIP.Location = new System.Drawing.Point(25' 8);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbIP.Size = new System.Drawing.Size(87' 20);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbIP.Size = new System.Drawing.Size(87' 20);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbIP.TabIndex = 30;
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(3' 11);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.label3.Location = new System.Drawing.Point(3' 11);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(20' 13);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.label3.Size = new System.Drawing.Size(20' 13);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.label3.TabIndex = 33;
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbMethod.Location = new System.Drawing.Point(55' 32);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbMethod.Location = new System.Drawing.Point(55' 32);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbMethod.Size = new System.Drawing.Size(343' 20);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbMethod.Size = new System.Drawing.Size(343' 20);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.tbMethod.TabIndex = 34;
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(408' 65);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(408' 65);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(100' 50);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.MinimumSize = new System.Drawing.Size(100' 50);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Magic Number,Mosa.Tool.GDBDebugger.View,StatusView,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\View\StatusView.cs,InitializeComponent,The following statement contains a magic number: this.Padding = new System.Windows.Forms.Padding(0' 2' 0' 2);
Missing Default,Mosa.Tool.GDBDebugger,DebugQemuWindow,C:\repos\mosa_MOSA-Project\Source\Mosa.Tool.GDBDebugger\DebugQemuWindow.cs,GetFormat,The following switch statement is missing a default case: switch (extension.ToLower())  			{  				case ".img":  					return ImageFormat.IMG;    				case ".iso":  					return ImageFormat.ISO;  			}
