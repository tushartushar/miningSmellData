Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,Setup,Cyclomatic complexity of the method is 10
Complex Method,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,ReservePages,Cyclomatic complexity of the method is 8
Complex Method,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,Cyclomatic complexity of the method is 10
Magic Number,Mosa.Kernel.BareMetal,Console,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\Console.cs,SetForground,The following statement contains a magic number: Write((byte)((byte)'0' + (byte)(color) % 10));
Magic Number,Mosa.Kernel.BareMetal,Console,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\Console.cs,SetBackground,The following statement contains a magic number: Write((byte)((byte)'0' + (byte)(color) % 10));
Magic Number,Mosa.Kernel.BareMetal,Page,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\Page.cs,ClearPage,The following statement contains a magic number: uint writes = Size / 8;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,Setup,The following statement contains a magic number: var bitMapCount = TotalPages / (Page.Size * 8);
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: var indexShift = (Pointer.Size == 4) ? 10 : 9;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: var indexShift = (Pointer.Size == 4) ? 10 : 9;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: var indexShift = (Pointer.Size == 4) ? 10 : 9;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: var offset = (uint)((index & maskOffIndex) >> 6);
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: at += 64;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: count -= 64;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: at % 64 == 0 && count >= 64
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,SetPageBitMapEntry,The following statement contains a magic number: at % 64 == 0 && count >= 64
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: var indexShift = (Pointer.Size == 4) ? 10 : 9;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: var indexShift = (Pointer.Size == 4) ? 10 : 9;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: var indexShift = (Pointer.Size == 4) ? 10 : 9;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: var offset = (uint)((index & maskOffIndex) >> 6);
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: restartAt = at + 64;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: at += 64;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: count -= 64;
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: at % 64 == 0 && count >= 64
Magic Number,Mosa.Kernel.BareMetal,PhysicalPageAllocator,C:\research\architectureSmells\repos\mosa_MOSA-Project\Source\Mosa.Kernel.BareMetal\PhysicalPageAllocator.cs,CheckFreePage,The following statement contains a magic number: at % 64 == 0 && count >= 64
