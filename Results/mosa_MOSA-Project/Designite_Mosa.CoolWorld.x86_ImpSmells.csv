Implementation smell,Namespace,Class,File,Method,Description
Long Method,Mosa.CoolWorld.x86,Boot,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Boot.cs,Main,The method has 131 lines of code.
Complex Method,Mosa.CoolWorld.x86,Boot,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Boot.cs,Main,Cyclomatic complexity of the method is 12
Long Parameter List,Mosa.AppSystem,AppManager,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppManager.cs,StartApp,The method has 5 parameters. Parameters: app' input' output' enableEcho' parameters
Long Statement,Mosa.Application,Mem,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.Application\Mem.cs,Start,The length of the statement  "			Console.Write(((PageFrameAllocator.TotalPages - PageFrameAllocator.TotalPagesInUse) * PageFrameAllocator.PageSize / (1024 * 1024)).ToString()); " is 143.
Long Statement,Mosa.AppSystem,AppManager,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppManager.cs,ProcessInterrupt,The length of the statement  "			debug.Write((PageFrameAllocator.TotalPages - PageFrameAllocator.TotalPagesInUse) * PageFrameAllocator.PageSize / (1024 * 1024)); " is 128.
Long Statement,Mosa.CoolWorld.x86,Boot,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Boot.cs,Main,The length of the statement  "				InBrackets(device.Name + ": " + pciDevice.VendorID.ToString("x") + ":" + pciDevice.DeviceID.ToString("x") + " " + pciDevice.SubSystemID.ToString("x") + ":" + pciDevice.SubVendorID.ToString("x") + " (" + pciDevice.Function.ToString("x") + ":" + pciDevice.ClassCode.ToString("x") + ":" + pciDevice.SubClassCode.ToString("x") + ":" + pciDevice.ProgIF.ToString("x") + ":" + pciDevice.RevisionID.ToString("x") + ")"' Kernel.x86.Color.White' Kernel.x86.Color.LightGreen); " is 465.
Long Statement,Mosa.CoolWorld.x86,Boot,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Boot.cs,ProcessInterrupt,The length of the statement  "			Console.Write((PageFrameAllocator.TotalPages - PageFrameAllocator.TotalPagesInUse) * PageFrameAllocator.PageSize / (1024 * 1024)); " is 130.
Magic Number,Mosa.CoolWorld.x86.HAL,Hardware,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\HAL\Hardware.cs,RequestPhysicalMemory,The following statement contains a magic number: for (uint at = address; at < address + size; at += 4096)  			{  				PageTable.MapVirtualAddressToPhysical(at' at);  			}
Magic Number,Mosa.Application,Mem,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.Application\Mem.cs,Start,The following statement contains a magic number: Console.Write(((PageFrameAllocator.TotalPages - PageFrameAllocator.TotalPagesInUse) * PageFrameAllocator.PageSize / (1024 * 1024)).ToString());
Magic Number,Mosa.Application,Mem,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.Application\Mem.cs,Start,The following statement contains a magic number: Console.Write(((PageFrameAllocator.TotalPages - PageFrameAllocator.TotalPagesInUse) * PageFrameAllocator.PageSize / (1024 * 1024)).ToString());
Magic Number,Mosa.AppSystem,AppOutputStream,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppOutputStream.cs,WriteByte,The following statement contains a magic number: if (value == 10)  			{  				Session.WriteLine();  				return;  			}  			else if (value == 12)  			{  				Session.Clear();  				return;  			}  			else if (value == 8)  			{  				if (Session.Column > 0)  				{  					Session.Column--;  					Session.Write(' '); // bug: doesn't work on last column  					Session.Column--;  				}  			}  			else  			{  				Session.Write((char)value);  			}
Magic Number,Mosa.AppSystem,AppOutputStream,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppOutputStream.cs,WriteByte,The following statement contains a magic number: if (value == 10)  			{  				Session.WriteLine();  				return;  			}  			else if (value == 12)  			{  				Session.Clear();  				return;  			}  			else if (value == 8)  			{  				if (Session.Column > 0)  				{  					Session.Column--;  					Session.Write(' '); // bug: doesn't work on last column  					Session.Column--;  				}  			}  			else  			{  				Session.Write((char)value);  			}
Magic Number,Mosa.AppSystem,AppOutputStream,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppOutputStream.cs,WriteByte,The following statement contains a magic number: if (value == 10)  			{  				Session.WriteLine();  				return;  			}  			else if (value == 12)  			{  				Session.Clear();  				return;  			}  			else if (value == 8)  			{  				if (Session.Column > 0)  				{  					Session.Column--;  					Session.Write(' '); // bug: doesn't work on last column  					Session.Column--;  				}  			}  			else  			{  				Session.Write((char)value);  			}
Magic Number,Mosa.AppSystem,AppConsole,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppConsole.cs,ConvertToByte,The following statement contains a magic number: if (c == '\n')  				return 10;  			else  				return (byte)c;
Magic Number,Mosa.AppSystem,AppConsole,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppConsole.cs,ClearScreen,The following statement contains a magic number: Output.WriteByte(10);
Magic Number,Mosa.AppSystem,AppConsole,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppConsole.cs,AddToBuffer,The following statement contains a magic number: if (buffer == null)  			{  				buffer = new char[16];  				bufferlen = 0;  			}  			else if (bufferlen + 1 == buffer.Length)  			{  				var tmp = buffer;    				buffer = new char[bufferlen >> 2];    				for (int i = 0; i < bufferlen; i++)  				{  					buffer[i] = tmp[i];  				}  			}
Magic Number,Mosa.AppSystem,AppConsole,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppConsole.cs,AddToBuffer,The following statement contains a magic number: if (buffer == null)  			{  				buffer = new char[16];  				bufferlen = 0;  			}  			else if (bufferlen + 1 == buffer.Length)  			{  				var tmp = buffer;    				buffer = new char[bufferlen >> 2];    				for (int i = 0; i < bufferlen; i++)  				{  					buffer[i] = tmp[i];  				}  			}
Magic Number,Mosa.AppSystem,AppManager,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppManager.cs,ProcessInterrupt,The following statement contains a magic number: debug.Row = 24;
Magic Number,Mosa.AppSystem,AppManager,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppManager.cs,ProcessInterrupt,The following statement contains a magic number: debug.Write(tick' 10' 7);
Magic Number,Mosa.AppSystem,AppManager,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppManager.cs,ProcessInterrupt,The following statement contains a magic number: debug.Write(tick' 10' 7);
Magic Number,Mosa.AppSystem,AppManager,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppManager.cs,ProcessInterrupt,The following statement contains a magic number: debug.Write((PageFrameAllocator.TotalPages - PageFrameAllocator.TotalPagesInUse) * PageFrameAllocator.PageSize / (1024 * 1024));
Magic Number,Mosa.AppSystem,AppManager,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppManager.cs,ProcessInterrupt,The following statement contains a magic number: debug.Write((PageFrameAllocator.TotalPages - PageFrameAllocator.TotalPagesInUse) * PageFrameAllocator.PageSize / (1024 * 1024));
Magic Number,Mosa.AppSystem,AppManager,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppManager.cs,DumpStackTrace,The following statement contains a magic number: while (true)  			{  				var methodDef = Mosa.Runtime.x86.Internal.GetMethodDefinitionFromStackFrameDepth(depth);    				if (methodDef == null)  					return;    				string caller = methodDef->Name;    				if (caller == null)  					return;    				Mosa.Kernel.x86.ConsoleManager.Controller.Debug.Write(depth' 10' 2);  				Mosa.Kernel.x86.ConsoleManager.Controller.Debug.Write(":");  				Mosa.Kernel.x86.ConsoleManager.Controller.Debug.WriteLine(caller);    				depth++;  			}
Magic Number,Mosa.AppSystem,AppManager,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppManager.cs,DumpStackTrace,The following statement contains a magic number: while (true)  			{  				var methodDef = Mosa.Runtime.x86.Internal.GetMethodDefinitionFromStackFrameDepth(depth);    				if (methodDef == null)  					return;    				string caller = methodDef->Name;    				if (caller == null)  					return;    				Mosa.Kernel.x86.ConsoleManager.Controller.Debug.Write(depth' 10' 2);  				Mosa.Kernel.x86.ConsoleManager.Controller.Debug.Write(":");  				Mosa.Kernel.x86.ConsoleManager.Controller.Debug.WriteLine(caller);    				depth++;  			}
Magic Number,Mosa.AppSystem,AppInputStream,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Mosa.AppSystem\AppInputStream.cs,AppInputStream,The following statement contains a magic number: buffer = new byte[1024];
Magic Number,Mosa.CoolWorld.x86,Boot,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Boot.cs,Main,The following statement contains a magic number: Console.ScrollRow = 23;
Magic Number,Mosa.CoolWorld.x86,Boot,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Boot.cs,FillLine,The following statement contains a magic number: for (uint c = 80 - Console.Column; c != 0; c--)  			{  				Console.Write(' ');  			}
Magic Number,Mosa.CoolWorld.x86,Boot,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Boot.cs,ProcessInterrupt,The following statement contains a magic number: Console.Row = 24;
Magic Number,Mosa.CoolWorld.x86,Boot,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Boot.cs,ProcessInterrupt,The following statement contains a magic number: Console.Write(tick' 10' 7);
Magic Number,Mosa.CoolWorld.x86,Boot,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Boot.cs,ProcessInterrupt,The following statement contains a magic number: Console.Write(tick' 10' 7);
Magic Number,Mosa.CoolWorld.x86,Boot,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Boot.cs,ProcessInterrupt,The following statement contains a magic number: Console.Write((PageFrameAllocator.TotalPages - PageFrameAllocator.TotalPagesInUse) * PageFrameAllocator.PageSize / (1024 * 1024));
Magic Number,Mosa.CoolWorld.x86,Boot,C:\repos\mosa_MOSA-Project\Source\Mosa.CoolWorld.x86\Boot.cs,ProcessInterrupt,The following statement contains a magic number: Console.Write((PageFrameAllocator.TotalPages - PageFrameAllocator.TotalPagesInUse) * PageFrameAllocator.PageSize / (1024 * 1024));
