Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Anna.Request,Request,F:\newReposMay17\Anna-Rx_Anna\Anna\Request\Request.cs,GetBody,The length of the statement  "	return Observable.FromAsyncPattern<byte[]' int' int' int> (InputStream.BeginRead' InputStream.EndRead) (buffer' 0' bufferSize).Select (bytesRead => ContentEncoding.GetString (buffer' 0' bytesRead)); " is 198.
Long Statement,Anna.Responses,BinaryResponse,F:\newReposMay17\Anna-Rx_Anna\Anna\Responses\BinaryResponse.cs,WriteStream,The length of the statement  "	return Observable.FromAsyncPattern<byte[]' int' int> (stream.BeginWrite' stream.EndWrite) (binary' 0' binary.Length).Select (u => stream); " is 138.
Long Statement,Anna.Responses,StaticFileResponse,F:\newReposMay17\Anna-Rx_Anna\Anna\Responses\StaticFileResponse.cs,WriteStream,The length of the statement  "	return Observable.Create<Stream> (obs => new ObservableFromFile (file' chunkSize).Subscribe (b => writer (b' 0' b.Length)' obs.OnError' () => { " is 143.
Long Statement,Anna,HttpServer,F:\newReposMay17\Anna-Rx_Anna\Anna\HttpServer.cs,ObservableHttpContext,The length of the statement  "	var observableHttpContext = Observable.Create<RequestContext> (obs => Observable.FromAsyncPattern<HttpListenerContext> (listener.BeginGetContext' listener.EndGetContext) ().Select (c => new RequestContext (c.Request' c.Response)).Subscribe (obs)).Repeat ().Retry ().Publish ().RefCount ().ObserveOn (scheduler); " is 311.
Long Statement,Anna,HttpServer,F:\newReposMay17\Anna-Rx_Anna\Anna\HttpServer.cs,OnUriAndMethod,The length of the statement  "	return Observable.Create<RequestContext> (obs => stream.Subscribe (ctx => OnUriAndMethodHandler (ctx' method' uriTemplate' obs)' obs.OnError' obs.OnCompleted)); " is 160.
Empty Catch Block,Anna.Responses,Response,F:\newReposMay17\Anna-Rx_Anna\Anna\Responses\Response.cs,Send,The method has an empty catch block.
Magic Number,Anna.Responses,Response,F:\newReposMay17\Anna-Rx_Anna\Anna\Responses\Response.cs,Send,The following statement contains a magic number: WriteStream (listenerResponse.OutputStream).Subscribe (s => {  	try {  		s.Close ();  	} catch (HttpListenerException e) {  		// 1229 = client closed connection.  		if (e.ErrorCode != 1229)  			throw;  	} finally {  		s.Dispose ();  	}  }' e => {  	try {  		listenerResponse.StatusCode = 500;  		listenerResponse.OutputStream.Close ();  	} catch {  	}  	//swallow exceptions  });  
Magic Number,Anna.Responses,Response,F:\newReposMay17\Anna-Rx_Anna\Anna\Responses\Response.cs,Send,The following statement contains a magic number: WriteStream (listenerResponse.OutputStream).Subscribe (s => {  	try {  		s.Close ();  	} catch (HttpListenerException e) {  		// 1229 = client closed connection.  		if (e.ErrorCode != 1229)  			throw;  	} finally {  		s.Dispose ();  	}  }' e => {  	try {  		listenerResponse.StatusCode = 500;  		listenerResponse.OutputStream.Close ();  	} catch {  	}  	//swallow exceptions  });  
Magic Number,Anna.Responses,Response,F:\newReposMay17\Anna-Rx_Anna\Anna\Responses\Response.cs,Send,The following statement contains a magic number: try {  	s.Close ();  } catch (HttpListenerException e) {  	// 1229 = client closed connection.  	if (e.ErrorCode != 1229)  		throw;  } finally {  	s.Dispose ();  }  
Magic Number,Anna.Responses,Response,F:\newReposMay17\Anna-Rx_Anna\Anna\Responses\Response.cs,Send,The following statement contains a magic number: if (e.ErrorCode != 1229)  	throw;  
Magic Number,Anna.Responses,Response,F:\newReposMay17\Anna-Rx_Anna\Anna\Responses\Response.cs,Send,The following statement contains a magic number: try {  	listenerResponse.StatusCode = 500;  	listenerResponse.OutputStream.Close ();  } catch {  }  
Magic Number,Anna.Responses,Response,F:\newReposMay17\Anna-Rx_Anna\Anna\Responses\Response.cs,Send,The following statement contains a magic number: listenerResponse.StatusCode = 500;  
Magic Number,Anna.Observers,UnhandledRouteObserver,F:\newReposMay17\Anna-Rx_Anna\Anna\Observers\UnhandledRouteObserver.cs,OnNext,The following statement contains a magic number: value.Response (statusCode: 404).Send ();  
