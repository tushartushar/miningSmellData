Implementation smell,Namespace,Class,File,Method,Description
Long Statement,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestReadUndefinedType,The length of the statement  "                string expectedDataBase64 = "UHJpbnRJTQAwMjUwAAAUAAEAFAAUAAIAAQAAAAMAiAAAAAcAAAAAAAgAAAAAAAkAAAAAAAoAAAAAAAsA0AAAAAwAAAAAAA0AAAAAAA4A6AAAAAABAQAAAAEB/wAAAAIBgwAAAAMBgwAAAAQBgwAAAAUBgwAAAAYBgwAAAAcBgICAABABggAAAAkRAAAQJwAACw8AABAnAACXBQAAECcAALAIAAAQJwAAARwAABAnAABeAgAAECcAAIsAAAAQJwAAywMAABAnAADlGwAAECcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwAmoIFAAEAAADiAwAAnYI="; " is 379.
Long Statement,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TagExtender,The length of the statement  "            tiffFieldInfo[0] = new TiffFieldInfo((TiffTag)TagToWrite' -1' -1' TiffType.ASCII' FieldBit.Custom' true' false' "Tag." + TagToWrite); " is 133.
Long Statement,UnitTests.TiffCP,Multipage,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\TiffCP\Multipage.cs,test_page0and2ViaTwoInputImages,The length of the statement  "            string outputFile = TestCase.Folder + @"Output.Tiff\" + Path.GetFileName("1.tif") + "_page0and2_via_two_input_images.tif"; " is 122.
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,TagExtender,The following statement contains a magic number: TiffFieldInfo[] tiffFieldInfo =               {                  new TiffFieldInfo(TIFFTAG_ASCIITAG' -1' -1' TiffType.ASCII' FieldBit.Custom' true' false' "MyTag")'                  new TiffFieldInfo(TIFFTAG_SHORTTAG' 2' 2' TiffType.SHORT' FieldBit.Custom' false' true' "ShortTag")'                  new TiffFieldInfo(TIFFTAG_LONGTAG' 2' 2' TiffType.LONG' FieldBit.Custom' false' true' "LongTag")'                  new TiffFieldInfo(TIFFTAG_RATIONALTAG' 2' 2' TiffType.RATIONAL' FieldBit.Custom' false' true' "RationalTag")'                  new TiffFieldInfo(TIFFTAG_FLOATTAG' 2' 2' TiffType.FLOAT' FieldBit.Custom' false' true' "FloatTag")'                  new TiffFieldInfo(TIFFTAG_DOUBLETAG' 2' 2' TiffType.DOUBLE' FieldBit.Custom' false' true' "DoubleTag")'                  new TiffFieldInfo(TIFFTAG_BYTETAG' 2' 2' TiffType.BYTE' FieldBit.Custom' false' true' "ByteTag")'                  new TiffFieldInfo(TIFFTAG_IFDTAG' 1' 1' TiffType.IFD' FieldBit.Custom' false' false' "IfdTag")'              };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,TagExtender,The following statement contains a magic number: TiffFieldInfo[] tiffFieldInfo =               {                  new TiffFieldInfo(TIFFTAG_ASCIITAG' -1' -1' TiffType.ASCII' FieldBit.Custom' true' false' "MyTag")'                  new TiffFieldInfo(TIFFTAG_SHORTTAG' 2' 2' TiffType.SHORT' FieldBit.Custom' false' true' "ShortTag")'                  new TiffFieldInfo(TIFFTAG_LONGTAG' 2' 2' TiffType.LONG' FieldBit.Custom' false' true' "LongTag")'                  new TiffFieldInfo(TIFFTAG_RATIONALTAG' 2' 2' TiffType.RATIONAL' FieldBit.Custom' false' true' "RationalTag")'                  new TiffFieldInfo(TIFFTAG_FLOATTAG' 2' 2' TiffType.FLOAT' FieldBit.Custom' false' true' "FloatTag")'                  new TiffFieldInfo(TIFFTAG_DOUBLETAG' 2' 2' TiffType.DOUBLE' FieldBit.Custom' false' true' "DoubleTag")'                  new TiffFieldInfo(TIFFTAG_BYTETAG' 2' 2' TiffType.BYTE' FieldBit.Custom' false' true' "ByteTag")'                  new TiffFieldInfo(TIFFTAG_IFDTAG' 1' 1' TiffType.IFD' FieldBit.Custom' false' false' "IfdTag")'              };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,TagExtender,The following statement contains a magic number: TiffFieldInfo[] tiffFieldInfo =               {                  new TiffFieldInfo(TIFFTAG_ASCIITAG' -1' -1' TiffType.ASCII' FieldBit.Custom' true' false' "MyTag")'                  new TiffFieldInfo(TIFFTAG_SHORTTAG' 2' 2' TiffType.SHORT' FieldBit.Custom' false' true' "ShortTag")'                  new TiffFieldInfo(TIFFTAG_LONGTAG' 2' 2' TiffType.LONG' FieldBit.Custom' false' true' "LongTag")'                  new TiffFieldInfo(TIFFTAG_RATIONALTAG' 2' 2' TiffType.RATIONAL' FieldBit.Custom' false' true' "RationalTag")'                  new TiffFieldInfo(TIFFTAG_FLOATTAG' 2' 2' TiffType.FLOAT' FieldBit.Custom' false' true' "FloatTag")'                  new TiffFieldInfo(TIFFTAG_DOUBLETAG' 2' 2' TiffType.DOUBLE' FieldBit.Custom' false' true' "DoubleTag")'                  new TiffFieldInfo(TIFFTAG_BYTETAG' 2' 2' TiffType.BYTE' FieldBit.Custom' false' true' "ByteTag")'                  new TiffFieldInfo(TIFFTAG_IFDTAG' 1' 1' TiffType.IFD' FieldBit.Custom' false' false' "IfdTag")'              };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,TagExtender,The following statement contains a magic number: TiffFieldInfo[] tiffFieldInfo =               {                  new TiffFieldInfo(TIFFTAG_ASCIITAG' -1' -1' TiffType.ASCII' FieldBit.Custom' true' false' "MyTag")'                  new TiffFieldInfo(TIFFTAG_SHORTTAG' 2' 2' TiffType.SHORT' FieldBit.Custom' false' true' "ShortTag")'                  new TiffFieldInfo(TIFFTAG_LONGTAG' 2' 2' TiffType.LONG' FieldBit.Custom' false' true' "LongTag")'                  new TiffFieldInfo(TIFFTAG_RATIONALTAG' 2' 2' TiffType.RATIONAL' FieldBit.Custom' false' true' "RationalTag")'                  new TiffFieldInfo(TIFFTAG_FLOATTAG' 2' 2' TiffType.FLOAT' FieldBit.Custom' false' true' "FloatTag")'                  new TiffFieldInfo(TIFFTAG_DOUBLETAG' 2' 2' TiffType.DOUBLE' FieldBit.Custom' false' true' "DoubleTag")'                  new TiffFieldInfo(TIFFTAG_BYTETAG' 2' 2' TiffType.BYTE' FieldBit.Custom' false' true' "ByteTag")'                  new TiffFieldInfo(TIFFTAG_IFDTAG' 1' 1' TiffType.IFD' FieldBit.Custom' false' false' "IfdTag")'              };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,TagExtender,The following statement contains a magic number: TiffFieldInfo[] tiffFieldInfo =               {                  new TiffFieldInfo(TIFFTAG_ASCIITAG' -1' -1' TiffType.ASCII' FieldBit.Custom' true' false' "MyTag")'                  new TiffFieldInfo(TIFFTAG_SHORTTAG' 2' 2' TiffType.SHORT' FieldBit.Custom' false' true' "ShortTag")'                  new TiffFieldInfo(TIFFTAG_LONGTAG' 2' 2' TiffType.LONG' FieldBit.Custom' false' true' "LongTag")'                  new TiffFieldInfo(TIFFTAG_RATIONALTAG' 2' 2' TiffType.RATIONAL' FieldBit.Custom' false' true' "RationalTag")'                  new TiffFieldInfo(TIFFTAG_FLOATTAG' 2' 2' TiffType.FLOAT' FieldBit.Custom' false' true' "FloatTag")'                  new TiffFieldInfo(TIFFTAG_DOUBLETAG' 2' 2' TiffType.DOUBLE' FieldBit.Custom' false' true' "DoubleTag")'                  new TiffFieldInfo(TIFFTAG_BYTETAG' 2' 2' TiffType.BYTE' FieldBit.Custom' false' true' "ByteTag")'                  new TiffFieldInfo(TIFFTAG_IFDTAG' 1' 1' TiffType.IFD' FieldBit.Custom' false' false' "IfdTag")'              };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,TagExtender,The following statement contains a magic number: TiffFieldInfo[] tiffFieldInfo =               {                  new TiffFieldInfo(TIFFTAG_ASCIITAG' -1' -1' TiffType.ASCII' FieldBit.Custom' true' false' "MyTag")'                  new TiffFieldInfo(TIFFTAG_SHORTTAG' 2' 2' TiffType.SHORT' FieldBit.Custom' false' true' "ShortTag")'                  new TiffFieldInfo(TIFFTAG_LONGTAG' 2' 2' TiffType.LONG' FieldBit.Custom' false' true' "LongTag")'                  new TiffFieldInfo(TIFFTAG_RATIONALTAG' 2' 2' TiffType.RATIONAL' FieldBit.Custom' false' true' "RationalTag")'                  new TiffFieldInfo(TIFFTAG_FLOATTAG' 2' 2' TiffType.FLOAT' FieldBit.Custom' false' true' "FloatTag")'                  new TiffFieldInfo(TIFFTAG_DOUBLETAG' 2' 2' TiffType.DOUBLE' FieldBit.Custom' false' true' "DoubleTag")'                  new TiffFieldInfo(TIFFTAG_BYTETAG' 2' 2' TiffType.BYTE' FieldBit.Custom' false' true' "ByteTag")'                  new TiffFieldInfo(TIFFTAG_IFDTAG' 1' 1' TiffType.IFD' FieldBit.Custom' false' false' "IfdTag")'              };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,TagExtender,The following statement contains a magic number: TiffFieldInfo[] tiffFieldInfo =               {                  new TiffFieldInfo(TIFFTAG_ASCIITAG' -1' -1' TiffType.ASCII' FieldBit.Custom' true' false' "MyTag")'                  new TiffFieldInfo(TIFFTAG_SHORTTAG' 2' 2' TiffType.SHORT' FieldBit.Custom' false' true' "ShortTag")'                  new TiffFieldInfo(TIFFTAG_LONGTAG' 2' 2' TiffType.LONG' FieldBit.Custom' false' true' "LongTag")'                  new TiffFieldInfo(TIFFTAG_RATIONALTAG' 2' 2' TiffType.RATIONAL' FieldBit.Custom' false' true' "RationalTag")'                  new TiffFieldInfo(TIFFTAG_FLOATTAG' 2' 2' TiffType.FLOAT' FieldBit.Custom' false' true' "FloatTag")'                  new TiffFieldInfo(TIFFTAG_DOUBLETAG' 2' 2' TiffType.DOUBLE' FieldBit.Custom' false' true' "DoubleTag")'                  new TiffFieldInfo(TIFFTAG_BYTETAG' 2' 2' TiffType.BYTE' FieldBit.Custom' false' true' "ByteTag")'                  new TiffFieldInfo(TIFFTAG_IFDTAG' 1' 1' TiffType.IFD' FieldBit.Custom' false' false' "IfdTag")'              };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,TagExtender,The following statement contains a magic number: TiffFieldInfo[] tiffFieldInfo =               {                  new TiffFieldInfo(TIFFTAG_ASCIITAG' -1' -1' TiffType.ASCII' FieldBit.Custom' true' false' "MyTag")'                  new TiffFieldInfo(TIFFTAG_SHORTTAG' 2' 2' TiffType.SHORT' FieldBit.Custom' false' true' "ShortTag")'                  new TiffFieldInfo(TIFFTAG_LONGTAG' 2' 2' TiffType.LONG' FieldBit.Custom' false' true' "LongTag")'                  new TiffFieldInfo(TIFFTAG_RATIONALTAG' 2' 2' TiffType.RATIONAL' FieldBit.Custom' false' true' "RationalTag")'                  new TiffFieldInfo(TIFFTAG_FLOATTAG' 2' 2' TiffType.FLOAT' FieldBit.Custom' false' true' "FloatTag")'                  new TiffFieldInfo(TIFFTAG_DOUBLETAG' 2' 2' TiffType.DOUBLE' FieldBit.Custom' false' true' "DoubleTag")'                  new TiffFieldInfo(TIFFTAG_BYTETAG' 2' 2' TiffType.BYTE' FieldBit.Custom' false' true' "ByteTag")'                  new TiffFieldInfo(TIFFTAG_IFDTAG' 1' 1' TiffType.IFD' FieldBit.Custom' false' false' "IfdTag")'              };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,TagExtender,The following statement contains a magic number: TiffFieldInfo[] tiffFieldInfo =               {                  new TiffFieldInfo(TIFFTAG_ASCIITAG' -1' -1' TiffType.ASCII' FieldBit.Custom' true' false' "MyTag")'                  new TiffFieldInfo(TIFFTAG_SHORTTAG' 2' 2' TiffType.SHORT' FieldBit.Custom' false' true' "ShortTag")'                  new TiffFieldInfo(TIFFTAG_LONGTAG' 2' 2' TiffType.LONG' FieldBit.Custom' false' true' "LongTag")'                  new TiffFieldInfo(TIFFTAG_RATIONALTAG' 2' 2' TiffType.RATIONAL' FieldBit.Custom' false' true' "RationalTag")'                  new TiffFieldInfo(TIFFTAG_FLOATTAG' 2' 2' TiffType.FLOAT' FieldBit.Custom' false' true' "FloatTag")'                  new TiffFieldInfo(TIFFTAG_DOUBLETAG' 2' 2' TiffType.DOUBLE' FieldBit.Custom' false' true' "DoubleTag")'                  new TiffFieldInfo(TIFFTAG_BYTETAG' 2' 2' TiffType.BYTE' FieldBit.Custom' false' true' "ByteTag")'                  new TiffFieldInfo(TIFFTAG_IFDTAG' 1' 1' TiffType.IFD' FieldBit.Custom' false' false' "IfdTag")'              };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,TagExtender,The following statement contains a magic number: TiffFieldInfo[] tiffFieldInfo =               {                  new TiffFieldInfo(TIFFTAG_ASCIITAG' -1' -1' TiffType.ASCII' FieldBit.Custom' true' false' "MyTag")'                  new TiffFieldInfo(TIFFTAG_SHORTTAG' 2' 2' TiffType.SHORT' FieldBit.Custom' false' true' "ShortTag")'                  new TiffFieldInfo(TIFFTAG_LONGTAG' 2' 2' TiffType.LONG' FieldBit.Custom' false' true' "LongTag")'                  new TiffFieldInfo(TIFFTAG_RATIONALTAG' 2' 2' TiffType.RATIONAL' FieldBit.Custom' false' true' "RationalTag")'                  new TiffFieldInfo(TIFFTAG_FLOATTAG' 2' 2' TiffType.FLOAT' FieldBit.Custom' false' true' "FloatTag")'                  new TiffFieldInfo(TIFFTAG_DOUBLETAG' 2' 2' TiffType.DOUBLE' FieldBit.Custom' false' true' "DoubleTag")'                  new TiffFieldInfo(TIFFTAG_BYTETAG' 2' 2' TiffType.BYTE' FieldBit.Custom' false' true' "ByteTag")'                  new TiffFieldInfo(TIFFTAG_IFDTAG' 1' 1' TiffType.IFD' FieldBit.Custom' false' false' "IfdTag")'              };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,TagExtender,The following statement contains a magic number: TiffFieldInfo[] tiffFieldInfo =               {                  new TiffFieldInfo(TIFFTAG_ASCIITAG' -1' -1' TiffType.ASCII' FieldBit.Custom' true' false' "MyTag")'                  new TiffFieldInfo(TIFFTAG_SHORTTAG' 2' 2' TiffType.SHORT' FieldBit.Custom' false' true' "ShortTag")'                  new TiffFieldInfo(TIFFTAG_LONGTAG' 2' 2' TiffType.LONG' FieldBit.Custom' false' true' "LongTag")'                  new TiffFieldInfo(TIFFTAG_RATIONALTAG' 2' 2' TiffType.RATIONAL' FieldBit.Custom' false' true' "RationalTag")'                  new TiffFieldInfo(TIFFTAG_FLOATTAG' 2' 2' TiffType.FLOAT' FieldBit.Custom' false' true' "FloatTag")'                  new TiffFieldInfo(TIFFTAG_DOUBLETAG' 2' 2' TiffType.DOUBLE' FieldBit.Custom' false' true' "DoubleTag")'                  new TiffFieldInfo(TIFFTAG_BYTETAG' 2' 2' TiffType.BYTE' FieldBit.Custom' false' true' "ByteTag")'                  new TiffFieldInfo(TIFFTAG_IFDTAG' 1' 1' TiffType.IFD' FieldBit.Custom' false' false' "IfdTag")'              };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,TagExtender,The following statement contains a magic number: TiffFieldInfo[] tiffFieldInfo =               {                  new TiffFieldInfo(TIFFTAG_ASCIITAG' -1' -1' TiffType.ASCII' FieldBit.Custom' true' false' "MyTag")'                  new TiffFieldInfo(TIFFTAG_SHORTTAG' 2' 2' TiffType.SHORT' FieldBit.Custom' false' true' "ShortTag")'                  new TiffFieldInfo(TIFFTAG_LONGTAG' 2' 2' TiffType.LONG' FieldBit.Custom' false' true' "LongTag")'                  new TiffFieldInfo(TIFFTAG_RATIONALTAG' 2' 2' TiffType.RATIONAL' FieldBit.Custom' false' true' "RationalTag")'                  new TiffFieldInfo(TIFFTAG_FLOATTAG' 2' 2' TiffType.FLOAT' FieldBit.Custom' false' true' "FloatTag")'                  new TiffFieldInfo(TIFFTAG_DOUBLETAG' 2' 2' TiffType.DOUBLE' FieldBit.Custom' false' true' "DoubleTag")'                  new TiffFieldInfo(TIFFTAG_BYTETAG' 2' 2' TiffType.BYTE' FieldBit.Custom' false' true' "ByteTag")'                  new TiffFieldInfo(TIFFTAG_IFDTAG' 1' 1' TiffType.IFD' FieldBit.Custom' false' false' "IfdTag")'              };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: byte[] buffer = new byte[25 * 144];
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: byte[] buffer = new byte[25 * 144];
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.SetField(TiffTag.IMAGEWIDTH' 25 * 8);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.SetField(TiffTag.IMAGEWIDTH' 25 * 8);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.SetField(TiffTag.IMAGELENGTH' 144);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.SetField(TiffTag.ROWSPERSTRIP' 144);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.SetField(TiffTag.XRESOLUTION' 150.0);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.SetField(TiffTag.YRESOLUTION' 150.0);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: short[] shorts = { 263' 264 };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: short[] shorts = { 263' 264 };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.SetField(TIFFTAG_SHORTTAG' 2' shorts);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: int[] longs = { 117' 118 };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: int[] longs = { 117' 118 };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.SetField(TIFFTAG_LONGTAG' 2' longs);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: float[] rationals = { 0.333333f' 0.444444f };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: float[] rationals = { 0.333333f' 0.444444f };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.SetField(TIFFTAG_RATIONALTAG' 2' rationals);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: float[] floats = { 0.666666f' 0.777777f };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: float[] floats = { 0.666666f' 0.777777f };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.SetField(TIFFTAG_FLOATTAG' 2' floats);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: double[] doubles = { 0.1234567' 0.7654321 };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: double[] doubles = { 0.1234567' 0.7654321 };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.SetField(TIFFTAG_DOUBLETAG' 2' doubles);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: byte[] bytes = { 89' 90 };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: byte[] bytes = { 89' 90 };
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.SetField(TIFFTAG_BYTETAG' 2' bytes);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: int ifd_offset = 1234567890;
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.WriteEncodedStrip(0' buffer' 25 * 144);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: image.WriteEncodedStrip(0' buffer' 25 * 144);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: Assert.AreEqual(2' res.Length);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: Assert.AreEqual(2' res[0].ToInt());
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: Assert.AreEqual(2' res.Length);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: Assert.AreEqual(2' res[0].ToInt());
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: Assert.AreEqual(2' res.Length);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: Assert.AreEqual(2' res[0].ToInt());
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: Assert.AreEqual(2' res.Length);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: Assert.AreEqual(2' res[0].ToInt());
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: Assert.AreEqual(2' res.Length);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: Assert.AreEqual(2' res[0].ToInt());
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: Assert.AreEqual(2' res.Length);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadWriteCustomTags,The following statement contains a magic number: Assert.AreEqual(2' res[0].ToInt());
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadExifTags,The following statement contains a magic number: Assert.That(exifIFDOffset' Is.EqualTo(640));
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadExifTags,The following statement contains a magic number: Assert.AreEqual(3.4' fnumber[0].ToDouble()' 0.001);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadExifTags,The following statement contains a magic number: Assert.AreEqual(3.4' fnumber[0].ToDouble()' 0.001);
Magic Number,UnitTests,CustomTags,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\CustomTags.cs,ReadExifTags,The following statement contains a magic number: Assert.That(fileSource[0].ToByte()' Is.EqualTo(3));
Magic Number,UnitTests,EncodeBitmap,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\EncodeBitmap.cs,convertToTiff,The following statement contains a magic number: tif.SetField(TiffTag.BITSPERSAMPLE' 8);
Magic Number,UnitTests,EncodeBitmap,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\EncodeBitmap.cs,convertToTiff,The following statement contains a magic number: tif.SetField(TiffTag.SAMPLESPERPIXEL' 4);
Magic Number,UnitTests,EncodeBitmap,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\EncodeBitmap.cs,convertRGBSamples,The following statement contains a magic number: int samplesPerPixel = 4;
Magic Number,UnitTests,EncodeBitmap,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\EncodeBitmap.cs,convertRGBSamples,The following statement contains a magic number: samplesPerPixel = 3;
Magic Number,UnitTests,EncodeBitmap,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\EncodeBitmap.cs,convertRGBSamples,The following statement contains a magic number: byte temp = data[i + 2];
Magic Number,UnitTests,EncodeBitmap,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\EncodeBitmap.cs,convertRGBSamples,The following statement contains a magic number: data[i + 2] = data[i];
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestReadUndefinedType,The following statement contains a magic number: Assert.AreEqual(customValueCount' 7);
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestReadUndefinedType,The following statement contains a magic number: TiffTag tag = (TiffTag)tiff.GetTagListEntry(6);
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestReadUndefinedType,The following statement contains a magic number: int expectedLength = 260;
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestReadMinMaxSampleValues,The following statement contains a magic number: Assert.AreEqual(65535' max);
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestAppendedNulls,The following statement contains a magic number: int freetag = 42117;
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestAppendedNulls,The following statement contains a magic number: int freetag2 = 42118;
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestAppendedNulls,The following statement contains a magic number: Assert.AreEqual(2' fv.Length);
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestAppendedNulls,The following statement contains a magic number: Assert.AreEqual(4' (int)fv[0].Value);
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestAppendedNulls,The following statement contains a magic number: Assert.AreEqual(4' readValue.Length);
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestAppendedNulls,The following statement contains a magic number: Assert.AreEqual('c'' readValue[2]);
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestAppendedNulls,The following statement contains a magic number: Assert.AreEqual('\0'' readValue[3]);
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestAppendedNulls,The following statement contains a magic number: Assert.AreEqual(2' fv.Length);
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestAppendedNulls,The following statement contains a magic number: Assert.AreEqual(4' (int)fv[0].Value);
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestAppendedNulls,The following statement contains a magic number: Assert.AreEqual(4' readValue.Length);
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestAppendedNulls,The following statement contains a magic number: Assert.AreEqual('c'' readValue[2]);
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,TestAppendedNulls,The following statement contains a magic number: Assert.AreEqual('\0'' readValue[3]);
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,CreateBasicTif,The following statement contains a magic number: int len = 128;
Magic Number,UnitTests,Misc,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Misc.cs,CreateBasicTif,The following statement contains a magic number: tiffImage.SetField(TiffTag.BITSPERSAMPLE' 32);
Magic Number,UnitTests,RgbaImage,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\RgbaImage.cs,testTiff2Rgba,The following statement contains a magic number: List<string> completeArgs = new List<string>(args.Length + 2);
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,UnassociatedAlpha,The following statement contains a magic number: const int samplesPerPixel = 4;
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,UnassociatedAlpha,The following statement contains a magic number: tif.SetField(TiffTag.IMAGEWIDTH' 256);
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,UnassociatedAlpha,The following statement contains a magic number: tif.SetField(TiffTag.IMAGELENGTH' 256);
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,UnassociatedAlpha,The following statement contains a magic number: tif.SetField(TiffTag.BITSPERSAMPLE' 8);
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,UnassociatedAlpha,The following statement contains a magic number: byte[] color_ptr = new byte[256 * samplesPerPixel];
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,UnassociatedAlpha,The following statement contains a magic number: byte alpha = 255;
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,UnassociatedAlpha,The following statement contains a magic number: i > 192 && j > 192
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,UnassociatedAlpha,The following statement contains a magic number: i > 192 && j > 192
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,UnassociatedAlpha,The following statement contains a magic number: color_ptr[j * samplesPerPixel + 2] = (byte)i;
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,UnassociatedAlpha,The following statement contains a magic number: color_ptr[j * samplesPerPixel + 3] = alpha;
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,UnassociatedAlpha,The following statement contains a magic number: j < 256
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,UnassociatedAlpha,The following statement contains a magic number: i < 256
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: const int samplesPerPixel = 4;
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: tif.SetField(TiffTag.IMAGEWIDTH' 256);
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: tif.SetField(TiffTag.IMAGELENGTH' 256);
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: tif.SetField(TiffTag.BITSPERSAMPLE' 8);
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: byte[] color_ptr = new byte[256 * samplesPerPixel];
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: byte[] pixelValue = { 100' 150' 200 };
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: byte[] pixelValue = { 100' 150' 200 };
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: byte[] pixelValue = { 100' 150' 200 };
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: double mappedAlpha = alpha / 255.0;
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: color_ptr[j * samplesPerPixel + 2] = (byte)(pixelValue[2] * mappedAlpha);
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: color_ptr[j * samplesPerPixel + 2] = (byte)(pixelValue[2] * mappedAlpha);
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: color_ptr[j * samplesPerPixel + 3] = alpha;
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: j < 256
Magic Number,UnitTests,Transparency,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\Transparency.cs,AssociatedAlpha,The following statement contains a magic number: i < 256
Magic Number,UnitTests.TiffCP,Tester,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\UnitTests\TiffCP\Tester.cs,Run,The following statement contains a magic number: List<string> completeArgs = new List<string>(args.Length + 2);
