Implementation smell,Namespace,Class,File,Method,Description
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,Main,The following statement contains a magic number: int[] rotateAngles = new int[] { 90' 180' 270 };
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,Main,The following statement contains a magic number: int[] rotateAngles = new int[] { 90' 180' 270 };
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,Main,The following statement contains a magic number: int[] rotateAngles = new int[] { 90' 180' 270 };
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,Main,The following statement contains a magic number: output.SetField(TiffTag.SAMPLESPERPIXEL' 3);
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,Main,The following statement contains a magic number: output.SetField(TiffTag.BITSPERSAMPLE' 8);
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,rasterToRgbBuffer,The following statement contains a magic number: byte[] buffer = new byte[raster.Length * 3];
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,rasterToRgbBuffer,The following statement contains a magic number: Buffer.BlockCopy(raster' i * 4' buffer' i * 3' 3);
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,rasterToRgbBuffer,The following statement contains a magic number: Buffer.BlockCopy(raster' i * 4' buffer' i * 3' 3);
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,rasterToRgbBuffer,The following statement contains a magic number: Buffer.BlockCopy(raster' i * 4' buffer' i * 3' 3);
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,rotate,The following statement contains a magic number: int numberOf90s = angle / 90;
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,rotate,The following statement contains a magic number: numberOf90s % 2 != 0
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,rotate,The following statement contains a magic number: switch (numberOf90s % 4)                      {                          case 0:                              x = w;                              y = h;                              break;                            case 1:                              x = (height - h - 1);                              y = (rotatedHeight - 1) - (width - w - 1);                              break;                            case 2:                              x = (width - w - 1);                              y = (height - h - 1);                                break;                            case 3:                              x = (rotatedWidth - 1) - (height - h - 1);                              y = (width - w - 1);                              break;                      }
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,rotate,The following statement contains a magic number: switch (numberOf90s % 4)                      {                          case 0:                              x = w;                              y = h;                              break;                            case 1:                              x = (height - h - 1);                              y = (rotatedHeight - 1) - (width - w - 1);                              break;                            case 2:                              x = (width - w - 1);                              y = (height - h - 1);                                break;                            case 3:                              x = (rotatedWidth - 1) - (height - h - 1);                              y = (width - w - 1);                              break;                      }
Magic Number,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,rotate,The following statement contains a magic number: switch (numberOf90s % 4)                      {                          case 0:                              x = w;                              y = h;                              break;                            case 1:                              x = (height - h - 1);                              y = (rotatedHeight - 1) - (width - w - 1);                              break;                            case 2:                              x = (width - w - 1);                              y = (height - h - 1);                                break;                            case 3:                              x = (rotatedWidth - 1) - (height - h - 1);                              y = (width - w - 1);                              break;                      }
Missing Default,BitMiracle.LibTiff.Samples,RotateTiff,D:\research\architectureSmells\repos\BitMiracle_libtiff.net\Samples\RotateTiff\C#\RotateTiff.cs,rotate,The following switch statement is missing a default case: switch (numberOf90s % 4)                      {                          case 0:                              x = w;                              y = h;                              break;                            case 1:                              x = (height - h - 1);                              y = (rotatedHeight - 1) - (width - w - 1);                              break;                            case 2:                              x = (width - w - 1);                              y = (height - h - 1);                                break;                            case 3:                              x = (rotatedWidth - 1) - (height - h - 1);                              y = (width - w - 1);                              break;                      }
