Implementation smell,Namespace,Class,File,Method,Description
Complex Method,ReStruct.Serializer.Fields,FieldFactory,C:\repos\vijairaj_ReStruct\ReStruct\Serializer\Fields\FieldFactory.cs,NewField,Cyclomatic complexity of the method is 42
Long Statement,ReStruct.Serializer.Fields,FieldFactory,C:\repos\vijairaj_ReStruct\ReStruct\Serializer\Fields\FieldFactory.cs,NewField,The length of the statement  "		newField = type.IsArray ? (IField)new ArrayField (parentAttribute' type' fieldAttributes) : new UserField (parentAttribute' type); " is 130.
Magic Number,ReStruct.Serializer.Fields,UnsignedField,C:\repos\vijairaj_ReStruct\ReStruct\Serializer\Fields\UnsignedField.cs,Serialize,The following statement contains a magic number: for (var i = 0; i < _size; ++i)  	bytes [i] = (byte)(((value) >> (i * 8)) & 0xFF);  
Magic Number,ReStruct.Serializer.Fields,UnsignedField,C:\repos\vijairaj_ReStruct\ReStruct\Serializer\Fields\UnsignedField.cs,Serialize,The following statement contains a magic number: bytes [i] = (byte)(((value) >> (i * 8)) & 0xFF);  
Magic Number,ReStruct.Serializer.Fields,FieldFactory,C:\repos\vijairaj_ReStruct\ReStruct\Serializer\Fields\FieldFactory.cs,NewField,The following statement contains a magic number: switch (Type.GetTypeCode (type)) {  case TypeCode.Empty:  	break;  case TypeCode.Object:  	newField = type.IsArray ? (IField)new ArrayField (parentAttribute' type' fieldAttributes) : new UserField (parentAttribute' type);  	break;  case TypeCode.DBNull:  	break;  case TypeCode.Boolean:  	newField = new BooleanField (parentAttribute);  	break;  case TypeCode.Char:  	break;  case TypeCode.SByte:  	break;  case TypeCode.Byte:  	newField = new UnsignedField (parentAttribute' typeof(Byte)' 1);  	break;  case TypeCode.Int16:  	break;  case TypeCode.UInt16:  	newField = new UnsignedField (parentAttribute' typeof(UInt16)' 2);  	break;  case TypeCode.Int32:  	break;  case TypeCode.UInt32:  	newField = new UnsignedField (parentAttribute' typeof(UInt32)' 4);  	break;  case TypeCode.Int64:  	break;  case TypeCode.UInt64:  	newField = new UnsignedField (parentAttribute' typeof(UInt64)' 8);  	break;  case TypeCode.Single:  	break;  case TypeCode.Double:  	break;  case TypeCode.Decimal:  	break;  case TypeCode.DateTime:  	break;  case TypeCode.String:  	break;  }  
Magic Number,ReStruct.Serializer.Fields,FieldFactory,C:\repos\vijairaj_ReStruct\ReStruct\Serializer\Fields\FieldFactory.cs,NewField,The following statement contains a magic number: switch (Type.GetTypeCode (type)) {  case TypeCode.Empty:  	break;  case TypeCode.Object:  	newField = type.IsArray ? (IField)new ArrayField (parentAttribute' type' fieldAttributes) : new UserField (parentAttribute' type);  	break;  case TypeCode.DBNull:  	break;  case TypeCode.Boolean:  	newField = new BooleanField (parentAttribute);  	break;  case TypeCode.Char:  	break;  case TypeCode.SByte:  	break;  case TypeCode.Byte:  	newField = new UnsignedField (parentAttribute' typeof(Byte)' 1);  	break;  case TypeCode.Int16:  	break;  case TypeCode.UInt16:  	newField = new UnsignedField (parentAttribute' typeof(UInt16)' 2);  	break;  case TypeCode.Int32:  	break;  case TypeCode.UInt32:  	newField = new UnsignedField (parentAttribute' typeof(UInt32)' 4);  	break;  case TypeCode.Int64:  	break;  case TypeCode.UInt64:  	newField = new UnsignedField (parentAttribute' typeof(UInt64)' 8);  	break;  case TypeCode.Single:  	break;  case TypeCode.Double:  	break;  case TypeCode.Decimal:  	break;  case TypeCode.DateTime:  	break;  case TypeCode.String:  	break;  }  
Magic Number,ReStruct.Serializer.Fields,FieldFactory,C:\repos\vijairaj_ReStruct\ReStruct\Serializer\Fields\FieldFactory.cs,NewField,The following statement contains a magic number: switch (Type.GetTypeCode (type)) {  case TypeCode.Empty:  	break;  case TypeCode.Object:  	newField = type.IsArray ? (IField)new ArrayField (parentAttribute' type' fieldAttributes) : new UserField (parentAttribute' type);  	break;  case TypeCode.DBNull:  	break;  case TypeCode.Boolean:  	newField = new BooleanField (parentAttribute);  	break;  case TypeCode.Char:  	break;  case TypeCode.SByte:  	break;  case TypeCode.Byte:  	newField = new UnsignedField (parentAttribute' typeof(Byte)' 1);  	break;  case TypeCode.Int16:  	break;  case TypeCode.UInt16:  	newField = new UnsignedField (parentAttribute' typeof(UInt16)' 2);  	break;  case TypeCode.Int32:  	break;  case TypeCode.UInt32:  	newField = new UnsignedField (parentAttribute' typeof(UInt32)' 4);  	break;  case TypeCode.Int64:  	break;  case TypeCode.UInt64:  	newField = new UnsignedField (parentAttribute' typeof(UInt64)' 8);  	break;  case TypeCode.Single:  	break;  case TypeCode.Double:  	break;  case TypeCode.Decimal:  	break;  case TypeCode.DateTime:  	break;  case TypeCode.String:  	break;  }  
Magic Number,ReStruct.Serializer.Fields,FieldFactory,C:\repos\vijairaj_ReStruct\ReStruct\Serializer\Fields\FieldFactory.cs,NewField,The following statement contains a magic number: newField = new UnsignedField (parentAttribute' typeof(UInt16)' 2);  
Magic Number,ReStruct.Serializer.Fields,FieldFactory,C:\repos\vijairaj_ReStruct\ReStruct\Serializer\Fields\FieldFactory.cs,NewField,The following statement contains a magic number: newField = new UnsignedField (parentAttribute' typeof(UInt32)' 4);  
Magic Number,ReStruct.Serializer.Fields,FieldFactory,C:\repos\vijairaj_ReStruct\ReStruct\Serializer\Fields\FieldFactory.cs,NewField,The following statement contains a magic number: newField = new UnsignedField (parentAttribute' typeof(UInt64)' 8);  
Missing Default,ReStruct.Serializer.Fields,FieldFactory,C:\repos\vijairaj_ReStruct\ReStruct\Serializer\Fields\FieldFactory.cs,NewField,The following switch statement is missing a default case: switch (Type.GetTypeCode (type)) {  case TypeCode.Empty:  	break;  case TypeCode.Object:  	newField = type.IsArray ? (IField)new ArrayField (parentAttribute' type' fieldAttributes) : new UserField (parentAttribute' type);  	break;  case TypeCode.DBNull:  	break;  case TypeCode.Boolean:  	newField = new BooleanField (parentAttribute);  	break;  case TypeCode.Char:  	break;  case TypeCode.SByte:  	break;  case TypeCode.Byte:  	newField = new UnsignedField (parentAttribute' typeof(Byte)' 1);  	break;  case TypeCode.Int16:  	break;  case TypeCode.UInt16:  	newField = new UnsignedField (parentAttribute' typeof(UInt16)' 2);  	break;  case TypeCode.Int32:  	break;  case TypeCode.UInt32:  	newField = new UnsignedField (parentAttribute' typeof(UInt32)' 4);  	break;  case TypeCode.Int64:  	break;  case TypeCode.UInt64:  	newField = new UnsignedField (parentAttribute' typeof(UInt64)' 8);  	break;  case TypeCode.Single:  	break;  case TypeCode.Double:  	break;  case TypeCode.Decimal:  	break;  case TypeCode.DateTime:  	break;  case TypeCode.String:  	break;  }  
