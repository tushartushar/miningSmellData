Implementation smell,Namespace,Class,File,Method,Description
Complex Method,MonoDevelop.Debugger.Gdb,GdbBacktrace,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbBacktrace.cs,GetExpressionCompletionData,Cyclomatic complexity of the method is 13
Complex Method,MonoDevelop.Debugger.Gdb,GdbBacktrace,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbBacktrace.cs,CreateFrame,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Debugger.Gdb,GdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSession.cs,OnInsertBreakEvent,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Debugger.Gdb,GdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSession.cs,HandleEvent,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetValueFunction,Cyclomatic complexity of the method is 16
Complex Method,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetArrayChildren,Cyclomatic complexity of the method is 10
Complex Method,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetMembersWithOffsets,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetClassInstanceChildren,Cyclomatic complexity of the method is 12
Complex Method,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,EvaluateVariable,Cyclomatic complexity of the method is 9
Complex Method,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,EvaluateVariable,Cyclomatic complexity of the method is 8
Complex Method,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,BuildObjectValueFlags,Cyclomatic complexity of the method is 8
Long Parameter List,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetArrayChildren,The method has 5 parameters. Parameters: cacheNode' arrayPath' index' elementsToDisplay' options
Long Parameter List,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,EvaluatePrimitive,The method has 5 parameters. Parameters: rawBytes' start' t' flags' path
Long Parameter List,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,EvaluateArray,The method has 5 parameters. Parameters: rawBytes' start' t' flags' path
Long Parameter List,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,EvaluateArray,The method has 5 parameters. Parameters: arrayLength' firstItemPointer' t' flags' path
Long Statement,MonoDevelop.Debugger.Gdb,GdbBacktrace,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbBacktrace.cs,GetParameters,The length of the statement  "			GdbCommandResult res = session.RunCommand ("-stack-list-arguments"' "0"' frameIndex.ToString ()' frameIndex.ToString ()); " is 121.
Long Statement,MonoDevelop.Debugger.Gdb,GdbDissassemblyBuffer,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbBacktrace.cs,GetLines,The length of the statement  "				ResultData data = session.RunCommand ("-data-disassemble"' "-s"' startAddr.ToString ()' "-e"' endAddr.ToString ()' "--"' "0"); " is 126.
Long Statement,MonoDevelop.Debugger.Gdb,GdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSession.cs,OnRun,The length of the statement  "						console = Runtime.ProcessService.StartConsoleProcess(script' ""' "."' ExternalConsoleFactory.Instance.CreateConsole(true)' null); " is 129.
Long Statement,MonoDevelop.Debugger.Gdb,GdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSession.cs,UpdateHitCountData,The length of the statement  "				string val = res.GetObject ("BreakpointTable").GetObject ("body").GetObject (0).GetObject ("bkpt").GetValueString ("ignore"); " is 125.
Long Statement,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The length of the statement  "			ulong realIntPart = realFraction >> 63;											// extract bit 64 (explicit integer part)' this is hidden in double precision " is 127.
Long Statement,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The length of the statement  "			realFraction &= ~(ulong)(realIntPart << 63); // 0x7FFFFFFFFFFFFFFF				// use only 63 bits for fraction (strip off the integer part bit) " is 135.
Long Statement,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The length of the statement  "			ushort doubleExponent = (ushort)(realExponent - realBias /* unbias real */ + doubleBias /* bias double */);		// calculate the biased exponent for double precision " is 162.
Long Statement,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The length of the statement  "			 * ^done'name="var15"'numchild="0"'value="-2.9999999999999999999130411670751266e-154"'type="long double"'thread-id="1"'has_more="0" " is 130.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetArrayChildren,The length of the statement  "				//return ObjectValue.CreateNotSupported (ValueSource' path' t.ToCode ()' "Struct/Union arrays can't be examined yet"' flags); " is 125.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetMembersWithOffsets,The length of the statement  "				 * Very important on x64: if a long' array or pointer follows e.g. an int value' it'll be aligned to an 8 byte-base again. " is 121.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetClassInstanceChildren,The length of the statement  "			// read in the object bytes -- The length of an object can be read dynamically and thus the primary range of bytes that contain object properties. " is 146.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetClassInstanceChildren,The length of the statement  "						objectMembers.Add(ObjectValue.CreateObject(ValueSource' memberPath' memberType.ToCode()' memberType.ToString()' memberFlags' null)); " is 132.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetClassInstanceChildren,The length of the statement  "					Backtrace.DSession.LogWriter (false' "Error in GetClassInstanceChildren(memberPath="+memberPath.ToString()+"): " + ex.Message+"\n"); " is 132.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetClassInstanceChildren,The length of the statement  "					addressExpression = MemoryExamination.EnforceReadRawExpression+"((void*)"+MemoryExamination.BuildAddressExpression(cacheNode.addressExpression' "&({0})")+ "+"+currentOffset+")"; " is 177.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetClassInstanceChildren,The length of the statement  "					addressExpression = MemoryExamination.EnforceReadRawExpression+"((void*)"+MemoryExamination.BuildAddressExpression(cacheNode.addressExpression) + "+" + currentOffset+")"; " is 170.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,EvaluateVariable,The length of the statement  "			foreach (var t in AmbiguousType.TryDissolve(ExpressionTypeEvaluation.EvaluateType(variableExpression' resolutionCtx' false))) { " is 127.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,EvaluateVariable,The length of the statement  "						return ObjectValue.CreateNullObject (ValueSource' variableName' ms.Base != null ? ms.Base.ToString () : "<Unknown base type>"' BuildObjectValueFlags (ms)); " is 155.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,EvaluateVariable,The length of the statement  "					return ObjectValue.CreatePrimitive (ValueSource' new ObjectPath (variableName)' "<unknown>"' new EvaluationResult (res.GetValueString ("value"))' ObjectValueFlags.Variable); " is 173.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,EvaluateArray,The length of the statement  "				Memory.Read (firstItemPointer.ToString ()' DGdbTools.SizeOf(elementTypeToken) * elementsToDisplay' out rawArrayContent); " is 120.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,EvaluateAssociativeArray,The length of the statement  "			return ObjectValue.CreateNotSupported (ValueSource' path' t.ToCode ()' "Associative arrays aren't supported yet"' flags); " is 121.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,EvaluateClassInstance,The length of the statement  "			if (!Memory.Read (exp[0] == MemoryExamination.EnforceReadRawExpression ? exp : (MemoryExamination.EnforceReadRawExpression + exp)' out ptr) ||  " is 142.
Long Statement,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,EvaluateClassInstance,The length of the statement  "				return ObjectValue.CreateNullObject (ValueSource' path' actualClassType == null ? "<Unkown type>" : actualClassType.ToCode ()' flags); " is 134.
Long Statement,MonoDevelop.Debugger.Gdb.D,MemoryExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\MemoryExamination.cs,ReadObjectBytes,The length of the statement  "			if (!Read (EnforceReadRawExpression+"**(int*)(" + BuildAddressExpression(exp) + ")+" + CalcOffset(2)' out objectSize)) { " is 120.
Long Statement,MonoDevelop.Debugger.Gdb.D,MemoryExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\MemoryExamination.cs,Read,The length of the statement  "			data = Misc.ArrayConversionHelpers.HexStringToByteArray (res.GetObject("memory").GetObject(0).GetValueString ("contents")); " is 123.
Long Statement,MonoDevelop.Debugger.Gdb.D,ToStringExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\ToStringExamination.cs,InjectToStringCode,The length of the statement  "			//	c) an exception signaling flag (true' in case of exception occuring during <object>.toString() execution) - *($ptr+IntPtr.Size*2) " is 132.
Long Statement,MonoDevelop.Debugger.Gdb.D,ToStringExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\ToStringExamination.cs,InjectToStringCode,The length of the statement  "			// TODD: check on the result res' if it contains a warning (in cases GDB cannot execute inferior calls - a bug in kernel)  " is 121.
Long Statement,MonoDevelop.Debugger.Gdb.D,ToStringExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\ToStringExamination.cs,InvokeToString,The length of the statement  "				res = Session.RunCommand (string.Format (InvokeCommand' MemoryExamination.enforceRawExpr(ref exp) ? exp : ("(int*)"+exp))); " is 123.
Long Statement,MonoDevelop.Debugger.Gdb.D,Deh2,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\Deh2.cs,InjectBreakpoint,The length of the statement  "			var returnOffset = funcDefinition.IndexOf(DGdbSession.Is64Bit ? _eh_finddataSearchPattern_x64 : _eh_finddataSearchPattern_x86); " is 127.
Virtual Method Call from Constructor,MonoDevelop.Debugger.Gdb,GdbBacktrace,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbBacktrace.cs,GdbBacktrace,The constructor "GdbBacktrace" calls a virtual method "CreateFrame".
Virtual Method Call from Constructor,MonoDevelop.Debugger.Options,OptionPanel,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Options\OptionPanel.cs,OptionPanel,The constructor "OptionPanel" calls a virtual method "Build".
Empty Catch Block,MonoDevelop.Debugger.Gdb,GdbBacktrace,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbBacktrace.cs,CreateFrame,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Debugger.Gdb,GdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSession.cs,OnRun,The method has an empty catch block.
Empty Catch Block,MonoDevelop.Debugger.Gdb,GdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSession.cs,OnInsertBreakEvent,The method has an empty catch block.
Magic Number,MonoDevelop.Debugger.Gdb,GdbBacktrace,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbBacktrace.cs,GetExpressionCompletionData,The following statement contains a magic number: exp = exp.Substring (0' exp.Length - (pointer ? 2 : 1));
Magic Number,MonoDevelop.Debugger.Gdb,GdbBacktrace,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbBacktrace.cs,CreateFrame,The following statement contains a magic number: addr = long.Parse (sadr.Substring (2)' NumberStyles.HexNumber);
Magic Number,MonoDevelop.Debugger.Gdb,GdbBacktrace,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbBacktrace.cs,Disassemble,The following statement contains a magic number: long addr = long.Parse (data.GetObject ("frame").GetValueString ("addr").Substring (2)' NumberStyles.HexNumber);
Magic Number,MonoDevelop.Debugger.Gdb,GdbDissassemblyBuffer,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbBacktrace.cs,GetLines,The following statement contains a magic number: long addr = long.Parse (aline.GetValueString ("address").Substring (2)' NumberStyles.HexNumber);
Magic Number,MonoDevelop.Debugger.Gdb,GdbCommandResult,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbCommandResult.cs,GdbCommandResult,The following statement contains a magic number: ReadResults (line' 6);
Magic Number,MonoDevelop.Debugger.Gdb,GdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSession.cs,OnRun,The following statement contains a magic number: System.Threading.Thread.Sleep(100);
Magic Number,MonoDevelop.Debugger.Gdb,GdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSession.cs,OnRun,The following statement contains a magic number: (DateTime.Now - tim).TotalSeconds > 10
Magic Number,MonoDevelop.Debugger.Gdb,GdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSession.cs,OnDisassembleFile,The following statement contains a magic number: long addr = long.Parse (asm.GetValueString ("address").Substring (2)' NumberStyles.HexNumber);
Magic Number,MonoDevelop.Debugger.Gdb,GdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSession.cs,InternalStop,The following statement contains a magic number: !Monitor.Wait (eventLock' 4000)
Magic Number,MonoDevelop.Debugger.Gdb,GdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSession.cs,ProcessOutput,The following statement contains a magic number: switch (line [0]) {  				case '^':  					lock (syncLock) {  						lastResult = new GdbCommandResult (line);  						running = (lastResult.Status == CommandStatus.Running);  						Monitor.PulseAll (syncLock);  					}  					break;  					  				case '~':  				case '&':  					if (line.Length > 1 && line[1] == '"')  						line = line.Substring (2' line.Length - 5);  					Ide.DispatchService.GuiDispatch(delegate {  						OnTargetOutput (false' line + "\n");  					});  					break;  					  				case '*':  					GdbEvent ev;  					lock (eventLock) {  						running = false;  						ev = new GdbEvent (line);  						string ti = ev.GetValueString ("thread-id");  						if (ti != null && ti != "all")  							currentThread = activeThread = int.Parse (ti);  						Monitor.PulseAll (eventLock);  						if (internalStop) {  							internalStop = false;  							return;  						}  					}  					ThreadPool.QueueUserWorkItem (delegate {  						try {  							HandleEvent (ev);  						} catch (Exception ex) {  							LoggingService.LogError("Error while processing gdb output"' ex);  						}  					});  					break;  			}
Magic Number,MonoDevelop.Debugger.Gdb,GdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSession.cs,ProcessOutput,The following statement contains a magic number: switch (line [0]) {  				case '^':  					lock (syncLock) {  						lastResult = new GdbCommandResult (line);  						running = (lastResult.Status == CommandStatus.Running);  						Monitor.PulseAll (syncLock);  					}  					break;  					  				case '~':  				case '&':  					if (line.Length > 1 && line[1] == '"')  						line = line.Substring (2' line.Length - 5);  					Ide.DispatchService.GuiDispatch(delegate {  						OnTargetOutput (false' line + "\n");  					});  					break;  					  				case '*':  					GdbEvent ev;  					lock (eventLock) {  						running = false;  						ev = new GdbEvent (line);  						string ti = ev.GetValueString ("thread-id");  						if (ti != null && ti != "all")  							currentThread = activeThread = int.Parse (ti);  						Monitor.PulseAll (eventLock);  						if (internalStop) {  							internalStop = false;  							return;  						}  					}  					ThreadPool.QueueUserWorkItem (delegate {  						try {  							HandleEvent (ev);  						} catch (Exception ex) {  							LoggingService.LogError("Error while processing gdb output"' ex);  						}  					});  					break;  			}
Magic Number,MonoDevelop.Debugger.Gdb,GdbSessionFactory,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSessionFactory.cs,IsExecutable,The following statement contains a magic number: char[] chars = new char[3];
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbBacktrace,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbBacktrace.cs,CreateFrame,The following statement contains a magic number: addr = long.Parse(sadr.Substring(2)' System.Globalization.NumberStyles.HexNumber);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbBacktrace,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbBacktrace.cs,ParseHexValue,The following statement contains a magic number: return (ulong) D_Parser.Parser.Lexer.ParseFloatValue (sb' 16);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbBacktrace,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbBacktrace.cs,ReadInt16,The following statement contains a magic number: DSession.Memory.Read(offset.ToString()' 2' out r);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbBacktrace,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbBacktrace.cs,ReadInt32,The following statement contains a magic number: DSession.Memory.Read(offset.ToString()' 4' out r);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbBacktrace,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbBacktrace.cs,ReadInt64,The following statement contains a magic number: DSession.Memory.Read(offset.ToString()' 8' out r);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbSession.cs,OnStarted,The following statement contains a magic number: PointerSize = Is64Bit ? 8 : 4;
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbSession.cs,OnStarted,The following statement contains a magic number: PointerSize = Is64Bit ? 8 : 4;
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,SizeOf,The following statement contains a magic number: switch (typeToken) {  				case DTokens.Bool:  				case DTokens.Byte:  				case DTokens.Ubyte:  				case DTokens.Char:  					return 1;  				case DTokens.Short:  				case DTokens.Ushort:  				case DTokens.Wchar:  					return 2;  				case DTokens.Int:  				case DTokens.Uint:  				case DTokens.Dchar:  				case DTokens.Float:  					return 4;  				case DTokens.Long:  				case DTokens.Ulong:  				case DTokens.Double:  					return 8;  				case DTokens.Real:  					// size is 80 bits = 10 bytes  					if (DGdbSession.Is64Bit)  						// alignment is to 16 bytes (on 64 bit architecture)  						return 16;  					else  						// and 12 bytes (on 32 bit architecture)   						return 12;  				default:  					return 1;  			}
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,SizeOf,The following statement contains a magic number: switch (typeToken) {  				case DTokens.Bool:  				case DTokens.Byte:  				case DTokens.Ubyte:  				case DTokens.Char:  					return 1;  				case DTokens.Short:  				case DTokens.Ushort:  				case DTokens.Wchar:  					return 2;  				case DTokens.Int:  				case DTokens.Uint:  				case DTokens.Dchar:  				case DTokens.Float:  					return 4;  				case DTokens.Long:  				case DTokens.Ulong:  				case DTokens.Double:  					return 8;  				case DTokens.Real:  					// size is 80 bits = 10 bytes  					if (DGdbSession.Is64Bit)  						// alignment is to 16 bytes (on 64 bit architecture)  						return 16;  					else  						// and 12 bytes (on 32 bit architecture)   						return 12;  				default:  					return 1;  			}
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,SizeOf,The following statement contains a magic number: switch (typeToken) {  				case DTokens.Bool:  				case DTokens.Byte:  				case DTokens.Ubyte:  				case DTokens.Char:  					return 1;  				case DTokens.Short:  				case DTokens.Ushort:  				case DTokens.Wchar:  					return 2;  				case DTokens.Int:  				case DTokens.Uint:  				case DTokens.Dchar:  				case DTokens.Float:  					return 4;  				case DTokens.Long:  				case DTokens.Ulong:  				case DTokens.Double:  					return 8;  				case DTokens.Real:  					// size is 80 bits = 10 bytes  					if (DGdbSession.Is64Bit)  						// alignment is to 16 bytes (on 64 bit architecture)  						return 16;  					else  						// and 12 bytes (on 32 bit architecture)   						return 12;  				default:  					return 1;  			}
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,SizeOf,The following statement contains a magic number: switch (typeToken) {  				case DTokens.Bool:  				case DTokens.Byte:  				case DTokens.Ubyte:  				case DTokens.Char:  					return 1;  				case DTokens.Short:  				case DTokens.Ushort:  				case DTokens.Wchar:  					return 2;  				case DTokens.Int:  				case DTokens.Uint:  				case DTokens.Dchar:  				case DTokens.Float:  					return 4;  				case DTokens.Long:  				case DTokens.Ulong:  				case DTokens.Double:  					return 8;  				case DTokens.Real:  					// size is 80 bits = 10 bytes  					if (DGdbSession.Is64Bit)  						// alignment is to 16 bytes (on 64 bit architecture)  						return 16;  					else  						// and 12 bytes (on 32 bit architecture)   						return 12;  				default:  					return 1;  			}
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,SizeOf,The following statement contains a magic number: switch (typeToken) {  				case DTokens.Bool:  				case DTokens.Byte:  				case DTokens.Ubyte:  				case DTokens.Char:  					return 1;  				case DTokens.Short:  				case DTokens.Ushort:  				case DTokens.Wchar:  					return 2;  				case DTokens.Int:  				case DTokens.Uint:  				case DTokens.Dchar:  				case DTokens.Float:  					return 4;  				case DTokens.Long:  				case DTokens.Ulong:  				case DTokens.Double:  					return 8;  				case DTokens.Real:  					// size is 80 bits = 10 bytes  					if (DGdbSession.Is64Bit)  						// alignment is to 16 bytes (on 64 bit architecture)  						return 16;  					else  						// and 12 bytes (on 32 bit architecture)   						return 12;  				default:  					return 1;  			}
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetByteValue,The following statement contains a magic number: return ToString2((sbyte)array[i]' hex' 2);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetUbyteValue,The following statement contains a magic number: return ToString2(array[i]' hex' 2);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetShortValue,The following statement contains a magic number: return ToString2(BitConverter.ToInt16 (array' i)' hex' 4);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetIntValue,The following statement contains a magic number: return ToString2(BitConverter.ToInt32 (array' i)' hex' 8);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetLongValue,The following statement contains a magic number: return ToString2(BitConverter.ToInt64 (array' i)' hex' 16);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetUshortValue,The following statement contains a magic number: return ToString2(BitConverter.ToUInt16 (array' i)' hex' 4);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetUintValue,The following statement contains a magic number: return ToString2(BitConverter.ToUInt32 (array' i)' hex' 8);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetUlongValue,The following statement contains a magic number: return ToString2(BitConverter.ToUInt64 (array' i)' hex' 16);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The following statement contains a magic number: ulong realIntPart = realFraction >> 63;
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The following statement contains a magic number: realFraction &= ~(ulong)(realIntPart << 63);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The following statement contains a magic number: ushort realExponent = BitConverter.ToUInt16 (array' (i + 8));
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The following statement contains a magic number: ushort realSign = (ushort)(realExponent >> 15);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The following statement contains a magic number: ulong doubleFraction = realFraction >> 11;
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The following statement contains a magic number: const ushort realBias = 16383;
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The following statement contains a magic number: const ushort doubleBias = 1023;
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The following statement contains a magic number: const ulong bitTest = 1 << 62;
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The following statement contains a magic number: neededShift < 63 && (fractionIter & bitTest) == 0
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The following statement contains a magic number: doubleFraction = (realFraction << neededShift) >> (11 + neededShift);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The following statement contains a magic number: doubleBytes |= ((ulong)doubleExponent << 52);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetRealValue,The following statement contains a magic number: doubleBytes |= ((ulong)realSign << 63);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,FormatCharValue,The following statement contains a magic number: return hex ? String.Format("0x{1:x" + aSize*2 + "}"' aChar) : aChar.ToString();
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetCharValue,The following statement contains a magic number: chars = Encoding.UTF8.GetChars(array' i' i+2 > array.Length ? 1 : 2);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetCharValue,The following statement contains a magic number: chars = Encoding.UTF8.GetChars(array' i' i+2 > array.Length ? 1 : 2);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetWcharValue,The following statement contains a magic number: char[] chars = Encoding.Unicode.GetChars(array' i' 2);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetWcharValue,The following statement contains a magic number: return FormatCharValue(chars[0]' hex' 2);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetDcharValue,The following statement contains a magic number: char[] chars = Encoding.UTF32.GetChars(array' i' 4);
Magic Number,MonoDevelop.Debugger.Gdb.D,DGdbTools,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\DGdbTools.cs,GetDcharValue,The following statement contains a magic number: return FormatCharValue(chars[0]' hex' 4);
Magic Number,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetMembersWithOffsets,The following statement contains a magic number: size = Memory.CalcOffset (2);
Magic Number,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetMembersWithOffsets,The following statement contains a magic number: size += memberLength % 4 == 0 ? memberLength : ((memberLength / 4) + 1) * 4;
Magic Number,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetMembersWithOffsets,The following statement contains a magic number: size += memberLength % 4 == 0 ? memberLength : ((memberLength / 4) + 1) * 4;
Magic Number,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,GetMembersWithOffsets,The following statement contains a magic number: size += memberLength % 4 == 0 ? memberLength : ((memberLength / 4) + 1) * 4;
Magic Number,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,ExamArrayInfo,The following statement contains a magic number: firstItem = BitConverter.ToUInt64 (rawBytes' start + 8);
Magic Number,MonoDevelop.Debugger.Gdb.D,VariableValueExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\VariableValueExamination.cs,SizeOf,The following statement contains a magic number: return Memory.CalcOffset(2);
Magic Number,MonoDevelop.Debugger.Gdb.D,MemoryExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\MemoryExamination.cs,ReadDArrayHeader,The following statement contains a magic number: !Read (exp' 2' out hdr)
Magic Number,MonoDevelop.Debugger.Gdb.D,MemoryExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\MemoryExamination.cs,ReadObjectBytes,The following statement contains a magic number: !Read (EnforceReadRawExpression+"**(int*)(" + BuildAddressExpression(exp) + ")+" + CalcOffset(2)' out objectSize)
Magic Number,MonoDevelop.Debugger.Gdb.D,MemoryExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\MemoryExamination.cs,Read,The following statement contains a magic number: v [i] = new UIntPtr (BitConverter.ToUInt64 (rawBytes' i * 8));
Magic Number,MonoDevelop.Debugger.Gdb.D,MemoryExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\MemoryExamination.cs,WriteMemory,The following statement contains a magic number: var sb = new StringBuilder (data.Length * 2);
Magic Number,MonoDevelop.Debugger.Gdb.D,ToStringExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\ToStringExamination.cs,ToStringExamination,The following statement contains a magic number: InjectCommands = new string[2];
Magic Number,MonoDevelop.Debugger.Gdb.D,ToStringExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\ToStringExamination.cs,ToStringExamination,The following statement contains a magic number: tempStringBuilder.Append ("set $").Append (ToStringMethodId)  				.Append ("=mmap(0'").Append (assemblerInstructions.Length / 2).Append ("'7'0x20|0x2");
Magic Number,MonoDevelop.Debugger.Gdb.D,ToStringExamination,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\ToStringExamination.cs,InvokeToString,The following statement contains a magic number: var stringResult = Encoding.UTF8.GetString (returnData' 8' (int)stringLength);
Magic Number,MonoDevelop.Debugger.Gdb.D,Deh2,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb.D\Deh2.cs,InjectBreakpoint,The following statement contains a magic number: res = Session.RunCommand("-break-insert"'"*("+hookMethod+"+"+(returnOffset / 2).ToString()+")");
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,ByteArrayToHexString,The following statement contains a magic number: char[] c = new char[bytes.Length * 2];
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,ByteArrayToHexString,The following statement contains a magic number: b = bytes[i] >> 4;
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,ByteArrayToHexString,The following statement contains a magic number: c[i * 2] = (char)(55 + b + (((b-10)>>31)&-7));
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,ByteArrayToHexString,The following statement contains a magic number: c[i * 2] = (char)(55 + b + (((b-10)>>31)&-7));
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,ByteArrayToHexString,The following statement contains a magic number: c[i * 2] = (char)(55 + b + (((b-10)>>31)&-7));
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,ByteArrayToHexString,The following statement contains a magic number: c[i * 2] = (char)(55 + b + (((b-10)>>31)&-7));
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,ByteArrayToHexString,The following statement contains a magic number: c[i * 2] = (char)(55 + b + (((b-10)>>31)&-7));
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,ByteArrayToHexString,The following statement contains a magic number: c[i * 2 + 1] = (char)(55 + b + (((b-10)>>31)&-7));
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,ByteArrayToHexString,The following statement contains a magic number: c[i * 2 + 1] = (char)(55 + b + (((b-10)>>31)&-7));
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,ByteArrayToHexString,The following statement contains a magic number: c[i * 2 + 1] = (char)(55 + b + (((b-10)>>31)&-7));
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,ByteArrayToHexString,The following statement contains a magic number: c[i * 2 + 1] = (char)(55 + b + (((b-10)>>31)&-7));
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,ByteArrayToHexString,The following statement contains a magic number: c[i * 2 + 1] = (char)(55 + b + (((b-10)>>31)&-7));
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,HexStringToByteArray,The following statement contains a magic number: byte[] bytes = new byte[hex.Length/2];
Magic Number,Misc,ArrayConversionHelpers,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Misc\ArrayConversionHelpers.cs,HexStringToByteArray,The following statement contains a magic number: bytes[i] = (byte)((hex[j] > 'F' ? hex[j] - 0x57 : hex[j] > '9' ? hex[j] - 0x37 : hex[j] - 0x30) << 4);
Magic Number,MonoDevelop.Debugger.Options,OptionPanel,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Options\OptionPanel.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(2))' ((uint)(2))' false);
Magic Number,MonoDevelop.Debugger.Options,OptionPanel,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Options\OptionPanel.cs,Build,The following statement contains a magic number: this.table1 = new global::Gtk.Table (((uint)(2))' ((uint)(2))' false);
Magic Number,MonoDevelop.Debugger.Options,OptionPanel,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Options\OptionPanel.cs,Build,The following statement contains a magic number: this.table1.RowSpacing = ((uint)(6));
Magic Number,MonoDevelop.Debugger.Options,OptionPanel,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Options\OptionPanel.cs,Build,The following statement contains a magic number: this.table1.ColumnSpacing = ((uint)(6));
Magic Number,MonoDevelop.Debugger.Options,OptionPanel,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Options\OptionPanel.cs,Build,The following statement contains a magic number: w1.RightAttach = ((uint)(2));
Magic Number,MonoDevelop.Debugger.Options,OptionPanel,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Options\OptionPanel.cs,Build,The following statement contains a magic number: w1.YOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.Debugger.Options,OptionPanel,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Options\OptionPanel.cs,Build,The following statement contains a magic number: w2.XOptions = ((global::Gtk.AttachOptions)(4));
Magic Number,MonoDevelop.Debugger.Options,OptionPanel,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Options\OptionPanel.cs,Build,The following statement contains a magic number: w2.YOptions = ((global::Gtk.AttachOptions)(4));
Missing Default,MonoDevelop.Debugger.Gdb,GdbSession,D:\research\architectureSmells\repos\llucenic_MonoDevelop.Debugger.Gdb.D\Gdb\GdbSession.cs,ProcessOutput,The following switch statement is missing a default case: switch (line [0]) {  				case '^':  					lock (syncLock) {  						lastResult = new GdbCommandResult (line);  						running = (lastResult.Status == CommandStatus.Running);  						Monitor.PulseAll (syncLock);  					}  					break;  					  				case '~':  				case '&':  					if (line.Length > 1 && line[1] == '"')  						line = line.Substring (2' line.Length - 5);  					Ide.DispatchService.GuiDispatch(delegate {  						OnTargetOutput (false' line + "\n");  					});  					break;  					  				case '*':  					GdbEvent ev;  					lock (eventLock) {  						running = false;  						ev = new GdbEvent (line);  						string ti = ev.GetValueString ("thread-id");  						if (ti != null && ti != "all")  							currentThread = activeThread = int.Parse (ti);  						Monitor.PulseAll (eventLock);  						if (internalStop) {  							internalStop = false;  							return;  						}  					}  					ThreadPool.QueueUserWorkItem (delegate {  						try {  							HandleEvent (ev);  						} catch (Exception ex) {  							LoggingService.LogError("Error while processing gdb output"' ex);  						}  					});  					break;  			}
