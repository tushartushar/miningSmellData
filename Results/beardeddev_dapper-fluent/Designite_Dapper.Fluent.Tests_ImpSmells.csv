Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_Object,The length of the statement  "                Category result = dbManager.SetCommand("SELECT * FROM [dbo].[Categories] WHERE [CategoryID] = @CategoryID"' new { @CategoryID = 1 }) " is 132.
Long Statement,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Pass_Output_Parameter,The length of the statement  "                IEnumerable<Category> result = dbManager.SetCommand("SET NOCOUNT ON SELECT * FROM [dbo].[Categories] SELECT @TotalCount = COUNT(CategoryID) FROM [dbo].[Categories]") " is 165.
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_List_With_Dynamic_Parameters,The following statement contains a magic number: IEnumerable<EmployeeSalesByCountryResult> result = dbManager.SetSpCommand("Employee Sales by Country")                      .SetParameters(new {                           @Beginning_Date = new DateTime(1996' 07' 04)' @Ending_Date = new DateTime(1996' 07' 16)                       }).ExecuteList<EmployeeSalesByCountryResult>();
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_List_With_Dynamic_Parameters,The following statement contains a magic number: IEnumerable<EmployeeSalesByCountryResult> result = dbManager.SetSpCommand("Employee Sales by Country")                      .SetParameters(new {                           @Beginning_Date = new DateTime(1996' 07' 04)' @Ending_Date = new DateTime(1996' 07' 16)                       }).ExecuteList<EmployeeSalesByCountryResult>();
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_List_With_Dynamic_Parameters,The following statement contains a magic number: IEnumerable<EmployeeSalesByCountryResult> result = dbManager.SetSpCommand("Employee Sales by Country")                      .SetParameters(new {                           @Beginning_Date = new DateTime(1996' 07' 04)' @Ending_Date = new DateTime(1996' 07' 16)                       }).ExecuteList<EmployeeSalesByCountryResult>();
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_List_With_Dynamic_Parameters,The following statement contains a magic number: IEnumerable<EmployeeSalesByCountryResult> result = dbManager.SetSpCommand("Employee Sales by Country")                      .SetParameters(new {                           @Beginning_Date = new DateTime(1996' 07' 04)' @Ending_Date = new DateTime(1996' 07' 16)                       }).ExecuteList<EmployeeSalesByCountryResult>();
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_List_With_Dynamic_Parameters,The following statement contains a magic number: IEnumerable<EmployeeSalesByCountryResult> result = dbManager.SetSpCommand("Employee Sales by Country")                      .SetParameters(new {                           @Beginning_Date = new DateTime(1996' 07' 04)' @Ending_Date = new DateTime(1996' 07' 16)                       }).ExecuteList<EmployeeSalesByCountryResult>();
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_List_With_Dynamic_Parameters,The following statement contains a magic number: IEnumerable<EmployeeSalesByCountryResult> result = dbManager.SetSpCommand("Employee Sales by Country")                      .SetParameters(new {                           @Beginning_Date = new DateTime(1996' 07' 04)' @Ending_Date = new DateTime(1996' 07' 16)                       }).ExecuteList<EmployeeSalesByCountryResult>();
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_List_With_Mixed_Parameters,The following statement contains a magic number: IEnumerable<EmployeeSalesByCountryResult> result = dbManager.SetSpCommand("Employee Sales by Country"' new {                           @Beginning_Date = new DateTime(1996' 07' 04)                       }).SetParameter("@Ending_Date"' new DateTime(1996' 07' 16))                      .ExecuteList<EmployeeSalesByCountryResult>();
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_List_With_Mixed_Parameters,The following statement contains a magic number: IEnumerable<EmployeeSalesByCountryResult> result = dbManager.SetSpCommand("Employee Sales by Country"' new {                           @Beginning_Date = new DateTime(1996' 07' 04)                       }).SetParameter("@Ending_Date"' new DateTime(1996' 07' 16))                      .ExecuteList<EmployeeSalesByCountryResult>();
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_List_With_Mixed_Parameters,The following statement contains a magic number: IEnumerable<EmployeeSalesByCountryResult> result = dbManager.SetSpCommand("Employee Sales by Country"' new {                           @Beginning_Date = new DateTime(1996' 07' 04)                       }).SetParameter("@Ending_Date"' new DateTime(1996' 07' 16))                      .ExecuteList<EmployeeSalesByCountryResult>();
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_List_With_Mixed_Parameters,The following statement contains a magic number: IEnumerable<EmployeeSalesByCountryResult> result = dbManager.SetSpCommand("Employee Sales by Country"' new {                           @Beginning_Date = new DateTime(1996' 07' 04)                       }).SetParameter("@Ending_Date"' new DateTime(1996' 07' 16))                      .ExecuteList<EmployeeSalesByCountryResult>();
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_List_With_Mixed_Parameters,The following statement contains a magic number: IEnumerable<EmployeeSalesByCountryResult> result = dbManager.SetSpCommand("Employee Sales by Country"' new {                           @Beginning_Date = new DateTime(1996' 07' 04)                       }).SetParameter("@Ending_Date"' new DateTime(1996' 07' 16))                      .ExecuteList<EmployeeSalesByCountryResult>();
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_List_With_Mixed_Parameters,The following statement contains a magic number: IEnumerable<EmployeeSalesByCountryResult> result = dbManager.SetSpCommand("Employee Sales by Country"' new {                           @Beginning_Date = new DateTime(1996' 07' 04)                       }).SetParameter("@Ending_Date"' new DateTime(1996' 07' 16))                      .ExecuteList<EmployeeSalesByCountryResult>();
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_Scalar,The following statement contains a magic number: Assert.Equal(8' result);
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Pass_Output_Parameter,The following statement contains a magic number: Assert.Equal(8' dbManager.GetParameterValue<int>("@TotalCount"));
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_Multiple,The following statement contains a magic number: Assert.Equal(8' result.Item1.Count());
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_Multiple,The following statement contains a magic number: Assert.Equal(8' result.Item2.First());
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_Multiple2,The following statement contains a magic number: Assert.Equal(8' result.Item2.Count());
Magic Number,Dapper.Fluent.Tests,Facts,D:\research\architectureSmells\repos\beardeddev_dapper-fluent\Dapper.Fluent.Test\Facts.cs,Test_Should_Execute_Multiple2,The following statement contains a magic number: Assert.Equal(8' result.Item3.First());
