Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,SetUp,The length of the statement  "            TestService.Configuration = new MongoConfiguration { MetadataBuildStrategy = new MongoConfiguration.Metadata { PrefetchRows = -1' UpdateDynamically = false } };" is 160.
Long Statement,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The length of the statement  "            Assert.AreEqual(new DateTime(2012' 1' 1)' clr.NullableDateTimeValue' "The NullableDateTimeValue is not correctly filled.");" is 123.
Long Statement,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableDateTimeValue,The length of the statement  "            Assert.AreEqual(new DateTime(2012' 1' 1)' clr.NullableDateTimeValue' "The NullableDateTimeValue is not correctly filled.");" is 123.
Long Statement,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,SetUp,The length of the statement  "            TestService.Configuration = new MongoConfiguration { MetadataBuildStrategy = new MongoConfiguration.Metadata { PrefetchRows = -1' UpdateDynamically = false } };" is 160.
Long Statement,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,Flickr,The length of the statement  "            Assert.AreEqual("spain dolphins tenerife canaries lagomera aqualand playadelasamericas junglepark losgigantos loscristines talkontravel"' result.items.First().tags);" is 165.
Long Statement,Mongo.Context.Tests,QueryableServiceMetadataTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\MetadataTests.cs,VariableTypesPrefetchNoneUpdate,The length of the statement  "            TestService.Configuration = new MongoConfiguration { MetadataBuildStrategy = new MongoConfiguration.Metadata { PrefetchRows = 0' UpdateDynamically = true } };" is 158.
Long Statement,Mongo.Context.Tests,QueryableServiceMetadataTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\MetadataTests.cs,VariableTypesPrefetchOneUpdate,The length of the statement  "            TestService.Configuration = new MongoConfiguration { MetadataBuildStrategy = new MongoConfiguration.Metadata { PrefetchRows = 1' UpdateDynamically = true } };" is 158.
Long Statement,Mongo.Context.Tests,QueryableServiceMetadataTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\MetadataTests.cs,VariableTypesPrefetchTwoUpdate,The length of the statement  "            TestService.Configuration = new MongoConfiguration { MetadataBuildStrategy = new MongoConfiguration.Metadata { PrefetchRows = 2' UpdateDynamically = true } };" is 158.
Long Statement,Mongo.Context.Tests,NativeTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\NativeTests.cs,SetUp,The length of the statement  "            TestService.Configuration = new MongoConfiguration { MetadataBuildStrategy = new MongoConfiguration.Metadata { PrefetchRows = -1' UpdateDynamically = false } };" is 160.
Long Statement,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,SetUp,The length of the statement  "            TestService.Configuration = new MongoConfiguration { MetadataBuildStrategy = new MongoConfiguration.Metadata { PrefetchRows = -1' UpdateDynamically = false } }; " is 160.
Long Statement,Mongo.Context.Tests,QueryableServiceInterceptorTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,SetUp,The length of the statement  "            TestService.Configuration = new MongoConfiguration { MetadataBuildStrategy = new MongoConfiguration.Metadata { PrefetchRows = -1' UpdateDynamically = false } }; " is 160.
Long Statement,Mongo.Context.Tests,QueryableServiceInterceptorTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesCountWithVBEqualInterceptorVerifyResult,The length of the statement  "            ProductQueryableServiceWithQueryInterceptor.ProductQueryInterceptor = (x => (bool)(ExtensionMethods.CompareObjectEqual(x.GetValue("Name").ToString()' "Wine"' false))); " is 167.
Long Statement,Mongo.Context.Tests,QueryableServiceInterceptorTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesCountWithVBNotEqualInterceptorVerifyResult,The length of the statement  "            ProductQueryableServiceWithQueryInterceptor.ProductQueryInterceptor = (x => (bool)(ExtensionMethods.CompareObjectNotEqual(x.GetValue("Name").ToString()' "Wine"' false))); " is 170.
Long Statement,Mongo.Context.Tests,QueryableServiceInterceptorTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesCountWithVBConditionalEqualInterceptorVerifyResult,The length of the statement  "            ProductQueryableServiceWithQueryInterceptor.ProductQueryInterceptor = (x => (ExtensionMethods.ConditionalCompareObjectEqual(x.GetValue("Name").ToString()' "Wine"' false))); " is 172.
Long Statement,Mongo.Context.Tests,QueryableServiceInterceptorTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesCountWithVBConditionalNotEqualInterceptorVerifyResult,The length of the statement  "            ProductQueryableServiceWithQueryInterceptor.ProductQueryInterceptor = (x => (ExtensionMethods.ConditionalCompareObjectNotEqual(x.GetValue("Name").ToString()' "Wine"' false))); " is 175.
Long Statement,Mongo.Context.Tests,TestBase<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestBase.cs,ValidateColumnNullability,The length of the statement  "                        Assert.False(column.IsNullable' "Column {0} belongs to a primary key and should not be marked as nullable"' column.ActualName);" is 127.
Long Statement,Mongo.Context.Tests,TestBase<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestBase.cs,ValidatePropertyNames,The length of the statement  "            Action<EdmProperty> validator = x => Assert.False(x.Name.StartsWith("_")' "Property {0} begins with invalid character"' x.Name);" is 128.
Long Statement,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithJsonSamples,The length of the statement  "                var jsonCollection = GetResourceAsString(collectionName + ".json").Split(new string[] { "---" }' StringSplitOptions.RemoveEmptyEntries); " is 136.
Empty Catch Block,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,ProjectionVerifyExcluded,The method has an empty catch block.
Magic Number,Mongo.Context.Tests,BsonIdTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\BsonIdTests.cs,AllTypesWithoutExplicitIdVerifyResultCountAndId,The following statement contains a magic number: Assert.AreEqual(3' result.Count' "The service returned unexpected number of results.");
Magic Number,Mongo.Context.Tests,BsonIdTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\BsonIdTests.cs,AllTypesWithBsonIdVerifyResultCountAndId,The following statement contains a magic number: Assert.AreEqual(3' result.Count' "The service returned unexpected number of results.");
Magic Number,Mongo.Context.Tests,BsonIdTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\BsonIdTests.cs,AllTypesWithIntIdVerifyResultCountAndId,The following statement contains a magic number: Assert.AreEqual(3' result.Count' "The service returned unexpected number of results.");
Magic Number,Mongo.Context.Tests,BsonIdTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\BsonIdTests.cs,AllTypesWithStringIdVerifyResultCountAndId,The following statement contains a magic number: Assert.AreEqual(3' result.Count' "The service returned unexpected number of results.");
Magic Number,Mongo.Context.Tests,BsonIdTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\BsonIdTests.cs,AllTypesWithGuidIdVerifyResultCountAndId,The following statement contains a magic number: Assert.AreEqual(3' result.Count' "The service returned unexpected number of results.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2012' 1' 1)' clr.DateTimeValue' "The DateTimeValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(new DateTime(2012' 1' 1)' clr.NullableDateTimeValue' "The NullableDateTimeValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(2' clr.SByteValue' "The SByteValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(2' clr.NullableSByteValue' "The NullableSByteValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(3' clr.Int16Value' "The Int16Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(3' clr.NullableInt16Value' "The NullableInt16Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(4' clr.UInt16Value' "The UInt16Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(4' clr.NullableUInt16Value' "The NullableUInt16Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(5' clr.Int32Value' "The Int32Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(5' clr.NullableInt32Value' "The NullableInt32Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(6' clr.UInt32Value' "The UInt32Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(6' clr.NullableUInt32Value' "The NullableUInt32Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(7' clr.Int64Value' "The Int64Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(7' clr.NullableInt64Value' "The NullableInt64Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(8' clr.UInt64Value' "The UInt64Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(8' clr.NullableUInt64Value' "The NullableUInt64Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(9' clr.SingleValue' "The SingleValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(9' clr.NullableSingleValue' "The NullableSingleValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(10' clr.DoubleValue' "The DoubleValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,VerifyClrTypes,The following statement contains a magic number: Assert.AreEqual(10' clr.NullableDoubleValue' "The NullableDoubleValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrDateTimeValue,The following statement contains a magic number: Assert.AreEqual(new DateTime(2012' 1' 1)' clr.DateTimeValue' "The DateTimeValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableDateTimeValue,The following statement contains a magic number: Assert.AreEqual(new DateTime(2012' 1' 1)' clr.NullableDateTimeValue' "The NullableDateTimeValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrSByteValue,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.SByteValue == 2);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrSByteValue,The following statement contains a magic number: Assert.AreEqual(2' clr.SByteValue' "The SByteValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableSByteValue,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.NullableSByteValue == 2);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableSByteValue,The following statement contains a magic number: Assert.AreEqual(2' clr.NullableSByteValue' "The NullableSByteValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrInt16Value,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.Int16Value == 3);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrInt16Value,The following statement contains a magic number: Assert.AreEqual(3' clr.Int16Value' "The Int16Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableInt16Value,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.NullableInt16Value == 3);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableInt16Value,The following statement contains a magic number: Assert.AreEqual(3' clr.NullableInt16Value' "The NullableInt16Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrUInt16Value,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.UInt16Value == 4);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrUInt16Value,The following statement contains a magic number: Assert.AreEqual(4' clr.UInt16Value' "The UInt16Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableUInt16Value,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.NullableUInt16Value == 4);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableUInt16Value,The following statement contains a magic number: Assert.AreEqual(4' clr.NullableUInt16Value' "The NullableUInt16Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrInt32Value,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.Int32Value == 5);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrInt32Value,The following statement contains a magic number: Assert.AreEqual(5' clr.Int32Value' "The Int32Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableInt32Value,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.NullableInt32Value == 5);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableInt32Value,The following statement contains a magic number: Assert.AreEqual(5' clr.NullableInt32Value' "The NullableInt32Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrUInt32Value,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.UInt32Value == 6);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrUInt32Value,The following statement contains a magic number: Assert.AreEqual(6' clr.UInt32Value' "The UInt32Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableUInt32Value,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.NullableUInt32Value == 6);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableUInt32Value,The following statement contains a magic number: Assert.AreEqual(6' clr.NullableUInt32Value' "The NullableUInt32Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrInt64Value,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.Int64Value == 7);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrInt64Value,The following statement contains a magic number: Assert.AreEqual(7' clr.Int64Value' "The Int64Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableInt64Value,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.NullableInt64Value == 7);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableInt64Value,The following statement contains a magic number: Assert.AreEqual(7' clr.NullableInt64Value' "The NullableInt64Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrUInt64Value,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.UInt64Value == 8);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrUInt64Value,The following statement contains a magic number: Assert.AreEqual(8' clr.UInt64Value' "The UInt64Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableUInt64Value,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.NullableUInt64Value == 8);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableUInt64Value,The following statement contains a magic number: Assert.AreEqual(8' clr.NullableUInt64Value' "The NullableUInt64Value is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrSingleValue,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.SingleValue == 9);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrSingleValue,The following statement contains a magic number: Assert.AreEqual(9' clr.SingleValue' "The SingleValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableSingleValue,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.NullableSingleValue == 9);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableSingleValue,The following statement contains a magic number: Assert.AreEqual(9' clr.NullableSingleValue' "The NullableSingleValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrDoubleValue,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.DoubleValue == 10);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrDoubleValue,The following statement contains a magic number: Assert.AreEqual(10' clr.DoubleValue' "The DoubleValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClNullableDoubleValue,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.NullableDoubleValue == 10);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClNullableDoubleValue,The following statement contains a magic number: Assert.AreEqual(10' clr.NullableDoubleValue' "The NullableDoubleValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrDecimalValue,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.DecimalValue == 11.1M);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrDecimalValue,The following statement contains a magic number: Assert.AreEqual(11' clr.DecimalValue' "The DecimalValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableDecimalValue,The following statement contains a magic number: var clr = ctx.ClrTypes.Find(ctx.ClrTypes.NullableDecimalValue == 11M);
Magic Number,Mongo.Context.Tests,ClrTypeTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\ClrTypeTests.cs,QueryClrNullableDecimalValue,The following statement contains a magic number: Assert.AreEqual(11' clr.NullableDecimalValue' "The NullableDecimalValue is not correctly filled.");
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,Colors,The following statement contains a magic number: Assert.AreEqual(7' result.colorsArray.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,Colors,The following statement contains a magic number: Assert.AreEqual("black"' result.colorsArray[6].colorName);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,Colors,The following statement contains a magic number: Assert.AreEqual("#000"' result.colorsArray[6].hexValue);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,Facebook,The following statement contains a magic number: Assert.AreEqual(2' result.data.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,Facebook,The following statement contains a magic number: Assert.AreEqual(2' result.data[0].actions.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,GoogleMaps,The following statement contains a magic number: Assert.AreEqual(3' result.markers.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,GoogleMaps,The following statement contains a magic number: Assert.AreEqual(40.266044' result.markers.First().point.latitude);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,GoogleMaps,The following statement contains a magic number: Assert.AreEqual(-74.718479' result.markers.First().point.longitude);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,iPhone,The following statement contains a magic number: Assert.AreEqual(18' result.menu.items.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,Twitter,The following statement contains a magic number: Assert.AreEqual(109' result.results.metadata.recent_retweets);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,Nested,The following statement contains a magic number: Assert.AreEqual(4' result.batters.batter.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,Nested,The following statement contains a magic number: Assert.AreEqual(7' result.topping.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,ArrayOfNested,The following statement contains a magic number: Assert.AreEqual(4' result.nestedArray.First().batters.batter.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,ArrayOfNested,The following statement contains a magic number: Assert.AreEqual(7' result.nestedArray.First().topping.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,ArrayInArray,The following statement contains a magic number: Assert.AreEqual(2' (result[0] as IDictionary<string' object>).Count());
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,EmptyArray,The following statement contains a magic number: Assert.AreEqual(7' result[0].topping.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,NullArray_a,The following statement contains a magic number: Assert.AreEqual(2' result[0].arrays.a.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,NullArray_a,The following statement contains a magic number: Assert.AreEqual(2' result[0].arrays.a[0].nonid);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,NullArray_b,The following statement contains a magic number: Assert.AreEqual(2' result[0].arrays.b.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,NullArray_b,The following statement contains a magic number: Assert.AreEqual(2' result[0].arrays.b[1].nonid);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,NullArray_b,The following statement contains a magic number: Assert.AreEqual(2' result[1].arrays.b.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,NullArray_b,The following statement contains a magic number: Assert.AreEqual(2' result[1].arrays.b[1].nonid);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,NullArray_c,The following statement contains a magic number: Assert.AreEqual(2' result[1].arrays.c.Count);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,NullArray_c,The following statement contains a magic number: Assert.AreEqual(2' result[1].arrays.c[1].nonid);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,NullArray_d,The following statement contains a magic number: Assert.AreEqual(2' result[1].arrays.d[0].nonid);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,NullArray_e,The following statement contains a magic number: Assert.AreEqual(2' result[1].arrays.d[0].nonid);
Magic Number,Mongo.Context.Tests,JsonSamplesTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\JsonSamplesTests.cs,UnresolvedArray,The following statement contains a magic number: Assert.AreEqual(2' result[0].arrays.a.Count);
Magic Number,Mongo.Context.Tests,MetadataTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\MetadataTests.cs,VariableTypesPrefetchTwoForwardNoUpdate,The following statement contains a magic number: TestService.Configuration = new MongoConfiguration                 {                     MetadataBuildStrategy = new MongoConfiguration.Metadata                     {                         PrefetchRows = 2'                         FetchPosition = MongoConfiguration.FetchPosition.Start'                         UpdateDynamically = false                     }                 };
Magic Number,Mongo.Context.Tests,MetadataTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\MetadataTests.cs,VariableTypesPrefetchTwoBackwardNoUpdate,The following statement contains a magic number: TestService.Configuration = new MongoConfiguration                 {                     MetadataBuildStrategy = new MongoConfiguration.Metadata                     {                         PrefetchRows = 2'                         FetchPosition = MongoConfiguration.FetchPosition.End'                         UpdateDynamically = false                     }                 };
Magic Number,Mongo.Context.Tests,MetadataTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\MetadataTests.cs,AssertResultHasTwoColumns,The following statement contains a magic number: Assert.AreEqual(2' result[1].IntValue);
Magic Number,Mongo.Context.Tests,MetadataTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\MetadataTests.cs,AssertResultHasTwoColumns,The following statement contains a magic number: Assert.Throws<RuntimeBinderException>(() => { var x = result[2].DecimalValue; });
Magic Number,Mongo.Context.Tests,MetadataTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\MetadataTests.cs,AssertResultHasThreeColumns,The following statement contains a magic number: Assert.AreEqual(2' result[1].IntValue);
Magic Number,Mongo.Context.Tests,MetadataTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\MetadataTests.cs,AssertResultHasThreeColumns,The following statement contains a magic number: Assert.AreEqual("3"' result[2].DecimalValue);
Magic Number,Mongo.Context.Tests,QueryableServiceMetadataTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\MetadataTests.cs,VariableTypesPrefetchTwoUpdate,The following statement contains a magic number: TestService.Configuration = new MongoConfiguration { MetadataBuildStrategy = new MongoConfiguration.Metadata { PrefetchRows = 2' UpdateDynamically = true } };
Magic Number,Mongo.Context.Tests,NativeTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\NativeTests.cs,FilterEqualQuantityValue,The following statement contains a magic number: var result = collection.AsQueryable().Where(x => x.Quantity.Value == 7).Single();
Magic Number,Mongo.Context.Tests,NativeTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\NativeTests.cs,Twitter,The following statement contains a magic number: Assert.AreEqual(1478555574' result.First().results.id);
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesVerifyResultCount,The following statement contains a magic number: Assert.AreEqual(3' result.Count' "The service returned unexpected number of results.");
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesSkipOneVerifyResultCount,The following statement contains a magic number: Assert.AreEqual(2' result.Count' "The service returned unexpected number of results.");
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesCountVerifyResult,The following statement contains a magic number: Assert.AreEqual(3' result' "The count is not correctly computed.");
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesVerifyID,The following statement contains a magic number: Assert.AreEqual(3' result[2].ID' "The ID is not correctly filled.");
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesVerifyID,The following statement contains a magic number: Assert.AreEqual(3' result[2].ID' "The ID is not correctly filled.");
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesVerifyReleaseDate,The following statement contains a magic number: Assert.AreEqual(new DateTime(1992' 1' 1)' result[0].ReleaseDate' "The ReleaseDate is not correctly filled.");
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesVerifyNonNullDiscontinueDate,The following statement contains a magic number: Assert.NotNull(result[2].DiscontinueDate' "The DiscontinueDate must not be null.");
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesOrderby,The following statement contains a magic number: i < 2
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesOrderbyDescending,The following statement contains a magic number: i < 2
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesVerifyQuantityValue,The following statement contains a magic number: Assert.AreEqual(12' result[0].Quantity.Value' "Unexpected quantity value.");
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,FilterGreaterID,The following statement contains a magic number: Assert.AreEqual(3' result.Count);
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,FilterNameContainsEqualsTrue,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,FilterGreaterRating,The following statement contains a magic number: var result = ctx.Products.FindAll(ctx.Products.Rating > 3).ToList();
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,FilterGreaterRating,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,FilterNameLength,The following statement contains a magic number: var result = ctx.Products.FindAll(ctx.Products.Name.Length() == 4).ToList();
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,FilterNameLength,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,FilterGreaterIDAndNameLength,The following statement contains a magic number: var result = ctx.Products.FindAll(ctx.Products.ID > 0 && ctx.Products.Name.Length() == 4).ToList();
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,FilterGreaterIDAndNameLength,The following statement contains a magic number: Assert.AreEqual(2' result.Count);
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,FilterNameLengthOrderByCountVerifyResult,The following statement contains a magic number: var result = ctx.Products.FindAll(ctx.Products.Name.Length() == 4).OrderBy(ctx.Products.Rating).Count();
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,FilterNameLengthOrderByCountVerifyResult,The following statement contains a magic number: Assert.AreEqual(2' result' "The count is not correctly computed.");
Magic Number,Mongo.Context.Tests,QueryTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,FilterEqualQuantityValue,The following statement contains a magic number: var result = ctx.Products.Find(ctx.Products.Quantity.Value == 7);
Magic Number,Mongo.Context.Tests,QueryableServiceQueryTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,FilterEqualQuantityValue_NoDynamicTypes,The following statement contains a magic number: Assert.Throws<WebRequestException>(() => { var x = ctx.Products.Find(ctx.Products.Quantity.Value == 7); });
Magic Number,Mongo.Context.Tests,QueryableServiceInterceptorTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesCountWithVBNotEqualInterceptorVerifyResult,The following statement contains a magic number: Assert.AreEqual(2' result' "The count is not correctly computed.");
Magic Number,Mongo.Context.Tests,QueryableServiceInterceptorTests,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\QueryTests.cs,AllEntitiesCountWithVBConditionalNotEqualInterceptorVerifyResult,The following statement contains a magic number: Assert.AreEqual(2' result' "The count is not correctly computed.");
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 1'                          Name = "Bread"'                          Description = "Whole grain bread"'                          ReleaseDate = new DateTime(1992' 1' 1)'                          DiscontinueDate = null'                          Rating = 4'                          Quantity = new Quantity                              {                                  Value = (double)12'                                   Units = "pieces"'                              }'                          Supplier = new Supplier                              {                                  Name = "City Bakery"'                                  Addresses = new[]                                      {                                          new Address { Type = AddressType.Postal' Lines = new[] {"P.O.Box 89"' "123456 City"} }'                                          new Address { Type = AddressType.Street' Lines = new[] {"Long Street 100"' "654321 City"} }'                                      }'                              }'                          Category = categoryFood'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 1'                          Name = "Bread"'                          Description = "Whole grain bread"'                          ReleaseDate = new DateTime(1992' 1' 1)'                          DiscontinueDate = null'                          Rating = 4'                          Quantity = new Quantity                              {                                  Value = (double)12'                                   Units = "pieces"'                              }'                          Supplier = new Supplier                              {                                  Name = "City Bakery"'                                  Addresses = new[]                                      {                                          new Address { Type = AddressType.Postal' Lines = new[] {"P.O.Box 89"' "123456 City"} }'                                          new Address { Type = AddressType.Street' Lines = new[] {"Long Street 100"' "654321 City"} }'                                      }'                              }'                          Category = categoryFood'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 1'                          Name = "Bread"'                          Description = "Whole grain bread"'                          ReleaseDate = new DateTime(1992' 1' 1)'                          DiscontinueDate = null'                          Rating = 4'                          Quantity = new Quantity                              {                                  Value = (double)12'                                   Units = "pieces"'                              }'                          Supplier = new Supplier                              {                                  Name = "City Bakery"'                                  Addresses = new[]                                      {                                          new Address { Type = AddressType.Postal' Lines = new[] {"P.O.Box 89"' "123456 City"} }'                                          new Address { Type = AddressType.Street' Lines = new[] {"Long Street 100"' "654321 City"} }'                                      }'                              }'                          Category = categoryFood'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 2'                          Name = "Milk"'                          Description = "Low fat milk"'                          ReleaseDate = new DateTime(1995' 10' 21)'                          DiscontinueDate = null'                          Rating = 3'                          Quantity = new Quantity                              {                                  Value = (double)4'                                  Units = "liters"'                              }'                          Supplier = new Supplier                              {                                  Name = "Green Farm"'                                  Addresses = new[]                                      {                                          new Address { Type = AddressType.Street' Lines = new[] {"P.O.Box 123"' "321321 Green Village"} }'                                      }'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 2'                          Name = "Milk"'                          Description = "Low fat milk"'                          ReleaseDate = new DateTime(1995' 10' 21)'                          DiscontinueDate = null'                          Rating = 3'                          Quantity = new Quantity                              {                                  Value = (double)4'                                  Units = "liters"'                              }'                          Supplier = new Supplier                              {                                  Name = "Green Farm"'                                  Addresses = new[]                                      {                                          new Address { Type = AddressType.Street' Lines = new[] {"P.O.Box 123"' "321321 Green Village"} }'                                      }'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 2'                          Name = "Milk"'                          Description = "Low fat milk"'                          ReleaseDate = new DateTime(1995' 10' 21)'                          DiscontinueDate = null'                          Rating = 3'                          Quantity = new Quantity                              {                                  Value = (double)4'                                  Units = "liters"'                              }'                          Supplier = new Supplier                              {                                  Name = "Green Farm"'                                  Addresses = new[]                                      {                                          new Address { Type = AddressType.Street' Lines = new[] {"P.O.Box 123"' "321321 Green Village"} }'                                      }'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 2'                          Name = "Milk"'                          Description = "Low fat milk"'                          ReleaseDate = new DateTime(1995' 10' 21)'                          DiscontinueDate = null'                          Rating = 3'                          Quantity = new Quantity                              {                                  Value = (double)4'                                  Units = "liters"'                              }'                          Supplier = new Supplier                              {                                  Name = "Green Farm"'                                  Addresses = new[]                                      {                                          new Address { Type = AddressType.Street' Lines = new[] {"P.O.Box 123"' "321321 Green Village"} }'                                      }'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 2'                          Name = "Milk"'                          Description = "Low fat milk"'                          ReleaseDate = new DateTime(1995' 10' 21)'                          DiscontinueDate = null'                          Rating = 3'                          Quantity = new Quantity                              {                                  Value = (double)4'                                  Units = "liters"'                              }'                          Supplier = new Supplier                              {                                  Name = "Green Farm"'                                  Addresses = new[]                                      {                                          new Address { Type = AddressType.Street' Lines = new[] {"P.O.Box 123"' "321321 Green Village"} }'                                      }'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 2'                          Name = "Milk"'                          Description = "Low fat milk"'                          ReleaseDate = new DateTime(1995' 10' 21)'                          DiscontinueDate = null'                          Rating = 3'                          Quantity = new Quantity                              {                                  Value = (double)4'                                  Units = "liters"'                              }'                          Supplier = new Supplier                              {                                  Name = "Green Farm"'                                  Addresses = new[]                                      {                                          new Address { Type = AddressType.Street' Lines = new[] {"P.O.Box 123"' "321321 Green Village"} }'                                      }'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 3'                          Name = "Wine"'                          Description = "Red wine' year 2003"'                          ReleaseDate = new DateTime(2003' 11' 24)'                          DiscontinueDate = new DateTime(2008' 3' 1)'                          Rating = 5'                          Quantity = new Quantity                              {                                  Value = (double)7'                                  Units = "bottles"'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 3'                          Name = "Wine"'                          Description = "Red wine' year 2003"'                          ReleaseDate = new DateTime(2003' 11' 24)'                          DiscontinueDate = new DateTime(2008' 3' 1)'                          Rating = 5'                          Quantity = new Quantity                              {                                  Value = (double)7'                                  Units = "bottles"'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 3'                          Name = "Wine"'                          Description = "Red wine' year 2003"'                          ReleaseDate = new DateTime(2003' 11' 24)'                          DiscontinueDate = new DateTime(2008' 3' 1)'                          Rating = 5'                          Quantity = new Quantity                              {                                  Value = (double)7'                                  Units = "bottles"'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 3'                          Name = "Wine"'                          Description = "Red wine' year 2003"'                          ReleaseDate = new DateTime(2003' 11' 24)'                          DiscontinueDate = new DateTime(2008' 3' 1)'                          Rating = 5'                          Quantity = new Quantity                              {                                  Value = (double)7'                                  Units = "bottles"'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 3'                          Name = "Wine"'                          Description = "Red wine' year 2003"'                          ReleaseDate = new DateTime(2003' 11' 24)'                          DiscontinueDate = new DateTime(2008' 3' 1)'                          Rating = 5'                          Quantity = new Quantity                              {                                  Value = (double)7'                                  Units = "bottles"'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 3'                          Name = "Wine"'                          Description = "Red wine' year 2003"'                          ReleaseDate = new DateTime(2003' 11' 24)'                          DiscontinueDate = new DateTime(2008' 3' 1)'                          Rating = 5'                          Quantity = new Quantity                              {                                  Value = (double)7'                                  Units = "bottles"'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 3'                          Name = "Wine"'                          Description = "Red wine' year 2003"'                          ReleaseDate = new DateTime(2003' 11' 24)'                          DiscontinueDate = new DateTime(2008' 3' 1)'                          Rating = 5'                          Quantity = new Quantity                              {                                  Value = (double)7'                                  Units = "bottles"'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: products.Insert(                  new ClientProduct                      {                          ID = 3'                          Name = "Wine"'                          Description = "Red wine' year 2003"'                          ReleaseDate = new DateTime(2003' 11' 24)'                          DiscontinueDate = new DateTime(2008' 3' 1)'                          Rating = 5'                          Quantity = new Quantity                              {                                  Value = (double)7'                                  Units = "bottles"'                              }'                          Category = categoryBeverages'                      });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithClrTypes,The following statement contains a magic number: clrTypes.Insert(                  new ClrType                  {                      BinaryValue = new[] { (byte)1 }'                      BoolValue = true'                      NullableBoolValue = true'                      DateTimeValue = new DateTime(2012' 1' 1)'                      NullableDateTimeValue = new DateTime(2012' 1' 1)'                      TimeSpanValue = new TimeSpan(1' 2' 3)'                      NullableTimeSpanValue = new TimeSpan(1' 2' 3)'                      GuidValue = Guid.Empty'                      NullableGuidValue = Guid.Empty'                      ByteValue = (byte)1'                      NullableByteValue = (byte)1'                      SByteValue = (sbyte)2'                      NullableSByteValue = (sbyte)2'                      Int16Value = 3'                      NullableInt16Value = 3'                      UInt16Value = 4'                      NullableUInt16Value = 4'                      Int32Value = 5'                      NullableInt32Value = 5'                      UInt32Value = 6'                      NullableUInt32Value = 6'                      Int64Value = 7'                      NullableInt64Value = 7'                      UInt64Value = 8'                      NullableUInt64Value = 8'                      SingleValue = 9'                      NullableSingleValue = 9'                      DoubleValue = 10'                      NullableDoubleValue = 10'                      DecimalValue = 11'                      NullableDecimalValue = 11'                      StringValue = "abc"'                      ObjectIdValue = new BsonObjectId(new ObjectId(100' 200' 300' 400))'                  });
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithVariableTypes,The following statement contains a magic number: variableTypes.Insert(new TypeWithTwoFields { StringValue = "2"' IntValue = 2 }.ToBsonDocument());
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithVariableTypes,The following statement contains a magic number: variableTypes.Insert(new TypeWithThreeFields { StringValue = "3"' IntValue = 3' DecimalValue = 3m }.ToBsonDocument());
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithVariableTypes,The following statement contains a magic number: variableTypes.Insert(new TypeWithThreeFields { StringValue = "3"' IntValue = 3' DecimalValue = 3m }.ToBsonDocument());
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithBsonIdTypes,The following statement contains a magic number: typeWithIntId.Insert(new TypeWithIntId { Id = 2' Name = "B" }.ToBsonDocument());
Magic Number,Mongo.Context.Tests,TestData,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestData.cs,PopulateWithBsonIdTypes,The following statement contains a magic number: typeWithIntId.Insert(new TypeWithIntId { Id = 3' Name = "C" }.ToBsonDocument());
Magic Number,Mongo.Context.Tests,TestService,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\TestService.cs,TestService,The following statement contains a magic number: i < 100
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,Insert,The following statement contains a magic number: ctx.Products.Insert(ID: 101' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,Insert,The following statement contains a magic number: ctx.Products.Insert(ID: 101' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,Insert,The following statement contains a magic number: ctx.Products.Insert(ID: 101' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,Insert,The following statement contains a magic number: ctx.Products.Insert(ID: 101' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,Insert,The following statement contains a magic number: var product = ctx.Products.Find(ctx.Products.ID == 101);
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateSingleField,The following statement contains a magic number: ctx.Products.Insert(ID: 102' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateSingleField,The following statement contains a magic number: ctx.Products.Insert(ID: 102' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateSingleField,The following statement contains a magic number: ctx.Products.Insert(ID: 102' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateSingleField,The following statement contains a magic number: ctx.Products.Insert(ID: 102' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateSingleField,The following statement contains a magic number: var product = ctx.Products.Find(ctx.Products.ID == 102);
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateSingleField,The following statement contains a magic number: ctx.Products.UpdateByID(ID: 102' ReleaseDate: product.ReleaseDate.AddDays(1));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateSingleField,The following statement contains a magic number: product = ctx.Products.Find(ctx.Products.ID == 102);
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateSingleField,The following statement contains a magic number: Assert.AreEqual(14' product.ReleaseDate.Day' "The update product doesn't have correct ReleaseDate.");
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateMultipleFields,The following statement contains a magic number: ctx.Products.Insert(ID: 103' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateMultipleFields,The following statement contains a magic number: ctx.Products.Insert(ID: 103' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateMultipleFields,The following statement contains a magic number: ctx.Products.Insert(ID: 103' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateMultipleFields,The following statement contains a magic number: ctx.Products.Insert(ID: 103' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateMultipleFields,The following statement contains a magic number: var product = ctx.Products.Find(ctx.Products.ID == 103);
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateMultipleFields,The following statement contains a magic number: ctx.Products.UpdateByID(ID: 103' Description: "Green apple"' ReleaseDate: product.ReleaseDate.AddDays(1));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateMultipleFields,The following statement contains a magic number: product = ctx.Products.Find(ctx.Products.ID == 103);
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,UpdateMultipleFields,The following statement contains a magic number: Assert.AreEqual(14' product.ReleaseDate.Day' "The update product doesn't have correct ReleaseDate.");
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,Delete,The following statement contains a magic number: ctx.Products.Insert(ID: 104' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,Delete,The following statement contains a magic number: ctx.Products.Insert(ID: 104' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,Delete,The following statement contains a magic number: ctx.Products.Insert(ID: 104' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,Delete,The following statement contains a magic number: ctx.Products.Insert(ID: 104' Name: "Test"' Description: "Red apple"' ReleaseDate: new DateTime(2009' 9' 13));
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,Delete,The following statement contains a magic number: ctx.Products.Delete(ID: 104);
Magic Number,Mongo.Context.Tests,UpdateTests<T>,C:\research\architectureSmells\repos\object_MongOData\Mongo.Context.Tests\UpdateTests.cs,Delete,The following statement contains a magic number: var product = ctx.Products.Find(ctx.Products.ID == 104);
