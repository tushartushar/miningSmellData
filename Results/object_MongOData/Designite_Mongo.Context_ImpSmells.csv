Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Mongo.Context,MongoDSPConverter,D:\newReposJune17\object_MongOData\Mongo.Context\MongoDSPConverter.cs,ConvertBsonValue,Cyclomatic complexity of the method is 8
Complex Method,Mongo.Context,MongoDSPConverter,D:\newReposJune17\object_MongOData\Mongo.Context\MongoDSPConverter.cs,ConvertBsonArray,Cyclomatic complexity of the method is 8
Complex Method,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,AddDocumentType,Cyclomatic complexity of the method is 7
Complex Method,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,RegisterArrayProperty,Cyclomatic complexity of the method is 7
Complex Method,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,GetRawValueType,Cyclomatic complexity of the method is 7
Complex Method,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,VisitMethodCall,Cyclomatic complexity of the method is 8
Long Parameter List,Mongo.Context,MongoDSPConverter,D:\newReposJune17\object_MongOData\Mongo.Context\MongoDSPConverter.cs,CreateDSPResource,The method has 4 parameters.
Long Parameter List,Mongo.Context,MongoDSPConverter,D:\newReposJune17\object_MongOData\Mongo.Context\MongoDSPConverter.cs,ConvertBsonValue,The method has 5 parameters.
Long Parameter List,Mongo.Context,MongoDSPConverter,D:\newReposJune17\object_MongOData\Mongo.Context\MongoDSPConverter.cs,ConvertBsonArray,The method has 4 parameters.
Long Parameter List,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,AddDocumentType,The method has 4 parameters.
Long Parameter List,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,AddResourceProperty,The method has 5 parameters.
Long Parameter List,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,AddDocumentProperty,The method has 6 parameters.
Long Parameter List,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,AddProviderType,The method has 4 parameters.
Long Parameter List,Mongo.Context.Queryable,MongoQueryableDataService,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\MongoQueryableDataService.cs,GetQueryableCollection,The method has 4 parameters.
Long Parameter List,Mongo.Context.Queryable,MongoQueryableDataService,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\MongoQueryableDataService.cs,GetDynamicTypeForProviderType,The method has 4 parameters.
Long Parameter List,Mongo.Context.Queryable,MongoQueryableResource,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\MongoQueryableResource.cs,MongoQueryableResource,The method has 4 parameters.
Long Parameter List,Mongo.Context.Queryable,MongoQueryProvider,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\MongoQueryProvider.cs,MongoQueryProvider,The method has 4 parameters.
Long Parameter List,Mongo.Context.Queryable,MongoQueryProvider,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\MongoQueryProvider.cs,PrepareExecution,The method has 5 parameters.
Long Parameter List,Mongo.Context.Queryable,DocumentTypeBuilder,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\DocumentTypeBuilder.cs,CreateProperty,The method has 4 parameters.
Long Statement,Mongo.Context,MongoDSPUpdateProvider,D:\newReposJune17\object_MongOData\Mongo.Context\MongoDSPUpdateProvider.cs,InsertDocument,The length of the statement  "	change.Resource.SetValue (MongoMetadata.MappedObjectIdName' document.GetValue (MongoMetadata.ProviderObjectIdName).ToString ()); " is 128.
Long Statement,Mongo.Context,MongoDSPUpdateProvider,D:\newReposJune17\object_MongOData\Mongo.Context\MongoDSPUpdateProvider.cs,UpdateDocument,The length of the statement  "	var query = Query.EQ (MongoMetadata.ProviderObjectIdName' ObjectId.Parse (change.Resource.GetValue (MongoMetadata.MappedObjectIdName).ToString ())); " is 148.
Long Statement,Mongo.Context,MongoDSPUpdateProvider,D:\newReposJune17\object_MongOData\Mongo.Context\MongoDSPUpdateProvider.cs,RemoveDocument,The length of the statement  "	var query = Query.EQ (MongoMetadata.ProviderObjectIdName' ObjectId.Parse (change.Resource.GetValue (MongoMetadata.MappedObjectIdName).ToString ())); " is 148.
Long Statement,Mongo.Context,MongoDSPConverter,D:\newReposJune17\object_MongOData\Mongo.Context\MongoDSPConverter.cs,CreateDSPResource,The length of the statement  "		object propertyValue = ConvertBsonValue (element.Value' resourceType' resourceProperty' resourceProperty.Name' mongoMetadata); " is 126.
Long Statement,Mongo.Context,MongoDSPConverter,D:\newReposJune17\object_MongOData\Mongo.Context\MongoDSPConverter.cs,ConvertBsonValue,The length of the statement  "			propertyValue = CreateDSPResource (bsonDocument' mongoMetadata' propertyName' MongoMetadata.GetQualifiedTypePrefix (resourceType.Name)); " is 136.
Long Statement,Mongo.Context,MongoDSPConverter,D:\newReposJune17\object_MongOData\Mongo.Context\MongoDSPConverter.cs,ConvertBsonArray,The length of the statement  "				propertyValue [valueIndex++] = CreateDSPResource (bsonArray [index].AsBsonDocument' mongoMetadata' propertyName' MongoMetadata.GetQualifiedTypePrefix (resourceType.Name)); " is 171.
Long Statement,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,ResolveResourceType,The length of the statement  "	var qualifiedResourceName = string.IsNullOrEmpty (ownerPrefix) ? resourceName : MongoMetadata.GetQualifiedTypeName (ownerPrefix' resourceName); " is 143.
Long Statement,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,ResolveResourceType,The length of the statement  "	this.instanceMetadataCache.TryResolveResourceType (GetQualifiedPropertyName (MongoMetadata.RootNamespace' qualifiedResourceName)' out resourceType); " is 148.
Long Statement,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,PopulateMetadata,The length of the statement  "			this.instanceMetadataCache.ProviderTypes.Add (GetQualifiedPropertyName (prop.CollectionType.Name' propertyName)' providerType); " is 127.
Long Statement,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,PopulateMetadataFromCollection,The length of the statement  "	var sortOrder = this.Configuration.FetchPosition == MongoConfiguration.FetchPosition.End ? SortBy.Descending (naturalSort) : SortBy.Ascending (naturalSort); " is 156.
Long Statement,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,AddDocumentType,The length of the statement  "	var collectionType = resourceTypeKind == ResourceTypeKind.EntityType ? this.instanceMetadataCache.AddEntityType (collectionName) : this.instanceMetadataCache.AddComplexType (collectionName); " is 190.
Long Statement,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,RegisterResourceProperty,The length of the statement  "				AddResourceProperty (context' resourceType.Name' resourceType' element' resourceType.ResourceTypeKind == ResourceTypeKind.EntityType); " is 134.
Long Statement,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,AddDocumentProperty,The length of the statement  "	var resourceType = AddDocumentType (context' GetQualifiedTypeName (collectionName' propertyName)' element.Value.AsBsonDocument' ResourceTypeKind.ComplexType); " is 158.
Long Statement,Mongo.Context,MongoMetadata,D:\newReposJune17\object_MongOData\Mongo.Context\MongoMetadata.cs,GetResourcePropertyName,The length of the statement  "	return IsObjectId (element) && resourceTypeKind != ResourceTypeKind.ComplexType ? MongoMetadata.MappedObjectIdName : NormalizeResourcePropertyName (element.Name); " is 162.
Long Statement,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsRedundantEqualityTest,The length of the statement  "		if (binaryExpression.NodeType == ExpressionType.Equal || binaryExpression.Method != null && binaryExpression.Method.Name == "op_Equality") { " is 140.
Long Statement,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsConvertWithMethod,The length of the statement  "	if (e is UnaryExpression && e.NodeType == ExpressionType.Convert && (e as UnaryExpression).Operand is MethodCallExpression && ((e as UnaryExpression).Operand as MethodCallExpression).Method.Name == methodName && (argumentCount == null || ((e as UnaryExpression).Operand as MethodCallExpression).Arguments.Count == argumentCount.Value)) { " is 337.
Long Statement,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsConvertWithMember,The length of the statement  "	if (e is UnaryExpression && e.NodeType == ExpressionType.Convert && (e as UnaryExpression).Operand is MemberExpression) { " is 121.
Long Statement,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsRedundantOrderMethod,The length of the statement  "	if (m.Method.Name == "ThenBy" && lambda.Body.NodeType == ExpressionType.MemberAccess && lambda.ReturnType == typeof(ObjectId)) { " is 128.
Long Statement,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsRedundantOrderMethod,The length of the statement  "		return member.Expression.NodeType == ExpressionType.Parameter && (member.Expression as ParameterExpression).Name == "element" && member.Member.Name == MongoMetadata.MappedObjectIdName; " is 184.
Long Statement,Mongo.Context.Queryable,ResultExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ResultExpressionVisitor.cs,VisitMethodCall,The length of the statement  "			return Expression.Call (m.Method' ExpressionUtils.ReplaceParameterType (m.Arguments [0]' typeof(DSPResource)' Visit)' Visit (m.Arguments [1])); " is 143.
Long Statement,Mongo.Context.Queryable,MongoQueryableDataService,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\MongoQueryableDataService.cs,CreateContext,The length of the statement  "	Func<string' IQueryable> queryProviders = x => GetQueryableCollection (connectionString' x' this.mongoMetadata.ProviderTypes' this.mongoMetadata.GeneratedTypes); " is 161.
Long Statement,Mongo.Context.Queryable,MongoQueryableDataService,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\MongoQueryableDataService.cs,GetQueryableCollection,The length of the statement  "	return InterceptingProvider.Intercept (new MongoQueryableResource (this.mongoMetadata' connectionString' collectionName' collectionType)' new ResultExpressionVisitor ()); " is 170.
Long Statement,Mongo.Context.Queryable,MongoQueryableDataService,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\MongoQueryableDataService.cs,CreateDynamicTypeForCollection,The length of the statement  "	Func<string' bool> criteria = x => x.StartsWith (collectionName + ".") || MongoMetadata.UseGlobalComplexTypeNames && x.StartsWith (collectionName + MongoMetadata.WordSeparator); " is 177.
Long Statement,Mongo.Context.Queryable,MongoQueryableDataService,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\MongoQueryableDataService.cs,CreateDynamicTypes,The length of the statement  "	var fields = fieldTypes.ToDictionary (x => x.Key.Split ('.').Last ()' x => GetDynamicTypeForProviderType (x.Key' x.Value' providerTypes' generatedTypes)); " is 154.
Long Statement,Mongo.Context.Queryable,MongoQueryProvider,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\MongoQueryProvider.cs,GetEnumerableCollection,The length of the statement  "	var mongoEnumerator = mongoCollection.AsQueryable<TSource> ().Provider.CreateQuery<TSource> (expression).GetEnumerator (); " is 122.
Long Statement,Mongo.Context.Queryable,MongoQueryProvider,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\MongoQueryProvider.cs,UpdateMetadataFromResourceSet,The length of the statement  "	var query = Query.EQ (MongoMetadata.ProviderObjectIdName' ObjectId.Parse (typedDocument.GetValue (MongoMetadata.ProviderObjectIdName).ToString ())); " is 148.
Long Statement,Mongo.Context.Queryable,MongoQueryProvider,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\MongoQueryProvider.cs,CreateProjectionQuery,The length of the statement  "	MethodInfo methodInfo = typeof(MongoQueryProvider).GetMethod ("ProcessProjection"' BindingFlags.Instance | BindingFlags.NonPublic).MakeGenericMethod (typeof(DSPResource)' typeof(TElement)); " is 189.
Long Statement,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,VisitMethodCall,The length of the statement  "	if (m.Method.Name == "GetValue" && m.Arguments [0].NodeType == ExpressionType.MemberAccess && (m.Arguments [0] as MemberExpression).Expression.Type == typeof(ResourceProperty)) { " is 178.
Long Statement,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,VisitMethodCall,The length of the statement  "	} else if (m.Method.Name == "GetValue" && m.Arguments [0].NodeType == ExpressionType.Constant && (m.Arguments [0] as ConstantExpression).Type == typeof(string)) { " is 162.
Long Statement,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,VisitMethodCall,The length of the statement  "				return Visit (Expression.Call (ReplaceGenericMethodType (m.Method' (lambda as LambdaExpression).ReturnType)' Visit (m.Arguments [0])' lambda)); " is 143.
Long Statement,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,VisitMethodCall,The length of the statement  "			return Visit (Expression.Call (ReplaceGenericMethodType (m.Method)' new ReadOnlyCollection<Expression> (m.Arguments.Select (x => Visit (x)).ToList ()))); " is 153.
Long Statement,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,VisitConstant,The length of the statement  "	} else if (c.Type.IsGenericType && c.Type.BaseType == typeof(ValueType) && c.Type.UnderlyingSystemType.Name == "Nullable`1") { " is 126.
Long Statement,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,VisitBinary,The length of the statement  "	} else if (left.Type.IsGenericType && left.Type.GetGenericTypeDefinition () == typeof(Nullable<>) && left.NodeType == ExpressionType.MemberAccess && right.Type.IsValueType) { " is 174.
Long Statement,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,VisitBinary,The length of the statement  "	} else if (b.Left.Type == typeof(bool?) && b.Right.Type == typeof(bool?) && b.NodeType == ExpressionType.Equal && (b.Right.NodeType == ExpressionType.Convert || b.Right.NodeType == ExpressionType.Constant)) { " is 208.
Long Statement,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,ReplaceGenericMethodType,The length of the statement  "	return typeof(System.Linq.Queryable).GetMethods ().First (x => x.Name == method.Name).MakeGenericMethod (genericArguments.ToArray ()); " is 134.
Long Statement,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,ReplaceBinaryComparison,The length of the statement  "	var consantExpression = (b.Right is ConstantExpression ? b.Right : (b.Right as UnaryExpression).Operand) as ConstantExpression; " is 127.
Long Statement,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,ReplaceMemberAccess,The length of the statement  "	var fieldName = (((m.Arguments [0] as MemberExpression).Expression as ConstantExpression).Value as ResourceProperty).Name; " is 122.
Long Statement,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,ReplaceMemberAccess,The length of the statement  "	} else if (m.Object.NodeType == ExpressionType.Convert && (m.Object as UnaryExpression).Operand.NodeType == ExpressionType.Call) { " is 130.
Long Statement,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,ReplaceMemberAccess,The length of the statement  "		var resourceProperty = ((methodCallExpression.Arguments.First () as MemberExpression).Expression as ConstantExpression).Value as ResourceProperty; " is 146.
Long Statement,Mongo.Context.Queryable,DocumentTypeBuilder,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\DocumentTypeBuilder.cs,GetTypeBuilder,The length of the statement  "	TypeBuilder tb = moduleBuilder.DefineType (typeSignature' TypeAttributes.Public | TypeAttributes.Class | TypeAttributes.AutoClass | TypeAttributes.AnsiClass | TypeAttributes.BeforeFieldInit | TypeAttributes.AutoLayout' baseType); " is 229.
Long Statement,Mongo.Context.Queryable,DocumentTypeBuilder,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\DocumentTypeBuilder.cs,CreateProperty,The length of the statement  "	MethodBuilder getPropMthdBldr = tb.DefineMethod ("get_" + propertyName' MethodAttributes.Public | MethodAttributes.SpecialName | MethodAttributes.HideBySig' propertyType' Type.EmptyTypes); " is 188.
Long Statement,Mongo.Context.Queryable,DocumentTypeBuilder,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\DocumentTypeBuilder.cs,CreateProperty,The length of the statement  "	MethodBuilder setPropMthdBldr = tb.DefineMethod ("set_" + propertyName' MethodAttributes.Public | MethodAttributes.SpecialName | MethodAttributes.HideBySig' null' new[] { " is 170.
Complex Conditional,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsConvertWithMethod,The conditional expression  "e is UnaryExpression && e.NodeType == ExpressionType.Convert && (e as UnaryExpression).Operand is MethodCallExpression && ((e as UnaryExpression).Operand as MethodCallExpression).Method.Name == methodName && (argumentCount == null || ((e as UnaryExpression).Operand as MethodCallExpression).Arguments.Count == argumentCount.Value)"  is complex.
Complex Conditional,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsNamedMethodSecondArgumentExpressionFuncWithOneParameter,The conditional expression  "p != null && p.Length == 2 && p [0].ParameterType.IsGenericType && p [1].ParameterType.IsGenericType"  is complex.
Complex Conditional,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsNamedMethodSecondArgumentFuncWithOneParameter,The conditional expression  "p != null && p.Length == 2 && p [0].ParameterType.IsGenericType && p [1].ParameterType.IsGenericType"  is complex.
Complex Conditional,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,VisitBinary,The conditional expression  "left.Type.IsGenericType && left.Type.GetGenericTypeDefinition () == typeof(Nullable<>) && left.NodeType == ExpressionType.MemberAccess && right.Type.IsValueType"  is complex.
Complex Conditional,Mongo.Context.Queryable,QueryExpressionVisitor,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\QueryExpressionVisitor.cs,VisitBinary,The conditional expression  "b.Left.Type == typeof(bool?) && b.Right.Type == typeof(bool?) && b.NodeType == ExpressionType.Equal && (b.Right.NodeType == ExpressionType.Convert || b.Right.NodeType == ExpressionType.Constant)"  is complex.
Magic Number,Mongo.Context,MongoContext,D:\newReposJune17\object_MongOData\Mongo.Context\MongoContext.cs,GetDatabaseName,The following statement contains a magic number: if (hostIndex > 0) {  	int startIndex = connectionString.IndexOf ("/"' hostIndex + 2) + 1;  	int endIndex = connectionString.IndexOf ("?"' startIndex);  	if (startIndex > 0) {  		if (endIndex > 0)  			return connectionString.Substring (startIndex' endIndex - startIndex);  		else  			return connectionString.Substring (startIndex);  	}  }  
Magic Number,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsConvertWithVisualBasicComparison,The following statement contains a magic number: foreach (var op in VisualBasicComparisonOperators) {  	if (IsConvertWithMethod (e' op.Key' 3) && (e.Type.IsValueType || e.Type == typeof(bool))) {  		return true;  	}  }  
Magic Number,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsConvertWithVisualBasicComparison,The following statement contains a magic number: if (IsConvertWithMethod (e' op.Key' 3) && (e.Type.IsValueType || e.Type == typeof(bool))) {  	return true;  }  
Magic Number,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsVisualBasicComparison,The following statement contains a magic number: if (m.Arguments.Count == 3) {  	foreach (var op in VisualBasicComparisonOperators) {  		if (m.Method.Name == op.Key) {  			return true;  		}  	}  }  
Magic Number,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsNamedMethodSecondArgumentExpressionFuncWithOneParameter,The following statement contains a magic number: if (m.Name == name) {  	ParameterInfo[] p = m.GetParameters ();  	if (p != null && p.Length == 2 && p [0].ParameterType.IsGenericType && p [1].ParameterType.IsGenericType) {  		Type expressionParameter = p [1].ParameterType;  		Type[] genericArgs = expressionParameter.GetGenericArguments ();  		if (genericArgs.Length == 1 && expressionParameter.GetGenericTypeDefinition () == typeof(Expression<>)) {  			Type functionParameter = genericArgs [0];  			return functionParameter.IsGenericType && functionParameter.GetGenericTypeDefinition () == typeof(Func<' >);  		}  	}  }  
Magic Number,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsNamedMethodSecondArgumentExpressionFuncWithOneParameter,The following statement contains a magic number: if (p != null && p.Length == 2 && p [0].ParameterType.IsGenericType && p [1].ParameterType.IsGenericType) {  	Type expressionParameter = p [1].ParameterType;  	Type[] genericArgs = expressionParameter.GetGenericArguments ();  	if (genericArgs.Length == 1 && expressionParameter.GetGenericTypeDefinition () == typeof(Expression<>)) {  		Type functionParameter = genericArgs [0];  		return functionParameter.IsGenericType && functionParameter.GetGenericTypeDefinition () == typeof(Func<' >);  	}  }  
Magic Number,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsNamedMethodSecondArgumentFuncWithOneParameter,The following statement contains a magic number: if (m.Name == name) {  	ParameterInfo[] p = m.GetParameters ();  	if (p != null && p.Length == 2 && p [0].ParameterType.IsGenericType && p [1].ParameterType.IsGenericType) {  		Type functionParameter = p [1].ParameterType;  		return functionParameter.IsGenericType && functionParameter.GetGenericTypeDefinition () == typeof(Func<' >);  	}  }  
Magic Number,Mongo.Context.Queryable,ExpressionUtils,D:\newReposJune17\object_MongOData\Mongo.Context\Queryable\ExpressionUtils.cs,IsNamedMethodSecondArgumentFuncWithOneParameter,The following statement contains a magic number: if (p != null && p.Length == 2 && p [0].ParameterType.IsGenericType && p [1].ParameterType.IsGenericType) {  	Type functionParameter = p [1].ParameterType;  	return functionParameter.IsGenericType && functionParameter.GetGenericTypeDefinition () == typeof(Func<' >);  }  
