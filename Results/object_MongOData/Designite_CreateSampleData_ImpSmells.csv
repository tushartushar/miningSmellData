Implementation smell,Namespace,Class,File,Method,Description
Long Method,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The method has 74 lines of code.
Long Statement,CreateSampleData,Program,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Program.cs,Main,The length of the statement  "		Console.WriteLine ("This application creates MongoDB collection with sample data that can be exposed using MongOData service."); " is 128.
Long Statement,CreateSampleData,Program,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Program.cs,Main,The length of the statement  "		Console.WriteLine ("Do you want to create sample data that require OData v.3? (y/n or Enter to support most commonly used v.2 protocol): "); " is 140.
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,PopulateWithCategoriesAndProducts,The following statement contains a magic number: if (this.protocolVersion < 3) {  	products.ForEach (x => x.Supplier = null);  }  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateCaterories,The following statement contains a magic number: return new List<Category> () {  	new Category {  		ID = 1'  		Name = "Food"'  		Products = null'  	}'  	new Category {  		ID = 2'  		Name = "Beverages"'  		Products = null'  	}'  	new Category {  		ID = 3'  		Name = "Electronics"'  		Products = null'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateCaterories,The following statement contains a magic number: return new List<Category> () {  	new Category {  		ID = 1'  		Name = "Food"'  		Products = null'  	}'  	new Category {  		ID = 2'  		Name = "Beverages"'  		Products = null'  	}'  	new Category {  		ID = 3'  		Name = "Electronics"'  		Products = null'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Database,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Database.cs,CreateProducts,The following statement contains a magic number: return new List<Product> () {  	new Product {  		ID = 1'  		Name = "Bread"'  		Description = "Whole grain bread"'  		ReleaseDate = new DateTime (1992' 1' 1)'  		DiscontinueDate = null'  		Rating = 4'  		Quantity = new Quantity {  			Value = (double)12'  			Units = "pieces"'  		}'  		Supplier = new Supplier {  			Name = "City Bakery"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Postal'  					Lines = new[] {  						"P.O.Box 89"'  						"123456 City"  					}  				}'  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"Long Street 100"'  						"654321 City"  					}  				}'  			}'  		}'  		Category = categories [0]'  	}'  	new Product {  		ID = 2'  		Name = "Milk"'  		Description = "Low fat milk"'  		ReleaseDate = new DateTime (1995' 10' 21)'  		DiscontinueDate = null'  		Rating = 3'  		Quantity = new Quantity {  			Value = (double)4'  			Units = "liters"'  		}'  		Supplier = new Supplier {  			Name = "Green Farm"'  			Addresses = new[] {  				new Address {  					Type = AddressType.Street'  					Lines = new[] {  						"P.O.Box 123"'  						"321321 Green Village"  					}  				}'  			}'  		}'  		Category = categories [1]'  	}'  	new Product {  		ID = 3'  		Name = "Wine"'  		Description = "Red wine' year 2003"'  		ReleaseDate = new DateTime (2003' 11' 24)'  		DiscontinueDate = new DateTime (2008' 3' 1)'  		Rating = 5'  		Quantity = new Quantity {  			Value = (double)7'  			Units = "bottles"'  		}'  		Category = categories [1]'  	}'  };  
Magic Number,CreateSampleData,Program,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Program.cs,Main,The following statement contains a magic number: try {  	Console.WriteLine ("This application creates MongoDB collection with sample data that can be exposed using MongOData service.");  	Console.WriteLine ("MongOData supports OData protocol version 3' however not all OData client tools support it.");  	Console.WriteLine ("Do you want to create sample data that require OData v.3? (y/n or Enter to support most commonly used v.2 protocol): ");  	var response = Console.ReadLine ().ToLower ();  	int protocolVersion = (response.ToLower () == "y" || response == "yes") ? 3 : 2;  	var connectionString = ConfigurationManager.ConnectionStrings ["MongoDB"].ConnectionString;  	Console.WriteLine ("Creating sample MongoDB database at {0}..."' connectionString);  	var database = Database.Create (protocolVersion' connectionString);  	Console.WriteLine ("Populating with Categories/Products samples...");  	database.PopulateWithCategoriesAndProducts ();  	if (protocolVersion == 3) {  		Console.WriteLine ("Populating with JSON samples...");  		database.PopulateWithJsonSamples ();  	}  	Console.WriteLine ("Successfully created sample database.");  } catch (Exception exception) {  	Console.WriteLine ("Error: {0}"' exception.Message);  }  
Magic Number,CreateSampleData,Program,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Program.cs,Main,The following statement contains a magic number: try {  	Console.WriteLine ("This application creates MongoDB collection with sample data that can be exposed using MongOData service.");  	Console.WriteLine ("MongOData supports OData protocol version 3' however not all OData client tools support it.");  	Console.WriteLine ("Do you want to create sample data that require OData v.3? (y/n or Enter to support most commonly used v.2 protocol): ");  	var response = Console.ReadLine ().ToLower ();  	int protocolVersion = (response.ToLower () == "y" || response == "yes") ? 3 : 2;  	var connectionString = ConfigurationManager.ConnectionStrings ["MongoDB"].ConnectionString;  	Console.WriteLine ("Creating sample MongoDB database at {0}..."' connectionString);  	var database = Database.Create (protocolVersion' connectionString);  	Console.WriteLine ("Populating with Categories/Products samples...");  	database.PopulateWithCategoriesAndProducts ();  	if (protocolVersion == 3) {  		Console.WriteLine ("Populating with JSON samples...");  		database.PopulateWithJsonSamples ();  	}  	Console.WriteLine ("Successfully created sample database.");  } catch (Exception exception) {  	Console.WriteLine ("Error: {0}"' exception.Message);  }  
Magic Number,CreateSampleData,Program,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Program.cs,Main,The following statement contains a magic number: try {  	Console.WriteLine ("This application creates MongoDB collection with sample data that can be exposed using MongOData service.");  	Console.WriteLine ("MongOData supports OData protocol version 3' however not all OData client tools support it.");  	Console.WriteLine ("Do you want to create sample data that require OData v.3? (y/n or Enter to support most commonly used v.2 protocol): ");  	var response = Console.ReadLine ().ToLower ();  	int protocolVersion = (response.ToLower () == "y" || response == "yes") ? 3 : 2;  	var connectionString = ConfigurationManager.ConnectionStrings ["MongoDB"].ConnectionString;  	Console.WriteLine ("Creating sample MongoDB database at {0}..."' connectionString);  	var database = Database.Create (protocolVersion' connectionString);  	Console.WriteLine ("Populating with Categories/Products samples...");  	database.PopulateWithCategoriesAndProducts ();  	if (protocolVersion == 3) {  		Console.WriteLine ("Populating with JSON samples...");  		database.PopulateWithJsonSamples ();  	}  	Console.WriteLine ("Successfully created sample database.");  } catch (Exception exception) {  	Console.WriteLine ("Error: {0}"' exception.Message);  }  
Magic Number,CreateSampleData,Program,D:\newReposJune17\object_MongOData\Samples\CreateSampleData\Program.cs,Main,The following statement contains a magic number: if (protocolVersion == 3) {  	Console.WriteLine ("Populating with JSON samples...");  	database.PopulateWithJsonSamples ();  }  
