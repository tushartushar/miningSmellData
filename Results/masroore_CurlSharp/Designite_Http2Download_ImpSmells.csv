Implementation smell,Namespace,Class,File,Method,Description
Complex Method,Http2Download,Program,D:\research\architectureSmells\repos\masroore_CurlSharp\Samples\Http2Download\Http2Download.cs,Main,Cyclomatic complexity of the method is 8
Complex Method,Http2Download,Program,D:\research\architectureSmells\repos\masroore_CurlSharp\Samples\Http2Download\Http2Download.cs,OnDebug,Cyclomatic complexity of the method is 8
Long Statement,Http2Download,Program,D:\research\architectureSmells\repos\masroore_CurlSharp\Samples\Http2Download\Http2Download.cs,Main,The length of the statement  "                    /* On success the value of maxfd is guaranteed to be >= -1. We call select(maxfd + 1' ...); specially in case of (maxfd == -1) there are no fds ready yet so we call select(0' ...) --or Sleep() on Windows-- to sleep 100ms' which is the minimum suggested value in the curl_multi_fdset() doc. */ " is 292.
Magic Number,Http2Download,Program,D:\research\architectureSmells\repos\masroore_CurlSharp\Samples\Http2Download\Http2Download.cs,Main,The following statement contains a magic number: Thread.Sleep(100);
Missing Default,Http2Download,Program,D:\research\architectureSmells\repos\masroore_CurlSharp\Samples\Http2Download\Http2Download.cs,OnDebug,The following switch statement is missing a default case: switch (infoType)              {                  case CurlInfoType.Text:                      WriteLine($"== Info: {message.TrimEnd()}");                      break;                  case CurlInfoType.HeaderOut:                      WriteLine($"=> Send header");                      break;                  case CurlInfoType.HeaderIn:                      WriteLine($"<= Recv header");                      break;                  case CurlInfoType.DataOut:                      WriteLine($"=> Send data");                      break;                  case CurlInfoType.DataIn:                      WriteLine($"<= Recv data");                      break;                  case CurlInfoType.SslDataOut:                      WriteLine($"=> Send SSL data");                      break;                  case CurlInfoType.SslDataIn:                      WriteLine($"<= Recv SSL data");                      break;                  case CurlInfoType.End:                      WriteLine("== End");                      break;              }
