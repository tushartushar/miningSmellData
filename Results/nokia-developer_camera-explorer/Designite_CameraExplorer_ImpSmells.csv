Implementation smell,Namespace,Class,File,Method,Description
Long Statement,CameraExplorer,CaptureResolutionParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The length of the statement  "	IReadOnlyList<Windows.Foundation.Size> supportedValues = PhotoCaptureDevice.GetAvailableCaptureResolutions (Device.SensorLocation); " is 131.
Long Statement,CameraExplorer,ExposureTimeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The length of the statement  "	CameraCapturePropertyRange range = PhotoCaptureDevice.GetSupportedPropertyRange (Device.SensorLocation' KnownCameraPhotoProperties.ExposureTime); " is 145.
Long Statement,CameraExplorer,ExposureTimeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The length of the statement  "			option = new ArrayParameterOption (usecs' "1 / " + i.ToString () + " s"' "Assets/Icons/overlay.exposuretime." + i.ToString () + ".png"); " is 136.
Long Statement,CameraExplorer,ExposureTimeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The length of the statement  "		option = new ArrayParameterOption (microseconds' usecs.ToString () + " s"' "Assets/Icons/overlay.exposuretime." + usecs.ToString () + "s.png"); " is 143.
Long Statement,CameraExplorer,SceneModeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The length of the statement  "	IReadOnlyList<object> supportedValues = PhotoCaptureDevice.GetSupportedPropertyValues (Device.SensorLocation' PropertyId); " is 122.
Long Statement,CameraExplorer,SceneModeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The length of the statement  "		ArrayParameterOption option = new ArrayParameterOption (csm' csm.EnumerationToParameterName<CameraSceneMode> ()' "Assets/Icons/overlay.scenemode." + csm.ToString ().ToLower () + ".png"); " is 186.
Long Statement,CameraExplorer,FlashModeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The length of the statement  "	IReadOnlyList<object> supportedValues = PhotoCaptureDevice.GetSupportedPropertyValues (Device.SensorLocation' PropertyId); " is 122.
Long Statement,CameraExplorer,FlashModeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The length of the statement  "		ArrayParameterOption option = new ArrayParameterOption (fm' fm.EnumerationToParameterName<FlashState> ()' "Assets/Icons/overlay.flashmode." + fm.ToString ().ToLower () + ".png"); " is 178.
Long Statement,CameraExplorer,FocusIlluminationModeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The length of the statement  "	IReadOnlyList<object> supportedValues = PhotoCaptureDevice.GetSupportedPropertyValues (Device.SensorLocation' PropertyId); " is 122.
Long Statement,CameraExplorer,WhiteBalancePresetParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The length of the statement  "	IReadOnlyList<object> supportedValues = PhotoCaptureDevice.GetSupportedPropertyValues (Device.SensorLocation' PropertyId); " is 122.
Long Statement,CameraExplorer,AutoFocusRangeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The length of the statement  "	IReadOnlyList<object> supportedValues = PhotoCaptureDevice.GetSupportedPropertyValues (Device.SensorLocation' PropertyId); " is 122.
Long Statement,CameraExplorer,AutoFocusRangeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,Refresh,The length of the statement  "	if (CultureInfo.InvariantCulture.CompareInfo.IndexOf (DeviceStatus.DeviceManufacturer' "Nokia"' CompareOptions.IgnoreCase) == -1) { " is 131.
Long Statement,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,OnNavigatedTo,The length of the statement  "		Rotation = _dataContext.Device != null && _dataContext.Device.SensorLocation == CameraSensorLocation.Back ? _dataContext.Device.SensorRotationInDegrees : -_dataContext.Device.SensorRotationInDegrees " is 198.
Long Statement,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,sensorButton_Click,The length of the statement  "		Rotation = _dataContext.Device != null && _dataContext.Device.SensorLocation == CameraSensorLocation.Back ? _dataContext.Device.SensorRotationInDegrees : -_dataContext.Device.SensorRotationInDegrees " is 198.
Long Statement,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,videoCanvas_Tap,The length of the statement  "		Windows.Foundation.Point displayOrigin = new Windows.Foundation.Point (tapPoint.Y - _focusRegionSize.Width / 2' (VideoCanvas.ActualWidth - tapPoint.X) - _focusRegionSize.Height / 2); " is 182.
Long Statement,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,videoCanvas_Tap,The length of the statement  "		Windows.Foundation.Point viewFinderOrigin = new Windows.Foundation.Point (displayOrigin.X / xRatio' displayOrigin.Y / yRatio); " is 126.
Long Statement,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,videoCanvas_Tap,The length of the statement  "		Windows.Foundation.Rect viewPortRect = new Windows.Foundation.Rect (0' 0' _dataContext.Device.PreviewResolution.Width' _dataContext.Device.PreviewResolution.Height); " is 165.
Long Statement,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,videoCanvas_Tap,The length of the statement  "			_dataContext.Device.SetProperty (KnownCameraPhotoProperties.LockedAutoFocusParameters' AutoFocusParameters.Exposure & AutoFocusParameters.Focus & AutoFocusParameters.WhiteBalance); " is 180.
Long Statement,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,InitializeCamera,The length of the statement  "	IReadOnlyList<Windows.Foundation.Size> availableResolutions = PhotoCaptureDevice.GetAvailableCaptureResolutions (sensorLocation); " is 129.
Long Statement,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,InitializeCamera,The length of the statement  "	device.SetProperty (KnownCameraGeneralProperties.EncodeWithOrientation' device.SensorLocation == CameraSensorLocation.Back ? device.SensorRotationInDegrees : -device.SensorRotationInDegrees); " is 191.
Long Statement,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,CreateAppBar,The length of the statement  "	_captureButton = new ApplicationBarIconButton (new Uri ("Assets/Icons/appbar.feature.camera.rest.png"' UriKind.Relative)); " is 122.
Long Statement,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,CreateAppBar,The length of the statement  "	_settingsButton = new ApplicationBarIconButton (new Uri ("Assets/Icons/appbar.feature.settings.rest.png"' UriKind.Relative)); " is 125.
Long Statement,CameraExplorer,PreviewPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\PreviewPage.xaml.cs,saveButton_Click,The length of the statement  "		library.SavePictureToCameraRoll ("CameraExplorer_" + DateTime.Now.ToString ("yyyyMMddhhmmss") + ".jpg"' _dataContext.ImageStream); " is 130.
Long Statement,CameraExplorer,PreviewPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\PreviewPage.xaml.cs,saveButton_Click,The length of the statement  "		System.Diagnostics.Debug.WriteLine ("Saving picture to camera roll failed: " + ex.HResult.ToString ("x8") + " - " + ex.Message); " is 128.
Magic Number,CameraExplorer,ExposureTimeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The following statement contains a magic number: foreach (UInt32 i in standardValues) {  	UInt32 usecs = 1000000 / i;  	if (usecs >= min && usecs <= max) {  		option = new ArrayParameterOption (usecs' "1 / " + i.ToString () + " s"' "Assets/Icons/overlay.exposuretime." + i.ToString () + ".png");  		Options.Add (option);  		if (selectedOption == null && usecs.Equals (value)) {  			selectedOption = option;  		}  	}  }  
Magic Number,CameraExplorer,ExposureTimeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The following statement contains a magic number: while (microseconds <= max) {  	UInt32 usecs = microseconds / 1000000;  	option = new ArrayParameterOption (microseconds' usecs.ToString () + " s"' "Assets/Icons/overlay.exposuretime." + usecs.ToString () + "s.png");  	Options.Add (option);  	if (selectedOption == null && usecs.Equals (value)) {  		selectedOption = option;  	}  	microseconds *= 2;  }  
Magic Number,CameraExplorer,ExposureTimeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The following statement contains a magic number: while (microseconds <= max) {  	UInt32 usecs = microseconds / 1000000;  	option = new ArrayParameterOption (microseconds' usecs.ToString () + " s"' "Assets/Icons/overlay.exposuretime." + usecs.ToString () + "s.png");  	Options.Add (option);  	if (selectedOption == null && usecs.Equals (value)) {  		selectedOption = option;  	}  	microseconds *= 2;  }  
Magic Number,CameraExplorer,ExposureTimeParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\ArrayParameter.cs,PopulateOptions,The following statement contains a magic number: microseconds *= 2;  
Magic Number,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: videoBrush.RelativeTransform = new CompositeTransform () {  	CenterX = 0.5'  	CenterY = 0.5'  	Rotation = _dataContext.Device != null && _dataContext.Device.SensorLocation == CameraSensorLocation.Back ? _dataContext.Device.SensorRotationInDegrees : -_dataContext.Device.SensorRotationInDegrees  };  
Magic Number,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,OnNavigatedTo,The following statement contains a magic number: videoBrush.RelativeTransform = new CompositeTransform () {  	CenterX = 0.5'  	CenterY = 0.5'  	Rotation = _dataContext.Device != null && _dataContext.Device.SensorLocation == CameraSensorLocation.Back ? _dataContext.Device.SensorRotationInDegrees : -_dataContext.Device.SensorRotationInDegrees  };  
Magic Number,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,sensorButton_Click,The following statement contains a magic number: videoBrush.Opacity = 0.25;  
Magic Number,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,sensorButton_Click,The following statement contains a magic number: videoBrush.RelativeTransform = new CompositeTransform () {  	CenterX = 0.5'  	CenterY = 0.5'  	Rotation = _dataContext.Device != null && _dataContext.Device.SensorLocation == CameraSensorLocation.Back ? _dataContext.Device.SensorRotationInDegrees : -_dataContext.Device.SensorRotationInDegrees  };  
Magic Number,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,sensorButton_Click,The following statement contains a magic number: videoBrush.RelativeTransform = new CompositeTransform () {  	CenterX = 0.5'  	CenterY = 0.5'  	Rotation = _dataContext.Device != null && _dataContext.Device.SensorLocation == CameraSensorLocation.Back ? _dataContext.Device.SensorRotationInDegrees : -_dataContext.Device.SensorRotationInDegrees  };  
Magic Number,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,videoCanvas_Tap,The following statement contains a magic number: if (PhotoCaptureDevice.IsFocusRegionSupported (_dataContext.Device.SensorLocation) && _focusSemaphore.WaitOne (0)) {  	// Get tap coordinates as a foundation point  	Windows.Foundation.Point tapPoint = new Windows.Foundation.Point (uiTapPoint.X' uiTapPoint.Y);  	double xRatio = VideoCanvas.ActualHeight / _dataContext.Device.PreviewResolution.Width;  	double yRatio = VideoCanvas.ActualWidth / _dataContext.Device.PreviewResolution.Height;  	// adjust to center focus on the tap point  	Windows.Foundation.Point displayOrigin = new Windows.Foundation.Point (tapPoint.Y - _focusRegionSize.Width / 2' (VideoCanvas.ActualWidth - tapPoint.X) - _focusRegionSize.Height / 2);  	// adjust for resolution difference between preview image and the canvas  	Windows.Foundation.Point viewFinderOrigin = new Windows.Foundation.Point (displayOrigin.X / xRatio' displayOrigin.Y / yRatio);  	Windows.Foundation.Rect focusrect = new Windows.Foundation.Rect (viewFinderOrigin' _focusRegionSize);  	// clip to preview resolution  	Windows.Foundation.Rect viewPortRect = new Windows.Foundation.Rect (0' 0' _dataContext.Device.PreviewResolution.Width' _dataContext.Device.PreviewResolution.Height);  	focusrect.Intersect (viewPortRect);  	_dataContext.Device.FocusRegion = focusrect;  	// show a focus indicator  	FocusIndicator.SetValue (Shape.StrokeProperty' _notFocusedBrush);  	FocusIndicator.SetValue (Canvas.LeftProperty' uiTapPoint.X - _focusRegionSize.Width / 2);  	FocusIndicator.SetValue (Canvas.TopProperty' uiTapPoint.Y - _focusRegionSize.Height / 2);  	FocusIndicator.SetValue (Canvas.VisibilityProperty' Visibility.Visible);  	CameraFocusStatus status = await _dataContext.Device.FocusAsync ();  	if (status == CameraFocusStatus.Locked) {  		FocusIndicator.SetValue (Shape.StrokeProperty' _focusedBrush);  		_manuallyFocused = true;  		_dataContext.Device.SetProperty (KnownCameraPhotoProperties.LockedAutoFocusParameters' AutoFocusParameters.Exposure & AutoFocusParameters.Focus & AutoFocusParameters.WhiteBalance);  	}  	else {  		_manuallyFocused = false;  		_dataContext.Device.SetProperty (KnownCameraPhotoProperties.LockedAutoFocusParameters' AutoFocusParameters.None);  	}  	_focusSemaphore.Release ();  }  
Magic Number,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,videoCanvas_Tap,The following statement contains a magic number: if (PhotoCaptureDevice.IsFocusRegionSupported (_dataContext.Device.SensorLocation) && _focusSemaphore.WaitOne (0)) {  	// Get tap coordinates as a foundation point  	Windows.Foundation.Point tapPoint = new Windows.Foundation.Point (uiTapPoint.X' uiTapPoint.Y);  	double xRatio = VideoCanvas.ActualHeight / _dataContext.Device.PreviewResolution.Width;  	double yRatio = VideoCanvas.ActualWidth / _dataContext.Device.PreviewResolution.Height;  	// adjust to center focus on the tap point  	Windows.Foundation.Point displayOrigin = new Windows.Foundation.Point (tapPoint.Y - _focusRegionSize.Width / 2' (VideoCanvas.ActualWidth - tapPoint.X) - _focusRegionSize.Height / 2);  	// adjust for resolution difference between preview image and the canvas  	Windows.Foundation.Point viewFinderOrigin = new Windows.Foundation.Point (displayOrigin.X / xRatio' displayOrigin.Y / yRatio);  	Windows.Foundation.Rect focusrect = new Windows.Foundation.Rect (viewFinderOrigin' _focusRegionSize);  	// clip to preview resolution  	Windows.Foundation.Rect viewPortRect = new Windows.Foundation.Rect (0' 0' _dataContext.Device.PreviewResolution.Width' _dataContext.Device.PreviewResolution.Height);  	focusrect.Intersect (viewPortRect);  	_dataContext.Device.FocusRegion = focusrect;  	// show a focus indicator  	FocusIndicator.SetValue (Shape.StrokeProperty' _notFocusedBrush);  	FocusIndicator.SetValue (Canvas.LeftProperty' uiTapPoint.X - _focusRegionSize.Width / 2);  	FocusIndicator.SetValue (Canvas.TopProperty' uiTapPoint.Y - _focusRegionSize.Height / 2);  	FocusIndicator.SetValue (Canvas.VisibilityProperty' Visibility.Visible);  	CameraFocusStatus status = await _dataContext.Device.FocusAsync ();  	if (status == CameraFocusStatus.Locked) {  		FocusIndicator.SetValue (Shape.StrokeProperty' _focusedBrush);  		_manuallyFocused = true;  		_dataContext.Device.SetProperty (KnownCameraPhotoProperties.LockedAutoFocusParameters' AutoFocusParameters.Exposure & AutoFocusParameters.Focus & AutoFocusParameters.WhiteBalance);  	}  	else {  		_manuallyFocused = false;  		_dataContext.Device.SetProperty (KnownCameraPhotoProperties.LockedAutoFocusParameters' AutoFocusParameters.None);  	}  	_focusSemaphore.Release ();  }  
Magic Number,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,videoCanvas_Tap,The following statement contains a magic number: if (PhotoCaptureDevice.IsFocusRegionSupported (_dataContext.Device.SensorLocation) && _focusSemaphore.WaitOne (0)) {  	// Get tap coordinates as a foundation point  	Windows.Foundation.Point tapPoint = new Windows.Foundation.Point (uiTapPoint.X' uiTapPoint.Y);  	double xRatio = VideoCanvas.ActualHeight / _dataContext.Device.PreviewResolution.Width;  	double yRatio = VideoCanvas.ActualWidth / _dataContext.Device.PreviewResolution.Height;  	// adjust to center focus on the tap point  	Windows.Foundation.Point displayOrigin = new Windows.Foundation.Point (tapPoint.Y - _focusRegionSize.Width / 2' (VideoCanvas.ActualWidth - tapPoint.X) - _focusRegionSize.Height / 2);  	// adjust for resolution difference between preview image and the canvas  	Windows.Foundation.Point viewFinderOrigin = new Windows.Foundation.Point (displayOrigin.X / xRatio' displayOrigin.Y / yRatio);  	Windows.Foundation.Rect focusrect = new Windows.Foundation.Rect (viewFinderOrigin' _focusRegionSize);  	// clip to preview resolution  	Windows.Foundation.Rect viewPortRect = new Windows.Foundation.Rect (0' 0' _dataContext.Device.PreviewResolution.Width' _dataContext.Device.PreviewResolution.Height);  	focusrect.Intersect (viewPortRect);  	_dataContext.Device.FocusRegion = focusrect;  	// show a focus indicator  	FocusIndicator.SetValue (Shape.StrokeProperty' _notFocusedBrush);  	FocusIndicator.SetValue (Canvas.LeftProperty' uiTapPoint.X - _focusRegionSize.Width / 2);  	FocusIndicator.SetValue (Canvas.TopProperty' uiTapPoint.Y - _focusRegionSize.Height / 2);  	FocusIndicator.SetValue (Canvas.VisibilityProperty' Visibility.Visible);  	CameraFocusStatus status = await _dataContext.Device.FocusAsync ();  	if (status == CameraFocusStatus.Locked) {  		FocusIndicator.SetValue (Shape.StrokeProperty' _focusedBrush);  		_manuallyFocused = true;  		_dataContext.Device.SetProperty (KnownCameraPhotoProperties.LockedAutoFocusParameters' AutoFocusParameters.Exposure & AutoFocusParameters.Focus & AutoFocusParameters.WhiteBalance);  	}  	else {  		_manuallyFocused = false;  		_dataContext.Device.SetProperty (KnownCameraPhotoProperties.LockedAutoFocusParameters' AutoFocusParameters.None);  	}  	_focusSemaphore.Release ();  }  
Magic Number,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,videoCanvas_Tap,The following statement contains a magic number: if (PhotoCaptureDevice.IsFocusRegionSupported (_dataContext.Device.SensorLocation) && _focusSemaphore.WaitOne (0)) {  	// Get tap coordinates as a foundation point  	Windows.Foundation.Point tapPoint = new Windows.Foundation.Point (uiTapPoint.X' uiTapPoint.Y);  	double xRatio = VideoCanvas.ActualHeight / _dataContext.Device.PreviewResolution.Width;  	double yRatio = VideoCanvas.ActualWidth / _dataContext.Device.PreviewResolution.Height;  	// adjust to center focus on the tap point  	Windows.Foundation.Point displayOrigin = new Windows.Foundation.Point (tapPoint.Y - _focusRegionSize.Width / 2' (VideoCanvas.ActualWidth - tapPoint.X) - _focusRegionSize.Height / 2);  	// adjust for resolution difference between preview image and the canvas  	Windows.Foundation.Point viewFinderOrigin = new Windows.Foundation.Point (displayOrigin.X / xRatio' displayOrigin.Y / yRatio);  	Windows.Foundation.Rect focusrect = new Windows.Foundation.Rect (viewFinderOrigin' _focusRegionSize);  	// clip to preview resolution  	Windows.Foundation.Rect viewPortRect = new Windows.Foundation.Rect (0' 0' _dataContext.Device.PreviewResolution.Width' _dataContext.Device.PreviewResolution.Height);  	focusrect.Intersect (viewPortRect);  	_dataContext.Device.FocusRegion = focusrect;  	// show a focus indicator  	FocusIndicator.SetValue (Shape.StrokeProperty' _notFocusedBrush);  	FocusIndicator.SetValue (Canvas.LeftProperty' uiTapPoint.X - _focusRegionSize.Width / 2);  	FocusIndicator.SetValue (Canvas.TopProperty' uiTapPoint.Y - _focusRegionSize.Height / 2);  	FocusIndicator.SetValue (Canvas.VisibilityProperty' Visibility.Visible);  	CameraFocusStatus status = await _dataContext.Device.FocusAsync ();  	if (status == CameraFocusStatus.Locked) {  		FocusIndicator.SetValue (Shape.StrokeProperty' _focusedBrush);  		_manuallyFocused = true;  		_dataContext.Device.SetProperty (KnownCameraPhotoProperties.LockedAutoFocusParameters' AutoFocusParameters.Exposure & AutoFocusParameters.Focus & AutoFocusParameters.WhiteBalance);  	}  	else {  		_manuallyFocused = false;  		_dataContext.Device.SetProperty (KnownCameraPhotoProperties.LockedAutoFocusParameters' AutoFocusParameters.None);  	}  	_focusSemaphore.Release ();  }  
Magic Number,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,videoCanvas_Tap,The following statement contains a magic number: FocusIndicator.SetValue (Canvas.LeftProperty' uiTapPoint.X - _focusRegionSize.Width / 2);  
Magic Number,CameraExplorer,MainPage,C:\repos\nokia-developer_camera-explorer\CameraExplorer\MainPage.xaml.cs,videoCanvas_Tap,The following statement contains a magic number: FocusIndicator.SetValue (Canvas.TopProperty' uiTapPoint.Y - _focusRegionSize.Height / 2);  
Magic Number,CameraExplorer,ExposureCompensationParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\RangeParameter.cs,SetDefault,The following statement contains a magic number: Value = (Int32)(Minimum + (Maximum - Minimum) / 2);  
Magic Number,CameraExplorer,FlashPowerParameter,C:\repos\nokia-developer_camera-explorer\CameraExplorer\RangeParameter.cs,SetDefault,The following statement contains a magic number: Value = (UInt32)(Minimum + (Maximum - Minimum) / 2);  
