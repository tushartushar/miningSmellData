Implementation smell,Namespace,Class,File,Method,Description
Long Method,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GetConfigureBehaviorGeneratedForSymbol,The method has 209 lines of code.
Long Method,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GetMethodStatementsSyntax,The method has 135 lines of code.
Complex Method,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GetConfigureBehaviorGeneratedForSymbol,Cyclomatic complexity of the method is 9
Long Parameter List,PCLMock.CodeGeneration,Context,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Context.cs,Context,The method has 5 parameters. Parameters: logSink' language' plugins' syntaxGenerator' semanticModel
Long Parameter List,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GenerateMocksAsync,The method has 7 parameters. Parameters: logSink' language' solutionPath' interfacePredicate' mockNamespaceSelector' mockNameSelector' plugins
Long Parameter List,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GenerateMocksAsync,The method has 7 parameters. Parameters: logSink' language' solution' interfacePredicate' mockNamespaceSelector' mockNameSelector' plugins
Long Parameter List,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GenerateMock,The method has 5 parameters. Parameters: context' interfaceSymbol' mockNamespace' mockName' plugins
Long Parameter List,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GetConfigureBehaviorGeneratedForSymbol,The method has 5 parameters. Parameters: context' interfaceSymbol' symbol' plugins' behavior
Long Parameter List,PCLMock.CodeGeneration.Logging,LogSinkExtensions,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Logging\LogSinkExtensions.cs,Log,The method has 5 parameters. Parameters: this' source' level' format' args
Long Parameter List,PCLMock.CodeGeneration.Models,Configuration,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Models\Configuration.cs,Configuration,The method has 5 parameters. Parameters: logSink' namespaceTransformations' nameTransformations' interfaceFilters' plugins
Long Identifier,PCLMock.CodeGeneration.Plugins,Collections,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Plugins\Collections.cs,TryGetReturnValueSyntaxForCollectionReturnType,The length of the parameter readOnlyCollectionInterfaceType is 31.
Long Identifier,PCLMock.CodeGeneration.Plugins,Collections,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Plugins\Collections.cs,TryGetReturnValueSyntaxForDictionaryReturnType,The length of the parameter readOnlyDictionaryInterfaceType is 31.
Long Identifier,PCLMock.CodeGeneration.Plugins,Collections,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Plugins\Collections.cs,TryGetReturnValueSyntaxForImmutableDictionaryReturnType,The length of the parameter immutableDictionaryInterfaceType is 32.
Long Statement,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GenerateMocksAsync,The length of the statement  "                .Select((syntaxNode' i) => i == 0 ? syntaxGenerator.WithLeadingComments(syntaxNode' headerComment' language) : syntaxNode) " is 122.
Long Statement,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GetClassDeclarationSyntax,The length of the statement  "                throw new InvalidOperationException("Failed to find type in PCLMock assembly. Are you sure this project has a reference to PCLMock?"); " is 134.
Long Statement,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GetClassDeclarationSyntax,The length of the statement  "                    var kinds = (typeParameter.HasConstructorConstraint ? SpecialTypeConstraintKind.Constructor : SpecialTypeConstraintKind.None) | " is 127.
Long Statement,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GetConfigureBehaviorGeneratedForSymbol,The length of the statement  "                    .Warn(logSource' "Ignoring symbol '{0}' because its return type could not be determined (it's probably a sgeneric)."' symbol); " is 126.
Long Statement,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GetMemberDeclarations,The length of the statement  "                        .Select(x => context.SyntaxGenerator.AsPublicInterfaceImplementation(x' context.SyntaxGenerator.TypeExpression(interfaceSymbol)))); " is 131.
Long Statement,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GetMemberDeclarationSyntax,The length of the statement  "            // unsupported symbol type' but we don't error - the user can supplement our code as necessary because it's a partial class " is 123.
Long Statement,PCLMock.CodeGeneration.Plugins,Collections,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Plugins\Collections.cs,GetDefaultValueSyntax,The length of the statement  "                    .Debug(logSource' "Ignoring symbol '{0}' because its return type is not a generic type' so it cannot be one of the supported collection types."); " is 145.
Long Statement,PCLMock.CodeGeneration.Plugins,Disposables,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Plugins\Disposables.cs,GetDefaultValueSyntax,The length of the statement  "                    .Debug(logSource' "Ignoring symbol '{0}' because Disposable type could not be resolved (probably a missing reference to System.Reactive.Core)."); " is 145.
Long Statement,PCLMock.CodeGeneration.Models,Configuration,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Models\Configuration.cs,GetNamespaceSelector,The length of the statement  "            return symbol => ApplyTransformations(this.logSink' "namespace"' symbol.ContainingNamespace.ToString()' this.NamespaceTransformations); " is 135.
Long Statement,PCLMock.CodeGeneration.Models,Configuration,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Models\Configuration.cs,GetNameSelector,The length of the statement  "            return symbol => ApplyTransformations(this.logSink' "name"' symbol.ToDisplayString(SymbolDisplayFormat.MinimallyQualifiedFormat)' this.NameTransformations); " is 156.
Long Statement,PCLMock.CodeGeneration.Models,Configuration,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Models\Configuration.cs,GetPlugins,The length of the statement  "                        this.logSink.Error(logSource' "Resolved plugin '{0}' does not implement '{1}'."' resolvedPlugin.GetType().AssemblyQualifiedName' typeof(IPlugin).AssemblyQualifiedName); " is 168.
Long Statement,PCLMock.CodeGeneration.Models,Configuration,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Models\Configuration.cs,GetPlugins,The length of the statement  "                    this.logSink.Error(logSource' "Failed to create plugin from type name '{0}'. Exception was: {1}"' plugin.AssemblyQualifiedName' ex); " is 132.
Complex Conditional,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GetClassDeclarationSyntax,The conditional expression  "typeParameter.HasConstructorConstraint ||                      typeParameter.HasReferenceTypeConstraint ||                      typeParameter.HasValueTypeConstraint ||                      typeParameter.ConstraintTypes.Length > 0"  is complex.
Complex Conditional,PCLMock.CodeGeneration.Plugins,Collections,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Plugins\Collections.cs,GetDefaultValueSyntax,The conditional expression  "!TryGetReturnValueSyntaxForEnumerableReturnType(context' returnType' out returnValueSyntax) &&                  !TryGetReturnValueSyntaxForCollectionReturnType(context' returnType' out returnValueSyntax) &&                  !TryGetReturnValueSyntaxForDictionaryReturnType(context' returnType' out returnValueSyntax) &&                  !TryGetReturnValueSyntaxForSetReturnType(context' returnType' out returnValueSyntax) &&                  !TryGetReturnValueSyntaxForImmutableListReturnType(context' returnType' out returnValueSyntax) &&                  !TryGetReturnValueSyntaxForImmutableDictionaryReturnType(context' returnType' out returnValueSyntax) &&                  !TryGetReturnValueSyntaxForImmutableQueueReturnType(context' returnType' out returnValueSyntax) &&                  !TryGetReturnValueSyntaxForImmutableSetReturnType(context' returnType' out returnValueSyntax) &&                  !TryGetReturnValueSyntaxForImmutableStackReturnType(context' returnType' out returnValueSyntax)"  is complex.
Complex Conditional,PCLMock.CodeGeneration.Plugins,Collections,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Plugins\Collections.cs,TryGetReturnValueSyntaxForCollectionReturnType,The conditional expression  "returnType.ConstructedFrom != collectionInterfaceType &&                  returnType.ConstructedFrom != readOnlyCollectionInterfaceType &&                  returnType.ConstructedFrom != listInterfaceType &&                  returnType.ConstructedFrom != readOnlyListInterfaceType"  is complex.
Duplicate Code,PCLMock.CodeGeneration,Generator,C:\repos\kentcb_PCLMock\Src\PCLMock.CodeGeneration\Generator.cs,GetConfigureBehaviorGeneratedForSymbol,The method contains a code clone-set at the following line numbers (starting from the method definition): ((120' 142)' (157' 179))
