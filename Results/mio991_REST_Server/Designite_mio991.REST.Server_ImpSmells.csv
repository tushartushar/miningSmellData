Implementation smell,Namespace,Class,File,Method,Description
Complex Method,mio991.REST.Server,Server,C:\repos\mio991_REST_Server\mio991.REST.Server\Server.cs,InitDBConnection,Cyclomatic complexity of the method is 9
Complex Method,mio991.REST.Server,RequestHandler,C:\repos\mio991_REST_Server\mio991.REST.Server\RequestHandler.cs,PrivateHandleRequest,Cyclomatic complexity of the method is 13
Complex Method,mio991.REST.Server.Resource,CollectingResource,C:\repos\mio991_REST_Server\mio991.REST.Server\Resource\CollectingResource.cs,TryForward,Cyclomatic complexity of the method is 14
Long Statement,mio991.REST.Server,RequestHandler,C:\repos\mio991_REST_Server\mio991.REST.Server\RequestHandler.cs,PrivateHandleRequest,The length of the statement  "			Server.Log.Info (String.Format ("Begin Handle Request from {0} for {1}"' context.Request.RemoteEndPoint' context.Request.RawUrl)); " is 130.
Long Statement,mio991.REST.Server,RequestHandler,C:\repos\mio991_REST_Server\mio991.REST.Server\RequestHandler.cs,PrivateHandleRequest,The length of the statement  "		Server.Log.Info (String.Format ("End Handle Request from {0} for {1}"' context.Request.RemoteEndPoint' context.Request.RawUrl)); " is 128.
Missing Default,mio991.REST.Server,MainClass,C:\repos\mio991_REST_Server\mio991.REST.Server\MainClass.cs,Main,The following switch statement is missing a default case: switch (command) {  case "shutdown":  case "exit":  	runing = false;  	Server.Stop ();  	break;  }  
Missing Default,mio991.REST.Server,Server,C:\repos\mio991_REST_Server\mio991.REST.Server\Server.cs,InitDBConnection,The following switch statement is missing a default case: switch (child.Name) {  case "connectionString":  	connectionString = child.Attributes ["value"].Value;  	break;  case "connector":  	assemblyName = child.Attributes ["assembly"].Value;  	type = child.Attributes ["type"].Value;  	break;  }  
Missing Default,mio991.REST.Server.Resource,CollectingResource,C:\repos\mio991_REST_Server\mio991.REST.Server\Resource\CollectingResource.cs,TryForward,The following switch statement is missing a default case: switch (type) {  case RequestType.Get:  	res.Get (uri' context);  	break;  case RequestType.Post:  	res.Post (uri' context);  	break;  case RequestType.Put:  	res.Put (uri' context);  	break;  case RequestType.Delete:  	res.Delete (uri' context);  	break;  }  
