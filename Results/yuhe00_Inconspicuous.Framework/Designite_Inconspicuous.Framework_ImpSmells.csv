Implementation smell,Namespace,Class,File,Method,Description
Long Parameter List,System.Collections.Specialized,NotifyCollectionChangedEventArgs,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\ViewModel\NotifyCollectionChangedEventArgs.cs,NotifyCollectionChangedEventArgs,The method has 5 parameters. Parameters: action' newItems' oldItems' newIndex' oldIndex
Long Parameter List,System.Collections.Specialized,NotifyCollectionChangedEventArgs,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\ViewModel\NotifyCollectionChangedEventArgs.cs,InitializeMoveOrReplace,The method has 5 parameters. Parameters: action' newItems' oldItems' startingIndex' oldStartingIndex
Long Statement,Inconspicuous.Framework,PrefabGameObjectFactory,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Common\GameObjectFactory.cs,Create,The length of the statement  "					gameObject.name = string.IsNullOrEmpty(prefabGameObjectData.Name) ? prefabGameObjectData.Prefab.name : prefabGameObjectData.Name; " is 129.
Long Statement,Inconspicuous.Framework,Container,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\Container.cs,Inject,The length of the statement  "			var methods = instance.GetType().GetMethods().Where(m => m.GetCustomAttributes(typeof(InjectAttribute)' false).Any()).ToList(); " is 127.
Long Statement,Inconspicuous.Framework,Context,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\Context.cs,RegisterExports,The length of the statement  "				.Where(x => !(x is System.Reflection.Emit.AssemblyBuilder) && x.GetType().FullName != "System.Reflection.Emit.InternalAssemblyBuilder") " is 135.
Long Statement,Inconspicuous.Framework,Context,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\Context.cs,RegisterExports,The length of the statement  "				.SelectMany(x => x.GetExportedTypes().Where(t => t.GetCustomAttributes(typeof(ExportAttribute)' true).Any()).ToList()).ToList(); " is 128.
Long Statement,Inconspicuous.Framework,ContextView,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\ContextView.cs,Initialize,The length of the statement  "			var context = Activator.CreateInstance(type' new object[] { this' subContexts.Concat(SubContexts).Cast<Context>().ToArray() }) as IContext; " is 139.
Long Statement,Inconspicuous.Framework,MainContext,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\MainContext.cs,Start,The length of the statement  "			container.Resolve<ICommandDispatcher>().Dispatch(new StartCommand()).Subscribe().AddTo(container.Resolve<IContextView>().GameObject); " is 133.
Long Statement,Inconspicuous.Framework,MainContext,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\MainContext.cs,Start,The length of the statement  "				container.Resolve<ICommandDispatcher>().Dispatch(new LoadSceneCommand { SceneName = sceneName }).Subscribe().AddTo(container.Resolve<IContextView>().GameObject); " is 161.
Long Statement,Inconspicuous.Framework,CommandDispatcher,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Controller\CommandDispatcher.cs,ResolveHandlerForCommand,The length of the statement  "			var handler = container.Resolve(typeof(ICommandHandler<'>).MakeGenericType(command.GetType()' resultType)) as ICommandHandler; " is 126.
Long Statement,Inconspicuous.Framework,ViewMediationBinder,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\View\ViewMediationBinder.cs,Mediate,The length of the statement  "				foreach(var view in rootView.GameObject.transform.GetComponentsInChildren(typeof(IView)' true).Cast<IView>().ToArray()) { " is 121.
Long Statement,System,Lazy<T>,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Common\Lazy.cs,Create,The length of the statement  "					if(_valueFactory == null) throw new InvalidOperationException("The initialization function tries to access Value on this instance."); " is 133.
Empty Catch Block,Inconspicuous.Framework,MainContext,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\MainContext.cs,MainContext,The method has an empty catch block.
Empty Catch Block,Inconspicuous.Framework,MainContext,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\MainContext.cs,Start,The method has an empty catch block.
Magic Number,Inconspicuous.Framework,ContextView,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\ContextView.cs,CheckAndRemoveDuplicate,The following statement contains a magic number: if(dupes >= 2) {  				Destroy(gameObject);  				return true;  			}
Missing Default,Inconspicuous.Framework,Container,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\Container.cs,Register,The following switch statement is missing a default case: switch(reuse) {  					case Reuse.Transient:  						serviceMap[service] = () => {  							var parameters = parameterTypes.Select(t => Resolve(t)).ToArray();  							return constructor.Invoke(parameters);  						};  						break;  					case Reuse.Singleton:  						object instance = null;  						serviceMap[service] = () => {  							if(instance == null) {  								var parameters = parameterTypes.Select(t => Resolve(t)).ToArray();  								instance = constructor.Invoke(parameters);  							}  							return instance;  						};  						break;  				}
Missing Default,Inconspicuous.Framework,Container,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Context\Container.cs,RegisterDecorator,The following switch statement is missing a default case: switch(reuse) {  				case Reuse.Transient:  					serviceMap[service] = () => {  						var parameters = parameterTypes.Select(t => t == service ? originalFactory() : Resolve(t)).ToArray();  						return constructor.Invoke(parameters);  					};  					break;  				case Reuse.Singleton:  					object instance = null;  					serviceMap[service] = () => {  						if(instance == null) {  							var parameters = parameterTypes.Select(t => t == service ? originalFactory() : Resolve(t)).ToArray();  							instance = constructor.Invoke(parameters);  						}  						return instance;  					};  					break;  			}
Missing Default,Inconspicuous.Framework,MacroCommandHandler,C:\repos\yuhe00_Inconspicuous.Framework\Inconspicuous.Framework\Providers\Controller\MacroCommand.cs,Handle,The following switch statement is missing a default case: switch(command.MacroCommandType) {  					case MacroCommandType.Parallel:  						var results = command.Select(c => commandDispatcher.Dispatch(c)).ToArray();  						return Observable.WhenAll(results).ObserveOn(contextScheduler).Select(r => r.ToList() as ICollection<object>);  					case MacroCommandType.Sequence:  						var queue = new ObservableQueue<object>(contextScheduler);  						queue.AddRange(command.Select(c => Observable.Defer(() => commandDispatcher.Dispatch(c))));  						return queue.Buffer(command.Count).Select(r => r.ToList() as ICollection<object>);  				}
