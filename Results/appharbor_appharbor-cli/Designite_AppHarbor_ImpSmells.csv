Implementation smell,Namespace,Class,File,Method,Description
Complex Method,AppHarbor.Commands,LogAppCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\LogAppCommand.cs,InnerExecute,Cyclomatic complexity of the method is 11
Long Statement,AppHarbor,AliasMatcher,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\AliasMatcher.cs,GetMatchedType,The length of the statement  "		return _candidateTypes.Single (x => x.GetCustomAttributes (true).OfType<CommandHelpAttribute> ().Single ().Alias.ToLower () == commandArgument.ToLower ()); " is 155.
Long Statement,AppHarbor,AppHarborCliClient,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\AppHarborCliClient.cs,RemoveConfigurationVariable,The length of the statement  "		configurationVariable = _api.GetConfigurationVariables (applicationId).Single (x => x.Key.ToLower () == key.ToLower ()); " is 120.
Long Statement,AppHarbor,AppHarborInstaller,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\AppHarborInstaller.cs,Install,The length of the statement  "		return Assembly.GetExecutingAssembly ().GetExportedTypes ().Where (y => typeof(Command).IsAssignableFrom (y) && y.IsClass && !y.IsAbstract); " is 140.
Long Statement,AppHarbor,ApplicationConfiguration,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\ApplicationConfiguration.cs,GetApplicationId,The length of the statement  "	throw new ApplicationConfigurationException ("Application is not configured in this directory. Configure it by creating (\"create\") an application or by linking (\"link\") an existing application."); " is 200.
Long Statement,AppHarbor,ApplicationConfiguration,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\ApplicationConfiguration.cs,SetupApplication,The length of the statement  "	_writer.WriteLine ("Wrote application configuration to {0}. Make sure not to delete this file"' ConfigurationFile.FullName); " is 124.
Long Statement,AppHarbor,CommandDispatcher,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\CommandDispatcher.cs,Dispatch,The length of the statement  "	var commandTypeNameCandidate = commandArguments.Any () ? string.Concat (commandArguments.Skip (1).FirstOrDefault ()' args [0]) : "help"; " is 136.
Long Statement,AppHarbor,CommandDispatcher,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\CommandDispatcher.cs,Dispatch,The length of the statement  "		throw new DispatchException (string.Format ("The command \"{0}\" doesn't match a command name or alias"' string.Join (" "' args))); " is 131.
Long Statement,AppHarbor,CompressionExtensions,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\CompressionExtensions.cs,ToTar,The length of the statement  "	var entries = GetFiles (sourceDirectory' excludedDirectoryNames).Select (x => TarEntry.CreateEntryFromFile (x.FullName)).ToList (); " is 131.
Long Statement,AppHarbor,CompressionExtensions,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\CompressionExtensions.cs,GetFiles,The length of the statement  "	return directory.GetFiles ("*"' SearchOption.TopDirectoryOnly).Concat (directory.GetDirectories ().Where (x => !excludedDirectories.Select (y => y.ToLower ()).Contains (x.Name.ToLower ())).SelectMany (x => GetFiles (x' excludedDirectories))); " is 242.
Long Statement,AppHarbor,ConsoleProgressBar,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\ConsoleProgressBar.cs,Update,The length of the statement  "	var timeEstimate = _perSecondAverages.Count () < 1 ? "Estimating time left" : string.Format ("{0} left"' TimeSpan.FromSeconds (itemsRemaining / WeightedAverage (_perSecondAverages)).GetHumanized ()); " is 199.
Long Statement,AppHarbor,ConsoleProgressBar,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\ConsoleProgressBar.cs,Update,The length of the statement  "		ConsoleProgressBar.Render (percentDone' string.Format ("{0} ({1}% of {2:0.0} {3}). {4}"' message' percentDone' _displayUnitConversion (totalItems)' _displayUnit' timeEstimate)); " is 177.
Long Statement,AppHarbor,GitRepositoryConfigurer,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\GitRepositoryConfigurer.cs,Configure,The length of the statement  "		throw new RepositoryConfigurationException (string.Format ("Couldn't add appharbor repository as a git remote. Repository URL is: {0}."' repositoryUrl)); " is 153.
Long Statement,AppHarbor.Commands,AddDrainCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\AddDrainCommand.cs,InnerExecute,The length of the statement  "	}.AddUrlSegment ("slug"' ApplicationId).AddHeader ("Authorization"' string.Format ("BEARER {0}"' _accessToken)).AddBody (new { " is 126.
Long Statement,AppHarbor.Commands,CreateAppCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\CreateAppCommand.cs,InnerExecute,The length of the statement  "		_textWriter.WriteLine ("This directory is already configured to track application \"{0}\"."' _applicationConfiguration.GetApplicationId ()); " is 140.
Long Statement,AppHarbor.Commands,DeployAppCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\DeployAppCommand.cs,InnerExecute,The length of the statement  "		using (var packageStream = new FileStream (temporaryFileName' FileMode.Create' FileAccess.ReadWrite' FileShare.ReadWrite)) " is 122.
Long Statement,AppHarbor.Commands,DeployAppCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\DeployAppCommand.cs,InnerExecute,The length of the statement  "				request.UploadProgressEvent += (object x' UploadProgressArgs y) => progressBar.Update ("Uploading package"' y.TransferredBytes' y.TotalBytes); " is 142.
Long Statement,AppHarbor.Commands,DeployAppCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\DeployAppCommand.cs,TriggerAppHarborBuild,The length of the statement  "	}.AddUrlSegment ("slug"' ApplicationId).AddHeader ("Authorization"' string.Format ("BEARER {0}"' _accessToken)).AddBody (new { " is 126.
Long Statement,AppHarbor.Commands,RemoveDrainCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\RemoveDrainCommand.cs,InnerExecute,The length of the statement  "	var request = new RestRequest ("applications/{slug}/drains"' Method.GET).AddUrlSegment ("slug"' ApplicationId).AddHeader ("Authorization"' string.Format ("BEARER {0}"' _accessToken)); " is 183.
Long Statement,AppHarbor.Commands,DrainCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\DrainCommand.cs,InnerExecute,The length of the statement  "	var request = new RestRequest ("applications/{slug}/drains"' Method.GET).AddUrlSegment ("slug"' ApplicationId).AddHeader ("Authorization"' string.Format ("BEARER {0}"' _accessToken)); " is 183.
Long Statement,AppHarbor.Commands,LogAppCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\LogAppCommand.cs,InnerExecute,The length of the statement  "	}.AddUrlSegment ("slug"' ApplicationId).AddHeader ("Authorization"' string.Format ("BEARER {0}"' _accessToken)).AddBody (new { " is 126.
Long Statement,AppHarbor.Commands,LogAppCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\LogAppCommand.cs,InnerExecute,The length of the statement  "	var locationHeader = response.Headers.FirstOrDefault (x => string.Equals (x.Name' "location"' StringComparison.InvariantCultureIgnoreCase)); " is 140.
Empty Catch Block,AppHarbor,AliasMatcher,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\AliasMatcher.cs,IsSatisfiedBy,The method has an empty catch block.
Empty Catch Block,AppHarbor,ApplicationConfiguration,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\ApplicationConfiguration.cs,GetApplicationId,The method has an empty catch block.
Empty Catch Block,AppHarbor,ApplicationConfiguration,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\ApplicationConfiguration.cs,GetApplicationId,The method has an empty catch block.
Empty Catch Block,AppHarbor,ApplicationConfiguration,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\ApplicationConfiguration.cs,RemoveConfiguration,The method has an empty catch block.
Empty Catch Block,AppHarbor,TypeNameMatcher,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\TypeNameMatcher.cs,GetMatchedType,The method has an empty catch block.
Empty Catch Block,AppHarbor,TypeNameMatcher,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\TypeNameMatcher.cs,IsSatisfiedBy,The method has an empty catch block.
Magic Number,AppHarbor,ConsoleProgressBar,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\ConsoleProgressBar.cs,Update,The following statement contains a magic number: if (secondsSinceLastAverage > 2) {  	if (_lastProgressEvent.Key != DateTime.MinValue) {  		var itemsSinceLastProgress = processedItems - _lastProgressEvent.Value;  		var itemsPerSecond = itemsSinceLastProgress / secondsSinceLastAverage;  		_perSecondAverages.Add (itemsPerSecond);  		if (_perSecondAverages.Count () > 20) {  			_perSecondAverages.RemoveAt (0);  		}  	}  	_lastProgressEvent = new KeyValuePair<DateTime' double> (DateTime.Now' processedItems);  }  
Magic Number,AppHarbor,ConsoleProgressBar,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\ConsoleProgressBar.cs,Update,The following statement contains a magic number: if (secondsSinceLastAverage > 2) {  	if (_lastProgressEvent.Key != DateTime.MinValue) {  		var itemsSinceLastProgress = processedItems - _lastProgressEvent.Value;  		var itemsPerSecond = itemsSinceLastProgress / secondsSinceLastAverage;  		_perSecondAverages.Add (itemsPerSecond);  		if (_perSecondAverages.Count () > 20) {  			_perSecondAverages.RemoveAt (0);  		}  	}  	_lastProgressEvent = new KeyValuePair<DateTime' double> (DateTime.Now' processedItems);  }  
Magic Number,AppHarbor,ConsoleProgressBar,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\ConsoleProgressBar.cs,Update,The following statement contains a magic number: if (_lastProgressEvent.Key != DateTime.MinValue) {  	var itemsSinceLastProgress = processedItems - _lastProgressEvent.Value;  	var itemsPerSecond = itemsSinceLastProgress / secondsSinceLastAverage;  	_perSecondAverages.Add (itemsPerSecond);  	if (_perSecondAverages.Count () > 20) {  		_perSecondAverages.RemoveAt (0);  	}  }  
Magic Number,AppHarbor,ConsoleProgressBar,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\ConsoleProgressBar.cs,Update,The following statement contains a magic number: if (_perSecondAverages.Count () > 20) {  	_perSecondAverages.RemoveAt (0);  }  
Magic Number,AppHarbor,ConsoleProgressBar,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\ConsoleProgressBar.cs,OverwriteConsoleMessage,The following statement contains a magic number: if (message.Length > maxCharacterWidth) {  	message = message.Substring (0' maxCharacterWidth - 3) + "...";  }  
Magic Number,AppHarbor,ConsoleProgressBar,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\ConsoleProgressBar.cs,OverwriteConsoleMessage,The following statement contains a magic number: message = message.Substring (0' maxCharacterWidth - 3) + "...";  
Magic Number,AppHarbor,TimeSpanExtensions,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\TimeSpanExtensions.cs,GetHumanized,The following statement contains a magic number: if (timeSpan.TotalSeconds < 60) {  	unit = "second";  	value = timeSpan.TotalSeconds;  } else if (timeSpan.TotalMinutes < 60) {  	unit = "minute";  	value = timeSpan.TotalMinutes;  } else if (timeSpan.TotalHours < 24) {  	unit = "hour";  	value = timeSpan.TotalHours;  } else {  	unit = "day";  	value = timeSpan.Days;  }  
Magic Number,AppHarbor,TimeSpanExtensions,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\TimeSpanExtensions.cs,GetHumanized,The following statement contains a magic number: if (timeSpan.TotalSeconds < 60) {  	unit = "second";  	value = timeSpan.TotalSeconds;  } else if (timeSpan.TotalMinutes < 60) {  	unit = "minute";  	value = timeSpan.TotalMinutes;  } else if (timeSpan.TotalHours < 24) {  	unit = "hour";  	value = timeSpan.TotalHours;  } else {  	unit = "day";  	value = timeSpan.Days;  }  
Magic Number,AppHarbor,TimeSpanExtensions,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\TimeSpanExtensions.cs,GetHumanized,The following statement contains a magic number: if (timeSpan.TotalSeconds < 60) {  	unit = "second";  	value = timeSpan.TotalSeconds;  } else if (timeSpan.TotalMinutes < 60) {  	unit = "minute";  	value = timeSpan.TotalMinutes;  } else if (timeSpan.TotalHours < 24) {  	unit = "hour";  	value = timeSpan.TotalHours;  } else {  	unit = "day";  	value = timeSpan.Days;  }  
Magic Number,AppHarbor,TimeSpanExtensions,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\TimeSpanExtensions.cs,GetHumanized,The following statement contains a magic number: if (timeSpan.TotalMinutes < 60) {  	unit = "minute";  	value = timeSpan.TotalMinutes;  } else if (timeSpan.TotalHours < 24) {  	unit = "hour";  	value = timeSpan.TotalHours;  } else {  	unit = "day";  	value = timeSpan.Days;  }  
Magic Number,AppHarbor,TimeSpanExtensions,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\TimeSpanExtensions.cs,GetHumanized,The following statement contains a magic number: if (timeSpan.TotalMinutes < 60) {  	unit = "minute";  	value = timeSpan.TotalMinutes;  } else if (timeSpan.TotalHours < 24) {  	unit = "hour";  	value = timeSpan.TotalHours;  } else {  	unit = "day";  	value = timeSpan.Days;  }  
Magic Number,AppHarbor,TimeSpanExtensions,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\TimeSpanExtensions.cs,GetHumanized,The following statement contains a magic number: if (timeSpan.TotalHours < 24) {  	unit = "hour";  	value = timeSpan.TotalHours;  } else {  	unit = "day";  	value = timeSpan.Days;  }  
Magic Number,AppHarbor.Commands,BuildCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\BuildCommand.cs,InnerExecute,The following statement contains a magic number: foreach (var build in builds) {  	var commitId = GetShortened (build.Commit.Id' 7);  	var message = GetShortened (string.Concat (commitId' " | "' build.Commit.Message.Trim ('\n'))' 40' "...");  	var buildOutput = String.Format (OutputFormat' message' build.Status' build.Deployed);  	_writer.WriteLine (buildOutput);  }  
Magic Number,AppHarbor.Commands,BuildCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\BuildCommand.cs,InnerExecute,The following statement contains a magic number: foreach (var build in builds) {  	var commitId = GetShortened (build.Commit.Id' 7);  	var message = GetShortened (string.Concat (commitId' " | "' build.Commit.Message.Trim ('\n'))' 40' "...");  	var buildOutput = String.Format (OutputFormat' message' build.Status' build.Deployed);  	_writer.WriteLine (buildOutput);  }  
Magic Number,AppHarbor.Commands,DeployAppCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\DeployAppCommand.cs,InnerExecute,The following statement contains a magic number: try {  	using (var packageStream = new FileStream (temporaryFileName' FileMode.Create' FileAccess.ReadWrite' FileShare.ReadWrite))  		using (var gzipStream = new GZipStream (packageStream' CompressionMode.Compress' true)) {  			_sourceDirectory.ToTar (gzipStream' excludedDirectoryNames: _excludedDirectories.ToArray ());  		}  	using (var s3Client = new AmazonS3Client (uploadCredentials.GetSessionCredentials ()))  		using (var transferUtility = new TransferUtility (s3Client)) {  			var request = new TransferUtilityUploadRequest {  				FilePath = temporaryFileName'  				BucketName = uploadCredentials.Bucket'  				Key = uploadCredentials.ObjectKey'  				Timeout = (int)TimeSpan.FromHours (2).TotalMilliseconds'  			};  			var progressBar = new MegaByteProgressBar ();  			request.UploadProgressEvent += (object x' UploadProgressArgs y) => progressBar.Update ("Uploading package"' y.TransferredBytes' y.TotalBytes);  			transferUtility.Upload (request);  			Console.CursorTop++;  			_writer.WriteLine ();  		}  } finally {  	File.Delete (temporaryFileName);  }  
Magic Number,AppHarbor.Commands,DeployAppCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\DeployAppCommand.cs,InnerExecute,The following statement contains a magic number: using (var s3Client = new AmazonS3Client (uploadCredentials.GetSessionCredentials ()))  	using (var transferUtility = new TransferUtility (s3Client)) {  		var request = new TransferUtilityUploadRequest {  			FilePath = temporaryFileName'  			BucketName = uploadCredentials.Bucket'  			Key = uploadCredentials.ObjectKey'  			Timeout = (int)TimeSpan.FromHours (2).TotalMilliseconds'  		};  		var progressBar = new MegaByteProgressBar ();  		request.UploadProgressEvent += (object x' UploadProgressArgs y) => progressBar.Update ("Uploading package"' y.TransferredBytes' y.TotalBytes);  		transferUtility.Upload (request);  		Console.CursorTop++;  		_writer.WriteLine ();  	}  
Magic Number,AppHarbor.Commands,DeployAppCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\DeployAppCommand.cs,InnerExecute,The following statement contains a magic number: using (var transferUtility = new TransferUtility (s3Client)) {  	var request = new TransferUtilityUploadRequest {  		FilePath = temporaryFileName'  		BucketName = uploadCredentials.Bucket'  		Key = uploadCredentials.ObjectKey'  		Timeout = (int)TimeSpan.FromHours (2).TotalMilliseconds'  	};  	var progressBar = new MegaByteProgressBar ();  	request.UploadProgressEvent += (object x' UploadProgressArgs y) => progressBar.Update ("Uploading package"' y.TransferredBytes' y.TotalBytes);  	transferUtility.Upload (request);  	Console.CursorTop++;  	_writer.WriteLine ();  }  
Magic Number,AppHarbor.Commands,HelpCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\HelpCommand.cs,InnerExecute,The following statement contains a magic number: foreach (var commandType in _commandTypes.Where (x => x.IsClass).OrderBy (x => GetScope (x)).ThenBy (x => x.Name)) {  	var usageStringBuilder = new StringBuilder ();  	var splitted = SplitUpperCase (commandType.Name).Where (x => x != "Command");  	usageStringBuilder.Append ("  ");  	usageStringBuilder.Append (string.Join (" "' splitted.Reverse ()));  	var helpAttribute = commandType.GetCustomAttributes (true).OfType<CommandHelpAttribute> ().Single ();  	usageStringBuilder.Append (string.Format (" {0}"' helpAttribute.Options));  	while (usageStringBuilder.Length < 30) {  		usageStringBuilder.Append (" ");  	}  	_writer.Write (usageStringBuilder.ToString ().ToLower ());  	_writer.Write (string.Concat ("#  "' helpAttribute.Description));  	if (!string.IsNullOrEmpty (helpAttribute.Alias)) {  		_writer.Write (" (\"{0}\")"' helpAttribute.Alias);  	}  	_writer.WriteLine ();  }  
Magic Number,AppHarbor.Commands,HelpCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\HelpCommand.cs,InnerExecute,The following statement contains a magic number: while (usageStringBuilder.Length < 30) {  	usageStringBuilder.Append (" ");  }  
Magic Number,AppHarbor.Commands,LogAppCommand,F:\newReposMay17\appharbor_appharbor-cli\src\AppHarbor\Commands\LogAppCommand.cs,WriteColorizedLine,The following statement contains a magic number: Console.WriteLine (parsed.Groups [4].Value);  
