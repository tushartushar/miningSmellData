Implementation smell,Namespace,Class,File,Method,Description
Complex Method,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomerUpdateOrAddLocal,Cyclomatic complexity of the method is 11
Complex Method,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,CategoriesForRoomsCategory,Cyclomatic complexity of the method is 8
Long Parameter List,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,GetCustomerListBySalesAssociate,The method has 8 parameters.
Long Parameter List,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomersGetBasicInformationByProc,The method has 7 parameters.
Long Parameter List,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomersGetProjectRoomInformationByProc,The method has 7 parameters.
Long Parameter List,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomersGetProjectInformationByProc,The method has 9 parameters.
Long Parameter List,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,SiteAreasForStoreCode,The method has 5 parameters.
Long Parameter List,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductsForSiteArea,The method has 5 parameters.
Long Parameter List,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductsForCategory,The method has 5 parameters.
Long Identifier,SalesAdvisorWorkerRole,WorkerRole,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\WorkerRole.cs,StartQueues,The length of the parameter protectedQueueConnectionString is 30.
Long Statement,SalesAdvisorWorkerRole.Adapters,FLJsonAdapter,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Adapters\FLJsonAdapter.cs,GetCustomerByName,The length of the statement  "			DebugLog.Log (String.Format ("Error trying to parse customer response from FLAPI' message: {0}"' e.Message.ToString ())); " is 121.
Long Statement,SalesAdvisorWorkerRole.Adapters,ProductDBAdapter,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Adapters\ProductDBAdapter.cs,getConnection,The length of the statement  "	SqlConnection connection = new SqlConnection (RoleEnvironment.GetConfigurationSettingValue ("ProductDBConnectionString")); " is 122.
Long Statement,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,GetCustomerListBySalesAssociate,The length of the statement  "		connection.Query<Customers' Project' Room' RoomsCategory' ProjectStatus' int> ("CustomerList_ReadAll"' map: (customer' project' room' rc' projectStatus) =>  { " is 158.
Long Statement,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomersGetBasicInformationByProc,The length of the statement  "		connection.Query<Customers' Emails' PhoneNumbers' PhoneTypes' Address' int> (StoredProcedure' map: (customerFromDB' email' phone' phoneType' address) =>  { " is 155.
Long Statement,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomersGetBasicInformationByProc,The length of the statement  "		}' param: DynamicParameters' commandType: CommandType.StoredProcedure' splitOn: "LastCustomer'LastEmail' LastPhoneNumber' LastPhoneType' LastAddress"); " is 151.
Long Statement,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomerGetById,The length of the statement  "	OurCustomer = this.CustomersGetProjectInformationByProc ("Projects_CollectByCustomerId"' DynamicParameters' OurCustomer); " is 121.
Long Statement,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomerGetById,The length of the statement  "	OurCustomer = this.CustomersGetProjectRoomInformationByProc ("Rooms_CollectByCustomerId"' DynamicParameters' OurCustomer); " is 122.
Long Statement,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomerGetByGUID,The length of the statement  "	OurCustomer = this.CustomersGetProjectInformationByProc ("Projects_CollectByCustomerGUID"' DynamicParameters' OurCustomer); " is 123.
Long Statement,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomerGetByGUID,The length of the statement  "	OurCustomer = this.CustomersGetProjectRoomInformationByProc ("Rooms_CollectByCustomerGUID"' DynamicParameters' OurCustomer); " is 124.
Long Statement,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomersGetProjectRoomInformationByProc,The length of the statement  "		}' param: DynamicParameters' commandType: CommandType.StoredProcedure' splitOn: "LastProject' LastRoom' LastRoomCategory"); " is 123.
Long Statement,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomersGetProjectInformationByProc,The length of the statement  "		connection.Query<Project' ProjectType' ProductInstance' ProductTypeOptions' ProjectStatus' ProductInstanceAddOn' int> (StoredProcedure' map: (project' projectType' productInstance' productTypeOption' projectStatus' productAddOn) =>  { " is 234.
Long Statement,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomersGetProjectInformationByProc,The length of the statement  "				Customer.Projects [ProjectIndex].ProductInstances [ProductInstanceIndex].ProductTypeOptionsIndexOrAdd (productTypeOption); " is 122.
Long Statement,SalesAdvisorWorkerRole.Services,CustomerServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\CustomerServiceWorker.cs,CustomersGetProjectInformationByProc,The length of the statement  "		}' param: DynamicParameters' commandType: CommandType.StoredProcedure' splitOn: "LastProject' LastProjectType' LastProductInstance' LastProductTypeOption' LastProjectStatus"); " is 175.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductGetAll,The length of the statement  "		connection.Query<PirchProduct' PirchImage' PirchSeries' PirchBrand' int> ("Artefact_Products_CollectAllWithPrice"' map: (product' image' series' brand) =>  { " is 157.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,SiteAreasForStoreCode,The length of the statement  "		connection.Query<SiteArea' PirchImage' int> (@"select Inventory.SiteArea.*' Inventory.SiteAreaImage.SiteAreaImageId as ImageId' Inventory.SiteAreaImage.ImageUrl' Inventory.SiteAreaImage.Sequence " is 194.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,SiteAreasForStoreCode,The length of the statement  "                    left join Inventory.SiteAreaImage on Inventory.SiteArea.DefaultSiteAreaImageId = Inventory.SiteAreaImage.SiteAreaImageId " is 120.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,SiteAreasForStoreCode,The length of the statement  "                    where Inventory.Site.Code = @storecode and Inventory.SiteArea.AreaType = @areatype"' param: dp' map: (sitearea' image) =>  { " is 124.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,GetSiteArea,The length of the statement  "		connection.Query<SiteArea' PirchImage' int> (@"select Inventory.SiteArea.*' Inventory.SiteAreaImage.SiteAreaImageId as ImageId' Inventory.SiteAreaImage.ImageUrl' Inventory.SiteAreaImage.Sequence " is 194.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,GetSiteArea,The length of the statement  "                    from Inventory.SiteArea left join Inventory.SiteAreaImage on Inventory.SiteArea.DefaultSiteAreaImageId = Inventory.SiteAreaImage.SiteAreaImageId" is 144.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductsForSiteArea,The length of the statement  "                        ProductCatalog.Product.*' ProductCatalog.ProductImage.ProductImageId as ImageId' ProductCatalog.ProductImage.ImageUrl' ProductCatalog.ProductImage.Sequence'" is 156.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductsForSiteArea,The length of the statement  "                        ProductCatalog.BrandSeries.BrandSeriesId' ProductCatalog.BrandSeries.BrandId' ProductCatalog.BrandSeries.Name' ProductCatalog.BrandSeries.Description'" is 150.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductsForSiteArea,The length of the statement  "                        ProductCatalog.Brand.BrandId as BrandSplit' ProductCatalog.Brand.ManufacturerId' ProductCatalog.Brand.Name' ProductCatalog.Brand.Description" is 140.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductsForSiteArea,The length of the statement  "                        left join ProductCatalog.Manufacturer on ProductCatalog.Brand.ManufacturerId = ProductCatalog.Manufacturer.ManufacturerId" is 121.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,RoomCategoryForName,The length of the statement  "		List<RoomsCategory> list = connection.Query<RoomsCategory> ("RoomsCategory_ReadByName"' dp' commandType: CommandType.StoredProcedure).ToList (); " is 144.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductsForCategory,The length of the statement  "                        ProductCatalog.Product.*' ProductCatalog.ProductImage.ProductImageId as ImageId' ProductCatalog.ProductImage.ImageUrl' ProductCatalog.ProductImage.Sequence'" is 156.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductsForCategory,The length of the statement  "                        ProductCatalog.BrandSeries.BrandSeriesId' ProductCatalog.BrandSeries.BrandId' ProductCatalog.BrandSeries.Name' ProductCatalog.BrandSeries.Description'" is 150.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductsForCategory,The length of the statement  "                        ProductCatalog.Brand.BrandId as BrandSplit' ProductCatalog.Brand.ManufacturerId' ProductCatalog.Brand.Name' ProductCatalog.Brand.Description" is 140.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductsForCategory,The length of the statement  "                        ProductCatalog.Category left join ProductCatalog.BrandCategory on ProductCatalog.Category.CategoryId = ProductCatalog.BrandCategory.CategoryId" is 142.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductsForCategory,The length of the statement  "                        right join ProductCatalog.Product on ProductCatalog.Product.BrandCategoryId = ProductCatalog.BrandCategory.BrandCategoryId" is 122.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductsForCategory,The length of the statement  "                        left join ProductCatalog.Manufacturer on ProductCatalog.Brand.ManufacturerId = ProductCatalog.Manufacturer.ManufacturerId" is 121.
Long Statement,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductCategoryForGuid,The length of the statement  "		List<TempImage> imgs = connection.Query<TempImage> ("select * from ProductCategoryImages where CategoryGuid = @catguid"' dp).ToList (); " is 135.
Long Statement,SalesAdvisorWorkerRole.Services,WorkerServiceStarter,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\WorkerServiceStarter.cs,StartService,The length of the statement  "		DebugLog.Log (String.Format ("ServiceHost open failure for {0}' Communication Error: {1}"' typeof(Type).Name' ce.Message)); " is 123.
Long Statement,SalesAdvisorWorkerRole.Services,UserServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\UserServiceWorker.cs,GetUserByUsername,The length of the statement  "		List<User> result = connection.Query<User> ("User_ReadByUsername"' p' commandType: CommandType.StoredProcedure).ToList (); " is 122.
Long Statement,SalesAdvisorWorkerRole.Services,UserServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\UserServiceWorker.cs,GetUsersByStoreCode,The length of the statement  "		IEnumerable<User> result = connection.Query<User> ("User_ReadByStoreCode"' p' commandType: CommandType.StoredProcedure); " is 120.
Long Statement,SalesAdvisorWorkerRole.Services,UserServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\UserServiceWorker.cs,IsStoreCodeValid,The length of the statement  "		List<StoreInfo> stores = connection.Query<StoreInfo> ("StoreCode_ReadByCode"' p' commandType: CommandType.StoredProcedure).ToList (); " is 133.
Long Statement,SalesAdvisorWorkerRole,WorkerRole,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\WorkerRole.cs,StartServices,The length of the statement  "	this.userWorkerService = new WorkerServiceStarter<UserServiceWorker' UserService> (UserServiceInfo.ENDPOINT_NAME' "GetDataEndpoint"); " is 133.
Long Statement,SalesAdvisorWorkerRole,WorkerRole,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\WorkerRole.cs,StartServices,The length of the statement  "	this.customerWorkerService = new WorkerServiceStarter<CustomerServiceWorker' CustomerService> (CustomerServiceInfo.ENDPOINT_NAME' "GetDataEndpoint"); " is 149.
Long Statement,SalesAdvisorWorkerRole,WorkerRole,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\WorkerRole.cs,StartServices,The length of the statement  "	this.productWorkerService = new WorkerServiceStarter<ProductServiceWorker' ProductService> (ProductServiceInfo.ENDPOINT_NAME' "GetDataEndpoint"); " is 145.
Long Statement,SalesAdvisorWorkerRole,WorkerRole,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\WorkerRole.cs,StartServices,The length of the statement  "	this.testWorkerService = new WorkerServiceStarter<TestServiceWorker' TestService> (TestServiceInfo.ENDPOINT_NAME' "GetDataEndpoint"); " is 133.
Long Statement,SalesAdvisorWorkerRole,WorkerRole,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\WorkerRole.cs,StartServices,The length of the statement  "	this.projectWorkerService = new WorkerServiceStarter<ProjectServiceWorker' ProjectService> (ProjectServiceInfo.ENDPOINT_NAME' "GetDataEndpoint"); " is 145.
Long Statement,SalesAdvisorWorkerRole,WorkerRole,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\WorkerRole.cs,StartQueues,The length of the statement  "	DebugLog.Log (String.Format ("*********************************\nTrying to start queues at {0}"' DateTime.Now.ToString ())); " is 124.
Long Statement,SalesAdvisorWorkerRole,WorkerRole,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\WorkerRole.cs,StartQueues,The length of the statement  "	DebugLog.Log (String.Format ("*********************************\nFinished starting queues at {0}"' DateTime.Now.ToString ())); " is 126.
Magic Number,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductGetAll,The following statement contains a magic number: using (SqlConnection connection = this.getProductConnection ()) {  	DynamicParameters DynamicParameters = new DynamicParameters ();  	DynamicParameters.Add ("@StoreCode"' "521DA104-2AC8-DF11-ABB0-00155D046704");  	DynamicParameters.Add ("@Date"' "7/30/2013");  	DynamicParameters.Add ("@minPriceLevelId"' "A56AB05B-017B-4474-8DD6-11BBA48BD2DA");  	DynamicParameters.Add ("@maxPriceLevelId"' "CE954516-DFE0-4959-9493-FA22944FC2AA");  	ProductType productType = null;  	connection.Query<PirchProduct' PirchImage' PirchSeries' PirchBrand' int> ("Artefact_Products_CollectAllWithPrice"' map: (product' image' series' brand) =>  {  		if (product != null && product.MinimumPrice > -.000001) {  			if (product.ProductId != null) {  				product.ImagesIndexOrAdd (image);  				product.series = series;  				product.brand = brand;  				try {  					productType = products [product.ProductId.ToString ()];  					this.AddPirchProductImagesToProductType (productType' product);  				}  				catch (Exception e) {  					productType = this.ProductTypeForPirchProduct (product);  					products.Add (productType.ProductTypeGUID' productType);  					this.AddPirchProductImagesToProductType (productType' product);  				}  			}  		}  		return 1;  	}' param: DynamicParameters' commandType: CommandType.StoredProcedure' splitOn: "ImageId' BrandSeriesId' BrandSplit");  	//  	return products;  }  
Magic Number,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductGetAll,The following statement contains a magic number: connection.Query<PirchProduct' PirchImage' PirchSeries' PirchBrand' int> ("Artefact_Products_CollectAllWithPrice"' map: (product' image' series' brand) =>  {  	if (product != null && product.MinimumPrice > -.000001) {  		if (product.ProductId != null) {  			product.ImagesIndexOrAdd (image);  			product.series = series;  			product.brand = brand;  			try {  				productType = products [product.ProductId.ToString ()];  				this.AddPirchProductImagesToProductType (productType' product);  			}  			catch (Exception e) {  				productType = this.ProductTypeForPirchProduct (product);  				products.Add (productType.ProductTypeGUID' productType);  				this.AddPirchProductImagesToProductType (productType' product);  			}  		}  	}  	return 1;  }' param: DynamicParameters' commandType: CommandType.StoredProcedure' splitOn: "ImageId' BrandSeriesId' BrandSplit");  
Magic Number,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductGetAll,The following statement contains a magic number: if (product != null && product.MinimumPrice > -.000001) {  	if (product.ProductId != null) {  		product.ImagesIndexOrAdd (image);  		product.series = series;  		product.brand = brand;  		try {  			productType = products [product.ProductId.ToString ()];  			this.AddPirchProductImagesToProductType (productType' product);  		}  		catch (Exception e) {  			productType = this.ProductTypeForPirchProduct (product);  			products.Add (productType.ProductTypeGUID' productType);  			this.AddPirchProductImagesToProductType (productType' product);  		}  	}  }  
Magic Number,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductGetAllMock,The following statement contains a magic number: WoodOption2.Id = 2;  
Magic Number,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductGetAllMock,The following statement contains a magic number: ProductTypeOptionGroup2.Id = 2;  
Magic Number,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductGetAllMock,The following statement contains a magic number: ChromeOption1.Id = 3;  
Magic Number,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductGetAllMock,The following statement contains a magic number: ChromeOption2.Id = 4;  
Magic Number,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductGetAllMock,The following statement contains a magic number: product2.Id = 2;  
Magic Number,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,ProductTypeForPirchProduct,The following statement contains a magic number: product.MinimumPrice = Math.Round (pirchProduct.MinimumPrice' 2);  
Magic Number,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,AddPirchProductImagesToProductType,The following statement contains a magic number: if (pirchProduct.Images != null) {  	foreach (PirchImage image in pirchProduct.Images) {  		String finalSrc = "";  		if (image.ImageUrl != null) {  			if (String.Compare (image.ImageUrl.Substring (0' 7)' "http://") == 0) {  				finalSrc = image.ImageUrl;  			}  			else {  				finalSrc = "productimages/" + image.ImageUrl;  			}  		}  		product.ImageAdd (finalSrc);  	}  }  
Magic Number,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,AddPirchProductImagesToProductType,The following statement contains a magic number: foreach (PirchImage image in pirchProduct.Images) {  	String finalSrc = "";  	if (image.ImageUrl != null) {  		if (String.Compare (image.ImageUrl.Substring (0' 7)' "http://") == 0) {  			finalSrc = image.ImageUrl;  		}  		else {  			finalSrc = "productimages/" + image.ImageUrl;  		}  	}  	product.ImageAdd (finalSrc);  }  
Magic Number,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,AddPirchProductImagesToProductType,The following statement contains a magic number: if (image.ImageUrl != null) {  	if (String.Compare (image.ImageUrl.Substring (0' 7)' "http://") == 0) {  		finalSrc = image.ImageUrl;  	}  	else {  		finalSrc = "productimages/" + image.ImageUrl;  	}  }  
Magic Number,SalesAdvisorWorkerRole.Services,ProductServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\ProductServiceWorker.cs,AddPirchProductImagesToProductType,The following statement contains a magic number: if (String.Compare (image.ImageUrl.Substring (0' 7)' "http://") == 0) {  	finalSrc = image.ImageUrl;  }  else {  	finalSrc = "productimages/" + image.ImageUrl;  }  
Magic Number,SalesAdvisorWorkerRole.Services,TestServiceWorker,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\TestServiceWorker.cs,TestCall,The following statement contains a magic number: try {  	CustomerServiceWorker csw = new CustomerServiceWorker ();  	Customers customer = csw.CustomerGetById (50);  	customer.CustomerGuid = Guid.NewGuid ().ToString ();  	//FLJsonAdapter.getInstance().CreateCustomer(customer);  }  catch (Exception e) {  	DebugLog.Log (String.Format ("Something went wrong in the test service' e.message: {0}"' e.Message));  	throw e;  }  
Magic Number,SalesAdvisorWorkerRole.Services,WorkerServiceStarter,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\Services\WorkerServiceStarter.cs,RestartService,The following statement contains a magic number: Thread.Sleep (500);  
Magic Number,SalesAdvisorWorkerRole,WorkerRole,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\WorkerRole.cs,Run,The following statement contains a magic number: while (!IsStopped) {  	// Look for exceptions on the QueueHandler exception list  	while (QueueHandler.exceptionList.Count > 0) {  		Exception e = (Exception)QueueHandler.exceptionList [0];  		QueueHandler.exceptionList.RemoveAt (0);  		DebugLog.Log (String.Format ("Exception happened on a queue handler! message: {0}"' e.Message));  		// We'll just re-throw right now for debug purposes.  		throw e;  	}  	Thread.Sleep (5000);  }  
Magic Number,SalesAdvisorWorkerRole,WorkerRole,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\WorkerRole.cs,Run,The following statement contains a magic number: Thread.Sleep (5000);  
Magic Number,SalesAdvisorWorkerRole,WorkerRole,C:\repos\eeejayg_Pirch\SalesAdvisorWorkerRole\WorkerRole.cs,OnStart,The following statement contains a magic number: ServicePointManager.DefaultConnectionLimit = 12;  
