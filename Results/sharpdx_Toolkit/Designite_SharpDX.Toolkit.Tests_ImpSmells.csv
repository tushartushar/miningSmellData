Implementation smell,Namespace,Class,File,Method,Description
Long Statement,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestString,The length of the statement  "            // Check for an end of stream exception if we are trying to read a fixed length string with not enough bytes into the buffer " is 124.
Magic Number,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestSimpleDynamic,The following statement contains a magic number: var arrayValue = new byte[] { 1' 2' 3' 4 };
Magic Number,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestSimpleDynamic,The following statement contains a magic number: var arrayValue = new byte[] { 1' 2' 3' 4 };
Magic Number,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestSimpleDynamic,The following statement contains a magic number: var arrayValue = new byte[] { 1' 2' 3' 4 };
Magic Number,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestString,The following statement contains a magic number: rw.Serialize(ref string1' 4);
Magic Number,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestString,The following statement contains a magic number: Assert.AreEqual(stream.Position' 4 + 5 + 9);
Magic Number,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestString,The following statement contains a magic number: Assert.AreEqual(stream.Position' 4 + 5 + 9);
Magic Number,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestString,The following statement contains a magic number: Assert.AreEqual(stream.Position' 4 + 5 + 9);
Magic Number,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestString,The following statement contains a magic number: rw.Serialize(ref string11' 4);
Magic Number,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestString,The following statement contains a magic number: Assert.AreEqual(stream.Position' 4 + 5 + 9);
Magic Number,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestString,The following statement contains a magic number: Assert.AreEqual(stream.Position' 4 + 5 + 9);
Magic Number,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestString,The following statement contains a magic number: Assert.AreEqual(stream.Position' 4 + 5 + 9);
Magic Number,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestString,The following statement contains a magic number: Assert.Catch<EndOfStreamException>(() =>                                                     {                                                         rw.Mode = SerializerMode.Read;                                                         stream.Position = 0;                                                         rw.Serialize(ref string1' 50);                                                     });
Magic Number,SharpDX.Tests,TestSerialization,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,TestString,The following statement contains a magic number: Assert.Catch<ArgumentNullException>(() =>                                                      {                                                          rw.Mode = SerializerMode.Write;                                                          stream.Position = 0;                                                          rw.Serialize(ref string1' 4);                                                      });
Magic Number,SharpDX.Tests,TestComparableClass,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Tests\TestSerialization.cs,GetHashCode,The following statement contains a magic number: return ((A != null ? A.GetHashCode() : 0) * 397) ^ (B != null ? B.GetHashCode() : 0);
