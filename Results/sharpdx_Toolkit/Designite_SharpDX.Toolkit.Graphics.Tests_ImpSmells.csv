Implementation smell,Namespace,Class,File,Method,Description
Long Method,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The method has 105 lines of code.
Long Parameter List,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ManipulateImage,The method has 5 parameters. Parameters: source' dest' arrayIndex' zIndex' mipIndex
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,Initialize,The length of the statement  "                throw new NotSupportedException("Install DirectX SDK June 2010 to run this test (DXSDK_DIR environment variable is missing).");             " is 127.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ManipulateImage,The length of the statement  "            Assert.True(Utilities.CompareMemory(fromPixelBuffer.DataPointer' toPixelBuffer.DataPointer' fromPixelBuffer.BufferStride)); " is 123.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestLoadAndSave,The length of the statement  "            files.AddRange(Directory.EnumerateFiles(Path.Combine(dxsdkDir' @"Samples\Media")' "*.dds"' SearchOption.AllDirectories)); " is 121.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestLoadAndSave,The length of the statement  "            files.AddRange(Directory.EnumerateFiles(Path.Combine(dxsdkDir' @"Samples\Media")' "*.jpg"' SearchOption.AllDirectories)); " is 121.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestLoadAndSave,The length of the statement  "            files.AddRange(Directory.EnumerateFiles(Path.Combine(dxsdkDir' @"Samples\Media")' "*.bmp"' SearchOption.AllDirectories)); " is 121.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ProcessFiles,The length of the statement  "                        Assert.True(FormatHelper.IsCompressed(image.Description.Format) && intermediateFormat != ImageFileType.Dds && intermediateFormat != ImageFileType.Tktx); " is 152.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ProcessFiles,The length of the statement  "            Console.WriteLine("Loaded {0} and convert to (Dds' Jpg' Png' Gif' Bmp' Tiff) image from DirectXSDK test Memory: {1} bytes' in {2}ms"' imageCount' testMemoryAfter - testMemoryBefore' time); " is 188.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,CompareImage,The length of the statement  "                Assert.AreEqual(srcPixelBuffer.RowStride' dstPixelBuffer.RowStride' "RowPitch is different for index [{0}]' image [{1}]"' j' file); " is 131.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,CompareImage,The length of the statement  "                Assert.AreEqual(srcPixelBuffer.BufferStride' dstPixelBuffer.BufferStride' "SlicePitch is different for index [{0}]' image [{1}]"' j' file); " is 139.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,CompareImage,The length of the statement  "                var isSameBuffer = Utilities.CompareMemory(srcPixelBuffer.DataPointer' dstPixelBuffer.DataPointer' srcPixelBuffer.BufferStride); " is 128.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,CompareImage,The length of the statement  "                    var stream = new NativeFileStream("test_from.dds"' NativeFileMode.Create' NativeFileAccess.Write' NativeFileShare.Write); " is 121.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,IndexBuffer,The length of the statement  "            indexBuffer = Buffer.New(device' 256' sizeof(int)' BufferFlags.IndexBuffer | BufferFlags.ShaderResource | BufferFlags.UnorderedAccess); " is 135.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The length of the statement  "            var rawBuffer = Buffer.New(device' 512' BufferFlags.RawBuffer | BufferFlags.UnorderedAccess | BufferFlags.ShaderResource); " is 122.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The length of the statement  "            // Check raw buffer creation with IndexBuffer' VertexBuffer' RawBuffer' RenderTarget' UnorderedAccess and ShaderResourceView " is 124.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The length of the statement  "            rawBuffer = Buffer.New(device' 512' sizeof(int)' BufferFlags.IndexBuffer | BufferFlags.VertexBuffer | BufferFlags.RawBuffer | BufferFlags.RenderTarget | BufferFlags.UnorderedAccess | BufferFlags.ShaderResource); " is 211.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The length of the statement  "                BindFlags = BindFlags.IndexBuffer | BindFlags.VertexBuffer | BindFlags.RenderTarget | BindFlags.UnorderedAccess | BindFlags.ShaderResource' " is 139.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,ArgumentBuffer,The length of the statement  "            argumentBuffer = Buffer.New(device' 256' BufferFlags.ArgumentBuffer | BufferFlags.RawBuffer | BufferFlags.UnorderedAccess); " is 123.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Initialize,The length of the statement  "                throw new NotSupportedException("Install DirectX SDK June 2010 to run this test (DXSDK_DIR environment variable is missing)."); " is 127.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1D,The length of the statement  "            var refMipmapDescription = new MipMapDescription(textureData.Length' 1' 1' rowStride' rowStride' textureData.Length' 1); " is 120.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,TestLoadSave,The length of the statement  "            files.AddRange(Directory.EnumerateFiles(Path.Combine(dxsdkDir' @"Samples\Media")' "*.dds"' SearchOption.AllDirectories)); " is 121.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,TestLoadSave,The length of the statement  "            files.AddRange(Directory.EnumerateFiles(Path.Combine(dxsdkDir' @"Samples\Media")' "*.jpg"' SearchOption.AllDirectories)); " is 121.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,TestLoadSave,The length of the statement  "            files.AddRange(Directory.EnumerateFiles(Path.Combine(dxsdkDir' @"Samples\Media")' "*.bmp"' SearchOption.AllDirectories)); " is 121.
Long Statement,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,TestLoadSave,The length of the statement  "                                      "RifleStock1Bump.dds"  // This file is in BC1 format but size is not a multiple of 4' so It can't be loaded as a texture' so we skip it. " is 136.
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestFloats,The following statement contains a magic number: var floats = new float[16];
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestFloats,The following statement contains a magic number: var floats2 = new Vector2[8];
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestFloats,The following statement contains a magic number: floats2[i] = new Vector2(i * 2' i * 2 + 1);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestFloats,The following statement contains a magic number: floats2[i] = new Vector2(i * 2' i * 2 + 1);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestFloats,The following statement contains a magic number: var floats4 = new Vector4[4];
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestFloats,The following statement contains a magic number: floats4[i] = new Vector4(i * 4' i * 4 + 1' i * 4 + 2' i * 4 + 3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestFloats,The following statement contains a magic number: floats4[i] = new Vector4(i * 4' i * 4 + 1' i * 4 + 2' i * 4 + 3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestFloats,The following statement contains a magic number: floats4[i] = new Vector4(i * 4' i * 4 + 1' i * 4 + 2' i * 4 + 3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestFloats,The following statement contains a magic number: floats4[i] = new Vector4(i * 4' i * 4 + 1' i * 4 + 2' i * 4 + 3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestFloats,The following statement contains a magic number: floats4[i] = new Vector4(i * 4' i * 4 + 1' i * 4 + 2' i * 4 + 3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestFloats,The following statement contains a magic number: floats4[i] = new Vector4(i * 4' i * 4 + 1' i * 4 + 2' i * 4 + 3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestFloats,The following statement contains a magic number: effect.CurrentTechnique.Passes[2].Apply();
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: var matrices = new Matrix[4];
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: matrices[i][j] = (j + i * 16);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: j < 16
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: var locals4x4 = effect.Parameters["Matrices4x4"].GetMatrixArray(4);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: var locals4x3 = effect.Parameters["Matrices4x3"].GetMatrixArray(4);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: var locals3x3 = effect.Parameters["Matrices3x3"].GetMatrixArray(4);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: var locals3x4 = effect.Parameters["Matrices3x4"].GetMatrixArray(4);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' locals4x4' 4' 4)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' locals4x4' 4' 4)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' locals4x3' 4' 3)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' locals4x3' 4' 3)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' locals3x3' 3' 3)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' locals3x3' 3' 3)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' locals3x4' 3' 4)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' locals3x4' 3' 4)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: var local4x4 = effect.Parameters["Matrices4x4"].GetMatrix(3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: var local4x3 = effect.Parameters["Matrices4x3"].GetMatrix(3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: var local3x3 = effect.Parameters["Matrices3x3"].GetMatrix(3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: var local3x4 = effect.Parameters["Matrices3x4"].GetMatrix(3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrix(ref local4x4' ref matrices[3]' 4' 4));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrix(ref local4x4' ref matrices[3]' 4' 4));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrix(ref local4x4' ref matrices[3]' 4' 4));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrix(ref local4x3' ref matrices[3]' 4' 3));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrix(ref local4x3' ref matrices[3]' 4' 3));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrix(ref local4x3' ref matrices[3]' 4' 3));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrix(ref local3x3' ref matrices[3]' 3' 3));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrix(ref local3x3' ref matrices[3]' 3' 3));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrix(ref local3x3' ref matrices[3]' 3' 3));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrix(ref local3x4' ref matrices[3]' 3' 4));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrix(ref local3x4' ref matrices[3]' 3' 4));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrix(ref local3x4' ref matrices[3]' 3' 4));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: var buffer = Buffer.Structured.New<Matrix>(device' 4' true);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: device.Dispatch(4' 1' 1);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' compute4x4' 4' 4)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' compute4x4' 4' 4)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: device.Dispatch(4' 1' 1);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' compute4x3' 4' 3)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' compute4x3' 4' 3)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: effect.CurrentTechnique.Passes[2].Apply();
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: device.Dispatch(4' 1' 1);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' compute3x3' 3' 3)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' compute3x3' 3' 3)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: effect.CurrentTechnique.Passes[3].Apply();
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: device.Dispatch(4' 1' 1);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' compute3x4' 3' 4)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectValueArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectValueArray.cs,TestMatrix,The following statement contains a magic number: Assert.That(CompareMatrixArray(matrices' compute3x4' 3' 4)' Is.True);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectTextureArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectTextureArray.cs,TestCompiler,The following statement contains a magic number: var tex1 = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectTextureArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectTextureArray.cs,TestCompiler,The following statement contains a magic number: var tex1 = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectTextureArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectTextureArray.cs,TestCompiler,The following statement contains a magic number: var tex2 = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectTextureArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectTextureArray.cs,TestCompiler,The following statement contains a magic number: var tex2 = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectTextureArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectTextureArray.cs,TestCompiler,The following statement contains a magic number: var tex3 = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectTextureArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectTextureArray.cs,TestCompiler,The following statement contains a magic number: var tex3 = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffectTextureArray,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffectTextureArray.cs,TestCompiler,The following statement contains a magic number: effect.Parameters["testTextureArray"].SetResource(2' tex3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestCompiler,The following statement contains a magic number: Assert.AreEqual(bytecode.Shaders.Count' 3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestCompiler,The following statement contains a magic number: var tex = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestCompiler,The following statement contains a magic number: var tex = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestCompiler,The following statement contains a magic number: var tex1 = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestCompiler,The following statement contains a magic number: var tex1 = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestCompiler,The following statement contains a magic number: var tex2 = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestCompiler,The following statement contains a magic number: var tex2 = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestCompiler,The following statement contains a magic number: var tex3 = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestCompiler,The following statement contains a magic number: var tex3 = Texture2D.New(device' 256' 256' PixelFormat.R8.UNorm);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestMatrix,The following statement contains a magic number: var sourceMatrix = Matrix.RotationX(0.5f);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestMatrix,The following statement contains a magic number: var destMatrixFloats = constantBuffer.BackingBuffer.GetRange<float>(worldViewProj3x3.Offset' 3 * 3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestMatrix,The following statement contains a magic number: var destMatrixFloats = constantBuffer.BackingBuffer.GetRange<float>(worldViewProj3x3.Offset' 3 * 3);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestMatrix,The following statement contains a magic number: Assert.AreEqual(destMatrixFloats[j + i*3]' sourceMatrix3x3[j' i]);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestMatrix,The following statement contains a magic number: j < 3
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestEffect,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestEffect.cs,TestMatrix,The following statement contains a magic number: i < 3
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage1D,The following statement contains a magic number: const int Size = 256;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage1D,The following statement contains a magic number: int BufferCount = (int)Math.Log(Size' 2) + 1;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage1D,The following statement contains a magic number: int ExpectedSizePerArraySlice = Size * 2 - 1;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage1D,The following statement contains a magic number: var dest = Image.New1D(Size' true' PixelFormat.R8.UNorm' 6);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage1D,The following statement contains a magic number: Assert.AreEqual(dest.TotalSizeInBytes' ExpectedSizePerArraySlice * 6);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage1D,The following statement contains a magic number: Assert.AreEqual(dest.PixelBuffer.Count' BufferCount * 6);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage1D,The following statement contains a magic number: ManipulateImage(source' dest' 5' 0' 0);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage2D,The following statement contains a magic number: const int Size = 256;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage2D,The following statement contains a magic number: int BufferCount = (int)Math.Log(Size' 2) + 1;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage2D,The following statement contains a magic number: int ExpectedSizePerArraySlice = ((int)Math.Pow(4' BufferCount) - 1) / 3;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage2D,The following statement contains a magic number: int ExpectedSizePerArraySlice = ((int)Math.Pow(4' BufferCount) - 1) / 3;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage2D,The following statement contains a magic number: var dest = Image.New2D(Size' Size' true' PixelFormat.R8.UNorm' 6);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage2D,The following statement contains a magic number: Assert.AreEqual(dest.TotalSizeInBytes' ExpectedSizePerArraySlice * 6);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage2D,The following statement contains a magic number: Assert.AreEqual(dest.PixelBuffer.Count' BufferCount * 6);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage2D,The following statement contains a magic number: ManipulateImage(source' dest' 5' 0' 0);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage3D,The following statement contains a magic number: const int Size = 64;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage3D,The following statement contains a magic number: int BufferCount = (int)Math.Log(Size' 2) + 1;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage3D,The following statement contains a magic number: int ExpectedTotalBufferCount = (int)Math.Pow(2' BufferCount) - 1;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage3D,The following statement contains a magic number: int ExpectedSizePerArraySlice = ((int)Math.Pow(8' BufferCount) - 1) / 7;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage3D,The following statement contains a magic number: int ExpectedSizePerArraySlice = ((int)Math.Pow(8' BufferCount) - 1) / 7;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestImage3D,The following statement contains a magic number: ManipulateImage(source' dest' 0' 5' 0);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ManipulateImage,The following statement contains a magic number: fromPixelBuffer.SetPixel(0' 0' new PixelData.R8(255));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ManipulateImage,The following statement contains a magic number: fromPixelBuffer.SetPixel(16' 0' new PixelData.R8(128));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ManipulateImage,The following statement contains a magic number: fromPixelBuffer.SetPixel(16' 0' new PixelData.R8(128));
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ManipulateImage,The following statement contains a magic number: Assert.AreEqual(fromPixels[0]' 255);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ManipulateImage,The following statement contains a magic number: Assert.AreEqual(fromPixels[16]' 128);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ManipulateImage,The following statement contains a magic number: Assert.AreEqual(fromPixels[16]' 128);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ManipulateImage,The following statement contains a magic number: fromPixels[16] = 2;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ManipulateImage,The following statement contains a magic number: fromPixels[16] = 2;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ManipulateImage,The following statement contains a magic number: Assert.AreEqual(fromPixelBuffer.GetPixel<byte>(16' 0)' 2);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,ManipulateImage,The following statement contains a magic number: Assert.AreEqual(fromPixelBuffer.GetPixel<byte>(16' 0)' 2);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestImage,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestImage.cs,TestPerfLoadSave,The following statement contains a magic number: const int Count = 100;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,ConstantBuffer,The following statement contains a magic number: var constantBuffer = Buffer.New(device' 256' BufferFlags.ConstantBuffer);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,ConstantBuffer,The following statement contains a magic number: Assert.AreEqual(constantBuffer.Description' new BufferDescription()              {                  BindFlags = BindFlags.ConstantBuffer'                  CpuAccessFlags = CpuAccessFlags.None'                  OptionFlags = ResourceOptionFlags.None'                  SizeInBytes = 256'                  StructureByteStride = 0'                  Usage = ResourceUsage.Default              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,VertexBuffer,The following statement contains a magic number: var vertexBuffer = Buffer.New(device' 256' BufferFlags.VertexBuffer);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,VertexBuffer,The following statement contains a magic number: Assert.AreEqual(vertexBuffer.Description' new BufferDescription()              {                  BindFlags = BindFlags.VertexBuffer'                  CpuAccessFlags = CpuAccessFlags.None'                  OptionFlags = ResourceOptionFlags.None'                  SizeInBytes = 256'                  StructureByteStride = 0'                  Usage = ResourceUsage.Default              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,IndexBuffer,The following statement contains a magic number: var indexBuffer = Buffer.New(device' 256' BufferFlags.IndexBuffer);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,IndexBuffer,The following statement contains a magic number: Assert.AreEqual(indexBuffer.Description' new BufferDescription()              {                  BindFlags = BindFlags.IndexBuffer'                  CpuAccessFlags = CpuAccessFlags.None'                  OptionFlags = ResourceOptionFlags.None'                  SizeInBytes = 256'                  StructureByteStride = 0'                  Usage = ResourceUsage.Default              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,IndexBuffer,The following statement contains a magic number: indexBuffer = Buffer.New(device' 256' sizeof(int)' BufferFlags.IndexBuffer | BufferFlags.ShaderResource | BufferFlags.UnorderedAccess);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,IndexBuffer,The following statement contains a magic number: Assert.AreEqual(indexBuffer.Description' new BufferDescription()              {                  BindFlags = BindFlags.IndexBuffer | BindFlags.ShaderResource | BindFlags.UnorderedAccess'                  CpuAccessFlags = CpuAccessFlags.None'                  OptionFlags = ResourceOptionFlags.None'                  SizeInBytes = 256'                  StructureByteStride = 0'                  Usage = ResourceUsage.Default              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,IndexBuffer,The following statement contains a magic number: var srvDescriptionReference = new ShaderResourceViewDescription()              {                  Format = Format.R32_UInt'                  Dimension = ShaderResourceViewDimension.ExtendedBuffer'                  BufferEx =                  {                      ElementCount = 256/4'                      FirstElement = 0'                      Flags = ShaderResourceViewExtendedBufferFlags.None                  }              };
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,IndexBuffer,The following statement contains a magic number: var srvDescriptionReference = new ShaderResourceViewDescription()              {                  Format = Format.R32_UInt'                  Dimension = ShaderResourceViewDimension.ExtendedBuffer'                  BufferEx =                  {                      ElementCount = 256/4'                      FirstElement = 0'                      Flags = ShaderResourceViewExtendedBufferFlags.None                  }              };
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,IndexBuffer,The following statement contains a magic number: Assert.AreEqual(((UnorderedAccessView)indexBuffer).Description' new UnorderedAccessViewDescription()              {                  Format = Format.R32_UInt'                  Dimension = UnorderedAccessViewDimension.Buffer'                  Buffer = { ElementCount = 256 / 4' FirstElement = 0' Flags = UnorderedAccessViewBufferFlags.None }              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,IndexBuffer,The following statement contains a magic number: Assert.AreEqual(((UnorderedAccessView)indexBuffer).Description' new UnorderedAccessViewDescription()              {                  Format = Format.R32_UInt'                  Dimension = UnorderedAccessViewDimension.Buffer'                  Buffer = { ElementCount = 256 / 4' FirstElement = 0' Flags = UnorderedAccessViewBufferFlags.None }              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: var structuredBuffer = Buffer.New(device' 512' 16' BufferFlags.StructuredBuffer | BufferFlags.ShaderResource);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: var structuredBuffer = Buffer.New(device' 512' 16' BufferFlags.StructuredBuffer | BufferFlags.ShaderResource);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: Assert.AreEqual(structuredBuffer.Description' new BufferDescription()              {                  BindFlags = BindFlags.ShaderResource'                  CpuAccessFlags = CpuAccessFlags.None'                  OptionFlags = ResourceOptionFlags.BufferStructured'                  SizeInBytes = 512'                  StructureByteStride = 16'                  Usage = ResourceUsage.Default              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: Assert.AreEqual(structuredBuffer.Description' new BufferDescription()              {                  BindFlags = BindFlags.ShaderResource'                  CpuAccessFlags = CpuAccessFlags.None'                  OptionFlags = ResourceOptionFlags.BufferStructured'                  SizeInBytes = 512'                  StructureByteStride = 16'                  Usage = ResourceUsage.Default              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: var srvDescriptionReference = new ShaderResourceViewDescription()                                                {                                                    Format = Format.Unknown'                                                    Dimension = ShaderResourceViewDimension.ExtendedBuffer'                                                    BufferEx =                                                        {                                                            ElementCount = 32'                                                            FirstElement = 0'                                                            Flags = ShaderResourceViewExtendedBufferFlags.None                                                        }                                                };
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: structuredBuffer = Buffer.New(device' 512' 16' BufferFlags.StructuredBuffer | BufferFlags.UnorderedAccess);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: structuredBuffer = Buffer.New(device' 512' 16' BufferFlags.StructuredBuffer | BufferFlags.UnorderedAccess);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: Assert.AreEqual(((UnorderedAccessView)structuredBuffer).Description' new UnorderedAccessViewDescription()              {                  Format = Format.Unknown'                  Dimension = UnorderedAccessViewDimension.Buffer'                  Buffer = { ElementCount = 512 / 16' FirstElement = 0' Flags = UnorderedAccessViewBufferFlags.None }              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: Assert.AreEqual(((UnorderedAccessView)structuredBuffer).Description' new UnorderedAccessViewDescription()              {                  Format = Format.Unknown'                  Dimension = UnorderedAccessViewDimension.Buffer'                  Buffer = { ElementCount = 512 / 16' FirstElement = 0' Flags = UnorderedAccessViewBufferFlags.None }              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: structuredBuffer = Buffer.New(device' 512' 16' BufferFlags.StructuredAppendBuffer);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: structuredBuffer = Buffer.New(device' 512' 16' BufferFlags.StructuredAppendBuffer);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: Assert.AreEqual(structuredBuffer.Description' new BufferDescription()              {                  BindFlags = BindFlags.UnorderedAccess'                  CpuAccessFlags = CpuAccessFlags.None'                  OptionFlags = ResourceOptionFlags.BufferStructured'                  SizeInBytes = 512'                  StructureByteStride = 16'                  Usage = ResourceUsage.Default              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: Assert.AreEqual(structuredBuffer.Description' new BufferDescription()              {                  BindFlags = BindFlags.UnorderedAccess'                  CpuAccessFlags = CpuAccessFlags.None'                  OptionFlags = ResourceOptionFlags.BufferStructured'                  SizeInBytes = 512'                  StructureByteStride = 16'                  Usage = ResourceUsage.Default              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: Assert.AreEqual(((UnorderedAccessView)structuredBuffer).Description' new UnorderedAccessViewDescription()              {                  Format = Format.Unknown'                  Dimension = UnorderedAccessViewDimension.Buffer'                  Buffer = { ElementCount = 512 / 16' FirstElement = 0' Flags = UnorderedAccessViewBufferFlags.Append }              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,StructuredBuffer,The following statement contains a magic number: Assert.AreEqual(((UnorderedAccessView)structuredBuffer).Description' new UnorderedAccessViewDescription()              {                  Format = Format.Unknown'                  Dimension = UnorderedAccessViewDimension.Buffer'                  Buffer = { ElementCount = 512 / 16' FirstElement = 0' Flags = UnorderedAccessViewBufferFlags.Append }              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: var rawBuffer = Buffer.New(device' 512' BufferFlags.RawBuffer | BufferFlags.UnorderedAccess | BufferFlags.ShaderResource);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: Assert.AreEqual(rawBuffer.Description' new BufferDescription()                                                                {                                                                    BindFlags = BindFlags.UnorderedAccess | BindFlags.ShaderResource'                                                                    CpuAccessFlags = CpuAccessFlags.None'                                                                    OptionFlags = ResourceOptionFlags.BufferAllowRawViews'                                                                    SizeInBytes = 512'                                                                    StructureByteStride = 0'                                                                    Usage = ResourceUsage.Default                                                                });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: var srvDescriptionReference = new ShaderResourceViewDescription()              {                  Format = Format.R32_Typeless'                  Dimension = ShaderResourceViewDimension.ExtendedBuffer'                  BufferEx =                  {                      ElementCount = 512/4'                      FirstElement = 0'                      Flags = ShaderResourceViewExtendedBufferFlags.Raw                  }              };
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: var srvDescriptionReference = new ShaderResourceViewDescription()              {                  Format = Format.R32_Typeless'                  Dimension = ShaderResourceViewDimension.ExtendedBuffer'                  BufferEx =                  {                      ElementCount = 512/4'                      FirstElement = 0'                      Flags = ShaderResourceViewExtendedBufferFlags.Raw                  }              };
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: Assert.AreEqual(((UnorderedAccessView)rawBuffer).Description' new UnorderedAccessViewDescription()              {                  Format = Format.R32_Typeless'                  Dimension = UnorderedAccessViewDimension.Buffer'                  Buffer = { ElementCount = 512/4' FirstElement = 0' Flags = UnorderedAccessViewBufferFlags.Raw }              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: Assert.AreEqual(((UnorderedAccessView)rawBuffer).Description' new UnorderedAccessViewDescription()              {                  Format = Format.R32_Typeless'                  Dimension = UnorderedAccessViewDimension.Buffer'                  Buffer = { ElementCount = 512/4' FirstElement = 0' Flags = UnorderedAccessViewBufferFlags.Raw }              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: rawBuffer = Buffer.New(device' 512' sizeof(int)' BufferFlags.IndexBuffer | BufferFlags.VertexBuffer | BufferFlags.RawBuffer | BufferFlags.RenderTarget | BufferFlags.UnorderedAccess | BufferFlags.ShaderResource);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: Assert.AreEqual(rawBuffer.Description' new BufferDescription()              {                  BindFlags = BindFlags.IndexBuffer | BindFlags.VertexBuffer | BindFlags.RenderTarget | BindFlags.UnorderedAccess | BindFlags.ShaderResource'                  CpuAccessFlags = CpuAccessFlags.None'                  OptionFlags = ResourceOptionFlags.BufferAllowRawViews'                  SizeInBytes = 512'                  StructureByteStride = 0'                  Usage = ResourceUsage.Default              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: srvDescriptionReference = new ShaderResourceViewDescription()              {                  Format = Format.R32_Typeless'                  Dimension = ShaderResourceViewDimension.ExtendedBuffer'                  BufferEx =                  {                      ElementCount = 512 / 4'                      FirstElement = 0'                      Flags = ShaderResourceViewExtendedBufferFlags.Raw                  }              };
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: srvDescriptionReference = new ShaderResourceViewDescription()              {                  Format = Format.R32_Typeless'                  Dimension = ShaderResourceViewDimension.ExtendedBuffer'                  BufferEx =                  {                      ElementCount = 512 / 4'                      FirstElement = 0'                      Flags = ShaderResourceViewExtendedBufferFlags.Raw                  }              };
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: Assert.AreEqual(((UnorderedAccessView)rawBuffer).Description' new UnorderedAccessViewDescription()              {                  Format = Format.R32_Typeless'                  Dimension = UnorderedAccessViewDimension.Buffer'                  Buffer = { ElementCount = 512 / 4' FirstElement = 0' Flags = UnorderedAccessViewBufferFlags.Raw }              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: Assert.AreEqual(((UnorderedAccessView)rawBuffer).Description' new UnorderedAccessViewDescription()              {                  Format = Format.R32_Typeless'                  Dimension = UnorderedAccessViewDimension.Buffer'                  Buffer = { ElementCount = 512 / 4' FirstElement = 0' Flags = UnorderedAccessViewBufferFlags.Raw }              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: var rtv = rawBuffer.GetRenderTargetView(PixelFormat.R32.UInt' 16);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The following statement contains a magic number: Assert.AreEqual(rtvDescription' new RenderTargetViewDescription()              {                  Format = Format.R32_UInt'                  Dimension = RenderTargetViewDimension.Buffer'                  Buffer = { ElementWidth = 16 * sizeof(int)' FirstElement = 0}              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,ArgumentBuffer,The following statement contains a magic number: var argumentBuffer = Buffer.New(device' 256' BufferFlags.ArgumentBuffer);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,ArgumentBuffer,The following statement contains a magic number: Assert.AreEqual(argumentBuffer.Description' new BufferDescription()              {                  BindFlags = BindFlags.None'                  CpuAccessFlags = CpuAccessFlags.None'                  OptionFlags = ResourceOptionFlags.DrawIndirectArguments'                  SizeInBytes = 256'                  StructureByteStride = 0'                  Usage = ResourceUsage.Default              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,ArgumentBuffer,The following statement contains a magic number: argumentBuffer = Buffer.New(device' 256' BufferFlags.ArgumentBuffer | BufferFlags.RawBuffer | BufferFlags.UnorderedAccess);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,ArgumentBuffer,The following statement contains a magic number: Assert.AreEqual(argumentBuffer.Description' new BufferDescription()              {                  BindFlags = BindFlags.UnorderedAccess'                  CpuAccessFlags = CpuAccessFlags.None'                  OptionFlags = ResourceOptionFlags.DrawIndirectArguments | ResourceOptionFlags.BufferAllowRawViews'                  SizeInBytes = 256'                  StructureByteStride = 0'                  Usage = ResourceUsage.Default              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1D,The following statement contains a magic number: var textureData = new byte[256];
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1D,The following statement contains a magic number: var smallTextureDataRegion = new byte[] { 4' 3' 2' 1 };
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1D,The following statement contains a magic number: var smallTextureDataRegion = new byte[] { 4' 3' 2' 1 };
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1D,The following statement contains a magic number: var smallTextureDataRegion = new byte[] { 4' 3' 2' 1 };
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1D,The following statement contains a magic number: var region = new ResourceRegion(textureData.Length - 4' 0' 0' textureData.Length' 1' 1);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1D,The following statement contains a magic number: Array.Copy(smallTextureDataRegion' 0' textureData' textureData.Length - 4' 4);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1D,The following statement contains a magic number: Array.Copy(smallTextureDataRegion' 0' textureData' textureData.Length - 4' 4);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: var texture = Texture1D.New(GraphicsDevice' 256' true' PixelFormat.R8.UNorm' TextureFlags.UnorderedAccess' 6);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: var texture = Texture1D.New(GraphicsDevice' 256' true' PixelFormat.R8.UNorm' TextureFlags.UnorderedAccess' 6);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: var mipcount = (int)Math.Log(256' 2) + 1;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: var mipcount = (int)Math.Log(256' 2) + 1;
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: Assert.AreEqual(d3d11Texture.Description' new Direct3D11.Texture1DDescription()              {                  Width = 256'                  ArraySize = 6'                  BindFlags = BindFlags.ShaderResource | BindFlags.UnorderedAccess'                  CpuAccessFlags = CpuAccessFlags.None'                  Format = DXGI.Format.R8_UNorm'                  MipLevels = mipcount'                  OptionFlags = ResourceOptionFlags.None'                  Usage = ResourceUsage.Default              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: Assert.AreEqual(d3d11Texture.Description' new Direct3D11.Texture1DDescription()              {                  Width = 256'                  ArraySize = 6'                  BindFlags = BindFlags.ShaderResource | BindFlags.UnorderedAccess'                  CpuAccessFlags = CpuAccessFlags.None'                  Format = DXGI.Format.R8_UNorm'                  MipLevels = mipcount'                  OptionFlags = ResourceOptionFlags.None'                  Usage = ResourceUsage.Default              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: Assert.AreEqual(srvDescription' new Direct3D11.ShaderResourceViewDescription()              {                  Dimension = ShaderResourceViewDimension.Texture1DArray'                  Format = DXGI.Format.R8_UNorm'                  Texture1DArray = { MipLevels = mipcount' MostDetailedMip = 0' ArraySize = 6' FirstArraySlice = 0}'                            });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: Assert.AreEqual(srvDescription' new Direct3D11.ShaderResourceViewDescription()              {                  Dimension = ShaderResourceViewDimension.Texture1DArray'                  Format = DXGI.Format.R8_UNorm'                  Texture1DArray = { MipLevels = 1' MostDetailedMip = 1' ArraySize = 6' FirstArraySlice = 0 }'              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: var textureData = new byte[] { 255 };
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: texture.SetData(GraphicsDevice' textureData' 1' 8);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: var readbackData = texture.GetData<byte>(1' 8);
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: var uav = texture.UnorderedAccessView[1' 8];
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: Assert.AreEqual(uavDescription' new Direct3D11.UnorderedAccessViewDescription()              {                  Dimension = UnorderedAccessViewDimension.Texture1DArray'                  Format = DXGI.Format.R8_UNorm'                  Texture1DArray = { ArraySize = 1' FirstArraySlice = 1' MipSlice = 8}              });
Magic Number,SharpDX.Toolkit.Graphics.Tests,TestTexture,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestTexture.cs,Test1DArrayAndMipmaps,The following statement contains a magic number: readbackData = texture.GetData<byte>(1' 8);
Duplicate Code,SharpDX.Toolkit.Graphics.Tests,TestBuffer,D:\research\architectureSmells\repos1\sharpdx_Toolkit\Source\Tests\SharpDX.Toolkit.Graphics.Tests\TestBuffer.cs,RawBuffer,The method contains a code clone-set at the following line numbers (starting from the method definition): ((23' 44)' (69' 90))
