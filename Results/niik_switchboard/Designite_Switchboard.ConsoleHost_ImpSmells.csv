Implementation smell,Namespace,Class,File,Method,Description
Long Statement,Switchboard.ConsoleHost,SimpleReverseProxyHandler,C:\research\architectureSmells\repos\niik_switchboard\Samples\Switchboard.ConsoleHost\SimpleReverseProxyHandler.cs,GetResponseAsync,The length of the statement  "                request.Headers["Host"] = this.backendUri.Host + (this.backendUri.IsDefaultPort ? string.Empty : ":" + this.backendUri.Port);" is 125.
Long Statement,Switchboard.ConsoleHost,SimpleReverseProxyHandler,C:\research\architectureSmells\repos\niik_switchboard\Samples\Switchboard.ConsoleHost\SimpleReverseProxyHandler.cs,GetResponseAsync,The length of the statement  "            Debug.WriteLine("{0}: Resolved upstream server to {1} in {2}ms' opening connection"' context.InboundConnection.RemoteEndPoint' backendEp' sw.Elapsed.TotalMilliseconds);" is 168.
Long Statement,Switchboard.ConsoleHost,SimpleReverseProxyHandler,C:\research\architectureSmells\repos\niik_switchboard\Samples\Switchboard.ConsoleHost\SimpleReverseProxyHandler.cs,GetResponseAsync,The length of the statement  "            Debug.WriteLine("{0}: Handler sent request in {1}ms"' context.InboundConnection.RemoteEndPoint' sw.Elapsed.TotalMilliseconds);" is 126.
Long Statement,Switchboard.ConsoleHost,SimpleReverseProxyHandler,C:\research\architectureSmells\repos\niik_switchboard\Samples\Switchboard.ConsoleHost\SimpleReverseProxyHandler.cs,SetForwardedForHeader,The length of the statement  "            request.Headers["X-Forwarded-For"] = string.IsNullOrEmpty(currentForwardedFor) ? remoteAddress : currentForwardedFor + "' " + remoteAddress;" is 140.
Magic Number,Switchboard.ConsoleHost.Logging,ConsoleLogger,C:\research\architectureSmells\repos\niik_switchboard\Samples\Switchboard.ConsoleHost\Logging\ConsoleLogger.cs,WriteLine,The following statement contains a magic number: c = (ConsoleColor)(h % 16);
Magic Number,Switchboard.ConsoleHost,Program,C:\research\architectureSmells\repos\niik_switchboard\Samples\Switchboard.ConsoleHost\Program.cs,Main,The following statement contains a magic number: var endPoint = new IPEndPoint(IPAddress.Loopback' 8080);
