Implementation smell,Namespace,Class,File,Method,Description
Long Method,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The method has 100 lines of code.
Long Statement,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,OnSizeChanged,The length of the statement  "				Convert.ToInt32(Math.Round((Width - disconnectedPanel.Width) / (double) 2))' Convert.ToInt32(Math.Round((Height - disconnectedPanel.Height) / (double) 2))); " is 156.
Long Statement,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,OnConnectionLost,The length of the statement  "								Convert.ToInt32(Math.Round((disconnectedPanel.Width - _textLayoutPanel.Width) / (double) 2))' _textLayoutPanel.Location.Y); " is 123.
Long Statement,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The length of the statement  "			this.connectingLabel.Font = new System.Drawing.Font("Arial"' 14.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 148.
Long Statement,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The length of the statement  "			this.disconnectedLabel.Font = new System.Drawing.Font("Arial"' 14.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 150.
Long Statement,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The length of the statement  "			this._errorMessageLinkLabel.Font = new System.Drawing.Font("Arial"' 14.25F' System.Drawing.FontStyle.Bold' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 155.
Long Statement,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The length of the statement  "			this._errorMessageLinkLabel.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(119))))' ((int)(((byte)(146))))' ((int)(((byte)(206))))); " is 142.
Long Statement,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The length of the statement  "			this._errorMessageLinkLabel.LinkClicked += new System.Windows.Forms.LinkLabelLinkClickedEventHandler(this._errorMessageLinkLabel_LinkClicked); " is 142.
Long Statement,EasyConnect.Protocols,BookmarksFolder,C:\repos\lstratman_EasyConnect\Protocols\BookmarksFolder.cs,_childFolders_CollectionModified,The length of the statement  "			if (e.Modification == ListModification.ItemAdded || e.Modification == ListModification.RangeAdded || e.Modification == ListModification.ItemModified) " is 149.
Long Statement,EasyConnect.Protocols,BookmarksFolder,C:\repos\lstratman_EasyConnect\Protocols\BookmarksFolder.cs,_bookmarks_CollectionModified,The length of the statement  "			if (e.Modification == ListModification.ItemAdded || e.Modification == ListModification.RangeAdded || e.Modification == ListModification.ItemModified) " is 149.
Long Statement,EasyConnect.Protocols,ErrorMessageDisplayForm,C:\repos\lstratman_EasyConnect\Protocols\ErrorMessageDisplayForm.cs,InitializeComponent,The length of the statement  "            System.ComponentModel.ComponentResourceManager resources = new System.ComponentModel.ComponentResourceManager(typeof(ErrorMessageDisplayForm)); " is 143.
Long Statement,EasyConnect.Protocols,ErrorMessageDisplayForm,C:\repos\lstratman_EasyConnect\Protocols\ErrorMessageDisplayForm.cs,InitializeComponent,The length of the statement  "            this._errorMessageTextBox.Font = new System.Drawing.Font("Segoe UI"' 9.75F' System.Drawing.FontStyle.Regular' System.Drawing.GraphicsUnit.Point' ((byte)(0))); " is 158.
Long Statement,EasyConnect.Protocols,ConnectionFactory,C:\repos\lstratman_EasyConnect\Protocols\ConnectionFactory.cs,Decrypt,The length of the statement  "				CryptoStream cryptoStream = new CryptoStream(memoryStream' ((SymmetricAlgorithm) _crypto).CreateDecryptor()' CryptoStreamMode.Read); " is 132.
Long Statement,EasyConnect.Protocols,ConnectionFactory,C:\repos\lstratman_EasyConnect\Protocols\ConnectionFactory.cs,Encrypt,The length of the statement  "				CryptoStream cryptoStream = new CryptoStream(memoryStream' ((SymmetricAlgorithm) _crypto).CreateEncryptor()' CryptoStreamMode.Write); " is 133.
Long Statement,EasyConnect.Protocols,ConnectionFactory,C:\repos\lstratman_EasyConnect\Protocols\ConnectionFactory.cs,SetEncryptionType,The length of the statement  "						throw new ArgumentException("When Rijndael is used as the encryption type' the encryption password cannot be null."' "encryptionKey"); " is 134.
Long Statement,EasyConnect.Protocols,ConnectionFactory,C:\repos\lstratman_EasyConnect\Protocols\ConnectionFactory.cs,SetEncryptionType,The length of the statement  "					throw new ArgumentException("The encryption type " + encryptionType.ToString("G") + " is not supported."' "encryptionType"); " is 124.
Long Statement,EasyConnect.Protocols,ConnectionFactory,C:\repos\lstratman_EasyConnect\Protocols\ConnectionFactory.cs,SaveDefaults,The length of the statement  "		    IStorageFile defaultsFile = await ApplicationData.Current.LocalFolder.CreateFileAsync("Defaults.xml"' CreationCollisionOption.ReplaceExisting); " is 143.
Long Statement,EasyConnect.Protocols,ConnectionFactory,C:\repos\lstratman_EasyConnect\Protocols\ConnectionFactory.cs,CreateConnectionForm,The length of the statement  "			return _protocols.First(pair => pair.Value.ConnectionType.Name == connection.GetType().Name).Value.CreateConnectionForm(connection' containerPanel); " is 148.
Long Statement,EasyConnect.Protocols,ConnectionFactory,C:\repos\lstratman_EasyConnect\Protocols\ConnectionFactory.cs,CreateOptionsForm,The length of the statement  "			return _protocols.First(pair => pair.Value.ConnectionType.Name == connection.GetType().Name).Value.GetOptionsForm(connection); " is 126.
Empty Catch Block,EasyConnect.Protocols,ConnectionFactory,C:\repos\lstratman_EasyConnect\Protocols\ConnectionFactory.cs,ConnectionFactory,The method has an empty catch block.
Empty Catch Block,EasyConnect.Protocols,ConnectionFactory,C:\repos\lstratman_EasyConnect\Protocols\ConnectionFactory.cs,ConnectionFactory,The method has an empty catch block.
Empty Catch Block,EasyConnect.Protocols,ConnectionFactory,C:\repos\lstratman_EasyConnect\Protocols\ConnectionFactory.cs,ConnectionFactory,The method has an empty catch block.
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,OnSizeChanged,The following statement contains a magic number: disconnectedPanel.Location = new Point(  				Convert.ToInt32(Math.Round((Width - disconnectedPanel.Width) / (double) 2))' Convert.ToInt32(Math.Round((Height - disconnectedPanel.Height) / (double) 2)));
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,OnSizeChanged,The following statement contains a magic number: disconnectedPanel.Location = new Point(  				Convert.ToInt32(Math.Round((Width - disconnectedPanel.Width) / (double) 2))' Convert.ToInt32(Math.Round((Height - disconnectedPanel.Height) / (double) 2)));
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,OnConnectionLost,The following statement contains a magic number: Invoke(  				new Action(  					() =>  						{  							ConnectionWindow.Visible = false;  							disconnectedPanel.Visible = true;  							disconnectedLabel.Text = IsConnected  								                         ? "Disconnected"  								                         : "Unable to connect";    							Exception exception = e is ErrorEventArgs  								                      ? (e as ErrorEventArgs).GetException()  								                      : null;    							_errorMessageLinkLabel.Visible = exception != null && !String.IsNullOrEmpty(exception.Message);  							ConnectionErrorMessage = exception == null  								                         ? null  								                         : exception.Message.Replace("\r"' "").Replace("\n"' "\r\n");  							_textLayoutPanel.Width = _errorMessageLinkLabel.Visible  								                         ? _errorMessageLinkLabel.Width + disconnectedLabel.Width  								                         : disconnectedLabel.Width;  							_textLayoutPanel.Location = new Point(  								Convert.ToInt32(Math.Round((disconnectedPanel.Width - _textLayoutPanel.Width) / (double) 2))' _textLayoutPanel.Location.Y);    							connectingLabel.Visible = false;  							IsConnected = false;  						}));
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.connectingLabel.Size = new System.Drawing.Size(630' 531);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.connectingLabel.Size = new System.Drawing.Size(630' 531);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.disconnectedPanel.Location = new System.Drawing.Point(12' 12);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.disconnectedPanel.Location = new System.Drawing.Point(12' 12);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.disconnectedPanel.Size = new System.Drawing.Size(606' 507);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.disconnectedPanel.Size = new System.Drawing.Size(606' 507);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.disconnectedLabel.Location = new System.Drawing.Point(3' 5);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.disconnectedLabel.Location = new System.Drawing.Point(3' 5);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.disconnectedLabel.Size = new System.Drawing.Size(138' 22);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.disconnectedLabel.Size = new System.Drawing.Size(138' 22);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.reconnectButton.Location = new System.Drawing.Point(266' 254);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.reconnectButton.Location = new System.Drawing.Point(266' 254);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.reconnectButton.Size = new System.Drawing.Size(75' 23);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.reconnectButton.Size = new System.Drawing.Size(75' 23);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._textLayoutPanel.Location = new System.Drawing.Point(130' 220);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._textLayoutPanel.Location = new System.Drawing.Point(130' 220);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._textLayoutPanel.Size = new System.Drawing.Size(347' 33);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._textLayoutPanel.Size = new System.Drawing.Size(347' 33);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._textLayoutPanel.TabIndex = 2;
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageLinkLabel.LinkArea = new System.Windows.Forms.LinkArea(1' 18);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageLinkLabel.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(119))))' ((int)(((byte)(146))))' ((int)(((byte)(206)))));
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageLinkLabel.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(119))))' ((int)(((byte)(146))))' ((int)(((byte)(206)))));
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageLinkLabel.LinkColor = System.Drawing.Color.FromArgb(((int)(((byte)(119))))' ((int)(((byte)(146))))' ((int)(((byte)(206)))));
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageLinkLabel.Location = new System.Drawing.Point(144' 5);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageLinkLabel.Location = new System.Drawing.Point(144' 5);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageLinkLabel.Margin = new System.Windows.Forms.Padding(0' 5' 0' 0);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageLinkLabel.Size = new System.Drawing.Size(203' 28);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageLinkLabel.Size = new System.Drawing.Size(203' 28);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageLinkLabel.TabIndex = 3;
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(242))))' ((int)(((byte)(242))))' ((int)(((byte)(242)))));
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(242))))' ((int)(((byte)(242))))' ((int)(((byte)(242)))));
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(242))))' ((int)(((byte)(242))))' ((int)(((byte)(242)))));
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(630' 531);
Magic Number,EasyConnect.Protocols,BaseConnectionForm,C:\repos\lstratman_EasyConnect\Protocols\BaseConnectionForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(630' 531);
Magic Number,EasyConnect.Protocols,ErrorMessageDisplayForm,C:\repos\lstratman_EasyConnect\Protocols\ErrorMessageDisplayForm.cs,InitializeComponent,The following statement contains a magic number: this._okButton.Location = new System.Drawing.Point(286' 196);
Magic Number,EasyConnect.Protocols,ErrorMessageDisplayForm,C:\repos\lstratman_EasyConnect\Protocols\ErrorMessageDisplayForm.cs,InitializeComponent,The following statement contains a magic number: this._okButton.Location = new System.Drawing.Point(286' 196);
Magic Number,EasyConnect.Protocols,ErrorMessageDisplayForm,C:\repos\lstratman_EasyConnect\Protocols\ErrorMessageDisplayForm.cs,InitializeComponent,The following statement contains a magic number: this._okButton.Size = new System.Drawing.Size(75' 23);
Magic Number,EasyConnect.Protocols,ErrorMessageDisplayForm,C:\repos\lstratman_EasyConnect\Protocols\ErrorMessageDisplayForm.cs,InitializeComponent,The following statement contains a magic number: this._okButton.Size = new System.Drawing.Size(75' 23);
Magic Number,EasyConnect.Protocols,ErrorMessageDisplayForm,C:\repos\lstratman_EasyConnect\Protocols\ErrorMessageDisplayForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageTextBox.Location = new System.Drawing.Point(13' 13);
Magic Number,EasyConnect.Protocols,ErrorMessageDisplayForm,C:\repos\lstratman_EasyConnect\Protocols\ErrorMessageDisplayForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageTextBox.Location = new System.Drawing.Point(13' 13);
Magic Number,EasyConnect.Protocols,ErrorMessageDisplayForm,C:\repos\lstratman_EasyConnect\Protocols\ErrorMessageDisplayForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageTextBox.Size = new System.Drawing.Size(347' 173);
Magic Number,EasyConnect.Protocols,ErrorMessageDisplayForm,C:\repos\lstratman_EasyConnect\Protocols\ErrorMessageDisplayForm.cs,InitializeComponent,The following statement contains a magic number: this._errorMessageTextBox.Size = new System.Drawing.Size(347' 173);
Magic Number,EasyConnect.Protocols,ErrorMessageDisplayForm,C:\repos\lstratman_EasyConnect\Protocols\ErrorMessageDisplayForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(372' 231);
Magic Number,EasyConnect.Protocols,ErrorMessageDisplayForm,C:\repos\lstratman_EasyConnect\Protocols\ErrorMessageDisplayForm.cs,InitializeComponent,The following statement contains a magic number: this.ClientSize = new System.Drawing.Size(372' 231);
Magic Number,EasyConnect.Protocols,ConnectionFactory,C:\repos\lstratman_EasyConnect\Protocols\ConnectionFactory.cs,SetEncryptionType,The following statement contains a magic number: switch (encryptionType)  			{  					// Simply open or create an RSA key container called EasyConnect  				case EncryptionType.Rsa:  					CspParameters parameters = new CspParameters  						                           {  							                           KeyContainerName = "EasyConnect"  						                           };    					_crypto = new RSACryptoServiceProvider(parameters);    					break;    					// Initialize a Rijndael instance with the key in encryptionKey  				case EncryptionType.Rijndael:  					if (encryptionKey == null)  						throw new ArgumentException("When Rijndael is used as the encryption type' the encryption password cannot be null."' "encryptionKey");    					Rijndael rijndael = Rijndael.Create();  					rijndael.KeySize = 256;    					// Get the bytes for the password  					IntPtr marshalledKeyBytes = Marshal.SecureStringToGlobalAllocAnsi(encryptionKey);  					byte[] keyBytes = new byte[rijndael.KeySize / 8];    					Marshal.Copy(marshalledKeyBytes' keyBytes' 0' Math.Min(keyBytes.Length' encryptionKey.Length));    					// Set the encryption key to the key bytes and the IV to a predetermined string  					rijndael.Key = keyBytes;  					rijndael.IV = Convert.FromBase64String("QGWyKbe+W9H0mL2igm73jw==");    					Marshal.ZeroFreeGlobalAllocAnsi(marshalledKeyBytes);    					_crypto = rijndael;    					break;    				default:  					throw new ArgumentException("The encryption type " + encryptionType.ToString("G") + " is not supported."' "encryptionType");  			}
Magic Number,EasyConnect.Protocols,ConnectionFactory,C:\repos\lstratman_EasyConnect\Protocols\ConnectionFactory.cs,SetEncryptionType,The following statement contains a magic number: switch (encryptionType)  			{  					// Simply open or create an RSA key container called EasyConnect  				case EncryptionType.Rsa:  					CspParameters parameters = new CspParameters  						                           {  							                           KeyContainerName = "EasyConnect"  						                           };    					_crypto = new RSACryptoServiceProvider(parameters);    					break;    					// Initialize a Rijndael instance with the key in encryptionKey  				case EncryptionType.Rijndael:  					if (encryptionKey == null)  						throw new ArgumentException("When Rijndael is used as the encryption type' the encryption password cannot be null."' "encryptionKey");    					Rijndael rijndael = Rijndael.Create();  					rijndael.KeySize = 256;    					// Get the bytes for the password  					IntPtr marshalledKeyBytes = Marshal.SecureStringToGlobalAllocAnsi(encryptionKey);  					byte[] keyBytes = new byte[rijndael.KeySize / 8];    					Marshal.Copy(marshalledKeyBytes' keyBytes' 0' Math.Min(keyBytes.Length' encryptionKey.Length));    					// Set the encryption key to the key bytes and the IV to a predetermined string  					rijndael.Key = keyBytes;  					rijndael.IV = Convert.FromBase64String("QGWyKbe+W9H0mL2igm73jw==");    					Marshal.ZeroFreeGlobalAllocAnsi(marshalledKeyBytes);    					_crypto = rijndael;    					break;    				default:  					throw new ArgumentException("The encryption type " + encryptionType.ToString("G") + " is not supported."' "encryptionType");  			}
Missing Default,EasyConnect.Protocols,BookmarksFolder,C:\repos\lstratman_EasyConnect\Protocols\BookmarksFolder.cs,ReadXml,The following switch statement is missing a default case: switch (reader.LocalName)  				{  					case "Name":  						Name = reader.ReadElementContentAsString();  						break;    					case "Username":  						Username = reader.ReadElementContentAsString();  						break;                        case "Notes":                          Notes = reader.ReadElementContentAsString();                          break;                        case "Password":  						EncryptedPassword = reader.ReadElementContentAsString();  						break;    					case "ChildFolders":  						if (!reader.IsEmptyElement)  						{  							reader.Read();    							// Call this method recursively to read each child folder  							while (reader.MoveToContent() == XmlNodeType.Element)  							{  								BookmarksFolder childFolder = new BookmarksFolder();  								childFolder.ReadXml(reader);    								ChildFolders.Add(childFolder);  							}  						}    						reader.Read();    						break;    					case "Bookmarks":  						if (!reader.IsEmptyElement)  						{  							reader.Read();    							while (reader.MoveToContent() == XmlNodeType.Element)  								Bookmarks.Add(ConnectionFactory.Deserialize(reader));  						}    						reader.Read();    						break;  				}
